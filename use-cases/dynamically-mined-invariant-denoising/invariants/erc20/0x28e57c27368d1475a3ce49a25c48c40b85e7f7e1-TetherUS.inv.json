[
    {
        "func": "approve(spender,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 1000000000000000000000000000",
            "ori(Sum(balances[...])) one of [1000000000000000000000000000]",
            "msg.sender != 0",
            "spender != 0",
            "ori(Sum(allowed[msg.sender][...])) == 0",
            "ori(Sum(allowed[msg.sender][...])) one of [0]",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 1000000000000000000000000000",
            "ori(_totalSupply) one of [1000000000000000000000000000]",
            "msg.value == 0",
            "msg.value one of [0]",
            "tokens > 0",
            "tokens == 115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "tokens one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "ori(allowed[msg.sender][spender]) == 0",
            "ori(allowed[msg.sender][spender]) one of [0]",
            "ori(Sum(allowed[msg.sender][...])) <= tokens",
            "ori(Sum(allowed[msg.sender][...])) < tokens",
            "ori(Sum(allowed[msg.sender][...])) != tokens",
            "ori(Sum(allowed[msg.sender][...])) == ori(allowed[msg.sender][spender])",
            "ori(Sum(allowed[msg.sender][...])) >= ori(allowed[msg.sender][spender])",
            "ori(Sum(allowed[msg.sender][...])) <= ori(allowed[msg.sender][spender])",
            "tokens >= ori(allowed[msg.sender][spender])",
            "tokens > ori(allowed[msg.sender][spender])",
            "tokens != ori(allowed[msg.sender][spender])"
        ],
        "postconditions": [
            "elem of allowed[msg.sender][...] is one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "elem of balances[...] is one of [1000000000000000000000000000]",
            "allowed[msg.sender][spender] > 0",
            "allowed[msg.sender][spender] == 115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "allowed[msg.sender][spender] one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "Sum(allowed[msg.sender][...]) > 0",
            "Sum(allowed[msg.sender][...]) == 115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "Sum(allowed[msg.sender][...]) one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "_totalSupply > 0",
            "_totalSupply == 1000000000000000000000000000",
            "_totalSupply one of [1000000000000000000000000000]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 1000000000000000000000000000",
            "Sum(balances[...]) one of [1000000000000000000000000000]",
            "ori(Sum(balances[...])) == Sum(balances[...])",
            "ori(Sum(balances[...])) >= Sum(balances[...])",
            "ori(Sum(balances[...])) <= Sum(balances[...])",
            "ori(Sum(allowed[msg.sender][...])) <= allowed[msg.sender][spender]",
            "ori(Sum(allowed[msg.sender][...])) < allowed[msg.sender][spender]",
            "ori(Sum(allowed[msg.sender][...])) != allowed[msg.sender][spender]",
            "ori(Sum(allowed[msg.sender][...])) <= Sum(allowed[msg.sender][...])",
            "ori(Sum(allowed[msg.sender][...])) < Sum(allowed[msg.sender][...])",
            "ori(Sum(allowed[msg.sender][...])) != Sum(allowed[msg.sender][...])",
            "allowed[msg.sender][spender] == Sum(allowed[msg.sender][...])",
            "allowed[msg.sender][spender] >= Sum(allowed[msg.sender][...])",
            "allowed[msg.sender][spender] <= Sum(allowed[msg.sender][...])",
            "allowed[msg.sender][spender] == tokens",
            "allowed[msg.sender][spender] >= tokens",
            "allowed[msg.sender][spender] <= tokens",
            "allowed[msg.sender][spender] >= ori(allowed[msg.sender][spender])",
            "allowed[msg.sender][spender] > ori(allowed[msg.sender][spender])",
            "allowed[msg.sender][spender] != ori(allowed[msg.sender][spender])",
            "ori(decimals) == decimals",
            "ori(decimals) >= decimals",
            "ori(decimals) <= decimals",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply",
            "Sum(allowed[msg.sender][...]) == tokens",
            "Sum(allowed[msg.sender][...]) >= tokens",
            "Sum(allowed[msg.sender][...]) <= tokens",
            "Sum(allowed[msg.sender][...]) >= ori(allowed[msg.sender][spender])",
            "Sum(allowed[msg.sender][...]) > ori(allowed[msg.sender][spender])",
            "Sum(allowed[msg.sender][...]) != ori(allowed[msg.sender][spender])"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(spender,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(from,to,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(from,to,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(to,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 1000000000000000000000000000",
            "ori(Sum(balances[...])) one of [1000000000000000000000000000]",
            "msg.sender != 0",
            "to != 0",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 1000000000000000000000000000",
            "ori(_totalSupply) one of [1000000000000000000000000000]",
            "ori(balances[msg.sender]) > 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "tokens > 0",
            "ori(Sum(balances[...])) >= ori(balances[to])",
            "ori(Sum(balances[...])) > ori(balances[to])",
            "ori(Sum(balances[...])) != ori(balances[to])",
            "ori(Sum(balances[...])) >= ori(balances[msg.sender])",
            "ori(Sum(balances[...])) >= tokens",
            "ori(Sum(balances[...])) > tokens",
            "ori(Sum(balances[...])) != tokens",
            "ori(balances[to]) != ori(balances[msg.sender])",
            "ori(balances[msg.sender]) >= tokens"
        ],
        "postconditions": [
            "elem of balances[...] is one of [1000000000000000000000000000]",
            "balances[to] > 0",
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "_totalSupply > 0",
            "_totalSupply == 1000000000000000000000000000",
            "_totalSupply one of [1000000000000000000000000000]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 1000000000000000000000000000",
            "Sum(balances[...]) one of [1000000000000000000000000000]",
            "ori(Sum(balances[...])) >= balances[to]",
            "ori(Sum(balances[...])) > balances[to]",
            "ori(Sum(balances[...])) != balances[to]",
            "ori(Sum(balances[...])) >= balances[msg.sender]",
            "ori(Sum(balances[...])) > balances[msg.sender]",
            "ori(Sum(balances[...])) != balances[msg.sender]",
            "ori(Sum(balances[...])) == Sum(balances[...])",
            "ori(Sum(balances[...])) >= Sum(balances[...])",
            "ori(Sum(balances[...])) <= Sum(balances[...])",
            "balances[to] >= ori(balances[to])",
            "balances[to] > ori(balances[to])",
            "balances[to] != ori(balances[to])",
            "balances[to] >= tokens",
            "balances[to] <= Sum(balances[...])",
            "balances[to] < Sum(balances[...])",
            "balances[to] != Sum(balances[...])",
            "ori(decimals) == decimals",
            "ori(decimals) >= decimals",
            "ori(decimals) <= decimals",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply",
            "ori(balances[to]) <= Sum(balances[...])",
            "ori(balances[to]) < Sum(balances[...])",
            "ori(balances[to]) != Sum(balances[...])",
            "ori(balances[msg.sender]) >= balances[msg.sender]",
            "ori(balances[msg.sender]) > balances[msg.sender]",
            "ori(balances[msg.sender]) != balances[msg.sender]",
            "ori(balances[msg.sender]) <= Sum(balances[...])",
            "tokens <= Sum(balances[...])",
            "tokens < Sum(balances[...])",
            "tokens != Sum(balances[...])",
            "balances[msg.sender] <= Sum(balances[...])",
            "balances[msg.sender] < Sum(balances[...])",
            "balances[msg.sender] != Sum(balances[...])",
            "balances[msg.sender] + tokens == ori(balances[msg.sender])"
        ],
        "falsified_preconditions": [
            "ori(balances[to]) == 0",
            "ori(balances[to]) <= ori(balances[msg.sender])",
            "ori(balances[to]) < ori(balances[msg.sender])",
            "ori(balances[to]) <= tokens",
            "ori(balances[to]) < tokens",
            "ori(balances[to]) != tokens",
            "ori(balances[msg.sender]) > tokens",
            "ori(balances[msg.sender]) != tokens"
        ],
        "falsified_postconditions": [
            "balances[msg.sender] > 0",
            "balances[to] <= ori(balances[msg.sender])",
            "balances[to] < ori(balances[msg.sender])",
            "balances[to] != ori(balances[msg.sender])",
            "balances[to] == tokens",
            "balances[to] <= tokens",
            "balances[to] <= balances[msg.sender]",
            "balances[to] < balances[msg.sender]",
            "balances[to] != balances[msg.sender]",
            "ori(balances[to]) <= balances[msg.sender]",
            "ori(balances[to]) < balances[msg.sender]",
            "ori(balances[to]) != balances[msg.sender]",
            "tokens <= balances[msg.sender]",
            "tokens < balances[msg.sender]",
            "tokens != balances[msg.sender]"
        ]
    },
    {
        "func": "transfer(to,tokens)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(balances[...])) > 0",
            "ori(Sum(balances[...])) == 1000000000000000000000000000",
            "ori(Sum(balances[...])) one of [1000000000000000000000000000]",
            "ori(decimals) > 0",
            "ori(decimals) == 18",
            "ori(decimals) one of [18]",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 1000000000000000000000000000",
            "ori(_totalSupply) one of [1000000000000000000000000000]"
        ],
        "postconditions": [
            "decimals > 0",
            "decimals == 18",
            "decimals one of [18]",
            "_totalSupply > 0",
            "_totalSupply == 1000000000000000000000000000",
            "_totalSupply one of [1000000000000000000000000000]",
            "elem of balances[...] is one of [1000000000000000000000000000]",
            "Sum(balances[...]) > 0",
            "Sum(balances[...]) == 1000000000000000000000000000",
            "Sum(balances[...]) one of [1000000000000000000000000000]",
            "decimals == ori(decimals)",
            "decimals >= ori(decimals)",
            "decimals <= ori(decimals)",
            "ori(Sum(balances[...])) == Sum(balances[...])",
            "ori(Sum(balances[...])) >= Sum(balances[...])",
            "ori(Sum(balances[...])) <= Sum(balances[...])",
            "_totalSupply == ori(_totalSupply)",
            "_totalSupply >= ori(_totalSupply)",
            "_totalSupply <= ori(_totalSupply)"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]