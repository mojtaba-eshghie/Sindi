[
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "multiTransfer(receivers,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "multiTransfer(receivers,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(from,to,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(from,to,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burnFrom(account,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burnFrom(account,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(to,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(_balances[msg.sender]) > 0",
            "ori(_burnStopAmount) == 0",
            "ori(_burnStopAmount) one of [0]",
            "ori(basePercent) > 0",
            "ori(basePercent) == 100",
            "ori(basePercent) one of [100]",
            "to != 0",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "msg.sender != 0",
            "ori(_balances[to]) one of [0,519750000000000000000,247500000000000000000000,7920000000000000000000,2549250000000000000000]",
            "ori(_totalSupply) > 0",
            "ori(Sum(_balances[...])) > 0",
            "ori(_lastTokenSupply) > 0",
            "ori(_lastTokenSupply) == 100000000000000000000000000",
            "ori(_lastTokenSupply) one of [100000000000000000000000000]",
            "value <= ori(_balances[msg.sender])",
            "value <= ori(_totalSupply)",
            "value < ori(_totalSupply)",
            "value != ori(_totalSupply)",
            "value <= ori(Sum(_balances[...]))",
            "value < ori(Sum(_balances[...]))",
            "value != ori(Sum(_balances[...]))",
            "ori(_balances[msg.sender]) != ori(_balances[to])",
            "ori(_balances[msg.sender]) <= ori(_totalSupply)",
            "ori(_balances[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(_balances[to]) <= ori(_totalSupply)",
            "ori(_balances[to]) < ori(_totalSupply)",
            "ori(_balances[to]) != ori(_totalSupply)",
            "ori(_balances[to]) <= ori(Sum(_balances[...]))",
            "ori(_balances[to]) < ori(Sum(_balances[...]))",
            "ori(_balances[to]) != ori(Sum(_balances[...]))",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))"
        ],
        "postconditions": [
            "_totalSupply > 0",
            "basePercent > 0",
            "basePercent == 100",
            "basePercent one of [100]",
            "_lastTokenSupply > 0",
            "_lastTokenSupply == 100000000000000000000000000",
            "_lastTokenSupply one of [100000000000000000000000000]",
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "_burnStopAmount == 0",
            "_burnStopAmount one of [0]",
            "Sum(_balances[...]) > 0",
            "elem of _balances[...] is one of [101004337700000000000000000]",
            "_totalSupply >= value",
            "_totalSupply > value",
            "_totalSupply != value",
            "_totalSupply != ori(_balances[msg.sender])",
            "_totalSupply >= _balances[msg.sender]",
            "_totalSupply > _balances[msg.sender]",
            "_totalSupply != _balances[msg.sender]",
            "_totalSupply >= _balances[to]",
            "_totalSupply > _balances[to]",
            "_totalSupply != _balances[to]",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply >= ori(_balances[to])",
            "_totalSupply > ori(_balances[to])",
            "_totalSupply != ori(_balances[to])",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "basePercent == ori(basePercent)",
            "basePercent >= ori(basePercent)",
            "basePercent <= ori(basePercent)",
            "_lastTokenSupply == ori(_lastTokenSupply)",
            "_lastTokenSupply >= ori(_lastTokenSupply)",
            "_lastTokenSupply <= ori(_lastTokenSupply)",
            "value != _balances[msg.sender]",
            "value <= Sum(_balances[...])",
            "value < Sum(_balances[...])",
            "value != Sum(_balances[...])",
            "ori(_balances[msg.sender]) >= _balances[msg.sender]",
            "ori(_balances[msg.sender]) != _balances[to]",
            "ori(_balances[msg.sender]) != Sum(_balances[...])",
            "ori(_burnStopAmount) == _burnStopAmount",
            "ori(_burnStopAmount) >= _burnStopAmount",
            "ori(_burnStopAmount) <= _burnStopAmount",
            "_decimals == ori(_decimals)",
            "_decimals >= ori(_decimals)",
            "_decimals <= ori(_decimals)",
            "_balances[msg.sender] != _balances[to]",
            "_balances[msg.sender] <= Sum(_balances[...])",
            "_balances[msg.sender] < Sum(_balances[...])",
            "_balances[msg.sender] != Sum(_balances[...])",
            "_balances[msg.sender] <= ori(_totalSupply)",
            "_balances[msg.sender] < ori(_totalSupply)",
            "_balances[msg.sender] != ori(_totalSupply)",
            "_balances[msg.sender] <= ori(Sum(_balances[...]))",
            "_balances[msg.sender] < ori(Sum(_balances[...]))",
            "_balances[msg.sender] != ori(Sum(_balances[...]))",
            "_balances[to] <= Sum(_balances[...])",
            "_balances[to] < Sum(_balances[...])",
            "_balances[to] != Sum(_balances[...])",
            "_balances[to] >= ori(_balances[to])",
            "_balances[to] <= ori(_totalSupply)",
            "_balances[to] < ori(_totalSupply)",
            "_balances[to] != ori(_totalSupply)",
            "_balances[to] <= ori(Sum(_balances[...]))",
            "_balances[to] < ori(Sum(_balances[...]))",
            "_balances[to] != ori(Sum(_balances[...]))",
            "Sum(_balances[...]) >= ori(_balances[to])",
            "Sum(_balances[...]) > ori(_balances[to])",
            "Sum(_balances[...]) != ori(_balances[to])",
            "Sum(_balances[...]) <= ori(_totalSupply)",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))",
            "_balances[msg.sender] + value == ori(_balances[msg.sender])"
        ],
        "falsified_preconditions": [
            "value > 0",
            "ori(_balances[to]) == 0",
            "value < ori(_balances[msg.sender])",
            "value != ori(_balances[msg.sender])",
            "value >= ori(_balances[to])",
            "value > ori(_balances[to])",
            "value != ori(_balances[to])",
            "ori(_balances[msg.sender]) >= ori(_balances[to])",
            "ori(_balances[msg.sender]) > ori(_balances[to])"
        ],
        "falsified_postconditions": [
            "_balances[msg.sender] > 0",
            "_balances[to] > 0",
            "_totalSupply < ori(_totalSupply)",
            "_totalSupply != ori(_totalSupply)",
            "_totalSupply < ori(Sum(_balances[...]))",
            "_totalSupply != ori(Sum(_balances[...]))",
            "value <= _balances[msg.sender]",
            "value < _balances[msg.sender]",
            "value >= _balances[to]",
            "value > _balances[to]",
            "value != _balances[to]",
            "ori(_balances[msg.sender]) > _balances[msg.sender]",
            "ori(_balances[msg.sender]) != _balances[msg.sender]",
            "ori(_balances[msg.sender]) >= _balances[to]",
            "ori(_balances[msg.sender]) > _balances[to]",
            "_balances[msg.sender] >= _balances[to]",
            "_balances[msg.sender] > _balances[to]",
            "_balances[msg.sender] >= ori(_balances[to])",
            "_balances[msg.sender] > ori(_balances[to])",
            "_balances[msg.sender] != ori(_balances[to])",
            "_balances[to] > ori(_balances[to])",
            "_balances[to] != ori(_balances[to])",
            "Sum(_balances[...]) < ori(_totalSupply)",
            "Sum(_balances[...]) != ori(_totalSupply)",
            "Sum(_balances[...]) < ori(Sum(_balances[...]))",
            "Sum(_balances[...]) != ori(Sum(_balances[...]))"
        ]
    },
    {
        "func": "transfer(to,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_burnStopAmount) == 0",
            "ori(_burnStopAmount) one of [0]",
            "ori(basePercent) > 0",
            "ori(basePercent) == 100",
            "ori(basePercent) one of [100]",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "ori(_totalSupply) > 0",
            "ori(Sum(_balances[...])) > 0",
            "ori(_lastTokenSupply) > 0",
            "ori(_lastTokenSupply) == 100000000000000000000000000",
            "ori(_lastTokenSupply) one of [100000000000000000000000000]",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))"
        ],
        "postconditions": [
            "_totalSupply > 0",
            "basePercent > 0",
            "basePercent == 100",
            "basePercent one of [100]",
            "_lastTokenSupply > 0",
            "_lastTokenSupply == 100000000000000000000000000",
            "_lastTokenSupply one of [100000000000000000000000000]",
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "_burnStopAmount == 0",
            "_burnStopAmount one of [0]",
            "Sum(_balances[...]) > 0",
            "elem of _balances[...] is one of [101004337700000000000000000]",
            "_totalSupply == Sum(_balances[...])",
            "_totalSupply >= Sum(_balances[...])",
            "_totalSupply <= Sum(_balances[...])",
            "_totalSupply <= ori(_totalSupply)",
            "_totalSupply <= ori(Sum(_balances[...]))",
            "basePercent == ori(basePercent)",
            "basePercent >= ori(basePercent)",
            "basePercent <= ori(basePercent)",
            "_lastTokenSupply == ori(_lastTokenSupply)",
            "_lastTokenSupply >= ori(_lastTokenSupply)",
            "_lastTokenSupply <= ori(_lastTokenSupply)",
            "ori(_burnStopAmount) == _burnStopAmount",
            "ori(_burnStopAmount) >= _burnStopAmount",
            "ori(_burnStopAmount) <= _burnStopAmount",
            "_decimals == ori(_decimals)",
            "_decimals >= ori(_decimals)",
            "_decimals <= ori(_decimals)",
            "Sum(_balances[...]) <= ori(_totalSupply)",
            "Sum(_balances[...]) <= ori(Sum(_balances[...]))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": [
            "_totalSupply < ori(_totalSupply)",
            "_totalSupply != ori(_totalSupply)",
            "_totalSupply < ori(Sum(_balances[...]))",
            "_totalSupply != ori(Sum(_balances[...]))",
            "Sum(_balances[...]) < ori(_totalSupply)",
            "Sum(_balances[...]) != ori(_totalSupply)",
            "Sum(_balances[...]) < ori(Sum(_balances[...]))",
            "Sum(_balances[...]) != ori(Sum(_balances[...]))"
        ]
    }
]