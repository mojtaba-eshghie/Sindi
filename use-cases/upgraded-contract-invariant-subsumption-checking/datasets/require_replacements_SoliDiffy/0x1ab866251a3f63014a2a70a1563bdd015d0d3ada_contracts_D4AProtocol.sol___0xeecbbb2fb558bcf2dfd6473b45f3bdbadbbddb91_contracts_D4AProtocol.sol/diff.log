New cluster:
===
insert-node
---
contract_declaration [506,23068]
to
source_file [0,13953]
at 10
------------
===
insert-node
---
identifier: canvasId [11315,11323]
to
assignment_expression [11250,11323]
at 2
===
insert-node
---
variable_declaration_statement [18496,18544]
to
function_body [18383,18879]
at 2
===
insert-node
---
function: function [11418,11426]
to
function_definition [11418,11775]
at 0
===
insert-node
---
using_directive [738,785]
to
contract_body [595,23068]
at 2
===
insert-node
---
identifier: price [10688,10693]
to
binary_expression [10556,10693]
at 2
===
insert-node
---
affectation_operator: = [9398,9399]
to
assignment_expression [9370,9513]
at 1
===
insert-node
---
affectation_operator: = [10739,10740]
to
assignment_expression [10707,10809]
at 1
===
insert-node
---
affectation_operator: = [11313,11314]
to
assignment_expression [11250,11323]
at 1
===
insert-node
---
expression_statement [14809,14898]
to
block_statement [14599,15956]
at 1
===
insert-node
---
variable_declaration_tuple [18987,18999]
to
variable_declaration_statement [18987,19029]
at 0
===
insert-node
---
block_statement [9524,9660]
to
function_body [8681,11412]
at 10
===
insert-node
---
affectation_operator: = [18467,18468]
to
variable_declaration_statement [18450,18487]
at 1
===
insert-node
---
identifier: _mintNft [8390,8398]
to
function_definition [8381,11412]
at 1
===
insert-node
---
function: function [18164,18172]
to
function_definition [18164,18879]
at 0
===
insert-node
---
call_expression [14823,14897]
to
assignment_expression [14809,14897]
at 2
===
insert-node
---
using: using [738,743]
to
using_directive [738,785]
at 0
===
insert-node
---
block_statement [14599,15956]
to
for_statement [14562,15956]
at 3
===
insert-node
---
call_expression [11267,11311]
to
array_access [11250,11312]
at 1
===
insert-node
---
function_definition [3620,3748]
to
contract_body [595,23068]
at 24
===
insert-node
---
expression_statement [2313,2342]
to
function_body [2303,2348]
at 0
===
insert-node
---
visibility: public [3039,3045]
to
function_definition [2991,3110]
at 3
===
insert-node
---
visibility: internal [18935,18943]
to
function_definition [18885,19082]
at 4
===
insert-node
---
modifier_invocation [22900,22920]
to
function_definition [22786,23066]
at 5
===
insert-node
---
call_expression [11668,11758]
to
expression_statement [11668,11759]
at 0
===
insert-node
---
function: function [8381,8389]
to
function_definition [8381,11412]
at 0
===
insert-node
---
affectation_operator: = [18520,18521]
to
variable_declaration_statement [18496,18544]
at 1
===
insert-node
---
abstract: abstract [506,514]
to
contract_declaration [506,23068]
at 0
===
insert-node
---
visibility: internal [3649,3657]
to
function_definition [3620,3748]
at 2
===
insert-node
---
function_definition [2247,2348]
to
contract_body [595,23068]
at 14
===
insert-node
---
identifier: _checkPauseStatus [3629,3646]
to
function_definition [3620,3748]
at 1
===
insert-node
---
identifier: changeProjectNum [3000,3016]
to
function_definition [2991,3110]
at 1
===
insert-node
---
:: : [10625,10626]
to
ternary_expression [10574,10671]
at 3
===
insert-node
---
identifier: _transferEth [18838,18850]
to
call_expression [18838,18872]
at 0
===
insert-node
---
function_definition [18164,18879]
to
contract_body [595,23068]
at 60
===
insert-node
---
block_statement [10333,10820]
to
function_body [8681,11412]
at 21
===
insert-node
---
function_body [22925,23066]
to
function_definition [22786,23066]
at 6
===
insert-node
---
function: function [17555,17563]
to
function_definition [17555,18098]
at 0
===
insert-node
---
identifier: onlyRole [3046,3054]
to
modifier_invocation [3046,3066]
at 0
===
insert-node
---
affectation_operator: = [10257,10258]
to
variable_declaration_statement [10243,10302]
at 1
===
insert-node
---
call_argument [11277,11310]
to
call_expression [11267,11311]
at 1
===
insert-node
---
visibility: internal [17677,17685]
to
function_definition [17555,18098]
at 7
===
insert-node
---
member_expression: all_prices[daoId].updateCanvasPrice [11668,11703]
to
call_expression [11668,11758]
at 0
===
insert-node
---
expression_statement [18838,18873]
to
function_body [18383,18879]
at 8
===
insert-node
---
assignment_expression [14809,14897]
to
expression_statement [14809,14898]
at 0
===
insert-node
---
call_expression [17772,17936]
to
expression_statement [17772,17937]
at 0
===
insert-node
---
function_definition [11418,11775]
to
contract_body [595,23068]
at 51
===
insert-node
---
expression_statement [17772,17937]
to
function_body [17690,18098]
at 1
===
insert-node
---
block_statement [11654,11769]
to
if_statement [11634,11769]
at 2
===
insert-node
---
function_body [3663,3748]
to
function_definition [3620,3748]
at 4
===
insert-node
---
call_expression [18838,18872]
to
expression_statement [18838,18873]
at 0
===
insert-node
---
function_body [8681,11412]
to
function_definition [8381,11412]
at 7
===
insert-node
---
visibility: internal [12287,12295]
to
function_definition [12191,16767]
at 5
===
insert-node
---
identifier: _checkRole [2256,2266]
to
function_definition [2247,2348]
at 1
===
insert-node
---
visibility: internal [2281,2289]
to
function_definition [2247,2348]
at 3
===
insert-node
---
function_body [17690,18098]
to
function_definition [17555,18098]
at 8
===
insert-node
---
is: is [536,538]
to
contract_declaration [506,23068]
at 2
===
insert-node
---
member_expression: vars.nftPriceMultiplyFactor [9370,9397]
to
assignment_expression [9370,9513]
at 0
===
insert-node
---
expression_statement [11668,11759]
to
block_statement [11654,11769]
at 0
===
insert-node
---
type_name: D4APrice.project_price_info [757,784]
to
using_directive [738,785]
at 3
===
insert-node
---
assignment_expression [9370,9513]
to
expression_statement [9370,9514]
at 0
===
insert-node
---
function: function [3620,3628]
to
function_definition [3620,3748]
at 0
===
insert-node
---
identifier: D4AProtocol [524,535]
to
contract_declaration [506,23068]
at 1
===
insert-node
---
contract_body [595,23068]
to
contract_declaration [506,23068]
at 6
===
insert-node
---
visibility: internal [11615,11623]
to
function_definition [11418,11775]
at 8
===
insert-node
---
modifier: modifier [1879,1887]
to
modifier_definition [1879,1955]
at 0
===
insert-node
---
function_body [18383,18879]
to
function_definition [18164,18879]
at 9
===
insert-node
---
member_expression: abi.encodePacked [11277,11293]
to
call_expression [11277,11310]
at 0
===
insert-node
---
if_statement [11634,11769]
to
function_body [11624,11775]
at 0
===
insert-node
---
ternary_expression [10574,10671]
to
parenthesized_expression [10556,10685]
at 0
===
insert-node
---
function: function [18885,18893]
to
function_definition [18885,19082]
at 0
===
insert-node
---
variable_declaration_statement [10537,10694]
to
block_statement [10333,10820]
at 3
===
insert-node
---
affectation_operator: = [19000,19001]
to
variable_declaration_statement [18987,19029]
at 1
===
insert-node
---
function_body [12489,16767]
to
function_definition [12191,16767]
at 7
===
insert-node
---
function_definition [8381,11412]
to
contract_body [595,23068]
at 50
===
insert-node
---
expression_statement [10848,10944]
to
function_body [8681,11412]
at 22
===
insert-node
---
for_statement [14562,15956]
to
block_statement [14374,15966]
at 2
===
insert-node
---
identifier: onlyRole [1888,1896]
to
modifier_definition [1879,1955]
at 1
===
insert-node
---
visibility: internal [8472,8480]
to
function_definition [8381,11412]
at 5
===
insert-node
---
if_statement [3673,3742]
to
function_body [3663,3748]
at 0
===
insert-node
---
identifier: _mintNft [12200,12208]
to
function_definition [12191,16767]
at 1
===
insert-node
---
block_statement [14374,15966]
to
function_body [12489,16767]
at 22
===
insert-node
---
identifier: _checkRole [2313,2323]
to
call_expression [2313,2341]
at 0
===
insert-node
---
function: function [22786,22794]
to
function_definition [22786,23066]
at 0
===
insert-node
---
arithmetic_operator: * [10686,10687]
to
binary_expression [10556,10693]
at 1
===
insert-node
---
?: ? [10589,10590]
to
ternary_expression [10574,10671]
at 1
===
insert-node
---
member_expression: ID4AERC721(pi.erc721_token).mintItem [14823,14859]
to
call_expression [14823,14897]
at 0
===
insert-node
---
function_body [2303,2348]
to
function_definition [2247,2348]
at 6
===
insert-node
---
if: if [11634,11636]
to
if_statement [11634,11769]
at 0
===
insert-node
---
function_body [3067,3110]
to
function_definition [2991,3110]
at 5
===
insert-node
---
identifier: tokenid_2_canvas [11250,11266]
to
array_access [11250,11312]
at 0
===
insert-node
---
modifier_invocation [3046,3066]
to
function_definition [2991,3110]
at 4
===
insert-node
---
variable_declaration_statement [18987,19029]
to
function_body [18944,19082]
at 1
===
insert-node
---
call_expression [19002,19028]
to
variable_declaration_statement [18987,19029]
at 2
===
insert-node
---
if: if [3673,3675]
to
if_statement [3673,3742]
at 0
===
insert-node
---
identifier: _updatePrice [11427,11439]
to
function_definition [11418,11775]
at 1
===
insert-node
---
function_definition [2991,3110]
to
contract_body [595,23068]
at 17
===
insert-node
---
virtual: virtual [2295,2302]
to
function_definition [2247,2348]
at 5
===
insert-node
---
visibility: internal [18328,18336]
to
function_definition [18164,18879]
at 7
===
insert-node
---
binary_expression [10556,10693]
to
variable_declaration_statement [10537,10694]
at 2
===
insert-node
---
call_expression [11277,11310]
to
call_argument [11277,11310]
at 0
===
insert-node
---
assignment_expression [10707,10809]
to
expression_statement [10707,10810]
at 0
===
insert-node
---
identifier: keccak256 [11267,11276]
to
call_expression [11267,11311]
at 0
===
insert-node
---
function: function [2991,2999]
to
function_definition [2991,3110]
at 0
===
insert-node
---
member_expression: all_rewards.updateMintWithAmount [17772,17804]
to
call_expression [17772,17936]
at 0
===
insert-node
---
function_body [11624,11775]
to
function_definition [11418,11775]
at 9
===
insert-node
---
identifier: _updateReward [17564,17577]
to
function_definition [17555,18098]
at 1
===
insert-node
---
call_expression [10848,10943]
to
expression_statement [10848,10944]
at 0
===
insert-node
---
variable_declaration_statement [18450,18487]
to
function_body [18383,18879]
at 1
===
insert-node
---
contract_declaration [506,23068]
to
source_file [0,13953]
at 10
===
insert-node
---
variable_declaration_statement [10243,10302]
to
function_body [8681,11412]
at 20
===
insert-node
---
identifier: _splitFee [10741,10750]
to
call_expression [10741,10809]
at 0
===
insert-node
---
function_definition [22786,23066]
to
contract_body [595,23068]
at 71
===
insert-node
---
function_body [1911,1955]
to
modifier_definition [1879,1955]
at 3
===
insert-node
---
expression_statement [11250,11324]
to
block_statement [11130,11334]
at 3
===
insert-node
---
function_definition [17555,18098]
to
contract_body [595,23068]
at 57
===
insert-node
---
identifier: _updatePrice [10848,10860]
to
call_expression [10848,10943]
at 0
===
insert-node
---
function: function [2247,2255]
to
function_definition [2247,2348]
at 0
===
insert-node
---
visibility: public [22885,22891]
to
function_definition [22786,23066]
at 4
===
insert-node
---
parenthesized_expression [10556,10685]
to
binary_expression [10556,10693]
at 0
===
insert-node
---
block_statement [11130,11334]
to
function_body [8681,11412]
at 25
===
insert-node
---
identifier: _transferEth [18894,18906]
to
function_definition [18885,19082]
at 1
===
insert-node
---
array_access [11250,11312]
to
assignment_expression [11250,11323]
at 0
===
insert-node
---
identifier: _splitFee [18173,18182]
to
function_definition [18164,18879]
at 1
===
insert-node
---
expression_statement [10707,10810]
to
block_statement [10333,10820]
at 4
===
insert-node
---
function_body [18944,19082]
to
function_definition [18885,19082]
at 5
===
insert-node
---
affectation_operator: = [10554,10555]
to
variable_declaration_statement [10537,10694]
at 1
===
insert-node
---
call_expression [2313,2341]
to
expression_statement [2313,2342]
at 0
===
insert-node
---
for: for [14562,14565]
to
for_statement [14562,15956]
at 0
===
insert-node
---
function: function [12191,12199]
to
function_definition [12191,16767]
at 0
===
insert-node
---
affectation_operator: = [14821,14822]
to
assignment_expression [14809,14897]
at 1
===
insert-node
---
function_definition [12191,16767]
to
contract_body [595,23068]
at 54
===
insert-node
---
identifier: changeDaoNftPriceMultiplyFactor [22795,22826]
to
function_definition [22786,23066]
at 1
===
insert-node
---
expression_statement [9370,9514]
to
function_body [8681,11412]
at 9
===
insert-node
---
function_definition [18885,19082]
to
contract_body [595,23068]
at 61
===
insert-node
---
identifier: onlyRole [22900,22908]
to
modifier_invocation [22900,22920]
at 0
===
insert-node
---
assignment_expression [11250,11323]
to
expression_statement [11250,11324]
at 0
===
insert-node
---
call_expression [10741,10809]
to
assignment_expression [10707,10809]
at 2
===
insert-node
---
for: for [753,756]
to
using_directive [738,785]
at 2
===
insert-node
---
modifier_definition [1879,1955]
to
contract_body [595,23068]
at 13

New cluster:
MOVE from contract_declaration [506,23068]
------------
===
move-tree
---
inheritance_specifier [554,580]
    user_defined_type [554,580]
        identifier: ReentrancyGuardUpgradeable [554,580]
to
contract_declaration [506,23068]
at 4
===
move-tree
---
inheritance_specifier [539,552]
    user_defined_type [539,552]
        identifier: Initializable [539,552]
to
contract_declaration [506,23068]
at 3
===
move-tree
---
inheritance_specifier [582,594]
    user_defined_type [582,594]
        identifier: ID4AProtocol [582,594]
to
contract_declaration [506,23068]
at 5

New cluster:
MOVE from contract_body [595,23068]
------------
===
move-tree
---
state_variable_declaration [878,921]
    type_name: mapping(bytes32 => bool) [878,902]
    visibility: public [903,909]
    identifier: uri_exists [910,920]
to
contract_body [595,23068]
at 4
===
move-tree
---
state_variable_declaration [1039,1065]
    type_name: uint256 [1039,1046]
    visibility: public [1047,1053]
    identifier: canvas_num [1054,1064]
to
contract_body [595,23068]
at 7
===
move-tree
---
function_definition [2125,2956]
    function: function [2125,2133]
    identifier: createProject [2134,2147]
    parameter [2157,2175]
        type_name: uint256 [2157,2164]
        identifier: _start_prb [2165,2175]
    parameter [2185,2209]
        type_name: uint256 [2185,2192]
        identifier: _mintable_rounds [2193,2209]
    parameter [2219,2244]
        type_name: uint256 [2219,2226]
        identifier: _floor_price_rank [2227,2244]
    parameter [2254,2275]
        type_name: uint256 [2254,2261]
        identifier: _max_nft_rank [2262,2275]
    parameter [2285,2304]
        type_name: uint96 [2285,2291]
        identifier: _royalty_fee [2292,2304]
    parameter [2314,2340]
        type_name: string [2314,2320]
        memory: memory [2321,2327]
        identifier: _project_uri [2328,2340]
    visibility: public [2347,2353]
    state_mutability [2354,2361]
        payable: payable [2354,2361]
    override_specifier [2362,2370]
        override: override [2362,2370]
    modifier_invocation [2371,2383]
        identifier: nonReentrant [2371,2383]
    modifier_invocation [2384,2400]
        identifier: onlyProjectProxy [2384,2400]
    return_type_definition [2401,2429]
        returns: returns [2401,2408]
        parameter [2410,2428]
            type_name: bytes32 [2410,2417]
            identifier: project_id [2418,2428]
    function_body [2430,2956]
        expression_statement [2440,2485]
            call_expression [2440,2484]
                identifier: require [2440,2447]
                call_argument [2448,2469]
                    unary_expression [2448,2469]
                        !: ! [2448,2449]
                        call_expression [2449,2469]
                            member_expression: settings.d4a_pause [2449,2467]
                call_argument [2471,2483]
                    string_literal [2471,2483]
                        string: "D4A Paused" [2471,2483]
        expression_statement [2494,2587]
            call_expression [2494,2586]
                identifier: require [2494,2501]
                call_argument [2502,2556]
                    array_access [2502,2556]
                        unary_expression [2502,2513]
                            !: ! [2502,2503]
                            identifier: uri_exists [2503,2513]
                        call_expression [2514,2555]
                            identifier: keccak256 [2514,2523]
                            call_argument [2524,2554]
                                call_expression [2524,2554]
                                    member_expression: abi.encodePacked [2524,2540]
                                    call_argument [2541,2553]
                                        identifier: _project_uri [2541,2553]
                call_argument [2558,2585]
                    string_literal [2558,2585]
                        string: "project_uri already exist" [2558,2585]
        expression_statement [2596,2657]
            assignment_expression [2596,2656]
                array_access [2596,2649]
                    identifier: uri_exists [2596,2606]
                    call_expression [2607,2648]
                        identifier: keccak256 [2607,2616]
                        call_argument [2617,2647]
                            call_expression [2617,2647]
                                member_expression: abi.encodePacked [2617,2633]
                                call_argument [2634,2646]
                                    identifier: _project_uri [2634,2646]
                affectation_operator: = [2650,2651]
                boolean_literal: true [2652,2656]
        expression_statement [2666,2927]
            assignment_expression [2666,2926]
                identifier: project_id [2666,2676]
                affectation_operator: = [2677,2678]
                call_expression [2679,2926]
                    member_expression: all_projects.createProject [2679,2705]
                    call_argument [2719,2727]
                        identifier: settings [2719,2727]
                    call_argument [2741,2751]
                        identifier: _start_prb [2741,2751]
                    call_argument [2765,2781]
                        identifier: _mintable_rounds [2765,2781]
                    call_argument [2795,2812]
                        identifier: _floor_price_rank [2795,2812]
                    call_argument [2826,2839]
                        identifier: _max_nft_rank [2826,2839]
                    call_argument [2853,2865]
                        identifier: _royalty_fee [2853,2865]
                    call_argument [2879,2890]
                        identifier: project_num [2879,2890]
                    call_argument [2904,2916]
                        identifier: _project_uri [2904,2916]
        expression_statement [2936,2950]
            update_expression [2936,2949]
                identifier: project_num [2936,2947]
                increment_operator: ++ [2947,2949]
to
contract_body [595,23068]
at 35
===
move-tree
---
state_variable_declaration [960,1033]
    type_name: mapping(bytes32 => mapping(uint256 => uint256)) [960,1007]
    visibility: public [1008,1014]
    identifier: round_2_total_eth [1015,1032]
to
contract_body [595,23068]
at 6
===
move-tree
---
constructor_definition [1408,1461]
    constructor: constructor [1408,1419]
    function_body [1422,1461]
        expression_statement [1432,1455]
            call_expression [1432,1454]
                identifier: _disableInitializers [1432,1452]
to
contract_body [595,23068]
at 11
===
move-tree
---
function_definition [9970,10794]
    function: function [9970,9978]
    identifier: claimProjectERC20Reward [9979,10002]
    parameter [10003,10022]
        type_name: bytes32 [10003,10010]
        identifier: _project_id [10011,10022]
    visibility: public [10024,10030]
    modifier_invocation [10031,10043]
        identifier: nonReentrant [10031,10043]
    return_type_definition [10044,10061]
        returns: returns [10044,10051]
        parameter [10053,10060]
            type_name: uint256 [10053,10060]
    function_body [10062,10794]
        expression_statement [10072,10117]
            call_expression [10072,10116]
                identifier: require [10072,10079]
                call_argument [10080,10101]
                    unary_expression [10080,10101]
                        !: ! [10080,10081]
                        call_expression [10081,10101]
                            member_expression: settings.d4a_pause [10081,10099]
                call_argument [10103,10115]
                    string_literal [10103,10115]
                        string: "D4A Paused" [10103,10115]
        expression_statement [10126,10189]
            call_expression [10126,10188]
                identifier: require [10126,10133]
                call_argument [10134,10169]
                    unary_expression [10134,10169]
                        !: ! [10134,10135]
                        call_expression [10135,10169]
                            member_expression: settings.pause_status [10135,10156]
                            call_argument [10157,10168]
                                identifier: _project_id [10157,10168]
                call_argument [10171,10187]
                    string_literal [10171,10187]
                        string: "Project Paused" [10171,10187]
        if_statement [10198,10275]
            if: if [10198,10200]
            member_expression: !all_projects[_project_id].exist [10202,10234]
            revert_statement [10236,10275]
                revert: revert [10236,10242]
                identifier: D4AProjectNotExist [10243,10261]
                revert_arguments [10261,10274]
                    call_argument [10262,10273]
                        identifier: _project_id [10262,10273]
        variable_declaration_statement [10285,10348]
            variable_declaration [10285,10319]
                type_name: D4AProject.project_info [10285,10308]
                storage: storage [10309,10316]
                identifier: pi [10317,10319]
            affectation_operator: = [10320,10321]
            array_access [10322,10347]
                identifier: all_projects [10322,10334]
                identifier: _project_id [10335,10346]
        expression_statement [10357,10512]
            call_expression [10357,10511]
                member_expression: all_rewards.issueTokenToCurrentRound [10357,10393]
                call_argument [10407,10415]
                    identifier: settings [10407,10415]
                call_argument [10417,10428]
                    identifier: _project_id [10417,10428]
                call_argument [10430,10444]
                    member_expression: pi.erc20_token [10430,10444]
                call_argument [10446,10458]
                    member_expression: pi.start_prb [10446,10458]
                call_argument [10460,10478]
                    member_expression: pi.mintable_rounds [10460,10478]
                call_argument [10480,10501]
                    member_expression: pi.erc20_total_supply [10480,10501]
        variable_declaration_statement [10521,10687]
            variable_declaration [10521,10535]
                type_name: uint256 [10521,10528]
                identifier: amount [10529,10535]
            affectation_operator: = [10536,10537]
            call_expression [10538,10686]
                member_expression: all_rewards.claimProjectReward [10538,10568]
                call_argument [10582,10590]
                    identifier: settings [10582,10590]
                call_argument [10592,10603]
                    identifier: _project_id [10592,10603]
                call_argument [10605,10619]
                    member_expression: pi.erc20_token [10605,10619]
                call_argument [10621,10633]
                    member_expression: pi.start_prb [10621,10633]
                call_argument [10635,10653]
                    member_expression: pi.mintable_rounds [10635,10653]
                call_argument [10655,10676]
                    member_expression: pi.erc20_total_supply [10655,10676]
        emit_statement [10696,10765]
            identifier: D4AClaimProjectERC20Reward [10701,10727]
            call_argument [10728,10739]
                identifier: _project_id [10728,10739]
            call_argument [10741,10755]
                member_expression: pi.erc20_token [10741,10755]
            call_argument [10757,10763]
                identifier: amount [10757,10763]
        return_statement [10774,10788]
            return: return [10774,10780]
            identifier: amount [10781,10787]
to
contract_body [595,23068]
at 65
===
move-tree
---
function_definition [4326,5299]
    function: function [4326,4334]
    identifier: _createCanvas [4335,4348]
    parameter [4349,4368]
        type_name: bytes32 [4349,4356]
        identifier: _project_id [4357,4368]
    parameter [4370,4397]
        type_name: string [4370,4376]
        calldata: calldata [4377,4385]
        identifier: _canvas_uri [4386,4397]
    visibility: internal [4399,4407]
    return_type_definition [4408,4435]
        returns: returns [4408,4415]
        parameter [4417,4434]
            type_name: bytes32 [4417,4424]
            identifier: canvas_id [4425,4434]
    function_body [4436,5299]
        expression_statement [4446,4491]
            call_expression [4446,4490]
                identifier: require [4446,4453]
                call_argument [4454,4475]
                    unary_expression [4454,4475]
                        !: ! [4454,4455]
                        call_expression [4455,4475]
                            member_expression: settings.d4a_pause [4455,4473]
                call_argument [4477,4489]
                    string_literal [4477,4489]
                        string: "D4A Paused" [4477,4489]
        if_statement [4500,4577]
            if: if [4500,4502]
            member_expression: !all_projects[_project_id].exist [4504,4536]
            revert_statement [4538,4577]
                revert: revert [4538,4544]
                identifier: D4AProjectNotExist [4545,4563]
                revert_arguments [4563,4576]
                    call_argument [4564,4575]
                        identifier: _project_id [4564,4575]
        expression_statement [4586,4649]
            call_expression [4586,4648]
                identifier: require [4586,4593]
                call_argument [4594,4629]
                    unary_expression [4594,4629]
                        !: ! [4594,4595]
                        call_expression [4595,4629]
                            member_expression: settings.pause_status [4595,4616]
                            call_argument [4617,4628]
                                identifier: _project_id [4617,4628]
                call_argument [4631,4647]
                    string_literal [4631,4647]
                        string: "Project Paused" [4631,4647]
        expression_statement [4659,4750]
            call_expression [4659,4749]
                identifier: require [4659,4666]
                call_argument [4667,4720]
                    array_access [4667,4720]
                        unary_expression [4667,4678]
                            !: ! [4667,4668]
                            identifier: uri_exists [4668,4678]
                        call_expression [4679,4719]
                            identifier: keccak256 [4679,4688]
                            call_argument [4689,4718]
                                call_expression [4689,4718]
                                    member_expression: abi.encodePacked [4689,4705]
                                    call_argument [4706,4717]
                                        identifier: _canvas_uri [4706,4717]
                call_argument [4722,4748]
                    string_literal [4722,4748]
                        string: "canvas_uri already exist" [4722,4748]
        expression_statement [4759,4819]
            assignment_expression [4759,4818]
                array_access [4759,4811]
                    identifier: uri_exists [4759,4769]
                    call_expression [4770,4810]
                        identifier: keccak256 [4770,4779]
                        call_argument [4780,4809]
                            call_expression [4780,4809]
                                member_expression: abi.encodePacked [4780,4796]
                                call_argument [4797,4808]
                                    identifier: _canvas_uri [4797,4808]
                affectation_operator: = [4812,4813]
                boolean_literal: true [4814,4818]
        expression_statement [4829,5107]
            assignment_expression [4829,5106]
                identifier: canvas_id [4829,4838]
                affectation_operator: = [4839,4840]
                call_expression [4841,5106]
                    member_expression: all_canvases.createCanvas [4841,4866]
                    call_argument [4880,4888]
                        identifier: settings [4880,4888]
                    call_argument [4902,4936]
                        member_expression: all_projects[_project_id].fee_pool [4902,4936]
                    call_argument [4950,4961]
                        identifier: _project_id [4950,4961]
                    call_argument [4975,5010]
                        member_expression: all_projects[_project_id].start_prb [4975,5010]
                    call_argument [5024,5071]
                        call_expression [5024,5071]
                            member_expression: all_projects.getProjectCanvasCount [5024,5058]
                            call_argument [5059,5070]
                                identifier: _project_id [5059,5070]
                    call_argument [5085,5096]
                        identifier: _canvas_uri [5085,5096]
        expression_statement [5117,5168]
            call_expression [5117,5167]
                member_expression: all_projects[_project_id].canvases.push [5117,5156]
                call_argument [5157,5166]
                    identifier: canvas_id [5157,5166]
to
contract_body [595,23068]
at 46
===
move-tree
---
state_variable_declaration [927,954]
    type_name: uint256 [927,934]
    visibility: public [935,941]
    identifier: project_num [942,953]
to
contract_body [595,23068]
at 5
===
move-tree
---
event_definition [9738,9828]
    identifier: D4AClaimProjectERC20Reward [9744,9770]
    event_paramater [9771,9789]
        type_name: bytes32 [9771,9778]
        identifier: project_id [9779,9789]
    event_paramater [9791,9810]
        type_name: address [9791,9798]
        identifier: erc20_token [9799,9810]
    event_paramater [9812,9826]
        type_name: uint256 [9812,9819]
        identifier: amount [9820,9826]
to
contract_body [595,23068]
at 63
===
move-tree
---
function_definition [1721,1970]
    function: function [1721,1729]
    identifier: changeSetting [1730,1743]
    parameter [1744,1761]
        type_name: address [1744,1751]
        identifier: _settings [1752,1761]
    visibility: public [1763,1769]
    function_body [1770,1970]
        variable_declaration_statement [1780,1869]
            variable_declaration [1780,1789]
                type_name: bool [1780,1784]
                identifier: succ [1785,1789]
            affectation_operator: = [1790,1791]
            call_expression [1792,1868]
                member_expression: IAccessControlUpgradeable(address(settings)).hasRole [1792,1844]
                call_argument [1845,1855]
                    type_cast_expression [1845,1855]
                        primitive_type: bytes32 [1845,1852]
                        call_argument [1853,1854]
                            number_literal: 0 [1853,1854]
                call_argument [1857,1867]
                    member_expression: msg.sender [1857,1867]
        expression_statement [1878,1921]
            call_expression [1878,1920]
                identifier: require [1878,1885]
                call_argument [1886,1890]
                    identifier: succ [1886,1890]
                call_argument [1892,1919]
                    string_literal [1892,1919]
                        string: "not admin, can not change" [1892,1919]
        expression_statement [1930,1964]
            assignment_expression [1930,1963]
                identifier: settings [1930,1938]
                affectation_operator: = [1939,1940]
                call_expression [1941,1963]
                    identifier: ID4ASetting [1941,1952]
                    call_argument [1953,1962]
                        identifier: _settings [1953,1962]
to
contract_body [595,23068]
at 18
===
move-tree
---
event_definition [1282,1349]
    identifier: NewCanvas [1288,1297]
    event_paramater [1298,1316]
        type_name: bytes32 [1298,1305]
        identifier: project_id [1306,1316]
    event_paramater [1318,1335]
        type_name: bytes32 [1318,1325]
        identifier: canvas_id [1326,1335]
    event_paramater [1337,1347]
        type_name: string [1337,1343]
        identifier: uri [1344,1347]
to
contract_body [595,23068]
at 10
===
move-tree
---
function_definition [4068,4221]
    function: function [4068,4076]
    identifier: getProjectCanvasCount [4077,4098]
    parameter [4099,4118]
        type_name: bytes32 [4099,4106]
        identifier: _project_id [4107,4118]
    visibility: public [4120,4126]
    state_mutability [4127,4131]
        view: view [4127,4131]
    return_type_definition [4132,4149]
        returns: returns [4132,4139]
        parameter [4141,4148]
            type_name: uint256 [4141,4148]
    function_body [4150,4221]
        return_statement [4160,4215]
            return: return [4160,4166]
            call_expression [4167,4214]
                member_expression: all_projects.getProjectCanvasCount [4167,4201]
                call_argument [4202,4213]
                    identifier: _project_id [4202,4213]
to
contract_body [595,23068]
at 39
===
move-tree
---
event_definition [9833,9964]
    identifier: D4AExchangeERC20ToETH [9839,9860]
    event_paramater [9870,9888]
        type_name: bytes32 [9870,9877]
        identifier: project_id [9878,9888]
    event_paramater [9890,9903]
        type_name: address [9890,9897]
        identifier: owner [9898,9903]
    event_paramater [9905,9915]
        type_name: address [9905,9912]
        identifier: to [9913,9915]
    event_paramater [9917,9937]
        type_name: uint256 [9917,9924]
        identifier: erc20_amount [9925,9937]
    event_paramater [9939,9957]
        type_name: uint256 [9939,9946]
        identifier: eth_amount [9947,9957]
to
contract_body [595,23068]
at 64
===
move-tree
---
using_directive [810,872]
    using: using [810,815]
    type_alias [816,825]
        identifier: D4AReward [816,825]
    for: for [826,829]
    type_name: mapping(bytes32 => D4AReward.reward_info) [830,871]
to
contract_body [595,23068]
at 3
===
move-tree
---
function_definition [2962,4062]
    function: function [2962,2970]
    identifier: createOwnerProject [2971,2989]
    parameter [2999,3017]
        type_name: uint256 [2999,3006]
        identifier: _start_prb [3007,3017]
    parameter [3027,3051]
        type_name: uint256 [3027,3034]
        identifier: _mintable_rounds [3035,3051]
    parameter [3061,3086]
        type_name: uint256 [3061,3068]
        identifier: _floor_price_rank [3069,3086]
    parameter [3096,3117]
        type_name: uint256 [3096,3103]
        identifier: _max_nft_rank [3104,3117]
    parameter [3127,3146]
        type_name: uint96 [3127,3133]
        identifier: _royalty_fee [3134,3146]
    parameter [3156,3182]
        type_name: string [3156,3162]
        memory: memory [3163,3169]
        identifier: _project_uri [3170,3182]
    parameter [3192,3214]
        type_name: uint256 [3192,3199]
        identifier: _project_index [3200,3214]
    visibility: public [3221,3227]
    state_mutability [3228,3235]
        payable: payable [3228,3235]
    override_specifier [3236,3244]
        override: override [3236,3244]
    modifier_invocation [3245,3257]
        identifier: nonReentrant [3245,3257]
    modifier_invocation [3258,3274]
        identifier: onlyProjectProxy [3258,3274]
    return_type_definition [3275,3303]
        returns: returns [3275,3282]
        parameter [3284,3302]
            type_name: bytes32 [3284,3291]
            identifier: project_id [3292,3302]
    function_body [3304,4062]
        expression_statement [3314,3359]
            call_expression [3314,3358]
                identifier: require [3314,3321]
                call_argument [3322,3343]
                    unary_expression [3322,3343]
                        !: ! [3322,3323]
                        call_expression [3323,3343]
                            member_expression: settings.d4a_pause [3323,3341]
                call_argument [3345,3357]
                    string_literal [3345,3357]
                        string: "D4A Paused" [3345,3357]
        expression_statement [3368,3460]
            call_expression [3368,3459]
                identifier: require [3368,3375]
                call_argument [3376,3418]
                    binary_expression [3376,3418]
                        identifier: _project_index [3376,3390]
                        comparison_operator: < [3391,3392]
                        call_expression [3393,3418]
                            member_expression: settings.reserved_slots [3393,3416]
                call_argument [3420,3458]
                    string_literal [3420,3458]
                        string: "INDEX_ERROR: project index too large" [3420,3458]
        expression_statement [3469,3568]
            call_expression [3469,3567]
                identifier: require [3469,3476]
                call_argument [3477,3522]
                    binary_expression [3477,3522]
                        parenthesized_expression [3477,3517]
                            binary_expression [3478,3516]
                                parenthesized_expression [3478,3512]
                                    binary_expression [3479,3511]
                                        identifier: project_bitmap [3479,3493]
                                        >>: >> [3494,3496]
                                        identifier: _project_index [3497,3511]
                                bitwise_operator: & [3513,3514]
                                number_literal: 1 [3515,3516]
                        comparison_operator: == [3518,3520]
                        number_literal: 0 [3521,3522]
                call_argument [3524,3566]
                    string_literal [3524,3566]
                        string: "INDEX_ERROR: project index already exist" [3524,3566]
        expression_statement [3577,3617]
            augmented_assignment_expression [3577,3616]
                identifier: project_bitmap [3577,3591]
                affectation_operator: |= [3592,3594]
                parenthesized_expression [3595,3616]
                    binary_expression [3596,3615]
                        number_literal: 1 [3596,3597]
                        <<: << [3598,3600]
                        identifier: _project_index [3601,3615]
        expression_statement [3626,3719]
            call_expression [3626,3718]
                identifier: require [3626,3633]
                call_argument [3634,3688]
                    array_access [3634,3688]
                        unary_expression [3634,3645]
                            !: ! [3634,3635]
                            identifier: uri_exists [3635,3645]
                        call_expression [3646,3687]
                            identifier: keccak256 [3646,3655]
                            call_argument [3656,3686]
                                call_expression [3656,3686]
                                    member_expression: abi.encodePacked [3656,3672]
                                    call_argument [3673,3685]
                                        identifier: _project_uri [3673,3685]
                call_argument [3690,3717]
                    string_literal [3690,3717]
                        string: "project_uri already exist" [3690,3717]
        expression_statement [3728,3789]
            assignment_expression [3728,3788]
                array_access [3728,3781]
                    identifier: uri_exists [3728,3738]
                    call_expression [3739,3780]
                        identifier: keccak256 [3739,3748]
                        call_argument [3749,3779]
                            call_expression [3749,3779]
                                member_expression: abi.encodePacked [3749,3765]
                                call_argument [3766,3778]
                                    identifier: _project_uri [3766,3778]
                affectation_operator: = [3782,3783]
                boolean_literal: true [3784,3788]
        return_statement [3798,4056]
            return: return [3798,3804]
            call_expression [3805,4055]
                member_expression: all_projects.createProject [3805,3831]
                call_argument [3845,3853]
                    identifier: settings [3845,3853]
                call_argument [3867,3877]
                    identifier: _start_prb [3867,3877]
                call_argument [3891,3907]
                    identifier: _mintable_rounds [3891,3907]
                call_argument [3921,3938]
                    identifier: _floor_price_rank [3921,3938]
                call_argument [3952,3965]
                    identifier: _max_nft_rank [3952,3965]
                call_argument [3979,3991]
                    identifier: _royalty_fee [3979,3991]
                call_argument [4005,4019]
                    identifier: _project_index [4005,4019]
                call_argument [4033,4045]
                    identifier: _project_uri [4033,4045]
to
contract_body [595,23068]
at 38
===
move-tree
---
function_definition [10800,11221]
    function: function [10800,10808]
    identifier: claimProjectERC20RewardWithETH [10809,10839]
    parameter [10840,10859]
        type_name: bytes32 [10840,10847]
        identifier: _project_id [10848,10859]
    visibility: public [10861,10867]
    return_type_definition [10868,10885]
        returns: returns [10868,10875]
        parameter [10877,10884]
            type_name: uint256 [10877,10884]
    function_body [10886,11221]
        variable_declaration_statement [10896,10956]
            variable_declaration [10896,10916]
                type_name: uint256 [10896,10903]
                identifier: erc20_amount [10904,10916]
            affectation_operator: = [10917,10918]
            call_expression [10919,10955]
                identifier: claimProjectERC20Reward [10919,10942]
                call_argument [10943,10954]
                    identifier: _project_id [10943,10954]
        variable_declaration_statement [10965,11028]
            variable_declaration [10965,10999]
                type_name: D4AProject.project_info [10965,10988]
                storage: storage [10989,10996]
                identifier: pi [10997,10999]
            affectation_operator: = [11000,11001]
            array_access [11002,11027]
                identifier: all_projects [11002,11014]
                identifier: _project_id [11015,11026]
        return_statement [11037,11215]
            return: return [11037,11043]
            call_expression [11044,11214]
                member_expression: D4AReward.claimProjectERC20RewardWithETH [11044,11084]
                call_argument [11098,11106]
                    identifier: settings [11098,11106]
                call_argument [11108,11119]
                    identifier: _project_id [11108,11119]
                call_argument [11121,11135]
                    member_expression: pi.erc20_token [11121,11135]
                call_argument [11137,11149]
                    identifier: erc20_amount [11137,11149]
                call_argument [11151,11185]
                    member_expression: all_projects[_project_id].fee_pool [11151,11185]
                call_argument [11187,11204]
                    identifier: round_2_total_eth [11187,11204]
to
contract_body [595,23068]
at 66
===
move-tree
---
function_definition [12945,13609]
    function: function [12945,12953]
    identifier: exchangeERC20ToETH [12954,12972]
    parameter [12973,12992]
        type_name: bytes32 [12973,12980]
        identifier: _project_id [12981,12992]
    parameter [12994,13008]
        type_name: uint256 [12994,13001]
        identifier: amount [13002,13008]
    parameter [13010,13021]
        type_name: address [13010,13017]
        identifier: _to [13018,13021]
    visibility: public [13031,13037]
    modifier_invocation [13046,13058]
        identifier: nonReentrant [13046,13058]
    return_type_definition [13067,13084]
        returns: returns [13067,13074]
        parameter [13076,13083]
            type_name: uint256 [13076,13083]
    function_body [13089,13609]
        expression_statement [13099,13144]
            call_expression [13099,13143]
                identifier: require [13099,13106]
                call_argument [13107,13128]
                    unary_expression [13107,13128]
                        !: ! [13107,13108]
                        call_expression [13108,13128]
                            member_expression: settings.d4a_pause [13108,13126]
                call_argument [13130,13142]
                    string_literal [13130,13142]
                        string: "D4A Paused" [13130,13142]
        expression_statement [13153,13216]
            call_expression [13153,13215]
                identifier: require [13153,13160]
                call_argument [13161,13196]
                    unary_expression [13161,13196]
                        !: ! [13161,13162]
                        call_expression [13162,13196]
                            member_expression: settings.pause_status [13162,13183]
                            call_argument [13184,13195]
                                identifier: _project_id [13184,13195]
                call_argument [13198,13214]
                    string_literal [13198,13214]
                        string: "Project Paused" [13198,13214]
        variable_declaration_statement [13226,13289]
            variable_declaration [13226,13260]
                type_name: D4AProject.project_info [13226,13249]
                storage: storage [13250,13257]
                identifier: pi [13258,13260]
            affectation_operator: = [13261,13262]
            array_access [13263,13288]
                identifier: all_projects [13263,13275]
                identifier: _project_id [13276,13287]
        expression_statement [13298,13453]
            call_expression [13298,13452]
                member_expression: all_rewards.issueTokenToCurrentRound [13298,13334]
                call_argument [13348,13356]
                    identifier: settings [13348,13356]
                call_argument [13358,13369]
                    identifier: _project_id [13358,13369]
                call_argument [13371,13385]
                    member_expression: pi.erc20_token [13371,13385]
                call_argument [13387,13399]
                    member_expression: pi.start_prb [13387,13399]
                call_argument [13401,13419]
                    member_expression: pi.mintable_rounds [13401,13419]
                call_argument [13421,13442]
                    member_expression: pi.erc20_total_supply [13421,13442]
        return_statement [13462,13603]
            return: return [13462,13468]
            call_expression [13469,13602]
                member_expression: D4AReward.ToETH [13469,13484]
                call_argument [13498,13506]
                    identifier: settings [13498,13506]
                call_argument [13508,13522]
                    member_expression: pi.erc20_token [13508,13522]
                call_argument [13524,13535]
                    member_expression: pi.fee_pool [13524,13535]
                call_argument [13537,13548]
                    identifier: _project_id [13537,13548]
                call_argument [13550,13560]
                    member_expression: msg.sender [13550,13560]
                call_argument [13562,13565]
                    identifier: _to [13562,13565]
                call_argument [13567,13573]
                    identifier: amount [13567,13573]
                call_argument [13575,13592]
                    identifier: round_2_total_eth [13575,13592]
to
contract_body [595,23068]
at 70
===
move-tree
---
function_definition [11336,12384]
    function: function [11336,11344]
    identifier: claimCanvasReward [11345,11362]
    parameter [11363,11381]
        type_name: bytes32 [11363,11370]
        identifier: _canvas_id [11371,11381]
    visibility: public [11383,11389]
    modifier_invocation [11390,11402]
        identifier: nonReentrant [11390,11402]
    return_type_definition [11403,11420]
        returns: returns [11403,11410]
        parameter [11412,11419]
            type_name: uint256 [11412,11419]
    function_body [11421,12384]
        expression_statement [11431,11476]
            call_expression [11431,11475]
                identifier: require [11431,11438]
                call_argument [11439,11460]
                    unary_expression [11439,11460]
                        !: ! [11439,11440]
                        call_expression [11440,11460]
                            member_expression: settings.d4a_pause [11440,11458]
                call_argument [11462,11474]
                    string_literal [11462,11474]
                        string: "D4A Paused" [11462,11474]
        if_statement [11485,11559]
            if: if [11485,11487]
            member_expression: !all_canvases[_canvas_id].exist [11489,11520]
            revert_statement [11522,11559]
                revert: revert [11522,11528]
                identifier: D4ACanvasNotExist [11529,11546]
                revert_arguments [11546,11558]
                    call_argument [11547,11557]
                        identifier: _canvas_id [11547,11557]
        variable_declaration_statement [11568,11625]
            variable_declaration [11568,11586]
                type_name: bytes32 [11568,11575]
                identifier: project_id [11576,11586]
            affectation_operator: = [11587,11588]
            member_expression: all_canvases[_canvas_id].project_id [11589,11624]
        if_statement [11634,11709]
            if: if [11634,11636]
            member_expression: !all_projects[project_id].exist [11638,11669]
            revert_statement [11671,11709]
                revert: revert [11671,11677]
                identifier: D4AProjectNotExist [11678,11696]
                revert_arguments [11696,11708]
                    call_argument [11697,11707]
                        identifier: project_id [11697,11707]
        expression_statement [11719,11781]
            call_expression [11719,11780]
                identifier: require [11719,11726]
                call_argument [11727,11761]
                    unary_expression [11727,11761]
                        !: ! [11727,11728]
                        call_expression [11728,11761]
                            member_expression: settings.pause_status [11728,11749]
                            call_argument [11750,11760]
                                identifier: project_id [11750,11760]
                call_argument [11763,11779]
                    string_literal [11763,11779]
                        string: "Project Paused" [11763,11779]
        expression_statement [11790,11851]
            call_expression [11790,11850]
                identifier: require [11790,11797]
                call_argument [11798,11832]
                    unary_expression [11798,11832]
                        !: ! [11798,11799]
                        call_expression [11799,11832]
                            member_expression: settings.pause_status [11799,11820]
                            call_argument [11821,11831]
                                identifier: _canvas_id [11821,11831]
                call_argument [11834,11849]
                    string_literal [11834,11849]
                        string: "Canvas Paused" [11834,11849]
        variable_declaration_statement [11861,11923]
            variable_declaration [11861,11895]
                type_name: D4AProject.project_info [11861,11884]
                storage: storage [11885,11892]
                identifier: pi [11893,11895]
            affectation_operator: = [11896,11897]
            array_access [11898,11922]
                identifier: all_projects [11898,11910]
                identifier: project_id [11911,11921]
        expression_statement [11933,12087]
            call_expression [11933,12086]
                member_expression: all_rewards.issueTokenToCurrentRound [11933,11969]
                call_argument [11983,11991]
                    identifier: settings [11983,11991]
                call_argument [11993,12003]
                    identifier: project_id [11993,12003]
                call_argument [12005,12019]
                    member_expression: pi.erc20_token [12005,12019]
                call_argument [12021,12033]
                    member_expression: pi.start_prb [12021,12033]
                call_argument [12035,12053]
                    member_expression: pi.mintable_rounds [12035,12053]
                call_argument [12055,12076]
                    member_expression: pi.erc20_total_supply [12055,12076]
        variable_declaration_statement [12096,12272]
            variable_declaration [12096,12110]
                type_name: uint256 [12096,12103]
                identifier: amount [12104,12110]
            affectation_operator: = [12111,12112]
            call_expression [12113,12271]
                member_expression: all_rewards.claimCanvasReward [12113,12142]
                call_argument [12156,12164]
                    identifier: settings [12156,12164]
                call_argument [12166,12176]
                    identifier: project_id [12166,12176]
                call_argument [12178,12188]
                    identifier: _canvas_id [12178,12188]
                call_argument [12190,12204]
                    member_expression: pi.erc20_token [12190,12204]
                call_argument [12206,12218]
                    member_expression: pi.start_prb [12206,12218]
                call_argument [12220,12238]
                    member_expression: pi.mintable_rounds [12220,12238]
                call_argument [12240,12261]
                    member_expression: pi.erc20_total_supply [12240,12261]
        emit_statement [12281,12355]
            identifier: D4AClaimCanvasReward [12286,12306]
            call_argument [12307,12317]
                identifier: project_id [12307,12317]
            call_argument [12319,12329]
                identifier: _canvas_id [12319,12329]
            call_argument [12331,12345]
                member_expression: pi.erc20_token [12331,12345]
            call_argument [12347,12353]
                identifier: amount [12347,12353]
        return_statement [12364,12378]
            return: return [12364,12370]
            identifier: amount [12371,12377]
to
contract_body [595,23068]
at 68
===
move-tree
---
event_definition [11227,11330]
    identifier: D4AClaimCanvasReward [11233,11253]
    event_paramater [11254,11272]
        type_name: bytes32 [11254,11261]
        identifier: project_id [11262,11272]
    event_paramater [11274,11291]
        type_name: bytes32 [11274,11281]
        identifier: canvas_id [11282,11291]
    event_paramater [11293,11312]
        type_name: address [11293,11300]
        identifier: erc20_token [11301,11312]
    event_paramater [11314,11328]
        type_name: uint256 [11314,11321]
        identifier: amount [11322,11328]
to
contract_body [595,23068]
at 67
===
move-tree
---
using_directive [601,666]
    using: using [601,606]
    type_alias [607,617]
        identifier: D4AProject [607,617]
    for: for [618,621]
    type_name: mapping(bytes32 => D4AProject.project_info) [622,665]
to
contract_body [595,23068]
at 0
===
move-tree
---
function_definition [12390,12939]
    function: function [12390,12398]
    identifier: claimCanvasRewardWithETH [12399,12423]
    parameter [12424,12442]
        type_name: bytes32 [12424,12431]
        identifier: _canvas_id [12432,12442]
    visibility: public [12444,12450]
    return_type_definition [12451,12468]
        returns: returns [12451,12458]
        parameter [12460,12467]
            type_name: uint256 [12460,12467]
    function_body [12469,12939]
        variable_declaration_statement [12479,12532]
            variable_declaration [12479,12499]
                type_name: uint256 [12479,12486]
                identifier: erc20_amount [12487,12499]
            affectation_operator: = [12500,12501]
            call_expression [12502,12531]
                identifier: claimCanvasReward [12502,12519]
                call_argument [12520,12530]
                    identifier: _canvas_id [12520,12530]
        variable_declaration_statement [12542,12599]
            variable_declaration [12542,12560]
                type_name: bytes32 [12542,12549]
                identifier: project_id [12550,12560]
            affectation_operator: = [12561,12562]
            member_expression: all_canvases[_canvas_id].project_id [12563,12598]
        variable_declaration_statement [12608,12670]
            variable_declaration [12608,12642]
                type_name: D4AProject.project_info [12608,12631]
                storage: storage [12632,12639]
                identifier: pi [12640,12642]
            affectation_operator: = [12643,12644]
            array_access [12645,12669]
                identifier: all_projects [12645,12657]
                identifier: project_id [12658,12668]
        return_statement [12679,12933]
            return: return [12679,12685]
            call_expression [12686,12932]
                member_expression: D4AReward.claimCanvasRewardWithETH [12686,12720]
                call_argument [12734,12742]
                    identifier: settings [12734,12742]
                call_argument [12756,12766]
                    identifier: project_id [12756,12766]
                call_argument [12780,12790]
                    identifier: _canvas_id [12780,12790]
                call_argument [12804,12818]
                    member_expression: pi.erc20_token [12804,12818]
                call_argument [12832,12844]
                    identifier: erc20_amount [12832,12844]
                call_argument [12858,12891]
                    member_expression: all_projects[project_id].fee_pool [12858,12891]
                call_argument [12905,12922]
                    identifier: round_2_total_eth [12905,12922]
to
contract_body [595,23068]
at 69
===
move-tree
---
state_variable_declaration [1071,1101]
    type_name: uint256 [1071,1078]
    visibility: public [1079,1085]
    identifier: project_bitmap [1086,1100]
to
contract_body [595,23068]
at 8
===
move-tree
---
event_definition [1132,1277]
    identifier: NewProject [1138,1148]
    event_paramater [1158,1176]
        type_name: bytes32 [1158,1165]
        identifier: project_id [1166,1176]
    event_paramater [1178,1188]
        type_name: string [1178,1184]
        identifier: uri [1185,1188]
    event_paramater [1190,1206]
        type_name: address [1190,1197]
        identifier: fee_pool [1198,1206]
    event_paramater [1208,1227]
        type_name: address [1208,1215]
        identifier: erc20_token [1216,1227]
    event_paramater [1229,1249]
        type_name: address [1229,1236]
        identifier: erc721_token [1237,1249]
    event_paramater [1251,1270]
        type_name: uint256 [1251,1258]
        identifier: royalty_fee [1259,1270]
to
contract_body [595,23068]
at 9
===
move-tree
---
event_definition [5305,5412]
    identifier: D4AMintNFT [5311,5321]
    event_paramater [5322,5340]
        type_name: bytes32 [5322,5329]
        identifier: project_id [5330,5340]
    event_paramater [5342,5359]
        type_name: bytes32 [5342,5349]
        identifier: canvas_id [5350,5359]
    event_paramater [5361,5377]
        type_name: uint256 [5361,5368]
        identifier: token_id [5369,5377]
    event_paramater [5379,5395]
        type_name: string [5379,5385]
        identifier: token_uri [5386,5395]
    event_paramater [5397,5410]
        type_name: uint256 [5397,5404]
        identifier: price [5405,5410]
to
contract_body [595,23068]
at 47
===
move-tree
---
using_directive [671,733]
    using: using [671,676]
    type_alias [677,686]
        identifier: D4ACanvas [677,686]
    for: for [687,690]
    type_name: mapping(bytes32 => D4ACanvas.canvas_info) [691,732]
to
contract_body [595,23068]
at 1
===
move-tree
---
function_definition [9542,9732]
    function: function [9542,9550]
    identifier: getNFTTokenCanvas [9551,9568]
    parameter [9569,9588]
        type_name: bytes32 [9569,9576]
        identifier: _project_id [9577,9588]
    parameter [9590,9607]
        type_name: uint256 [9590,9597]
        identifier: _token_id [9598,9607]
    visibility: public [9609,9615]
    state_mutability [9616,9620]
        view: view [9616,9620]
    return_type_definition [9621,9638]
        returns: returns [9621,9628]
        parameter [9630,9637]
            type_name: bytes32 [9630,9637]
    function_body [9639,9732]
        return_statement [9649,9726]
            return: return [9649,9655]
            array_access [9656,9725]
                identifier: tokenid_2_canvas [9656,9672]
                call_expression [9673,9724]
                    identifier: keccak256 [9673,9682]
                    call_argument [9683,9723]
                        call_expression [9683,9723]
                            member_expression: abi.encodePacked [9683,9699]
                            call_argument [9700,9711]
                                identifier: _project_id [9700,9711]
                            call_argument [9713,9722]
                                identifier: _token_id [9713,9722]
to
contract_body [595,23068]
at 62

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [1448,1493]
    error: error [1448,1453]
    identifier: NotRole [1454,1461]
    error_parameter [1462,1474]
        type_name: bytes32 [1462,1469]
        identifier: role [1470,1474]
    error_parameter [1476,1491]
        type_name: address [1476,1483]
        identifier: account [1484,1491]
to
contract_body [595,23068]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [2629,2802]
    function: function [2629,2637]
    identifier: _checkRole [2638,2648]
    parameter [2649,2661]
        type_name: bytes32 [2649,2656]
        identifier: role [2657,2661]
    parameter [2663,2678]
        type_name: address [2663,2670]
        identifier: account [2671,2678]
    visibility: internal [2680,2688]
    state_mutability [2689,2693]
        view: view [2689,2693]
    virtual: virtual [2694,2701]
    function_body [2702,2802]
        if_statement [2712,2796]
            if: if [2712,2714]
            unary_expression [2716,2740]
                !: ! [2716,2717]
                call_expression [2717,2740]
                    identifier: _hasRole [2717,2725]
                    call_argument [2726,2730]
                        identifier: role [2726,2730]
                    call_argument [2732,2739]
                        identifier: account [2732,2739]
            block_statement [2742,2796]
                revert_statement [2756,2786]
                    revert: revert [2756,2762]
                    identifier: NotRole [2763,2770]
                    revert_arguments [2770,2785]
                        call_argument [2771,2775]
                            identifier: role [2771,2775]
                        call_argument [2777,2784]
                            identifier: account [2777,2784]
to
contract_body [595,23068]
at 15

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [2808,2985]
    function: function [2808,2816]
    identifier: _hasRole [2817,2825]
    parameter [2826,2838]
        type_name: bytes32 [2826,2833]
        identifier: role [2834,2838]
    parameter [2840,2855]
        type_name: address [2840,2847]
        identifier: account [2848,2855]
    visibility: internal [2857,2865]
    state_mutability [2866,2870]
        view: view [2866,2870]
    virtual: virtual [2871,2878]
    return_type_definition [2879,2893]
        returns: returns [2879,2886]
        parameter [2888,2892]
            type_name: bool [2888,2892]
    function_body [2894,2985]
        return_statement [2904,2979]
            return: return [2904,2910]
            call_expression [2911,2978]
                member_expression: IAccessControlUpgradeable(address(settings)).hasRole [2911,2963]
                call_argument [2964,2968]
                    identifier: role [2964,2968]
                call_argument [2970,2977]
                    identifier: account [2970,2977]
to
contract_body [595,23068]
at 16

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [3242,3274]
    error: error [3242,3247]
    identifier: NotCaller [3248,3257]
    error_parameter [3258,3272]
        type_name: address [3258,3265]
        identifier: caller [3266,3272]
to
contract_body [595,23068]
at 19

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [3280,3364]
    modifier: modifier [3280,3288]
    identifier: onlyCaller [3289,3299]
    parameter [3300,3314]
        type_name: address [3300,3307]
        identifier: caller [3308,3314]
    function_body [3316,3364]
        expression_statement [3326,3347]
            call_expression [3326,3346]
                identifier: _checkCaller [3326,3338]
                call_argument [3339,3345]
                    identifier: caller [3339,3345]
        expression_statement [3356,3358]
            identifier: _ [3356,3357]
to
contract_body [595,23068]
at 20

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [3370,3513]
    function: function [3370,3378]
    identifier: _checkCaller [3379,3391]
    parameter [3392,3406]
        type_name: address [3392,3399]
        identifier: caller [3400,3406]
    visibility: internal [3408,3416]
    state_mutability [3417,3421]
        view: view [3417,3421]
    function_body [3422,3513]
        if_statement [3432,3507]
            if: if [3432,3434]
            binary_expression [3436,3456]
                identifier: caller [3436,3442]
                comparison_operator: != [3443,3445]
                member_expression: msg.sender [3446,3456]
            block_statement [3458,3507]
                revert_statement [3472,3497]
                    revert: revert [3472,3478]
                    identifier: NotCaller [3479,3488]
                    revert_arguments [3488,3496]
                        call_argument [3489,3495]
                            identifier: caller [3489,3495]
to
contract_body [595,23068]
at 21

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [3519,3590]
    modifier: modifier [3519,3527]
    identifier: d4aNotPaused [3528,3540]
    function_body [3543,3590]
        expression_statement [3553,3573]
            call_expression [3553,3572]
                identifier: _checkPauseStatus [3553,3570]
        expression_statement [3582,3584]
            identifier: _ [3582,3583]
to
contract_body [595,23068]
at 22

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [3596,3614]
    error: error [3596,3601]
    identifier: D4APaused [3602,3611]
to
contract_body [595,23068]
at 23

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [3754,3834]
    modifier: modifier [3754,3762]
    identifier: notPaused [3763,3772]
    parameter [3773,3783]
        type_name: bytes32 [3773,3780]
        identifier: id [3781,3783]
    function_body [3785,3834]
        expression_statement [3795,3817]
            call_expression [3795,3816]
                identifier: _checkPauseStatus [3795,3812]
                call_argument [3813,3815]
                    identifier: id [3813,3815]
        expression_statement [3826,3828]
            identifier: _ [3826,3827]
to
contract_body [595,23068]
at 25

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [3840,3865]
    error: error [3840,3845]
    identifier: Paused [3846,3852]
    error_parameter [3853,3863]
        type_name: bytes32 [3853,3860]
        identifier: id [3861,3863]
to
contract_body [595,23068]
at 26

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [3871,4013]
    function: function [3871,3879]
    identifier: _checkPauseStatus [3880,3897]
    parameter [3898,3908]
        type_name: bytes32 [3898,3905]
        identifier: id [3906,3908]
    visibility: internal [3910,3918]
    state_mutability [3919,3923]
        view: view [3919,3923]
    function_body [3924,4013]
        if_statement [3934,4007]
            if: if [3934,3936]
            call_expression [3938,3963]
                member_expression: settings.pause_status [3938,3959]
                call_argument [3960,3962]
                    identifier: id [3960,3962]
            block_statement [3965,4007]
                revert_statement [3979,3997]
                    revert: revert [3979,3985]
                    identifier: Paused [3986,3992]
                    revert_arguments [3992,3996]
                        call_argument [3993,3995]
                            identifier: id [3993,3995]
to
contract_body [595,23068]
at 27

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [4019,4053]
    error: error [4019,4024]
    identifier: UriAlreadyExist [4025,4040]
    error_parameter [4041,4051]
        type_name: string [4041,4047]
        identifier: uri [4048,4051]
to
contract_body [595,23068]
at 28

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [4059,4089]
    error: error [4059,4064]
    identifier: UriNotExist [4065,4076]
    error_parameter [4077,4087]
        type_name: string [4077,4083]
        identifier: uri [4084,4087]
to
contract_body [595,23068]
at 29

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [4095,4181]
    modifier: modifier [4095,4103]
    identifier: uriExist [4104,4112]
    parameter [4113,4132]
        type_name: string [4113,4119]
        calldata: calldata [4120,4128]
        identifier: uri [4129,4132]
    function_body [4134,4181]
        expression_statement [4144,4164]
            call_expression [4144,4163]
                identifier: _checkUriExist [4144,4158]
                call_argument [4159,4162]
                    identifier: uri [4159,4162]
        expression_statement [4173,4175]
            identifier: _ [4173,4174]
to
contract_body [595,23068]
at 30

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [4187,4279]
    modifier: modifier [4187,4195]
    identifier: uriNotExist [4196,4207]
    parameter [4208,4227]
        type_name: string [4208,4214]
        calldata: calldata [4215,4223]
        identifier: uri [4224,4227]
    function_body [4229,4279]
        expression_statement [4239,4262]
            call_expression [4239,4261]
                identifier: _checkUriNotExist [4239,4256]
                call_argument [4257,4260]
                    identifier: uri [4257,4260]
        expression_statement [4271,4273]
            identifier: _ [4271,4272]
to
contract_body [595,23068]
at 31

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [4285,4422]
    function: function [4285,4293]
    identifier: _uriExist [4294,4303]
    parameter [4304,4323]
        type_name: string [4304,4310]
        calldata: calldata [4311,4319]
        identifier: uri [4320,4323]
    visibility: internal [4325,4333]
    state_mutability [4334,4338]
        view: view [4334,4338]
    return_type_definition [4339,4353]
        returns: returns [4339,4346]
        parameter [4348,4352]
            type_name: bool [4348,4352]
    function_body [4354,4422]
        return_statement [4364,4416]
            return: return [4364,4370]
            array_access [4371,4415]
                identifier: uri_exists [4371,4381]
                call_expression [4382,4414]
                    identifier: keccak256 [4382,4391]
                    call_argument [4392,4413]
                        call_expression [4392,4413]
                            member_expression: abi.encodePacked [4392,4408]
                            call_argument [4409,4412]
                                identifier: uri [4409,4412]
to
contract_body [595,23068]
at 32

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [4428,4572]
    function: function [4428,4436]
    identifier: _checkUriExist [4437,4451]
    parameter [4452,4471]
        type_name: string [4452,4458]
        calldata: calldata [4459,4467]
        identifier: uri [4468,4471]
    visibility: internal [4473,4481]
    state_mutability [4482,4486]
        view: view [4482,4486]
    function_body [4487,4572]
        if_statement [4497,4566]
            if: if [4497,4499]
            unary_expression [4501,4516]
                !: ! [4501,4502]
                call_expression [4502,4516]
                    identifier: _uriExist [4502,4511]
                    call_argument [4512,4515]
                        identifier: uri [4512,4515]
            block_statement [4518,4566]
                revert_statement [4532,4556]
                    revert: revert [4532,4538]
                    identifier: UriNotExist [4539,4550]
                    revert_arguments [4550,4555]
                        call_argument [4551,4554]
                            identifier: uri [4551,4554]
to
contract_body [595,23068]
at 33

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [4578,4728]
    function: function [4578,4586]
    identifier: _checkUriNotExist [4587,4604]
    parameter [4605,4624]
        type_name: string [4605,4611]
        calldata: calldata [4612,4620]
        identifier: uri [4621,4624]
    visibility: internal [4626,4634]
    state_mutability [4635,4639]
        view: view [4635,4639]
    function_body [4640,4728]
        if_statement [4650,4722]
            if: if [4650,4652]
            call_expression [4654,4668]
                identifier: _uriExist [4654,4663]
                call_argument [4664,4667]
                    identifier: uri [4664,4667]
            block_statement [4670,4722]
                revert_statement [4684,4712]
                    revert: revert [4684,4690]
                    identifier: UriAlreadyExist [4691,4706]
                    revert_arguments [4706,4711]
                        call_argument [4707,4710]
                            identifier: uri [4707,4710]
to
contract_body [595,23068]
at 34

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [5544,5569]
    error: error [5544,5549]
    identifier: DaoIndexTooLarge [5550,5566]
to
contract_body [595,23068]
at 36

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [5574,5603]
    error: error [5574,5579]
    identifier: DaoIndexAlreadyExist [5580,5600]
to
contract_body [595,23068]
at 37

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [7023,7043]
    error: error [7023,7028]
    identifier: DaoNotExist [7029,7040]
to
contract_body [595,23068]
at 40

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [7048,7071]
    error: error [7048,7053]
    identifier: CanvasNotExist [7054,7068]
to
contract_body [595,23068]
at 41

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [7077,7159]
    modifier: modifier [7077,7085]
    identifier: daoExist [7086,7094]
    parameter [7095,7108]
        type_name: bytes32 [7095,7102]
        identifier: daoId [7103,7108]
    function_body [7110,7159]
        expression_statement [7120,7142]
            call_expression [7120,7141]
                identifier: _checkDaoExist [7120,7134]
                call_argument [7135,7140]
                    identifier: daoId [7135,7140]
        expression_statement [7151,7153]
            identifier: _ [7151,7152]
to
contract_body [595,23068]
at 42

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [7165,7287]
    function: function [7165,7173]
    identifier: _checkDaoExist [7174,7188]
    parameter [7189,7202]
        type_name: bytes32 [7189,7196]
        identifier: daoId [7197,7202]
    visibility: internal [7204,7212]
    state_mutability [7213,7217]
        view: view [7213,7217]
    function_body [7218,7287]
        if_statement [7228,7281]
            if: if [7228,7230]
            member_expression: !all_projects[daoId].exist [7232,7258]
            revert_statement [7260,7281]
                revert: revert [7260,7266]
                identifier: DaoNotExist [7267,7278]
                revert_arguments [7278,7280]
to
contract_body [595,23068]
at 43

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [7293,7387]
    modifier: modifier [7293,7301]
    identifier: canvasExist [7302,7313]
    parameter [7314,7330]
        type_name: bytes32 [7314,7321]
        identifier: canvasId [7322,7330]
    function_body [7332,7387]
        expression_statement [7342,7370]
            call_expression [7342,7369]
                identifier: _checkCanvasExist [7342,7359]
                call_argument [7360,7368]
                    identifier: canvasId [7360,7368]
        expression_statement [7379,7381]
            identifier: _ [7379,7380]
to
contract_body [595,23068]
at 44

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [7393,7527]
    function: function [7393,7401]
    identifier: _checkCanvasExist [7402,7419]
    parameter [7420,7436]
        type_name: bytes32 [7420,7427]
        identifier: canvasId [7428,7436]
    visibility: internal [7438,7446]
    state_mutability [7447,7451]
        view: view [7447,7451]
    function_body [7452,7527]
        if_statement [7462,7521]
            if: if [7462,7464]
            member_expression: !all_canvases[canvasId].exist [7466,7495]
            revert_statement [7497,7521]
                revert: revert [7497,7503]
                identifier: CanvasNotExist [7504,7518]
                revert_arguments [7518,7520]
to
contract_body [595,23068]
at 45

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [8322,8349]
    error: error [8322,8327]
    identifier: NftExceedMaxAmount [8328,8346]
to
contract_body [595,23068]
at 48

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [8355,8375]
    error: error [8355,8360]
    identifier: PriceTooLow [8361,8372]
to
contract_body [595,23068]
at 49

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [11781,11859]
    struct: struct [11781,11787]
    identifier: MintNftInfo [11788,11799]
    struct_member [11810,11826]
        type_name: string [11810,11816]
        identifier: tokenUri [11817,11825]
    struct_member [11835,11853]
        type_name: uint256 [11835,11842]
        identifier: flatPrice [11843,11852]
to
contract_body [595,23068]
at 52

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [11865,12185]
    struct: struct [11865,11871]
    identifier: MintVars [11872,11880]
    struct_member [11891,11905]
        type_name: uint32 [11891,11897]
        identifier: length [11898,11904]
    struct_member [11914,11935]
        type_name: uint256 [11914,11921]
        identifier: currentRound [11922,11934]
    struct_member [11944,11975]
        type_name: uint256 [11944,11951]
        identifier: nftPriceMultiplyFactor [11952,11974]
    struct_member [11984,12014]
        type_name: uint256 [11984,11991]
        identifier: priceChangeBasisPoint [11992,12013]
    struct_member [12023,12037]
        type_name: uint256 [12023,12030]
        identifier: price [12031,12036]
    struct_member [12046,12068]
        type_name: uint256 [12046,12053]
        identifier: daoTotalShare [12054,12067]
    struct_member [12077,12096]
        type_name: uint256 [12077,12084]
        identifier: totalPrice [12085,12095]
    struct_member [12105,12120]
        type_name: uint256 [12105,12112]
        identifier: daoFee [12113,12119]
    struct_member [12129,12149]
        type_name: uint256 [12129,12136]
        identifier: protocolFee [12137,12148]
    struct_member [12158,12179]
        type_name: uint256 [12158,12165]
        identifier: initialPrice [12166,12178]
to
contract_body [595,23068]
at 53

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [16773,17045]
    struct: struct [16773,16779]
    identifier: GetCanvasNextPriceVars [16780,16802]
    struct_member [16813,16827]
        type_name: bytes32 [16813,16820]
        identifier: daoId [16821,16826]
    struct_member [16836,16853]
        type_name: bytes32 [16836,16843]
        identifier: canvasId [16844,16852]
    struct_member [16862,16883]
        type_name: uint256 [16862,16869]
        identifier: currentRound [16870,16882]
    struct_member [16892,16914]
        type_name: uint256[] [16892,16901]
        identifier: floorPrices [16902,16913]
    struct_member [16923,16946]
        type_name: uint256 [16923,16930]
        identifier: floorPriceRank [16931,16945]
    struct_member [16955,16972]
        type_name: uint256 [16955,16962]
        identifier: startPrb [16963,16971]
    struct_member [16981,17012]
        type_name: uint256 [16981,16988]
        identifier: nftPriceMultiplyFactor [16989,17011]
    struct_member [17021,17039]
        type_name: uint256 [17021,17028]
        identifier: flatPrice [17029,17038]
to
contract_body [595,23068]
at 55

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [17051,17549]
    function: function [17051,17059]
    identifier: _getCanvasNextPrice [17060,17079]
    parameter [17080,17114]
        type_name: GetCanvasNextPriceVars [17080,17102]
        memory: memory [17103,17109]
        identifier: vars [17110,17114]
    visibility: internal [17116,17124]
    state_mutability [17125,17129]
        view: view [17125,17129]
    return_type_definition [17130,17153]
        returns: returns [17130,17137]
        parameter [17139,17152]
            type_name: uint256 [17139,17146]
            identifier: price [17147,17152]
    function_body [17154,17549]
        if_statement [17164,17543]
            if: if [17164,17166]
            binary_expression [17168,17187]
                member_expression: vars.flatPrice [17168,17182]
                comparison_operator: == [17183,17185]
                number_literal: 0 [17186,17187]
            block_statement [17189,17490]
                expression_statement [17203,17480]
                    assignment_expression [17203,17479]
                        identifier: price [17203,17208]
                        affectation_operator: = [17209,17210]
                        call_expression [17211,17479]
                            member_expression: all_prices[vars.daoId].getCanvasNextPrice [17211,17252]
                            call_argument [17270,17287]
                                member_expression: vars.currentRound [17270,17287]
                            call_argument [17305,17321]
                                member_expression: vars.floorPrices [17305,17321]
                            call_argument [17339,17358]
                                member_expression: vars.floorPriceRank [17339,17358]
                            call_argument [17376,17389]
                                member_expression: vars.startPrb [17376,17389]
                            call_argument [17407,17420]
                                member_expression: vars.canvasId [17407,17420]
                            call_argument [17438,17465]
                                member_expression: vars.nftPriceMultiplyFactor [17438,17465]
            else: else [17491,17495]
            block_statement [17496,17543]
                expression_statement [17510,17533]
                    assignment_expression [17510,17532]
                        identifier: price [17510,17515]
                        affectation_operator: = [17516,17517]
                        member_expression: vars.flatPrice [17518,17532]
to
contract_body [595,23068]
at 56

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [18104,18127]
    error: error [18104,18109]
    identifier: NotEnoughEther [18110,18124]
to
contract_body [595,23068]
at 58

New cluster:
Unknown cluster type
------------
===
insert-tree
---
error_declaration [18132,18158]
    error: error [18132,18137]
    identifier: EthTransferFailed [18138,18155]
to
contract_body [595,23068]
at 59

New cluster:
MOVE from using_directive [738,785]
------------
===
move-tree
---
type_alias [744,752]
    identifier: D4APrice [744,752]
to
using_directive [738,785]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [1897,1909]
    type_name: bytes32 [1897,1904]
    identifier: role [1905,1909]
to
modifier_definition [1879,1955]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [2267,2279]
    type_name: bytes32 [2267,2274]
    identifier: role [2275,2279]
to
function_definition [2247,2348]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [2290,2294]
    view: view [2290,2294]
to
function_definition [2247,2348]
at 4

New cluster:
MOVE from function_definition [2991,3110]
------------
===
move-tree
---
parameter [1493,1513]
    type_name: uint256 [1493,1500]
    identifier: _project_num [1501,1513]
to
function_definition [2991,3110]
at 2

New cluster:
===
insert-node
---
modifier_invocation [3165,3185]
to
function_definition [1721,1970]
at 4
------------
===
insert-node
---
modifier_invocation [3165,3185]
to
function_definition [1721,1970]
at 4

New cluster:
===
insert-node
---
function_body [3186,3236]
to
function_definition [1721,1970]
at 5
------------
===
insert-node
---
function_body [3186,3236]
to
function_definition [1721,1970]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [3658,3662]
    view: view [3658,3662]
to
function_definition [3620,3748]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [5080,5092]
    identifier: d4aNotPaused [5080,5092]
to
function_definition [2125,2956]
at 13

New cluster:
===
insert-node
---
modifier_invocation [5101,5126]
to
function_definition [2125,2956]
at 14
------------
===
insert-node
---
modifier_invocation [5101,5126]
to
function_definition [2125,2956]
at 14
===
insert-node
---
identifier: uriNotExist [5101,5112]
to
modifier_invocation [5101,5126]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [5992,6004]
    identifier: d4aNotPaused [5992,6004]
to
function_definition [2962,4062]
at 14

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [7631,7643]
    identifier: d4aNotPaused [7631,7643]
to
function_definition [4326,5299]
at 5

New cluster:
===
insert-node
---
modifier_invocation [7652,7673]
to
function_definition [4326,5299]
at 6
------------
===
insert-node
---
modifier_invocation [7652,7673]
to
function_definition [4326,5299]
at 6

New cluster:
===
insert-node
---
modifier_invocation [7682,7704]
to
function_definition [4326,5299]
at 7
------------
===
insert-node
---
modifier_invocation [7682,7704]
to
function_definition [4326,5299]
at 7

New cluster:
===
insert-node
---
modifier_invocation [7713,7737]
to
function_definition [4326,5299]
at 8
------------
===
insert-node
---
modifier_invocation [7713,7737]
to
function_definition [4326,5299]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [8399,8415]
    type_name: bytes32 [8399,8406]
    identifier: canvasId [8407,8415]
to
function_definition [8381,11412]
at 2

New cluster:
MOVE from function_definition [8381,11412]
------------
===
move-tree
---
parameter [5456,5482]
    type_name: string [5456,5462]
    calldata: calldata [5463,5471]
    identifier: _token_uri [5472,5482]
to
function_definition [8381,11412]
at 3
===
move-tree
---
return_type_definition [5530,5556]
    returns: returns [5530,5537]
    parameter [5539,5555]
        type_name: uint256 [5539,5546]
        identifier: token_id [5547,5555]
to
function_definition [8381,11412]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [8445,8462]
    type_name: uint256 [8445,8452]
    identifier: flatPrice [8453,8462]
to
function_definition [8381,11412]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11449,11469]
    type_name: uint256 [11449,11456]
    identifier: currentRound [11457,11469]
to
function_definition [11418,11775]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11479,11492]
    type_name: bytes32 [11479,11486]
    identifier: daoId [11487,11492]
to
function_definition [11418,11775]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11502,11518]
    type_name: bytes32 [11502,11509]
    identifier: canvasId [11510,11518]
to
function_definition [11418,11775]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11528,11541]
    type_name: uint256 [11528,11535]
    identifier: price [11536,11541]
to
function_definition [11418,11775]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11551,11568]
    type_name: uint256 [11551,11558]
    identifier: flatPrice [11559,11568]
to
function_definition [11418,11775]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11578,11608]
    type_name: uint256 [11578,11585]
    identifier: nftPriceMultiplyFactor [11586,11608]
to
function_definition [11418,11775]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [12209,12222]
    type_name: bytes32 [12209,12216]
    identifier: daoId [12217,12222]
to
function_definition [12191,16767]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [12224,12240]
    type_name: bytes32 [12224,12231]
    identifier: canvasId [12232,12240]
to
function_definition [12191,16767]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [12242,12277]
    type_name: MintNftInfo[] [12242,12255]
    calldata: calldata [12256,12264]
    identifier: mintNftInfos [12265,12277]
to
function_definition [12191,16767]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [12304,12484]
    returns: returns [12304,12311]
    parameter [12458,12474]
        type_name: uint256[] [12458,12467]
        memory: memory [12468,12474]
to
function_definition [12191,16767]
at 6

New cluster:
MOVE from function_definition [17555,18098]
------------
===
move-tree
---
parameter [6878,6897]
    type_name: bytes32 [6878,6885]
    identifier: _project_id [6886,6897]
to
function_definition [17555,18098]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [17599,17615]
    type_name: bytes32 [17599,17606]
    identifier: canvasId [17607,17615]
to
function_definition [17555,18098]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [17617,17631]
    type_name: uint256 [17617,17624]
    identifier: daoFee [17625,17631]
to
function_definition [17555,18098]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [17633,17652]
    type_name: uint256 [17633,17640]
    identifier: protocolFee [17641,17652]
to
function_definition [17555,18098]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [17654,17667]
    type_name: uint256 [17654,17661]
    identifier: price [17662,17667]
to
function_definition [17555,18098]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18192,18215]
    type_name: address [18192,18199]
    identifier: protocolFeePool [18200,18215]
to
function_definition [18164,18879]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18225,18243]
    type_name: address [18225,18232]
    identifier: daoFeePool [18233,18243]
to
function_definition [18164,18879]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18253,18272]
    type_name: address [18253,18260]
    identifier: canvasOwner [18261,18272]
to
function_definition [18164,18879]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18282,18295]
    type_name: uint256 [18282,18289]
    identifier: price [18290,18295]
to
function_definition [18164,18879]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18305,18321]
    type_name: uint256 [18305,18312]
    identifier: daoShare [18313,18321]
to
function_definition [18164,18879]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [18337,18382]
    returns: returns [18337,18344]
    parameter [18346,18360]
        type_name: uint256 [18346,18353]
        identifier: daoFee [18354,18360]
    parameter [18362,18381]
        type_name: uint256 [18362,18369]
        identifier: protocolFee [18370,18381]
to
function_definition [18164,18879]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18907,18917]
    type_name: address [18907,18914]
    identifier: to [18915,18917]
to
function_definition [18885,19082]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18919,18933]
    type_name: uint256 [18919,18926]
    identifier: amount [18927,18933]
to
function_definition [18885,19082]
at 3

New cluster:
===
insert-node
---
modifier_invocation [19614,19626]
to
function_definition [9970,10794]
at 5
------------
===
insert-node
---
modifier_invocation [19614,19626]
to
function_definition [9970,10794]
at 5

New cluster:
===
insert-node
---
modifier_invocation [19635,19657]
to
function_definition [9970,10794]
at 6
------------
===
insert-node
---
modifier_invocation [19635,19657]
to
function_definition [9970,10794]
at 6

New cluster:
===
insert-node
---
modifier_invocation [19666,19687]
to
function_definition [9970,10794]
at 7
------------
===
insert-node
---
modifier_invocation [19666,19687]
to
function_definition [9970,10794]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [20868,20880]
    identifier: d4aNotPaused [20868,20880]
to
function_definition [11336,12384]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [20889,20908]
    identifier: notPaused [20889,20898]
    call_argument [20899,20907]
        identifier: canvasId [20899,20907]
to
function_definition [11336,12384]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [20917,20938]
    identifier: canvasExist [20917,20928]
    call_argument [20929,20937]
        identifier: canvasId [20929,20937]
to
function_definition [11336,12384]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [22313,22325]
    identifier: d4aNotPaused [22313,22325]
to
function_definition [12945,13609]
at 7

New cluster:
===
insert-node
---
modifier_invocation [22334,22356]
to
function_definition [12945,13609]
at 8
------------
===
insert-node
---
identifier: notPaused [22334,22343]
to
modifier_invocation [22334,22356]
at 0
===
insert-node
---
modifier_invocation [22334,22356]
to
function_definition [12945,13609]
at 8

New cluster:
MOVE from function_definition [22786,23066]
------------
===
move-tree
---
parameter [13656,13669]
    type_name: bytes32 [13656,13663]
    identifier: daoId [13664,13669]
to
function_definition [22786,23066]
at 2
===
move-tree
---
parameter [13671,13704]
    type_name: uint256 [13671,13678]
    identifier: newNftPriceMultiplyFactor [13679,13704]
to
function_definition [22786,23066]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [1921,1938]
    call_expression [1921,1937]
        identifier: _checkRole [1921,1931]
        call_argument [1932,1936]
            identifier: role [1932,1936]
to
function_body [1911,1955]
at 0

New cluster:
MOVE from function_body [1911,1955]
------------
===
move-tree
---
expression_statement [2111,2113]
    identifier: _ [2111,2112]
to
function_body [1911,1955]
at 1

New cluster:
MOVE from modifier_invocation [3046,3066]
------------
===
move-tree
---
call_argument [1597,1607]
    type_cast_expression [1597,1607]
        primitive_type: bytes32 [1597,1604]
        call_argument [1605,1606]
            number_literal: 0 [1605,1606]
to
modifier_invocation [3046,3066]
at 1
===
move-tree
---
call_argument [1609,1619]
    member_expression: msg.sender [1609,1619]
to
call_expression [14823,14897]
at 1

New cluster:
MOVE from function_body [3067,3110]
------------
===
move-tree
---
expression_statement [1682,1709]
    assignment_expression [1682,1708]
        identifier: project_num [1682,1693]
        affectation_operator: = [1694,1695]
        identifier: _project_num [1696,1708]
to
function_body [3067,3110]
at 0

New cluster:
UPDATE from succ to onlyRole
------------
===
update-node
---
identifier: succ [1785,1789]
replace succ by onlyRole

New cluster:
MOVE from modifier_invocation [3165,3185]
------------
===
move-tree
---
identifier: succ [1785,1789]
to
modifier_invocation [3165,3185]
at 0

New cluster:
MOVE from modifier_invocation [3165,3185]
------------
===
move-tree
---
call_argument [1845,1855]
    type_cast_expression [1845,1855]
        primitive_type: bytes32 [1845,1852]
        call_argument [1853,1854]
            number_literal: 0 [1853,1854]
to
modifier_invocation [3165,3185]
at 1
===
move-tree
---
call_argument [1857,1867]
    member_expression: msg.sender [1857,1867]
to
call_expression [2313,2341]
at 2

New cluster:
MOVE from function_body [3186,3236]
------------
===
move-tree
---
expression_statement [1930,1964]
    assignment_expression [1930,1963]
        identifier: settings [1930,1938]
        affectation_operator: = [1939,1940]
        call_expression [1941,1963]
            identifier: ID4ASetting [1941,1952]
            call_argument [1953,1962]
                identifier: _settings [1953,1962]
to
function_body [3186,3236]
at 0

New cluster:
===
insert-node
---
calldata: calldata [4930,4938]
to
parameter [2314,2340]
at 1
------------
===
insert-node
---
calldata: calldata [4930,4938]
to
parameter [2314,2340]
at 1

New cluster:
UPDATE from onlyProjectProxy to onlyCaller
------------
===
update-node
---
identifier: onlyProjectProxy [2384,2400]
replace onlyProjectProxy by onlyCaller
===
update-node
---
identifier: onlyProjectProxy [3258,3274]
replace onlyProjectProxy by onlyCaller

New cluster:
MOVE from modifier_invocation [2384,2400]
------------
===
move-tree
---
call_argument [2022,2060]
    binary_expression [2022,2060]
        member_expression: msg.sender [2022,2032]
        comparison_operator: == [2033,2035]
        call_expression [2036,2060]
            member_expression: settings.project_proxy [2036,2058]
to
modifier_invocation [2384,2400]
at 1

New cluster:
MOVE from modifier_invocation [5101,5126]
------------
===
move-tree
---
call_argument [2541,2553]
    identifier: _project_uri [2541,2553]
to
modifier_invocation [5101,5126]
at 1

New cluster:
===
insert-node
---
calldata: calldata [5810,5818]
to
parameter [3156,3182]
at 1
------------
===
insert-node
---
calldata: calldata [5810,5818]
to
parameter [3156,3182]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [5958,5982]
    call_expression [5958,5982]
        member_expression: settings.project_proxy [5958,5980]
to
modifier_invocation [3258,3274]
at 1

New cluster:
===
insert-node
---
block_statement [6119,6175]
to
function_body [3304,4062]
at 0
------------
===
insert-node
---
block_statement [6119,6175]
to
function_body [3304,4062]
at 0

New cluster:
===
insert-node
---
block_statement [6184,6377]
to
function_body [3304,4062]
at 1
------------
===
insert-node
---
if: if [6198,6200]
to
if_statement [6198,6273]
at 0
===
insert-node
---
if: if [6286,6288]
to
if_statement [6286,6367]
at 0
===
insert-node
---
revert_statement [6247,6273]
to
if_statement [6198,6273]
at 2
===
insert-node
---
revert: revert [6247,6253]
to
revert_statement [6247,6273]
at 0
===
insert-node
---
block_statement [6184,6377]
to
function_body [3304,4062]
at 1
===
insert-node
---
if_statement [6286,6367]
to
block_statement [6184,6377]
at 1
===
insert-node
---
if_statement [6198,6273]
to
block_statement [6184,6377]
at 0
===
insert-node
---
revert_arguments [6270,6272]
to
revert_statement [6247,6273]
at 2

New cluster:
===
insert-node
---
block_statement [6387,6525]
to
function_body [3304,4062]
at 2
------------
===
insert-node
---
block_statement [6387,6525]
to
function_body [3304,4062]
at 2

New cluster:
===
insert-node
---
block_statement [6534,6852]
to
function_body [3304,4062]
at 3
------------
===
insert-node
---
block_statement [6534,6852]
to
function_body [3304,4062]
at 3

New cluster:
UPDATE from D4AProjectNotExist to daoExist
------------
===
update-node
---
identifier: D4AProjectNotExist [10243,10261]
replace D4AProjectNotExist by daoExist
===
update-node
---
identifier: D4AProjectNotExist [4545,4563]
replace D4AProjectNotExist by daoExist

New cluster:
MOVE from modifier_invocation [7652,7673]
------------
===
move-tree
---
identifier: D4AProjectNotExist [4545,4563]
to
modifier_invocation [7652,7673]
at 0

New cluster:
MOVE from modifier_invocation [7652,7673]
------------
===
move-tree
---
call_argument [10262,10273]
    identifier: _project_id [10262,10273]
to
modifier_invocation [7652,7673]
at 1

New cluster:
UPDATE from require to notPaused
------------
===
update-node
---
identifier: require [4586,4593]
replace require by notPaused
===
update-node
---
identifier: require [10126,10133]
replace require by notPaused

New cluster:
MOVE from modifier_invocation [7682,7704]
------------
===
move-tree
---
identifier: require [4586,4593]
to
modifier_invocation [7682,7704]
at 0

New cluster:
MOVE from modifier_invocation [7682,7704]
------------
===
move-tree
---
call_argument [4564,4575]
    identifier: _project_id [4564,4575]
to
modifier_invocation [7682,7704]
at 1

New cluster:
UPDATE from uri_exists to uriNotExist
------------
===
update-node
---
identifier: uri_exists [4668,4678]
replace uri_exists by uriNotExist

New cluster:
MOVE from modifier_invocation [7713,7737]
------------
===
move-tree
---
identifier: uri_exists [4668,4678]
to
modifier_invocation [7713,7737]
at 0

New cluster:
MOVE from modifier_invocation [7713,7737]
------------
===
move-tree
---
call_argument [4706,4717]
    identifier: _canvas_uri [4706,4717]
to
modifier_invocation [7713,7737]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [8691,8860]
    expression_statement [8705,8725]
        call_expression [8705,8724]
            identifier: _checkPauseStatus [8705,8722]
    expression_statement [8738,8766]
        call_expression [8738,8765]
            identifier: _checkPauseStatus [8738,8755]
            call_argument [8756,8764]
                identifier: canvasId [8756,8764]
    expression_statement [8779,8807]
        call_expression [8779,8806]
            identifier: _checkCanvasExist [8779,8796]
            call_argument [8797,8805]
                identifier: canvasId [8797,8805]
    expression_statement [8820,8850]
        call_expression [8820,8849]
            identifier: _checkUriNotExist [8820,8837]
            call_argument [8838,8848]
                identifier: _token_uri [8838,8848]
to
function_body [8681,11412]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [8869,8919]
    variable_declaration [8869,8882]
        type_name: bytes32 [8869,8876]
        identifier: daoId [8877,8882]
    affectation_operator: = [8883,8884]
    member_expression: all_canvases[canvasId].project_id [8885,8918]
to
function_body [8681,11412]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [8929,9026]
    if: if [8929,8931]
    binary_expression [8933,9003]
        binary_expression [8933,8947]
            identifier: flatPrice [8933,8942]
            comparison_operator: != [8943,8945]
            number_literal: 0 [8946,8947]
        logical_operator: && [8948,8950]
        binary_expression [8951,9003]
            identifier: flatPrice [8951,8960]
            comparison_operator: < [8961,8962]
            call_expression [8963,9003]
                member_expression: all_projects.getProjectFloorPrice [8963,8996]
                call_argument [8997,9002]
                    identifier: daoId [8997,9002]
    revert_statement [9005,9026]
        revert: revert [9005,9011]
        identifier: PriceTooLow [9012,9023]
        revert_arguments [9023,9025]
to
function_body [8681,11412]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9035,9060]
    call_expression [9035,9059]
        identifier: _checkPauseStatus [9035,9052]
        call_argument [9053,9058]
            identifier: daoId [9053,9058]
to
function_body [8681,11412]
at 3

New cluster:
MOVE from block_statement [9524,9660]
------------
===
move-tree
---
variable_declaration_statement [6160,6225]
    variable_declaration [6160,6182]
        type_name: bytes32 [6160,6167]
        identifier: token_uri_hash [6168,6182]
    affectation_operator: = [6183,6184]
    call_expression [6185,6224]
        identifier: keccak256 [6185,6194]
        call_argument [6195,6223]
            call_expression [6195,6223]
                member_expression: abi.encodePacked [6195,6211]
                call_argument [6212,6222]
                    identifier: _token_uri [6212,6222]
to
block_statement [9524,9660]
at 0
===
move-tree
---
variable_declaration_statement [5771,5830]
    variable_declaration [5771,5805]
        type_name: D4AProject.project_info [5771,5794]
        storage: storage [5795,5802]
        identifier: pi [5803,5805]
    affectation_operator: = [5806,5807]
    array_access [5808,5829]
        identifier: all_projects [5808,5820]
        identifier: proj_id [5821,5828]
to
function_body [8681,11412]
at 4
===
move-tree
---
emit_statement [6769,6835]
    identifier: D4AMintNFT [6774,6784]
    call_argument [6785,6792]
        identifier: proj_id [6785,6792]
    call_argument [6794,6804]
        identifier: _canvas_id [6794,6804]
    call_argument [6806,6814]
        identifier: token_id [6806,6814]
    call_argument [6816,6826]
        identifier: _token_uri [6816,6826]
    call_argument [6828,6833]
        identifier: price [6828,6833]
to
function_body [8681,11412]
at 26
===
move-tree
---
expression_statement [6506,6578]
    assignment_expression [6506,6577]
        identifier: token_id [6506,6514]
        affectation_operator: = [6515,6516]
        call_expression [6517,6577]
            member_expression: ID4AERC721(pi.erc721_token).mintItem [6517,6553]
            call_argument [6554,6564]
                member_expression: msg.sender [6554,6564]
            call_argument [6566,6576]
                identifier: _token_uri [6566,6576]
to
function_body [8681,11412]
at 24
===
move-tree
---
expression_statement [6587,6603]
    update_expression [6587,6602]
        member_expression: pi.nft_supply [6587,6600]
        increment_operator: ++ [6600,6602]
to
block_statement [11130,11334]
at 0
===
move-tree
---
variable_declaration_statement [5839,5899]
    variable_declaration [5839,5871]
        type_name: D4ACanvas.canvas_info [5839,5860]
        storage: storage [5861,5868]
        identifier: ci [5869,5871]
    affectation_operator: = [5872,5873]
    array_access [5874,5898]
        identifier: all_canvases [5874,5886]
        identifier: _canvas_id [5887,5897]
to
function_body [8681,11412]
at 5
===
move-tree
---
expression_statement [6380,6414]
    assignment_expression [6380,6413]
        array_access [6380,6406]
            identifier: uri_exists [6380,6390]
            identifier: token_uri_hash [6391,6405]
        affectation_operator: = [6407,6408]
        boolean_literal: true [6409,6413]
to
block_statement [9524,9660]
at 1
===
move-tree
---
expression_statement [6612,6641]
    call_expression [6612,6640]
        member_expression: ci.nft_tokens.push [6612,6630]
        call_argument [6631,6639]
            identifier: token_id [6631,6639]
to
block_statement [11130,11334]
at 1
===
move-tree
---
expression_statement [6650,6672]
    update_expression [6650,6671]
        member_expression: ci.nft_token_number [6650,6669]
        increment_operator: ++ [6669,6671]
to
block_statement [11130,11334]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [9203,9271]
    if: if [9203,9205]
    binary_expression [9207,9241]
        member_expression: pi.nft_supply [9207,9220]
        comparison_operator: >= [9221,9223]
        member_expression: pi.max_nft_amount [9224,9241]
    revert_statement [9243,9271]
        revert: revert [9243,9249]
        identifier: NftExceedMaxAmount [9250,9268]
        revert_arguments [9268,9270]
to
function_body [8681,11412]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [9281,9302]
    variable_declaration [9281,9301]
        type_name: MintVars [9281,9289]
        memory: memory [9290,9296]
        identifier: vars [9297,9301]
to
function_body [8681,11412]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9311,9361]
    assignment_expression [9311,9360]
        member_expression: vars.currentRound [9311,9328]
        affectation_operator: = [9329,9330]
        call_expression [9331,9360]
            member_expression: settings.PRB().currentRound [9331,9358]
to
function_body [8681,11412]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [9701,9753]
    variable_declaration [9701,9752]
        type_name: GetCanvasNextPriceVars [9701,9723]
        memory: memory [9724,9730]
        identifier: getCanvasNextPriceVar [9731,9752]
to
function_body [8681,11412]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9762,9798]
    assignment_expression [9762,9797]
        member_expression: getCanvasNextPriceVar.daoId [9762,9789]
        affectation_operator: = [9790,9791]
        identifier: daoId [9792,9797]
to
function_body [8681,11412]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9807,9849]
    assignment_expression [9807,9848]
        member_expression: getCanvasNextPriceVar.canvasId [9807,9837]
        affectation_operator: = [9838,9839]
        identifier: canvasId [9840,9848]
to
function_body [8681,11412]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9858,9913]
    assignment_expression [9858,9912]
        member_expression: getCanvasNextPriceVar.currentRound [9858,9892]
        affectation_operator: = [9893,9894]
        member_expression: vars.currentRound [9895,9912]
to
function_body [8681,11412]
at 14

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9922,9974]
    assignment_expression [9922,9973]
        member_expression: getCanvasNextPriceVar.floorPrices [9922,9955]
        affectation_operator: = [9956,9957]
        member_expression: pi.floor_prices [9958,9973]
to
function_body [8681,11412]
at 15

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9983,10042]
    assignment_expression [9983,10041]
        member_expression: getCanvasNextPriceVar.floorPriceRank [9983,10019]
        affectation_operator: = [10020,10021]
        member_expression: pi.floor_price_rank [10022,10041]
to
function_body [8681,11412]
at 16

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [10051,10097]
    assignment_expression [10051,10096]
        member_expression: getCanvasNextPriceVar.startPrb [10051,10081]
        affectation_operator: = [10082,10083]
        member_expression: pi.start_prb [10084,10096]
to
function_body [8681,11412]
at 17

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [10106,10181]
    assignment_expression [10106,10180]
        member_expression: getCanvasNextPriceVar.nftPriceMultiplyFactor [10106,10150]
        affectation_operator: = [10151,10152]
        member_expression: vars.nftPriceMultiplyFactor [10153,10180]
to
function_body [8681,11412]
at 18

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [10190,10234]
    assignment_expression [10190,10233]
        member_expression: getCanvasNextPriceVar.flatPrice [10190,10221]
        affectation_operator: = [10222,10223]
        identifier: flatPrice [10224,10233]
to
function_body [8681,11412]
at 19

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [10954,11023]
    call_expression [10954,11022]
        identifier: _updateReward [10954,10967]
        call_argument [10968,10973]
            identifier: daoId [10968,10973]
        call_argument [10975,10983]
            identifier: canvasId [10975,10983]
        call_argument [10985,10996]
            member_expression: vars.daoFee [10985,10996]
        call_argument [10998,11014]
            member_expression: vars.protocolFee [10998,11014]
        call_argument [11016,11021]
            identifier: price [11016,11021]
to
function_body [8681,11412]
at 23

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [12499,12663]
    expression_statement [12513,12533]
        call_expression [12513,12532]
            identifier: _checkPauseStatus [12513,12530]
    expression_statement [12546,12571]
        call_expression [12546,12570]
            identifier: _checkPauseStatus [12546,12563]
            call_argument [12564,12569]
                identifier: daoId [12564,12569]
    expression_statement [12584,12612]
        call_expression [12584,12611]
            identifier: _checkCanvasExist [12584,12601]
            call_argument [12602,12610]
                identifier: canvasId [12602,12610]
    expression_statement [12625,12653]
        call_expression [12625,12652]
            identifier: _checkPauseStatus [12625,12642]
            call_argument [12643,12651]
                identifier: canvasId [12643,12651]
to
function_body [12489,16767]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [12673,12694]
    variable_declaration [12673,12693]
        type_name: MintVars [12673,12681]
        memory: memory [12682,12688]
        identifier: vars [12689,12693]
to
function_body [12489,16767]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [12703,12745]
    assignment_expression [12703,12744]
        member_expression: vars.length [12703,12714]
        affectation_operator: = [12715,12716]
        type_cast_expression [12717,12744]
            primitive_type: uint32 [12717,12723]
            call_argument [12724,12743]
                member_expression: mintNftInfos.length [12724,12743]
to
function_body [12489,16767]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [12754,13207]
    variable_declaration_statement [12768,12837]
        variable_declaration [12768,12793]
            type_name: uint256 [12768,12775]
            identifier: projectFloorPrice [12776,12793]
        affectation_operator: = [12794,12795]
        call_expression [12796,12836]
            member_expression: all_projects.getProjectFloorPrice [12796,12829]
            call_argument [12830,12835]
                identifier: daoId [12830,12835]
    for_statement [12850,13197]
        for: for [12850,12853]
        variable_declaration_statement [12855,12868]
            variable_declaration [12855,12863]
                type_name: uint32 [12855,12861]
                identifier: i [12862,12863]
            affectation_operator: = [12864,12865]
            number_literal: 0 [12866,12867]
        expression_statement [12869,12885]
            binary_expression [12869,12884]
                identifier: i [12869,12870]
                comparison_operator: < [12871,12872]
                member_expression: vars.length [12873,12884]
        block_statement [12887,13197]
            expression_statement [12905,12949]
                call_expression [12905,12948]
                    identifier: _checkUriNotExist [12905,12922]
                    call_argument [12923,12947]
                        member_expression: mintNftInfos[i].tokenUri [12923,12947]
            if_statement [12966,13112]
                if: if [12966,12968]
                binary_expression [12970,13049]
                    member_expression: mintNftInfos[i].flatPrice != 0 && mintNftInfos[i].flatPrice [12970,13029]
                    comparison_operator: < [13030,13031]
                    identifier: projectFloorPrice [13032,13049]
                block_statement [13051,13112]
                    revert_statement [13073,13094]
                        revert: revert [13073,13079]
                        identifier: PriceTooLow [13080,13091]
                        revert_arguments [13091,13093]
            block_statement [13129,13183]
                unchecked: unchecked [13129,13138]
                expression_statement [13161,13165]
                    update_expression [13161,13164]
                        increment_operator: ++ [13161,13163]
                        identifier: i [13163,13164]
to
function_body [12489,16767]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [13217,13274]
    variable_declaration [13217,13251]
        type_name: D4AProject.project_info [13217,13240]
        storage: storage [13241,13248]
        identifier: pi [13249,13251]
    affectation_operator: = [13252,13253]
    array_access [13254,13273]
        identifier: all_projects [13254,13266]
        identifier: daoId [13267,13272]
to
function_body [12489,16767]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [13283,13341]
    variable_declaration [13283,13315]
        type_name: D4ACanvas.canvas_info [13283,13304]
        storage: storage [13305,13312]
        identifier: ci [13313,13315]
    affectation_operator: = [13316,13317]
    array_access [13318,13340]
        identifier: all_canvases [13318,13330]
        identifier: canvasId [13331,13339]
to
function_body [12489,16767]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [13350,13418]
    if: if [13350,13352]
    binary_expression [13354,13388]
        member_expression: pi.nft_supply [13354,13367]
        comparison_operator: >= [13368,13370]
        member_expression: pi.max_nft_amount [13371,13388]
    revert_statement [13390,13418]
        revert: revert [13390,13396]
        identifier: NftExceedMaxAmount [13397,13415]
        revert_arguments [13415,13417]
to
function_body [12489,16767]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13428,13478]
    assignment_expression [13428,13477]
        member_expression: vars.currentRound [13428,13445]
        affectation_operator: = [13446,13447]
        call_expression [13448,13477]
            member_expression: settings.PRB().currentRound [13448,13475]
to
function_body [12489,16767]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13487,13631]
    assignment_expression [13487,13630]
        member_expression: vars.nftPriceMultiplyFactor [13487,13514]
        affectation_operator: = [13515,13516]
        ternary_expression [13529,13630]
            binary_expression [13529,13559]
                member_expression: pi.nftPriceMultiplyFactor [13529,13554]
                comparison_operator: == [13555,13557]
                number_literal: 0 [13558,13559]
            ?: ? [13560,13561]
            call_expression [13562,13602]
                member_expression: settings.defaultNftPriceMultiplyFactor [13562,13600]
            :: : [13603,13604]
            member_expression: pi.nftPriceMultiplyFactor [13605,13630]
to
function_body [12489,16767]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13640,13704]
    assignment_expression [13640,13703]
        member_expression: vars.priceChangeBasisPoint [13640,13666]
        affectation_operator: = [13667,13668]
        member_expression: D4APrice._PRICE_CHANGE_BASIS_POINT [13669,13703]
to
function_body [12489,16767]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [13714,13766]
    variable_declaration [13714,13765]
        type_name: GetCanvasNextPriceVars [13714,13736]
        memory: memory [13737,13743]
        identifier: getCanvasNextPriceVar [13744,13765]
to
function_body [12489,16767]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13775,13811]
    assignment_expression [13775,13810]
        member_expression: getCanvasNextPriceVar.daoId [13775,13802]
        affectation_operator: = [13803,13804]
        identifier: daoId [13805,13810]
to
function_body [12489,16767]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13820,13875]
    assignment_expression [13820,13874]
        member_expression: getCanvasNextPriceVar.currentRound [13820,13854]
        affectation_operator: = [13855,13856]
        member_expression: vars.currentRound [13857,13874]
to
function_body [12489,16767]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13884,13936]
    assignment_expression [13884,13935]
        member_expression: getCanvasNextPriceVar.floorPrices [13884,13917]
        affectation_operator: = [13918,13919]
        member_expression: pi.floor_prices [13920,13935]
to
function_body [12489,16767]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [13945,14004]
    assignment_expression [13945,14003]
        member_expression: getCanvasNextPriceVar.floorPriceRank [13945,13981]
        affectation_operator: = [13982,13983]
        member_expression: pi.floor_price_rank [13984,14003]
to
function_body [12489,16767]
at 14

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14013,14059]
    assignment_expression [14013,14058]
        member_expression: getCanvasNextPriceVar.startPrb [14013,14043]
        affectation_operator: = [14044,14045]
        member_expression: pi.start_prb [14046,14058]
to
function_body [12489,16767]
at 15

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14068,14143]
    assignment_expression [14068,14142]
        member_expression: getCanvasNextPriceVar.nftPriceMultiplyFactor [14068,14112]
        affectation_operator: = [14113,14114]
        member_expression: vars.nftPriceMultiplyFactor [14115,14142]
to
function_body [12489,16767]
at 16

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14152,14208]
    assignment_expression [14152,14207]
        member_expression: vars.price [14152,14162]
        affectation_operator: = [14163,14164]
        call_expression [14165,14207]
            identifier: _getCanvasNextPrice [14165,14184]
            call_argument [14185,14206]
                identifier: getCanvasNextPriceVar [14185,14206]
to
function_body [12489,16767]
at 17

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14217,14248]
    assignment_expression [14217,14247]
        member_expression: vars.initialPrice [14217,14234]
        affectation_operator: = [14235,14236]
        member_expression: vars.price [14237,14247]
to
function_body [12489,16767]
at 18

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14257,14276]
    member_expression: vars.daoTotalShare [14257,14275]
to
function_body [12489,16767]
at 19

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14285,14301]
    member_expression: vars.totalPrice [14285,14300]
to
function_body [12489,16767]
at 20

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [14310,14365]
    variable_declaration [14310,14335]
        type_name: uint256[] [14310,14319]
        memory: memory [14320,14326]
        identifier: tokenIds [14327,14335]
    affectation_operator: = [14336,14337]
    call_expression [14338,14364]
        new_expression [14338,14351]
            new: new [14338,14341]
            type_name: uint256[] [14342,14351]
        call_argument [14352,14363]
            member_expression: vars.length [14352,14363]
to
function_body [12489,16767]
at 21

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [15976,16355]
    variable_declaration_statement [16015,16070]
        variable_declaration [16015,16038]
            type_name: address [16015,16022]
            identifier: protocolFeePool [16023,16038]
        affectation_operator: = [16039,16040]
        call_expression [16041,16069]
            member_expression: settings.protocol_fee_pool [16041,16067]
    variable_declaration_statement [16083,16116]
        variable_declaration [16083,16101]
            type_name: address [16083,16090]
            identifier: daoFeePool [16091,16101]
        affectation_operator: = [16102,16103]
        member_expression: pi.fee_pool [16104,16115]
    variable_declaration_statement [16129,16192]
        variable_declaration [16129,16148]
            type_name: address [16129,16136]
            identifier: canvasOwner [16137,16148]
        affectation_operator: = [16149,16150]
        call_expression [16151,16191]
            member_expression: settings.owner_proxy().ownerOf [16151,16181]
            call_argument [16182,16190]
                identifier: canvasId [16182,16190]
    expression_statement [16206,16345]
        assignment_expression [16206,16344]
            tuple_expression [16206,16237]
                member_expression: vars.daoFee [16207,16218]
                member_expression: vars.protocolFee [16220,16236]
            affectation_operator: = [16238,16239]
            call_expression [16256,16344]
                identifier: _splitFee [16256,16265]
                call_argument [16266,16281]
                    identifier: protocolFeePool [16266,16281]
                call_argument [16283,16293]
                    identifier: daoFeePool [16283,16293]
                call_argument [16295,16306]
                    identifier: canvasOwner [16295,16306]
                call_argument [16308,16323]
                    member_expression: vars.totalPrice [16308,16323]
                call_argument [16325,16343]
                    member_expression: vars.daoTotalShare [16325,16343]
to
function_body [12489,16767]
at 23

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [16396,16646]
    if: if [16396,16398]
    binary_expression [16400,16431]
        member_expression: vars.price [16400,16410]
        comparison_operator: != [16411,16413]
        member_expression: vars.initialPrice [16414,16431]
    block_statement [16433,16646]
        expression_statement [16447,16530]
            assignment_expression [16447,16529]
                member_expression: vars.price [16447,16457]
                affectation_operator: = [16458,16459]
                binary_expression [16460,16529]
                    binary_expression [16460,16499]
                        member_expression: vars.price [16460,16470]
                        arithmetic_operator: * [16471,16472]
                        member_expression: vars.priceChangeBasisPoint [16473,16499]
                    arithmetic_operator: / [16500,16501]
                    member_expression: vars.nftPriceMultiplyFactor [16502,16529]
        expression_statement [16543,16636]
            call_expression [16543,16635]
                identifier: _updatePrice [16543,16555]
                call_argument [16556,16573]
                    member_expression: vars.currentRound [16556,16573]
                call_argument [16575,16580]
                    identifier: daoId [16575,16580]
                call_argument [16582,16590]
                    identifier: canvasId [16582,16590]
                call_argument [16592,16602]
                    member_expression: vars.price [16592,16602]
                call_argument [16604,16605]
                    number_literal: 0 [16604,16605]
                call_argument [16607,16634]
                    member_expression: vars.nftPriceMultiplyFactor [16607,16634]
to
function_body [12489,16767]
at 24

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [16656,16735]
    call_expression [16656,16734]
        identifier: _updateReward [16656,16669]
        call_argument [16670,16675]
            identifier: daoId [16670,16675]
        call_argument [16677,16685]
            identifier: canvasId [16677,16685]
        call_argument [16687,16698]
            member_expression: vars.daoFee [16687,16698]
        call_argument [16700,16716]
            member_expression: vars.protocolFee [16700,16716]
        call_argument [16718,16733]
            member_expression: vars.totalPrice [16718,16733]
to
function_body [12489,16767]
at 25

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [16745,16761]
    return: return [16745,16751]
    identifier: tokenIds [16752,16760]
to
function_body [12489,16767]
at 26

New cluster:
MOVE from function_body [17690,18098]
------------
===
move-tree
---
expression_statement [8113,8261]
    call_expression [8113,8260]
        member_expression: all_rewards.updateRewardForCanvas [8113,8146]
        call_argument [8160,8168]
            identifier: settings [8160,8168]
        call_argument [8170,8181]
            identifier: _project_id [8170,8181]
        call_argument [8183,8193]
            identifier: _canvas_id [8183,8193]
        call_argument [8195,8207]
            member_expression: pi.start_prb [8195,8207]
        call_argument [8209,8227]
            member_expression: pi.mintable_rounds [8209,8227]
        call_argument [8229,8250]
            member_expression: pi.erc20_total_supply [8229,8250]
to
function_body [17690,18098]
at 2
===
move-tree
---
variable_declaration_statement [6997,7059]
    variable_declaration [6997,7030]
        type_name: D4AProject.project_info [6997,7020]
        memory: memory [7021,7027]
        identifier: pi [7028,7030]
    affectation_operator: = [7031,7032]
    array_access [7033,7058]
        identifier: all_projects [7033,7045]
        identifier: _project_id [7046,7057]
to
function_body [17690,18098]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [18393,18440]
    if: if [18393,18395]
    binary_expression [18397,18414]
        member_expression: msg.value [18397,18406]
        comparison_operator: < [18407,18408]
        identifier: price [18409,18414]
    revert_statement [18416,18440]
        revert: revert [18416,18422]
        identifier: NotEnoughEther [18423,18437]
        revert_arguments [18437,18439]
to
function_body [18383,18879]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [18554,18590]
    assignment_expression [18554,18589]
        identifier: daoFee [18554,18560]
        affectation_operator: = [18561,18562]
        binary_expression [18563,18589]
            identifier: daoShare [18563,18571]
            arithmetic_operator: / [18572,18573]
            identifier: ratioBasisPoint [18574,18589]
to
function_body [18383,18879]
at 3

New cluster:
MOVE from function_body [18383,18879]
------------
===
move-tree
---
expression_statement [8800,8867]
    assignment_expression [8800,8866]
        identifier: n [8800,8801]
        affectation_operator: = [8802,8803]
        binary_expression [8804,8866]
            binary_expression [8804,8842]
                identifier: _price [8804,8810]
                arithmetic_operator: * [8811,8812]
                call_expression [8813,8842]
                    member_expression: settings.mint_d4a_fee_ratio [8813,8840]
            arithmetic_operator: / [8843,8844]
            call_expression [8845,8866]
                member_expression: settings.ratio_base [8845,8864]
to
function_body [18383,18879]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [18679,18722]
    call_expression [18679,18721]
        identifier: _transferEth [18679,18691]
        call_argument [18692,18707]
            identifier: protocolFeePool [18692,18707]
        call_argument [18709,18720]
            identifier: protocolFee [18709,18720]
to
function_body [18383,18879]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [18731,18764]
    call_expression [18731,18763]
        identifier: _transferEth [18731,18743]
        call_argument [18744,18754]
            identifier: daoFeePool [18744,18754]
        call_argument [18756,18762]
            identifier: daoFee [18756,18762]
to
function_body [18383,18879]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [18773,18829]
    call_expression [18773,18828]
        identifier: _transferEth [18773,18785]
        call_argument [18786,18797]
            identifier: canvasOwner [18786,18797]
        call_argument [18799,18827]
            binary_expression [18799,18827]
                binary_expression [18799,18813]
                    identifier: price [18799,18804]
                    arithmetic_operator: - [18805,18806]
                    identifier: daoFee [18807,18813]
                arithmetic_operator: - [18814,18815]
                identifier: protocolFee [18816,18827]
to
function_body [18383,18879]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [18954,18978]
    if: if [18954,18956]
    binary_expression [18958,18969]
        identifier: amount [18958,18964]
        comparison_operator: == [18965,18967]
        number_literal: 0 [18968,18969]
    return_statement [18971,18978]
        return: return [18971,18977]
to
function_body [18944,19082]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [19038,19076]
    if: if [19038,19040]
    unary_expression [19042,19047]
        !: ! [19042,19043]
        identifier: succ [19043,19047]
    revert_statement [19049,19076]
        revert: revert [19049,19055]
        identifier: EthTransferFailed [19056,19073]
        revert_arguments [19073,19075]
to
function_body [18944,19082]
at 2

New cluster:
UPDATE from require to d4aNotPaused
------------
===
update-node
---
identifier: require [10072,10079]
replace require by d4aNotPaused

New cluster:
MOVE from modifier_invocation [19614,19626]
------------
===
move-tree
---
identifier: require [10072,10079]
to
modifier_invocation [19614,19626]
at 0

New cluster:
MOVE from modifier_invocation [19635,19657]
------------
===
move-tree
---
identifier: require [10126,10133]
to
modifier_invocation [19635,19657]
at 0

New cluster:
MOVE from call_expression [11668,11758]
------------
===
move-tree
---
call_argument [7914,7936]
    identifier: nftPriceMultiplyFactor [7914,7936]
to
call_expression [11668,11758]
at 4
===
move-tree
---
call_argument [7907,7912]
    identifier: price [7907,7912]
to
call_expression [11668,11758]
at 3
===
move-tree
---
call_argument [7882,7893]
    identifier: _project_id [7882,7893]
to
modifier_invocation [19635,19657]
at 1

New cluster:
MOVE from modifier_invocation [19666,19687]
------------
===
move-tree
---
identifier: D4AProjectNotExist [10243,10261]
to
modifier_invocation [19666,19687]
at 0

New cluster:
MOVE from call_expression [10741,10809]
------------
===
move-tree
---
call_argument [7774,7779]
    identifier: price [7774,7779]
to
call_expression [10741,10809]
at 4
===
move-tree
---
call_argument [7749,7760]
    identifier: _project_id [7749,7760]
to
modifier_invocation [19666,19687]
at 1

New cluster:
UPDATE from _canvas_id to canvasId
------------
===
update-node
---
identifier: _canvas_id [12520,12530]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [5887,5897]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [11371,11381]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [6794,6804]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [8183,8193]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [12319,12329]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [12780,12790]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [12178,12188]
replace _canvas_id by canvasId
===
update-node
---
identifier: _canvas_id [12432,12442]
replace _canvas_id by canvasId

New cluster:
MOVE from function_body [11421,12384]
------------
===
move-tree
---
variable_declaration_statement [12542,12599]
    variable_declaration [12542,12560]
        type_name: bytes32 [12542,12549]
        identifier: project_id [12550,12560]
    affectation_operator: = [12561,12562]
    member_expression: all_canvases[_canvas_id].project_id [12563,12598]
to
function_body [11421,12384]
at 0

New cluster:
MOVE from function_body [12469,12939]
------------
===
move-tree
---
variable_declaration_statement [11568,11625]
    variable_declaration [11568,11586]
        type_name: bytes32 [11568,11575]
        identifier: project_id [11576,11586]
    affectation_operator: = [11587,11588]
    member_expression: all_canvases[_canvas_id].project_id [11589,11624]
to
function_body [12469,12939]
at 1

New cluster:
MOVE from call_expression [10848,10943]
------------
===
move-tree
---
call_argument [7653,7658]
    identifier: price [7653,7658]
to
call_expression [10848,10943]
at 4
===
move-tree
---
call_argument [7628,7639]
    identifier: _project_id [7628,7639]
to
modifier_invocation [22334,22356]
at 1

New cluster:
MOVE from modifier_invocation [22900,22920]
------------
===
move-tree
---
call_argument [13788,13798]
    type_cast_expression [13788,13798]
        primitive_type: bytes32 [13788,13795]
        call_argument [13796,13797]
            number_literal: 0 [13796,13797]
to
modifier_invocation [22900,22920]
at 1
===
move-tree
---
call_argument [13800,13810]
    member_expression: msg.sender [13800,13810]
to
call_expression [18838,18872]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [22935,22980]
    call_expression [22935,22979]
        identifier: require [22935,22942]
        call_argument [22943,22978]
            binary_expression [22943,22978]
                identifier: newNftPriceMultiplyFactor [22943,22968]
                comparison_operator: >= [22969,22971]
                number_literal: 10_000 [22972,22978]
to
function_body [22925,23066]
at 0

New cluster:
MOVE from function_body [22925,23066]
------------
===
move-tree
---
expression_statement [13873,13944]
    assignment_expression [13873,13943]
        member_expression: all_projects[daoId].nftPriceMultiplyFactor [13873,13915]
        affectation_operator: = [13916,13917]
        identifier: newNftPriceMultiplyFactor [13918,13943]
to
function_body [22925,23066]
at 1

New cluster:
MOVE from if_statement [3673,3742]
------------
===
move-tree
---
call_expression [13108,13128]
    member_expression: settings.d4a_pause [13108,13126]
to
if_statement [3673,3742]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [3699,3742]
    revert_statement [3713,3732]
        revert: revert [3713,3719]
        identifier: D4APaused [3720,3729]
        revert_arguments [3729,3731]
to
if_statement [3673,3742]
at 2

New cluster:
MOVE from call_argument [2022,2060]
------------
===
move-tree
---
call_expression [2036,2060]
    member_expression: settings.project_proxy [2036,2058]
to
call_argument [2022,2060]
at 0

New cluster:
MOVE from block_statement [6387,6525]
------------
===
move-tree
---
expression_statement [3577,3617]
    augmented_assignment_expression [3577,3616]
        identifier: project_bitmap [3577,3591]
        affectation_operator: |= [3592,3594]
        parenthesized_expression [3595,3616]
            binary_expression [3596,3615]
                number_literal: 1 [3596,3597]
                <<: << [3598,3600]
                identifier: _project_index [3601,3615]
to
block_statement [6387,6525]
at 0
===
move-tree
---
expression_statement [3728,3789]
    assignment_expression [3728,3788]
        array_access [3728,3781]
            identifier: uri_exists [3728,3738]
            call_expression [3739,3780]
                identifier: keccak256 [3739,3748]
                call_argument [3749,3779]
                    call_expression [3749,3779]
                        member_expression: abi.encodePacked [3749,3765]
                        call_argument [3766,3778]
                            identifier: _project_uri [3766,3778]
        affectation_operator: = [3782,3783]
        boolean_literal: true [3784,3788]
to
block_statement [6387,6525]
at 1
===
move-tree
---
return_statement [3798,4056]
    return: return [3798,3804]
    call_expression [3805,4055]
        member_expression: all_projects.createProject [3805,3831]
        call_argument [3845,3853]
            identifier: settings [3845,3853]
        call_argument [3867,3877]
            identifier: _start_prb [3867,3877]
        call_argument [3891,3907]
            identifier: _mintable_rounds [3891,3907]
        call_argument [3921,3938]
            identifier: _floor_price_rank [3921,3938]
        call_argument [3952,3965]
            identifier: _max_nft_rank [3952,3965]
        call_argument [3979,3991]
            identifier: _royalty_fee [3979,3991]
        call_argument [4005,4019]
            identifier: _project_index [4005,4019]
        call_argument [4033,4045]
            identifier: _project_uri [4033,4045]
to
block_statement [6534,6852]
at 0
===
move-tree
---
expression_statement [3314,3359]
    call_expression [3314,3358]
        identifier: require [3314,3321]
        call_argument [3322,3343]
            unary_expression [3322,3343]
                !: ! [3322,3323]
                call_expression [3323,3343]
                    member_expression: settings.d4a_pause [3323,3341]
        call_argument [3345,3357]
            string_literal [3345,3357]
                string: "D4A Paused" [3345,3357]
to
block_statement [6119,6175]
at 0

New cluster:
MOVE from variable_declaration_statement [10243,10302]
------------
===
move-tree
---
variable_declaration [6424,6437]
    type_name: uint256 [6424,6431]
    identifier: price [6432,6437]
to
variable_declaration_statement [10243,10302]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [10259,10301]
    identifier: _getCanvasNextPrice [10259,10278]
    call_argument [10279,10300]
        identifier: getCanvasNextPriceVar [10279,10300]
to
variable_declaration_statement [10243,10302]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [10347,10402]
    variable_declaration [10347,10370]
        type_name: address [10347,10354]
        identifier: protocolFeePool [10355,10370]
    affectation_operator: = [10371,10372]
    call_expression [10373,10401]
        member_expression: settings.protocol_fee_pool [10373,10399]
to
block_statement [10333,10820]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [10415,10448]
    variable_declaration [10415,10433]
        type_name: address [10415,10422]
        identifier: daoFeePool [10423,10433]
    affectation_operator: = [10434,10435]
    member_expression: pi.fee_pool [10436,10447]
to
block_statement [10333,10820]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [10461,10524]
    variable_declaration [10461,10480]
        type_name: address [10461,10468]
        identifier: canvasOwner [10469,10480]
    affectation_operator: = [10481,10482]
    call_expression [10483,10523]
        member_expression: settings.owner_proxy().ownerOf [10483,10513]
        call_argument [10514,10522]
            identifier: canvasId [10514,10522]
to
block_statement [10333,10820]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [11638,11652]
    identifier: flatPrice [11638,11647]
    comparison_operator: == [11648,11650]
    number_literal: 0 [11651,11652]
to
if_statement [11634,11769]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [14388,14452]
    variable_declaration [14388,14415]
        type_name: uint256 [14388,14395]
        identifier: mintProjectFeeRatio [14396,14415]
    affectation_operator: = [14416,14417]
    call_expression [14418,14451]
        member_expression: settings.mint_project_fee_ratio [14418,14449]
to
block_statement [14374,15966]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [14465,14549]
    variable_declaration [14465,14501]
        type_name: uint256 [14465,14472]
        identifier: mintProjectFeeRatioFlatPrice [14473,14501]
    affectation_operator: = [14502,14503]
    call_expression [14504,14548]
        member_expression: settings.mint_project_fee_ratio_flat_price [14504,14546]
to
block_statement [14374,15966]
at 1

New cluster:
MOVE from variable_declaration_statement [18450,18487]
------------
===
move-tree
---
variable_declaration [8523,8539]
    type_name: uint256 [8523,8530]
    identifier: exchange [8531,8539]
to
variable_declaration_statement [18450,18487]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [18469,18486]
    member_expression: msg.value [18469,18478]
    arithmetic_operator: - [18479,18480]
    identifier: price [18481,18486]
to
variable_declaration_statement [18450,18487]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [18496,18519]
    type_name: uint256 [18496,18503]
    identifier: ratioBasisPoint [18504,18519]
to
variable_declaration_statement [18496,18544]
at 0

New cluster:
MOVE from variable_declaration_statement [18496,18544]
------------
===
move-tree
---
call_expression [8845,8866]
    member_expression: settings.ratio_base [8845,8864]
to
variable_declaration_statement [18496,18544]
at 2

New cluster:
UPDATE from all_canvases[_canvas_id].project_id to all_canvases[canvasId].project_id
------------
===
update-node
---
member_expression: all_canvases[_canvas_id].project_id [11589,11624]
replace all_canvases[_canvas_id].project_id by all_canvases[canvasId].project_id
===
update-node
---
member_expression: all_canvases[_canvas_id].project_id [12563,12598]
replace all_canvases[_canvas_id].project_id by all_canvases[canvasId].project_id

New cluster:
MOVE from expression_statement [11719,11781]
------------
===
move-tree
---
call_expression [11728,11761]
    member_expression: settings.pause_status [11728,11749]
    call_argument [11750,11760]
        identifier: project_id [11750,11760]
to
expression_statement [11719,11781]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [2324,2328]
    identifier: role [2324,2328]
to
call_expression [2313,2341]
at 1

New cluster:
MOVE from expression_statement [3314,3359]
------------
===
move-tree
---
call_expression [3656,3686]
    member_expression: abi.encodePacked [3656,3672]
    call_argument [3673,3685]
        identifier: _project_uri [3673,3685]
to
expression_statement [3314,3359]
at 0

New cluster:
MOVE from if_statement [6198,6273]
------------
===
move-tree
---
binary_expression [3376,3418]
    identifier: _project_index [3376,3390]
    comparison_operator: < [3391,3392]
    call_expression [3393,3418]
        member_expression: settings.reserved_slots [3393,3416]
to
if_statement [6198,6273]
at 1

New cluster:
MOVE from if_statement [6286,6367]
------------
===
move-tree
---
binary_expression [3477,3522]
    parenthesized_expression [3477,3517]
        binary_expression [3478,3516]
            parenthesized_expression [3478,3512]
                binary_expression [3479,3511]
                    identifier: project_bitmap [3479,3493]
                    >>: >> [3494,3496]
                    identifier: _project_index [3497,3511]
            bitwise_operator: & [3513,3514]
            number_literal: 1 [3515,3516]
    comparison_operator: == [3518,3520]
    number_literal: 0 [3521,3522]
to
if_statement [6286,6367]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
revert_statement [6337,6367]
    revert: revert [6337,6343]
    identifier: DaoIndexAlreadyExist [6344,6364]
    revert_arguments [6364,6366]
to
if_statement [6286,6367]
at 2

New cluster:
UPDATE from proj_id to daoId
------------
===
update-node
---
identifier: proj_id [5821,5828]
replace proj_id by daoId
===
update-node
---
identifier: proj_id [6785,6792]
replace proj_id by daoId

New cluster:
MOVE from assignment_expression [9370,9513]
------------
===
move-tree
---
ternary_expression [7174,7275]
    binary_expression [7174,7204]
        member_expression: pi.nftPriceMultiplyFactor [7174,7199]
        comparison_operator: == [7200,7202]
        number_literal: 0 [7203,7204]
    ?: ? [7205,7206]
    call_expression [7207,7247]
        member_expression: settings.defaultNftPriceMultiplyFactor [7207,7245]
    :: : [7248,7249]
    member_expression: pi.nftPriceMultiplyFactor [7250,7275]
to
assignment_expression [9370,9513]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [10537,10553]
    type_name: uint256 [10537,10544]
    identifier: daoShare [10545,10553]
to
variable_declaration_statement [10537,10694]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10861,10878]
    member_expression: vars.currentRound [10861,10878]
to
call_expression [10848,10943]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10880,10885]
    identifier: daoId [10880,10885]
to
call_expression [10848,10943]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10887,10895]
    identifier: canvasId [10887,10895]
to
call_expression [10848,10943]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10904,10913]
    identifier: flatPrice [10904,10913]
to
call_expression [10848,10943]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10915,10942]
    member_expression: vars.nftPriceMultiplyFactor [10915,10942]
to
call_expression [10848,10943]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [14567,14580]
    variable_declaration [14567,14575]
        type_name: uint32 [14567,14573]
        identifier: i [14574,14575]
    affectation_operator: = [14576,14577]
    number_literal: 0 [14578,14579]
to
for_statement [14562,15956]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [14581,14597]
    binary_expression [14581,14596]
        identifier: i [14581,14582]
        comparison_operator: < [14583,14584]
        member_expression: vars.length [14585,14596]
to
for_statement [14562,15956]
at 2

New cluster:
MOVE from call_expression [8113,8260]
------------
===
move-tree
---
call_argument [8056,8074]
    member_expression: pi.mintable_rounds [8056,8074]
to
call_expression [8113,8260]
at 5
===
move-tree
---
call_argument [8013,8024]
    identifier: _project_id [8013,8024]
to
call_expression [17772,17936]
at 2
===
move-tree
---
call_argument [8076,8093]
    identifier: round_2_total_eth [8076,8093]
to
call_expression [17772,17936]
at 7
===
move-tree
---
call_argument [8003,8011]
    identifier: settings [8003,8011]
to
call_expression [17772,17936]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [17841,17849]
    identifier: canvasId [17841,17849]
to
call_expression [17772,17936]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [17851,17879]
    binary_expression [17851,17879]
        binary_expression [17851,17865]
            identifier: price [17851,17856]
            arithmetic_operator: - [17857,17858]
            identifier: daoFee [17859,17865]
        arithmetic_operator: - [17866,17867]
        identifier: protocolFee [17868,17879]
to
call_expression [17772,17936]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [17881,17887]
    identifier: daoFee [17881,17887]
to
call_expression [17772,17936]
at 5

New cluster:
MOVE from call_expression [17772,17936]
------------
===
move-tree
---
call_argument [8209,8227]
    member_expression: pi.mintable_rounds [8209,8227]
to
call_expression [17772,17936]
at 6

New cluster:
UPDATE from n to protocolFee
------------
===
update-node
---
identifier: n [8800,8801]
replace n by protocolFee

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18863,18871]
    identifier: exchange [18863,18871]
to
call_expression [18838,18872]
at 2

New cluster:
MOVE from variable_declaration_tuple [18987,18999]
------------
===
move-tree
---
variable_declaration [1532,1541]
    type_name: bool [1532,1536]
    identifier: succ [1537,1541]
to
variable_declaration_tuple [18987,18999]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_expression [19002,19024]
    member_expression: to.call [19002,19009]
    struct_field_assignment [19010,19023]
        identifier: value [19010,19015]
        :: : [19015,19016]
        identifier: amount [19017,19023]
to
call_expression [19002,19028]
at 0

New cluster:
MOVE from call_expression [19002,19028]
------------
===
move-tree
---
call_argument [9314,9316]
    string_literal [9314,9316]
        string: "" [9314,9316]
to
call_expression [19002,19028]
at 1

New cluster:
UPDATE from require to _checkDaoExist
------------
===
update-node
---
identifier: require [11719,11726]
replace require by _checkDaoExist

New cluster:
MOVE from call_expression [11728,11761]
------------
===
move-tree
---
identifier: require [11719,11726]
to
call_expression [11728,11761]
at 0

New cluster:
UPDATE from require to _checkPauseStatus
------------
===
update-node
---
identifier: require [11790,11797]
replace require by _checkPauseStatus

New cluster:
MOVE from call_expression [11790,11850]
------------
===
move-tree
---
call_argument [11697,11707]
    identifier: project_id [11697,11707]
to
call_expression [11790,11850]
at 1

New cluster:
UPDATE from require to _checkUriNotExist
------------
===
update-node
---
identifier: require [3314,3321]
replace require by _checkUriNotExist

New cluster:
MOVE from call_expression [3656,3686]
------------
===
move-tree
---
identifier: require [3314,3321]
to
call_expression [3656,3686]
at 0

New cluster:
UPDATE from < to >=
------------
===
update-node
---
comparison_operator: < [3391,3392]
replace < by >=

New cluster:
UPDATE from require to DaoIndexTooLarge
------------
===
update-node
---
identifier: require [3469,3476]
replace require by DaoIndexTooLarge

New cluster:
MOVE from revert_statement [6247,6273]
------------
===
move-tree
---
identifier: require [3469,3476]
to
revert_statement [6247,6273]
at 1

New cluster:
UPDATE from == to !=
------------
===
update-node
---
comparison_operator: == [3518,3520]
replace == by !=

New cluster:
Unknown cluster type
------------
===
insert-tree
---
tuple_expression [10707,10738]
    member_expression: vars.daoFee [10708,10719]
    member_expression: vars.protocolFee [10721,10737]
to
assignment_expression [10707,10809]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [14617,14791]
    variable_declaration_statement [14639,14718]
        variable_declaration [14639,14661]
            type_name: bytes32 [14639,14646]
            identifier: token_uri_hash [14647,14661]
        affectation_operator: = [14662,14663]
        call_expression [14664,14717]
            identifier: keccak256 [14664,14673]
            call_argument [14674,14716]
                call_expression [14674,14716]
                    member_expression: abi.encodePacked [14674,14690]
                    call_argument [14691,14715]
                        member_expression: mintNftInfos[i].tokenUri [14691,14715]
    expression_statement [14739,14773]
        assignment_expression [14739,14772]
            array_access [14739,14765]
                identifier: uri_exists [14739,14749]
                identifier: token_uri_hash [14750,14764]
            affectation_operator: = [14766,14767]
            boolean_literal: true [14768,14772]
to
block_statement [14599,15956]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [14915,15165]
    expression_statement [14937,14953]
        update_expression [14937,14952]
            member_expression: pi.nft_supply [14937,14950]
            increment_operator: ++ [14950,14952]
    expression_statement [14974,15006]
        call_expression [14974,15005]
            member_expression: ci.nft_tokens.push [14974,14992]
            call_argument [14993,15004]
                array_access [14993,15004]
                    identifier: tokenIds [14993,15001]
                    identifier: i [15002,15003]
    expression_statement [15027,15049]
        update_expression [15027,15048]
            member_expression: ci.nft_token_number [15027,15046]
            increment_operator: ++ [15046,15048]
    expression_statement [15070,15147]
        assignment_expression [15070,15146]
            array_access [15070,15135]
                identifier: tokenid_2_canvas [15070,15086]
                call_expression [15087,15134]
                    identifier: keccak256 [15087,15096]
                    call_argument [15097,15133]
                        call_expression [15097,15133]
                            member_expression: abi.encodePacked [15097,15113]
                            call_argument [15114,15119]
                                identifier: daoId [15114,15119]
                            call_argument [15121,15132]
                                array_access [15121,15132]
                                    identifier: tokenIds [15121,15129]
                                    identifier: i [15130,15131]
            affectation_operator: = [15136,15137]
            identifier: canvasId [15138,15146]
to
block_statement [14599,15956]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [15182,15228]
    variable_declaration [15182,15199]
        type_name: uint256 [15182,15189]
        identifier: flatPrice [15190,15199]
    affectation_operator: = [15200,15201]
    member_expression: mintNftInfos[i].flatPrice [15202,15227]
to
block_statement [14599,15956]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [15245,15871]
    if: if [15245,15247]
    binary_expression [15249,15263]
        identifier: flatPrice [15249,15258]
        comparison_operator: == [15259,15261]
        number_literal: 0 [15262,15263]
    block_statement [15265,15608]
        expression_statement [15287,15342]
            augmented_assignment_expression [15287,15341]
                member_expression: vars.daoTotalShare [15287,15305]
                affectation_operator: += [15306,15308]
                binary_expression [15309,15341]
                    identifier: mintProjectFeeRatio [15309,15328]
                    arithmetic_operator: * [15329,15330]
                    member_expression: vars.price [15331,15341]
        expression_statement [15363,15393]
            augmented_assignment_expression [15363,15392]
                member_expression: vars.totalPrice [15363,15378]
                affectation_operator: += [15379,15381]
                member_expression: vars.price [15382,15392]
        emit_statement [15414,15498]
            identifier: D4AMintNFT [15419,15429]
            call_argument [15430,15435]
                identifier: daoId [15430,15435]
            call_argument [15437,15445]
                identifier: canvasId [15437,15445]
            call_argument [15447,15458]
                array_access [15447,15458]
                    identifier: tokenIds [15447,15455]
                    identifier: i [15456,15457]
            call_argument [15460,15484]
                member_expression: mintNftInfos[i].tokenUri [15460,15484]
            call_argument [15486,15496]
                member_expression: vars.price [15486,15496]
        expression_statement [15519,15590]
            augmented_assignment_expression [15519,15589]
                member_expression: vars.price [15519,15529]
                affectation_operator: *= [15530,15532]
                binary_expression [15533,15589]
                    member_expression: vars.nftPriceMultiplyFactor [15533,15560]
                    arithmetic_operator: / [15561,15562]
                    member_expression: vars.priceChangeBasisPoint [15563,15589]
    else: else [15609,15613]
    block_statement [15614,15871]
        expression_statement [15636,15699]
            augmented_assignment_expression [15636,15698]
                member_expression: vars.daoTotalShare [15636,15654]
                affectation_operator: += [15655,15657]
                binary_expression [15658,15698]
                    identifier: mintProjectFeeRatioFlatPrice [15658,15686]
                    arithmetic_operator: * [15687,15688]
                    identifier: flatPrice [15689,15698]
        expression_statement [15720,15749]
            augmented_assignment_expression [15720,15748]
                member_expression: vars.totalPrice [15720,15735]
                affectation_operator: += [15736,15738]
                identifier: flatPrice [15739,15748]
        emit_statement [15770,15853]
            identifier: D4AMintNFT [15775,15785]
            call_argument [15786,15791]
                identifier: daoId [15786,15791]
            call_argument [15793,15801]
                identifier: canvasId [15793,15801]
            call_argument [15803,15814]
                array_access [15803,15814]
                    identifier: tokenIds [15803,15811]
                    identifier: i [15812,15813]
            call_argument [15816,15840]
                member_expression: mintNftInfos[i].tokenUri [15816,15840]
            call_argument [15842,15851]
                identifier: flatPrice [15842,15851]
to
block_statement [14599,15956]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [15888,15942]
    unchecked: unchecked [15888,15897]
    expression_statement [15920,15924]
        update_expression [15920,15923]
            increment_operator: ++ [15920,15922]
            identifier: i [15922,15923]
to
block_statement [14599,15956]
at 5

New cluster:
===
insert-node
---
identifier: ratioBasisPoint [18653,18668]
to
binary_expression [8804,8866]
at 2
------------
===
insert-node
---
identifier: ratioBasisPoint [18653,18668]
to
binary_expression [8804,8866]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10751,10766]
    identifier: protocolFeePool [10751,10766]
to
call_expression [10741,10809]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10768,10778]
    identifier: daoFeePool [10768,10778]
to
call_expression [10741,10809]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10780,10791]
    identifier: canvasOwner [10780,10791]
to
call_expression [10741,10809]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10800,10808]
    identifier: daoShare [10800,10808]
to
call_expression [10741,10809]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11704,11716]
    identifier: currentRound [11704,11716]
to
call_expression [11668,11758]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11718,11726]
    identifier: canvasId [11718,11726]
to
call_expression [11668,11758]
at 2

New cluster:
UPDATE from _price to price
------------
===
update-node
---
identifier: _price [8804,8810]
replace _price by price

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [10574,10588]
    identifier: flatPrice [10574,10583]
    comparison_operator: == [10584,10586]
    number_literal: 0 [10587,10588]
to
ternary_expression [10574,10671]
at 0

New cluster:
MOVE from ternary_expression [10574,10671]
------------
===
move-tree
---
call_expression [8610,8643]
    member_expression: settings.mint_project_fee_ratio [8610,8641]
to
ternary_expression [10574,10671]
at 2

New cluster:
MOVE from ternary_expression [10574,10671]
------------
===
move-tree
---
call_expression [8711,8755]
    member_expression: settings.mint_project_fee_ratio_flat_price [8711,8753]
to
ternary_expression [10574,10671]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
array_access [14809,14820]
    identifier: tokenIds [14809,14817]
    identifier: i [14818,14819]
to
assignment_expression [14809,14897]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [14872,14896]
    member_expression: mintNftInfos[i].tokenUri [14872,14896]
to
call_expression [14823,14897]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11294,11299]
    identifier: daoId [11294,11299]
to
call_expression [11277,11310]
at 1

New cluster:
MOVE from call_expression [11277,11310]
------------
===
move-tree
---
call_argument [6734,6742]
    identifier: token_id [6734,6742]
to
call_expression [11277,11310]
at 2

New cluster:
===
delete-node
---
function_body [1770,1970]
===
------------
===
delete-node
---
variable_declaration_statement [1780,1869]
===
===
delete-node
---
call_expression [1792,1868]
===
===
delete-node
---
affectation_operator: = [1790,1791]
===
===
delete-node
---
function_body [1770,1970]
===
===
delete-node
---
member_expression: IAccessControlUpgradeable(address(settings)).hasRole [1792,1844]
===
===
delete-node
---
type_name: bool [1780,1784]
===
===
delete-node
---
variable_declaration [1780,1789]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [1878,1921]
    call_expression [1878,1920]
        identifier: require [1878,1885]
        call_argument [1886,1890]
            identifier: succ [1886,1890]
        call_argument [1892,1919]
            string_literal [1892,1919]
                string: "not admin, can not change" [1892,1919]

New cluster:
===
delete-node
---
memory: memory [2321,2327]
===
------------
===
delete-node
---
memory: memory [2321,2327]
===

New cluster:
===
delete-node
---
binary_expression [2022,2060]
===
------------
===
delete-node
---
binary_expression [2022,2060]
===
===
delete-node
---
comparison_operator: == [2033,2035]
===
===
delete-node
---
member_expression: msg.sender [2022,2032]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2440,2485]
    call_expression [2440,2484]
        identifier: require [2440,2447]
        call_argument [2448,2469]
            unary_expression [2448,2469]
                !: ! [2448,2449]
                call_expression [2449,2469]
                    member_expression: settings.d4a_pause [2449,2467]
        call_argument [2471,2483]
            string_literal [2471,2483]
                string: "D4A Paused" [2471,2483]

New cluster:
===
delete-node
---
expression_statement [2494,2587]
===
------------
===
delete-node
---
call_expression [2524,2554]
===
===
delete-node
---
member_expression: abi.encodePacked [2524,2540]
===
===
delete-node
---
expression_statement [2494,2587]
===
===
delete-node
---
call_argument [2524,2554]
===
===
delete-node
---
call_expression [2514,2555]
===
===
delete-node
---
array_access [2502,2556]
===
===
delete-node
---
call_expression [2494,2586]
===
===
delete-node
---
identifier: require [2494,2501]
===
===
delete-node
---
call_argument [2502,2556]
===
===
delete-node
---
identifier: keccak256 [2514,2523]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
unary_expression [2502,2513]
    !: ! [2502,2503]
    identifier: uri_exists [2503,2513]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2558,2585]
    string_literal [2558,2585]
        string: "project_uri already exist" [2558,2585]

New cluster:
===
delete-node
---
memory: memory [3163,3169]
===
------------
===
delete-node
---
memory: memory [3163,3169]
===

New cluster:
===
delete-node
---
member_expression: abi.encodePacked [3656,3672]
===
------------
===
delete-node
---
member_expression: abi.encodePacked [3656,3672]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3322,3343]
    unary_expression [3322,3343]
        !: ! [3322,3323]
        call_expression [3323,3343]
            member_expression: settings.d4a_pause [3323,3341]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3345,3357]
    string_literal [3345,3357]
        string: "D4A Paused" [3345,3357]

New cluster:
===
delete-node
---
call_expression [3314,3358]
===
------------
===
delete-node
---
call_expression [3314,3358]
===

New cluster:
===
delete-node
---
expression_statement [3368,3460]
===
------------
===
delete-node
---
expression_statement [3368,3460]
===
===
delete-node
---
call_argument [3376,3418]
===
===
delete-node
---
identifier: require [3368,3375]
===
===
delete-node
---
call_expression [3368,3459]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3420,3458]
    string_literal [3420,3458]
        string: "INDEX_ERROR: project index too large" [3420,3458]

New cluster:
===
delete-node
---
expression_statement [3469,3568]
===
------------
===
delete-node
---
call_argument [3477,3522]
===
===
delete-node
---
expression_statement [3469,3568]
===
===
delete-node
---
call_expression [3469,3567]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3524,3566]
    string_literal [3524,3566]
        string: "INDEX_ERROR: project index already exist" [3524,3566]

New cluster:
===
delete-node
---
expression_statement [3626,3719]
===
------------
===
delete-node
---
identifier: require [3626,3633]
===
===
delete-node
---
call_expression [3646,3687]
===
===
delete-node
---
call_argument [3656,3686]
===
===
delete-node
---
identifier: keccak256 [3646,3655]
===
===
delete-node
---
array_access [3634,3688]
===
===
delete-node
---
call_expression [3626,3718]
===
===
delete-node
---
expression_statement [3626,3719]
===
===
delete-node
---
call_argument [3634,3688]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
unary_expression [3634,3645]
    !: ! [3634,3635]
    identifier: uri_exists [3635,3645]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3690,3717]
    string_literal [3690,3717]
        string: "project_uri already exist" [3690,3717]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [4446,4491]
    call_expression [4446,4490]
        identifier: require [4446,4453]
        call_argument [4454,4475]
            unary_expression [4454,4475]
                !: ! [4454,4455]
                call_expression [4455,4475]
                    member_expression: settings.d4a_pause [4455,4473]
        call_argument [4477,4489]
            string_literal [4477,4489]
                string: "D4A Paused" [4477,4489]

New cluster:
===
delete-node
---
if_statement [4500,4577]
===
------------
===
delete-node
---
revert_arguments [4563,4576]
===
===
delete-node
---
if: if [4500,4502]
===
===
delete-node
---
member_expression: !all_projects[_project_id].exist [4504,4536]
===
===
delete-node
---
revert: revert [4538,4544]
===
===
delete-node
---
revert_statement [4538,4577]
===
===
delete-node
---
if_statement [4500,4577]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [4594,4629]
    unary_expression [4594,4629]
        !: ! [4594,4595]
        call_expression [4595,4629]
            member_expression: settings.pause_status [4595,4616]
            call_argument [4617,4628]
                identifier: _project_id [4617,4628]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [4631,4647]
    string_literal [4631,4647]
        string: "Project Paused" [4631,4647]

New cluster:
===
delete-node
---
expression_statement [4586,4649]
===
------------
===
delete-node
---
expression_statement [4586,4649]
===
===
delete-node
---
call_expression [4586,4648]
===

New cluster:
===
delete-node
---
expression_statement [4659,4750]
===
------------
===
delete-node
---
call_expression [4679,4719]
===
===
delete-node
---
!: ! [4667,4668]
===
===
delete-node
---
identifier: require [4659,4666]
===
===
delete-node
---
call_expression [4659,4749]
===
===
delete-node
---
expression_statement [4659,4750]
===
===
delete-node
---
member_expression: abi.encodePacked [4689,4705]
===
===
delete-node
---
identifier: keccak256 [4679,4688]
===
===
delete-node
---
call_argument [4667,4720]
===
===
delete-node
---
call_expression [4689,4718]
===
===
delete-node
---
unary_expression [4667,4678]
===
===
delete-node
---
array_access [4667,4720]
===
===
delete-node
---
call_argument [4689,4718]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [4722,4748]
    string_literal [4722,4748]
        string: "canvas_uri already exist" [4722,4748]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10080,10101]
    unary_expression [10080,10101]
        !: ! [10080,10081]
        call_expression [10081,10101]
            member_expression: settings.d4a_pause [10081,10099]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10103,10115]
    string_literal [10103,10115]
        string: "D4A Paused" [10103,10115]

New cluster:
===
delete-node
---
expression_statement [10072,10117]
===
------------
===
delete-node
---
call_expression [10072,10116]
===
===
delete-node
---
expression_statement [10072,10117]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10134,10169]
    unary_expression [10134,10169]
        !: ! [10134,10135]
        call_expression [10135,10169]
            member_expression: settings.pause_status [10135,10156]
            call_argument [10157,10168]
                identifier: _project_id [10157,10168]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10171,10187]
    string_literal [10171,10187]
        string: "Project Paused" [10171,10187]

New cluster:
===
delete-node
---
expression_statement [10126,10189]
===
------------
===
delete-node
---
expression_statement [10126,10189]
===
===
delete-node
---
call_expression [10126,10188]
===

New cluster:
===
delete-node
---
if_statement [10198,10275]
===
------------
===
delete-node
---
revert_arguments [10261,10274]
===
===
delete-node
---
revert_statement [10236,10275]
===
===
delete-node
---
member_expression: !all_projects[_project_id].exist [10202,10234]
===
===
delete-node
---
revert: revert [10236,10242]
===
===
delete-node
---
if: if [10198,10200]
===
===
delete-node
---
if_statement [10198,10275]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [11431,11476]
    call_expression [11431,11475]
        identifier: require [11431,11438]
        call_argument [11439,11460]
            unary_expression [11439,11460]
                !: ! [11439,11440]
                call_expression [11440,11460]
                    member_expression: settings.d4a_pause [11440,11458]
        call_argument [11462,11474]
            string_literal [11462,11474]
                string: "D4A Paused" [11462,11474]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [11485,11559]
    if: if [11485,11487]
    member_expression: !all_canvases[_canvas_id].exist [11489,11520]
    revert_statement [11522,11559]
        revert: revert [11522,11528]
        identifier: D4ACanvasNotExist [11529,11546]
        revert_arguments [11546,11558]
            call_argument [11547,11557]
                identifier: _canvas_id [11547,11557]

New cluster:
===
delete-node
---
if_statement [11634,11709]
===
------------
===
delete-node
---
identifier: D4AProjectNotExist [11678,11696]
===
===
delete-node
---
revert: revert [11671,11677]
===
===
delete-node
---
if_statement [11634,11709]
===
===
delete-node
---
member_expression: !all_projects[project_id].exist [11638,11669]
===
===
delete-node
---
if: if [11634,11636]
===
===
delete-node
---
revert_arguments [11696,11708]
===
===
delete-node
---
revert_statement [11671,11709]
===

New cluster:
===
delete-node
---
member_expression: settings.pause_status [11728,11749]
===
------------
===
delete-node
---
member_expression: settings.pause_status [11728,11749]
===

New cluster:
===
delete-node
---
call_expression [11719,11780]
===
------------
===
delete-node
---
unary_expression [11727,11761]
===
===
delete-node
---
call_argument [11727,11761]
===
===
delete-node
---
call_expression [11719,11780]
===
===
delete-node
---
!: ! [11727,11728]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [11763,11779]
    string_literal [11763,11779]
        string: "Project Paused" [11763,11779]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [11798,11832]
    unary_expression [11798,11832]
        !: ! [11798,11799]
        call_expression [11799,11832]
            member_expression: settings.pause_status [11799,11820]
            call_argument [11821,11831]
                identifier: _canvas_id [11821,11831]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [11834,11849]
    string_literal [11834,11849]
        string: "Canvas Paused" [11834,11849]

New cluster:
===
delete-node
---
expression_statement [13099,13144]
===
------------
===
delete-node
---
call_argument [13107,13128]
===
===
delete-node
---
identifier: require [13099,13106]
===
===
delete-node
---
expression_statement [13099,13144]
===
===
delete-node
---
unary_expression [13107,13128]
===
===
delete-node
---
call_expression [13099,13143]
===
===
delete-node
---
!: ! [13107,13108]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [13130,13142]
    string_literal [13130,13142]
        string: "D4A Paused" [13130,13142]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [13153,13216]
    call_expression [13153,13215]
        identifier: require [13153,13160]
        call_argument [13161,13196]
            unary_expression [13161,13196]
                !: ! [13161,13162]
                call_expression [13162,13196]
                    member_expression: settings.pause_status [13162,13183]
                    call_argument [13184,13195]
                        identifier: _project_id [13184,13195]
        call_argument [13198,13214]
            string_literal [13198,13214]
                string: "Project Paused" [13198,13214]

New cluster:
===
delete-node
---
contract_declaration [506,13952]
===
------------
===
delete-node
---
assignment_expression [7730,7786]
===
===
delete-node
---
block_statement [7307,7677]
===
===
delete-node
---
function_definition [13615,13950]
===
===
delete-node
---
function_definition [5418,6841]
===
===
delete-node
---
if: if [7807,7809]
===
===
delete-node
---
identifier: m [8597,8598]
===
===
delete-node
---
call_expression [1544,1620]
===
===
delete-node
---
block_statement [8684,8790]
===
===
delete-node
---
identifier: _price [8702,8708]
===
===
delete-node
---
array_access [6681,6745]
===
===
delete-node
---
identifier: _canvas_id [6748,6758]
===
===
delete-node
---
if_statement [7285,7797]
===
===
delete-node
---
affectation_operator: = [7737,7738]
===
===
delete-node
---
expression_statement [9233,9318]
===
===
delete-node
---
else: else [7678,7682]
===
===
delete-node
---
call_expression [13735,13811]
===
===
delete-node
---
if_statement [8571,8790]
===
===
delete-node
---
affectation_operator: = [9241,9242]
===
===
delete-node
---
affectation_operator: = [8599,8600]
===
===
delete-node
---
variable_declaration_statement [1532,1621]
===
===
delete-node
---
function_definition [6847,8289]
===
===
delete-node
---
call_expression [9243,9317]
===
===
delete-node
---
identifier: tokenid_2_canvas [6681,6697]
===
===
delete-node
---
function_body [8443,9536]
===
===
delete-node
---
binary_expression [8601,8667]
===
===
delete-node
---
variable_declaration_statement [7129,7276]
===
===
delete-node
---
affectation_operator: = [1542,1543]
===
===
delete-node
---
variable_declaration_statement [13723,13812]
===
===
delete-node
---
expression_statement [8698,8780]
===
===
delete-node
---
call_expression [7618,7666]
===
===
delete-node
---
arithmetic_operator: / [8644,8645]
===
===
delete-node
---
type_name: mapping(bytes32 => D4APrice.project_price_info) [757,804]
===
===
delete-node
---
identifier: keccak256 [6698,6707]
===
===
delete-node
---
function: function [6847,6855]
===
===
delete-node
---
function_definition [1467,1715]
===
===
delete-node
---
expression_statement [2014,2102]
===
===
delete-node
---
is: is [536,538]
===
===
delete-node
---
identifier: _splitFee [8304,8313]
===
===
delete-node
---
modifier: modifier [1976,1984]
===
===
delete-node
---
arithmetic_operator: / [8756,8757]
===
===
delete-node
---
function_body [2004,2119]
===
===
delete-node
---
member_expression: all_rewards.updateMintWithAmount [7957,7989]
===
===
delete-node
---
identifier: onlyProjectProxy [1985,2001]
===
===
delete-node
---
variable_declaration_statement [8523,8561]
===
===
delete-node
---
call_expression [6708,6743]
===
===
delete-node
---
visibility: internal [8391,8399]
===
===
delete-node
---
identifier: _splitFee [7618,7627]
===
===
delete-node
---
affectation_operator: = [8700,8701]
===
===
delete-node
---
member_expression: abi.encodePacked [6708,6724]
===
===
delete-node
---
assignment_expression [6681,6758]
===
===
delete-node
---
call_expression [7957,8103]
===
===
delete-node
---
identifier: D4AProtocol [524,535]
===
===
delete-node
---
arithmetic_operator: * [8709,8710]
===
===
delete-node
---
modifier_definition [1976,2119]
===
===
delete-node
---
if_statement [7807,7948]
===
===
delete-node
---
block_statement [7683,7797]
===
===
delete-node
---
abstract: abstract [506,514]
===
===
delete-node
---
affectation_operator: = [7616,7617]
===
===
delete-node
---
function: function [5418,5426]
===
===
delete-node
---
function_body [6987,8289]
===
===
delete-node
---
function: function [8295,8303]
===
===
delete-node
---
visibility: public [1515,1521]
===
===
delete-node
---
function_body [1522,1715]
===
===
delete-node
---
call_expression [7843,7937]
===
===
delete-node
---
expression_statement [8597,8668]
===
===
delete-node
---
arithmetic_operator: * [8608,8609]
===
===
delete-node
---
block_statement [8583,8678]
===
===
delete-node
---
affectation_operator: = [13733,13734]
===
===
delete-node
---
call_argument [6708,6743]
===
===
delete-node
---
assignment_expression [8597,8667]
===
===
delete-node
---
expression_statement [7843,7938]
===
===
delete-node
---
visibility: internal [5513,5521]
===
===
delete-node
---
using: using [738,743]
===
===
delete-node
---
visibility: internal [6948,6956]
===
===
delete-node
---
expression_statement [6681,6759]
===
===
delete-node
---
assignment_expression [9233,9317]
===
===
delete-node
---
identifier: changeProjectNum [1476,1492]
===
===
delete-node
---
affectation_operator: = [6746,6747]
===
===
delete-node
---
identifier: _price [8601,8607]
===
===
delete-node
---
function: function [1467,1475]
===
===
delete-node
---
if: if [8571,8573]
===
===
delete-node
---
function: function [13615,13623]
===
===
delete-node
---
member_expression: IAccessControlUpgradeable(address(settings)).hasRole [13735,13787]
===
===
delete-node
---
binary_expression [8702,8779]
===
===
delete-node
---
binary_expression [8702,8755]
===
===
delete-node
---
else: else [8679,8683]
===
===
delete-node
---
call_expression [6698,6744]
===
===
delete-node
---
function_definition [8295,9536]
===
===
delete-node
---
identifier: require [2014,2021]
===
===
delete-node
---
identifier: _updatePriceAndReward [6856,6877]
===
===
delete-node
---
expression_statement [7957,8104]
===
===
delete-node
---
contract_declaration [506,13952]
===
===
delete-node
---
call_expression [7739,7786]
===
===
delete-node
---
block_statement [7829,7948]
===
===
delete-node
---
affectation_operator: = [7160,7161]
===
===
delete-node
---
expression_statement [7730,7787]
===
===
delete-node
---
member_expression: IAccessControlUpgradeable(address(settings)).hasRole [1544,1596]
===
===
delete-node
---
expression_statement [7609,7667]
===
===
delete-node
---
visibility: public [13706,13712]
===
===
delete-node
---
contract_body [595,13952]
===
===
delete-node
---
identifier: m [8698,8699]
===
===
delete-node
---
if: if [7285,7287]
===
===
delete-node
---
variable_declaration_statement [6424,6496]
===
===
delete-node
---
member_expression: all_prices.updateCanvasPrice [7843,7871]
===
===
delete-node
---
affectation_operator: = [8540,8541]
===
===
delete-node
---
identifier: changeDaoNftPriceMultiplyFactor [13624,13655]
===
===
delete-node
---
affectation_operator: = [6438,6439]
===
===
delete-node
---
identifier: _splitFee [7739,7748]
===
===
delete-node
---
binary_expression [8601,8643]
===
===
delete-node
---
call_expression [2014,2101]
===
===
delete-node
---
identifier: _mintNFT [5427,5435]
===
===
delete-node
---
function_body [5561,6841]
===
===
delete-node
---
assignment_expression [8698,8779]
===
===
delete-node
---
using_directive [738,805]
===
===
delete-node
---
function_body [13713,13950]
===
===
delete-node
---
assignment_expression [7609,7666]
===
===
delete-node
---
for: for [753,756]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [1630,1673]
    call_expression [1630,1672]
        identifier: require [1630,1637]
        call_argument [1638,1642]
            identifier: succ [1638,1642]
        call_argument [1644,1671]
            string_literal [1644,1671]
                string: "not admin, can not change" [1644,1671]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2062,2100]
    string_literal [2062,2100]
        string: "only project proxy can call protocol" [2062,2100]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
error_declaration [4227,4272]
    error: error [4227,4232]
    identifier: D4AProjectNotExist [4233,4251]
    error_parameter [4252,4270]
        type_name: bytes32 [4252,4259]
        identifier: project_id [4260,4270]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
error_declaration [4277,4320]
    error: error [4277,4282]
    identifier: D4ACanvasNotExist [4283,4300]
    error_parameter [4301,4318]
        type_name: bytes32 [4301,4308]
        identifier: canvas_id [4309,4318]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [5436,5454]
    type_name: bytes32 [5436,5443]
    identifier: _canvas_id [5444,5454]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [5484,5503]
    type_name: uint256 [5484,5491]
    identifier: _flat_price [5492,5503]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [5571,5616]
    call_expression [5571,5615]
        identifier: require [5571,5578]
        call_argument [5579,5600]
            unary_expression [5579,5600]
                !: ! [5579,5580]
                call_expression [5580,5600]
                    member_expression: settings.d4a_pause [5580,5598]
        call_argument [5602,5614]
            string_literal [5602,5614]
                string: "D4A paused" [5602,5614]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [5625,5699]
    if: if [5625,5627]
    member_expression: !all_canvases[_canvas_id].exist [5629,5660]
    revert_statement [5662,5699]
        revert: revert [5662,5668]
        identifier: D4ACanvasNotExist [5669,5686]
        revert_arguments [5686,5698]
            call_argument [5687,5697]
                identifier: _canvas_id [5687,5697]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [5708,5762]
    variable_declaration [5708,5723]
        type_name: bytes32 [5708,5715]
        identifier: proj_id [5716,5723]
    affectation_operator: = [5724,5725]
    member_expression: all_canvases[_canvas_id].project_id [5726,5761]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [5909,5968]
    call_expression [5909,5967]
        identifier: require [5909,5916]
        call_argument [5917,5948]
            unary_expression [5917,5948]
                !: ! [5917,5918]
                call_expression [5918,5948]
                    member_expression: settings.pause_status [5918,5939]
                    call_argument [5940,5947]
                        identifier: proj_id [5940,5947]
        call_argument [5950,5966]
            string_literal [5950,5966]
                string: "Project Paused" [5950,5966]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [5977,6038]
    call_expression [5977,6037]
        identifier: require [5977,5984]
        call_argument [5985,6019]
            unary_expression [5985,6019]
                !: ! [5985,5986]
                call_expression [5986,6019]
                    member_expression: settings.pause_status [5986,6007]
                    call_argument [6008,6018]
                        identifier: _canvas_id [6008,6018]
        call_argument [6021,6036]
            string_literal [6021,6036]
                string: "Canvas Paused" [6021,6036]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6047,6151]
    call_expression [6047,6150]
        identifier: require [6047,6054]
        call_argument [6055,6132]
            binary_expression [6055,6132]
                binary_expression [6055,6071]
                    identifier: _flat_price [6055,6066]
                    comparison_operator: == [6067,6069]
                    number_literal: 0 [6070,6071]
                logical_operator: || [6072,6074]
                binary_expression [6075,6132]
                    identifier: _flat_price [6075,6086]
                    comparison_operator: >= [6087,6089]
                    call_expression [6090,6132]
                        member_expression: all_projects.getProjectFloorPrice [6090,6123]
                        call_argument [6124,6131]
                            identifier: proj_id [6124,6131]
        call_argument [6134,6149]
            string_literal [6134,6149]
                string: "price too low" [6134,6149]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6234,6298]
    call_expression [6234,6297]
        identifier: require [6234,6241]
        call_argument [6242,6269]
            array_access [6242,6269]
                unary_expression [6242,6253]
                    !: ! [6242,6243]
                    identifier: uri_exists [6243,6253]
                identifier: token_uri_hash [6254,6268]
        call_argument [6271,6296]
            string_literal [6271,6296]
                string: "token_uri already exist" [6271,6296]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6307,6371]
    call_expression [6307,6370]
        identifier: require [6307,6314]
        call_argument [6315,6348]
            binary_expression [6315,6348]
                member_expression: pi.nft_supply [6315,6328]
                comparison_operator: < [6329,6330]
                member_expression: pi.max_nft_amount [6331,6348]
        call_argument [6350,6369]
            string_literal [6350,6369]
                string: "nft exceeds limit" [6350,6369]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [6440,6495]
    identifier: _updatePriceAndReward [6440,6461]
    call_argument [6462,6469]
        identifier: proj_id [6462,6469]
    call_argument [6471,6481]
        identifier: _canvas_id [6471,6481]
    call_argument [6483,6494]
        identifier: _flat_price [6483,6494]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [6725,6732]
    identifier: proj_id [6725,6732]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [6899,6917]
    type_name: bytes32 [6899,6906]
    identifier: _canvas_id [6907,6917]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [6919,6938]
    type_name: uint256 [6919,6926]
    identifier: _flat_price [6927,6938]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [6965,6982]
    returns: returns [6965,6972]
    parameter [6974,6981]
        type_name: uint256 [6974,6981]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [7068,7082]
    variable_declaration [7068,7081]
        type_name: uint256 [7068,7075]
        identifier: price [7076,7081]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [7091,7101]
    variable_declaration [7091,7100]
        type_name: uint256 [7091,7098]
        identifier: m [7099,7100]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [7110,7120]
    variable_declaration [7110,7119]
        type_name: uint256 [7110,7117]
        identifier: n [7118,7119]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [7129,7159]
    type_name: uint256 [7129,7136]
    identifier: nftPriceMultiplyFactor [7137,7159]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [7289,7305]
    identifier: _flat_price [7289,7300]
    comparison_operator: == [7301,7303]
    number_literal: 0 [7304,7305]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [7321,7596]
    assignment_expression [7321,7595]
        identifier: price [7321,7326]
        affectation_operator: = [7327,7328]
        call_expression [7329,7595]
            member_expression: all_prices.getCanvasNextPrice [7329,7358]
            call_argument [7376,7384]
                identifier: settings [7376,7384]
            call_argument [7402,7417]
                member_expression: pi.floor_prices [7402,7417]
            call_argument [7435,7454]
                member_expression: pi.floor_price_rank [7435,7454]
            call_argument [7472,7484]
                member_expression: pi.start_prb [7472,7484]
            call_argument [7502,7513]
                identifier: _project_id [7502,7513]
            call_argument [7531,7541]
                identifier: _canvas_id [7531,7541]
            call_argument [7559,7581]
                identifier: nftPriceMultiplyFactor [7559,7581]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
tuple_expression [7609,7615]
    identifier: m [7610,7611]
    identifier: n [7613,7614]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7641,7651]
    identifier: _canvas_id [7641,7651]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7660,7665]
    boolean_literal: false [7660,7665]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [7697,7717]
    assignment_expression [7697,7716]
        identifier: price [7697,7702]
        affectation_operator: = [7703,7704]
        identifier: _flat_price [7705,7716]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
tuple_expression [7730,7736]
    identifier: m [7731,7732]
    identifier: n [7734,7735]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7762,7772]
    identifier: _canvas_id [7762,7772]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7781,7785]
    boolean_literal: true [7781,7785]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [7811,7827]
    identifier: _flat_price [7811,7822]
    comparison_operator: == [7823,7825]
    number_literal: 0 [7826,7827]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7872,7880]
    identifier: settings [7872,7880]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [7895,7905]
    identifier: _canvas_id [7895,7905]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [8026,8036]
    identifier: _canvas_id [8026,8036]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [8038,8051]
    binary_expression [8038,8051]
        binary_expression [8038,8047]
            identifier: price [8038,8043]
            arithmetic_operator: - [8044,8045]
            identifier: m [8046,8047]
        arithmetic_operator: - [8048,8049]
        identifier: n [8050,8051]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [8053,8054]
    identifier: m [8053,8054]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [8270,8283]
    return: return [8270,8276]
    identifier: price [8277,8282]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [8314,8333]
    type_name: bytes32 [8314,8321]
    identifier: _project_id [8322,8333]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [8335,8353]
    type_name: bytes32 [8335,8342]
    identifier: _canvas_id [8343,8353]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [8355,8369]
    type_name: uint256 [8355,8362]
    identifier: _price [8363,8369]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [8371,8381]
    type_name: bool [8371,8375]
    identifier: _flag [8376,8381]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [8408,8438]
    returns: returns [8408,8415]
    parameter [8417,8426]
        type_name: uint256 [8417,8424]
        identifier: m [8425,8426]
    parameter [8428,8437]
        type_name: uint256 [8428,8435]
        identifier: n [8436,8437]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [8453,8514]
    call_expression [8453,8513]
        identifier: require [8453,8460]
        call_argument [8461,8480]
            binary_expression [8461,8480]
                member_expression: msg.value [8461,8470]
                comparison_operator: >= [8471,8473]
                identifier: _price [8474,8480]
        call_argument [8482,8512]
            string_literal [8482,8512]
                string: "not enough ether to mint NFT" [8482,8512]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [8542,8560]
    member_expression: msg.value [8542,8551]
    arithmetic_operator: - [8552,8553]
    identifier: _price [8554,8560]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
unary_expression [8575,8581]
    !: ! [8575,8576]
    identifier: _flag [8576,8581]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [8646,8667]
    member_expression: settings.ratio_base [8646,8665]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [8758,8779]
    member_expression: settings.ratio_base [8758,8777]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [8877,8887]
    variable_declaration [8877,8886]
        type_name: bool [8877,8881]
        identifier: succ [8882,8886]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [8896,9058]
    if: if [8896,8898]
    binary_expression [8900,8906]
        identifier: m [8900,8901]
        comparison_operator: != [8902,8904]
        number_literal: 0 [8905,8906]
    block_statement [8908,9058]
        expression_statement [8922,8986]
            assignment_expression [8922,8985]
                tuple_expression [8922,8929]
                    identifier: succ [8923,8927]
                affectation_operator: = [8930,8931]
                call_expression [8932,8985]
                    struct_expression [8932,8981]
                        member_expression: all_projects[_project_id].fee_pool.call [8932,8971]
                        struct_field_assignment [8972,8980]
                            identifier: value [8972,8977]
                            :: : [8977,8978]
                            identifier: m [8979,8980]
                    call_argument [8982,8984]
                        string_literal [8982,8984]
                            string: "" [8982,8984]
        expression_statement [8999,9048]
            call_expression [8999,9047]
                identifier: require [8999,9006]
                call_argument [9007,9011]
                    identifier: succ [9007,9011]
                call_argument [9013,9046]
                    string_literal [9013,9046]
                        string: "transfer project portion failed" [9013,9046]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [9067,9224]
    if: if [9067,9069]
    binary_expression [9071,9077]
        identifier: n [9071,9072]
        comparison_operator: != [9073,9075]
        number_literal: 0 [9076,9077]
    block_statement [9079,9224]
        expression_statement [9093,9151]
            assignment_expression [9093,9150]
                tuple_expression [9093,9100]
                    identifier: succ [9094,9098]
                affectation_operator: = [9101,9102]
                call_expression [9103,9150]
                    struct_expression [9103,9146]
                        member_expression: settings.protocol_fee_pool().call [9103,9136]
                        struct_field_assignment [9137,9145]
                            identifier: value [9137,9142]
                            :: : [9142,9143]
                            identifier: n [9144,9145]
                    call_argument [9147,9149]
                        string_literal [9147,9149]
                            string: "" [9147,9149]
        expression_statement [9164,9214]
            call_expression [9164,9213]
                identifier: require [9164,9171]
                call_argument [9172,9176]
                    identifier: succ [9172,9176]
                call_argument [9178,9212]
                    string_literal [9178,9212]
                        string: "transfer protocol portion failed" [9178,9212]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
tuple_expression [9233,9240]
    identifier: succ [9234,9238]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
struct_expression [9243,9313]
    member_expression: settings.owner_proxy().ownerOf(_canvas_id).call [9243,9290]
    struct_field_assignment [9291,9312]
        identifier: value [9291,9296]
        :: : [9296,9297]
        binary_expression [9298,9312]
            binary_expression [9298,9308]
                identifier: _price [9298,9304]
                arithmetic_operator: - [9305,9306]
                identifier: m [9307,9308]
            arithmetic_operator: - [9309,9310]
            identifier: n [9311,9312]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [9327,9375]
    call_expression [9327,9374]
        identifier: require [9327,9334]
        call_argument [9335,9339]
            identifier: succ [9335,9339]
        call_argument [9341,9373]
            string_literal [9341,9373]
                string: "transfer canvas portion failed" [9341,9373]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [9385,9530]
    if: if [9385,9387]
    binary_expression [9389,9402]
        identifier: exchange [9389,9397]
        comparison_operator: != [9398,9400]
        number_literal: 0 [9401,9402]
    block_statement [9404,9530]
        expression_statement [9418,9465]
            assignment_expression [9418,9464]
                tuple_expression [9418,9425]
                    identifier: succ [9419,9423]
                affectation_operator: = [9426,9427]
                call_expression [9428,9464]
                    struct_expression [9428,9460]
                        member_expression: msg.sender.call [9428,9443]
                        struct_field_assignment [9444,9459]
                            identifier: value [9444,9449]
                            :: : [9449,9450]
                            identifier: exchange [9451,9459]
                    call_argument [9461,9463]
                        string_literal [9461,9463]
                            string: "" [9461,9463]
        expression_statement [9478,9520]
            call_expression [9478,9519]
                identifier: require [9478,9485]
                call_argument [9486,9490]
                    identifier: succ [9486,9490]
                call_argument [9492,9518]
                    string_literal [9492,9518]
                        string: "transfer exchange failed" [9492,9518]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [13723,13732]
    type_name: bool [13723,13727]
    identifier: succ [13728,13732]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [13821,13864]
    call_expression [13821,13863]
        identifier: require [13821,13828]
        call_argument [13829,13833]
            identifier: succ [13829,13833]
        call_argument [13835,13862]
            string_literal [13835,13862]
                string: "not admin, can not change" [13835,13862]

