New cluster:
MOVE from source_file [0,149751]
------------
===
move-tree
---
pragma_directive [27417,27440]
    pragma: pragma [27417,27423]
    solidity_pragma_token [27424,27439]
        solidity: solidity [27424,27432]
        solidity_version_comparison_operator [27432,27434]
            bitwise_operator:  ^ [27432,27434]
        solidity_version: 0.5.2 [27434,27439]
to
source_file [0,149751]
at 23
===
move-tree
---
contract_declaration [99989,100172]
    identifier: Initializable [99998,100011]
    contract_body [100012,100172]
        state_variable_declaration [100019,100039]
            type_name: bool [100019,100023]
            identifier: inited [100024,100030]
            affectation_operator: = [100031,100032]
            boolean_literal: false [100033,100038]
        modifier_definition [100047,100169]
            modifier: modifier [100047,100055]
            identifier: initializer [100056,100067]
            function_body [100070,100169]
                expression_statement [100081,100116]
                    call_expression [100081,100115]
                        identifier: require [100081,100088]
                        call_argument [100089,100096]
                            unary_expression [100089,100096]
                                !: ! [100089,100090]
                                identifier: inited [100090,100096]
                        call_argument [100098,100114]
                            string_literal [100098,100114]
                                string: "already inited" [100098,100114]
                expression_statement [100126,100140]
                    assignment_expression [100126,100139]
                        identifier: inited [100126,100132]
                        affectation_operator: = [100133,100134]
                        boolean_literal: true [100135,100139]
                expression_statement [100160,100162]
                    identifier: _ [100160,100161]
to
source_file [0,149751]
at 44
===
move-tree
---
contract_declaration [82185,84708]
    identifier: ERC721Metadata [82194,82208]
    is: is [82209,82211]
    inheritance_specifier [82212,82218]
        user_defined_type [82212,82218]
            identifier: ERC165 [82212,82218]
    inheritance_specifier [82220,82226]
        user_defined_type [82220,82226]
            identifier: ERC721 [82220,82226]
    inheritance_specifier [82228,82243]
        user_defined_type [82228,82243]
            identifier: IERC721Metadata [82228,82243]
    contract_body [82244,84708]
        state_variable_declaration [82270,82291]
            type_name: string [82270,82276]
            visibility: private [82277,82284]
            identifier: _name [82285,82290]
        state_variable_declaration [82320,82343]
            type_name: string [82320,82326]
            visibility: private [82327,82334]
            identifier: _symbol [82335,82342]
        state_variable_declaration [82391,82437]
            type_name: mapping(uint256 => string) [82391,82417]
            visibility: private [82418,82425]
            identifier: _tokenURIs [82426,82436]
        state_variable_declaration [82445,82512]
            type_name: bytes4 [82445,82451]
            visibility: private [82452,82459]
            constant: constant [82460,82468]
            identifier: _INTERFACE_ID_ERC721_METADATA [82469,82498]
            affectation_operator: = [82499,82500]
            number_literal: 0x5b5e139f [82501,82511]
        constructor_definition [82749,83009]
            constructor: constructor [82749,82760]
            parameter [82762,82780]
                type_name: string [82762,82768]
                memory: memory [82769,82775]
                identifier: name [82776,82780]
            parameter [82782,82802]
                type_name: string [82782,82788]
                memory: memory [82789,82795]
                identifier: symbol [82796,82802]
            public: public [82804,82810]
            function_body [82811,83009]
                expression_statement [82822,82835]
                    assignment_expression [82822,82834]
                        identifier: _name [82822,82827]
                        affectation_operator: = [82828,82829]
                        identifier: name [82830,82834]
                expression_statement [82845,82862]
                    assignment_expression [82845,82861]
                        identifier: _symbol [82845,82852]
                        affectation_operator: = [82853,82854]
                        identifier: symbol [82855,82861]
                expression_statement [82952,83002]
                    call_expression [82952,83001]
                        identifier: _registerInterface [82952,82970]
                        call_argument [82971,83000]
                            identifier: _INTERFACE_ID_ERC721_METADATA [82971,83000]
        function_definition [83119,83204]
            function: function [83119,83127]
            identifier: name [83128,83132]
            visibility: external [83135,83143]
            state_mutability [83144,83148]
                view: view [83144,83148]
            return_type_definition [83149,83172]
                returns: returns [83149,83156]
                parameter [83158,83171]
                    type_name: string [83158,83164]
                    memory: memory [83165,83171]
            function_body [83173,83204]
                return_statement [83184,83197]
                    return: return [83184,83190]
                    identifier: _name [83191,83196]
        function_definition [83318,83407]
            function: function [83318,83326]
            identifier: symbol [83327,83333]
            visibility: external [83336,83344]
            state_mutability [83345,83349]
                view: view [83345,83349]
            return_type_definition [83350,83373]
                returns: returns [83350,83357]
                parameter [83359,83372]
                    type_name: string [83359,83365]
                    memory: memory [83366,83372]
            function_body [83374,83407]
                return_statement [83385,83400]
                    return: return [83385,83391]
                    identifier: _symbol [83392,83399]
        function_definition [83613,83767]
            function: function [83613,83621]
            identifier: tokenURI [83622,83630]
            parameter [83631,83646]
                type_name: uint256 [83631,83638]
                identifier: tokenId [83639,83646]
            visibility: external [83648,83656]
            state_mutability [83657,83661]
                view: view [83657,83661]
            return_type_definition [83662,83685]
                returns: returns [83662,83669]
                parameter [83671,83684]
                    type_name: string [83671,83677]
                    memory: memory [83678,83684]
            function_body [83686,83767]
                expression_statement [83697,83723]
                    call_expression [83697,83722]
                        identifier: require [83697,83704]
                        call_argument [83705,83721]
                            call_expression [83705,83721]
                                identifier: _exists [83705,83712]
                                call_argument [83713,83720]
                                    identifier: tokenId [83713,83720]
                return_statement [83733,83760]
                    return: return [83733,83739]
                    array_access [83740,83759]
                        identifier: _tokenURIs [83740,83750]
                        identifier: tokenId [83751,83758]
        function_definition [84012,84159]
            function: function [84012,84020]
            identifier: _setTokenURI [84021,84033]
            parameter [84034,84049]
                type_name: uint256 [84034,84041]
                identifier: tokenId [84042,84049]
            parameter [84051,84068]
                type_name: string [84051,84057]
                memory: memory [84058,84064]
                identifier: uri [84065,84068]
            visibility: internal [84070,84078]
            function_body [84079,84159]
                expression_statement [84090,84116]
                    call_expression [84090,84115]
                        identifier: require [84090,84097]
                        call_argument [84098,84114]
                            call_expression [84098,84114]
                                identifier: _exists [84098,84105]
                                call_argument [84106,84113]
                                    identifier: tokenId [84106,84113]
                expression_statement [84126,84152]
                    assignment_expression [84126,84151]
                        array_access [84126,84145]
                            identifier: _tokenURIs [84126,84136]
                            identifier: tokenId [84137,84144]
                        affectation_operator: = [84146,84147]
                        identifier: uri [84148,84151]
        function_definition [84458,84705]
            function: function [84458,84466]
            identifier: _burn [84467,84472]
            parameter [84473,84486]
                type_name: address [84473,84480]
                identifier: owner [84481,84486]
            parameter [84488,84503]
                type_name: uint256 [84488,84495]
                identifier: tokenId [84496,84503]
            visibility: internal [84505,84513]
            function_body [84514,84705]
                expression_statement [84525,84553]
                    call_expression [84525,84552]
                        member_expression: super._burn [84525,84536]
                        call_argument [84537,84542]
                            identifier: owner [84537,84542]
                        call_argument [84544,84551]
                            identifier: tokenId [84544,84551]
                if_statement [84601,84698]
                    if: if [84601,84603]
                    binary_expression [84605,84643]
                        member_expression: bytes(_tokenURIs[tokenId]).length [84605,84638]
                        comparison_operator: != [84639,84641]
                        number_literal: 0 [84642,84643]
                    block_statement [84645,84698]
                        expression_statement [84660,84687]
                            array_access [84660,84686]
                                unary_expression [84660,84677]
                                    delete: delete [84660,84666]
                                    identifier: _tokenURIs [84667,84677]
                                identifier: tokenId [84678,84685]
to
source_file [0,149751]
at 75
===
move-tree
---
contract_declaration [72592,72871]
    identifier: IERC721Enumerable [72601,72618]
    is: is [72619,72621]
    inheritance_specifier [72622,72629]
        user_defined_type [72622,72629]
            identifier: IERC721 [72622,72629]
    contract_body [72630,72871]
        function_definition [72637,72690]
            function: function [72637,72645]
            identifier: totalSupply [72646,72657]
            visibility: public [72660,72666]
            state_mutability [72667,72671]
                view: view [72667,72671]
            return_type_definition [72672,72689]
                returns: returns [72672,72679]
                parameter [72681,72688]
                    type_name: uint256 [72681,72688]
        function_definition [72696,72793]
            function: function [72696,72704]
            identifier: tokenOfOwnerByIndex [72705,72724]
            parameter [72725,72738]
                type_name: address [72725,72732]
                identifier: owner [72733,72738]
            parameter [72740,72753]
                type_name: uint256 [72740,72747]
                identifier: index [72748,72753]
            visibility: public [72755,72761]
            state_mutability [72762,72766]
                view: view [72762,72766]
            return_type_definition [72767,72792]
                returns: returns [72767,72774]
                parameter [72776,72791]
                    type_name: uint256 [72776,72783]
                    identifier: tokenId [72784,72791]
        function_definition [72801,72868]
            function: function [72801,72809]
            identifier: tokenByIndex [72810,72822]
            parameter [72823,72836]
                type_name: uint256 [72823,72830]
                identifier: index [72831,72836]
            visibility: public [72838,72844]
            state_mutability [72845,72849]
                view: view [72845,72849]
            return_type_definition [72850,72867]
                returns: returns [72850,72857]
                parameter [72859,72866]
                    type_name: uint256 [72859,72866]
to
source_file [0,149751]
at 70
===
move-tree
---
library_declaration [57051,58067]
    library: library [57051,57058]
    identifier: Address [57059,57066]
    contract_body [57067,58067]
        function_definition [57437,58064]
            function: function [57437,57445]
            identifier: isContract [57446,57456]
            parameter [57457,57472]
                type_name: address [57457,57464]
                identifier: account [57465,57472]
            visibility: internal [57474,57482]
            state_mutability [57483,57487]
                view: view [57483,57487]
            return_type_definition [57488,57502]
                returns: returns [57488,57495]
                parameter [57497,57501]
                    type_name: bool [57497,57501]
            function_body [57503,58064]
                variable_declaration_statement [57514,57527]
                    variable_declaration [57514,57526]
                        type_name: uint256 [57514,57521]
                        identifier: size [57522,57526]
                assembly_statement [57990,58031]
                    assembly: assembly [57990,57998]
                    yul_assignment [58001,58029]
                        yul_path [58001,58005]
                            yul_identifier [58001,58005]
                                identifier: size [58001,58005]
                        :=: := [58006,58008]
                        yul_function_call [58009,58029]
                            yul_evm_builtin [58009,58020]
                                extcodesize: extcodesize [58009,58020]
                            yul_path [58021,58028]
                                yul_identifier [58021,58028]
                                    identifier: account [58021,58028]
                return_statement [58041,58057]
                    return: return [58041,58047]
                    binary_expression [58048,58056]
                        identifier: size [58048,58052]
                        comparison_operator: > [58053,58054]
                        number_literal: 0 [58055,58056]
to
source_file [0,149751]
at 62
===
move-tree
---
interface_declaration [53963,54334]
    interface: interface [53963,53972]
    identifier: IERC165 [53973,53980]
    contract_body [53981,54334]
        function_definition [54255,54331]
            function: function [54255,54263]
            identifier: supportsInterface [54264,54281]
            parameter [54282,54300]
                type_name: bytes4 [54282,54288]
                identifier: interfaceId [54289,54300]
            visibility: external [54302,54310]
            state_mutability [54311,54315]
                view: view [54311,54315]
            return_type_definition [54316,54330]
                returns: returns [54316,54323]
                parameter [54325,54329]
                    type_name: bool [54325,54329]
to
source_file [0,149751]
at 56
===
move-tree
---
library_declaration [58744,59524]
    library: library [58744,58751]
    identifier: Counters [58752,58760]
    contract_body [58761,59524]
        using_directive [58768,58795]
            using: using [58768,58773]
            type_alias [58774,58782]
                identifier: SafeMath [58774,58782]
            for: for [58783,58786]
            type_name: uint256 [58787,58794]
        struct_declaration [58803,59182]
            struct: struct [58803,58809]
            identifier: Counter [58810,58817]
            struct_member [59146,59161]
                type_name: uint256 [59146,59153]
                identifier: _value [59154,59160]
        function_definition [59190,59304]
            function: function [59190,59198]
            identifier: current [59199,59206]
            parameter [59207,59230]
                type_name: Counter [59207,59214]
                storage: storage [59215,59222]
                identifier: counter [59223,59230]
            visibility: internal [59232,59240]
            state_mutability [59241,59245]
                view: view [59241,59245]
            return_type_definition [59246,59263]
                returns: returns [59246,59253]
                parameter [59255,59262]
                    type_name: uint256 [59255,59262]
            function_body [59264,59304]
                return_statement [59275,59297]
                    return: return [59275,59281]
                    member_expression: counter._value [59282,59296]
        function_definition [59312,59403]
            function: function [59312,59320]
            identifier: increment [59321,59330]
            parameter [59331,59354]
                type_name: Counter [59331,59338]
                storage: storage [59339,59346]
                identifier: counter [59347,59354]
            visibility: internal [59356,59364]
            function_body [59365,59403]
                expression_statement [59376,59396]
                    augmented_assignment_expression [59376,59395]
                        member_expression: counter._value [59376,59390]
                        affectation_operator: += [59391,59393]
                        number_literal: 1 [59394,59395]
        function_definition [59411,59521]
            function: function [59411,59419]
            identifier: decrement [59420,59429]
            parameter [59430,59453]
                type_name: Counter [59430,59437]
                storage: storage [59438,59445]
                identifier: counter [59446,59453]
            visibility: internal [59455,59463]
            function_body [59464,59521]
                expression_statement [59475,59514]
                    assignment_expression [59475,59513]
                        member_expression: counter._value [59475,59489]
                        affectation_operator: = [59490,59491]
                        call_expression [59492,59513]
                            member_expression: counter._value.sub [59492,59510]
                            call_argument [59511,59512]
                                number_literal: 1 [59511,59512]
to
source_file [0,149751]
at 64
===
move-tree
---
contract_declaration [115819,118197]
    identifier: StakeManagerStorage [115828,115847]
    is: is [115848,115850]
    inheritance_specifier [115851,115869]
        user_defined_type [115851,115869]
            identifier: GovernanceLockable [115851,115869]
    inheritance_specifier [115871,115884]
        user_defined_type [115871,115884]
            identifier: RootChainable [115871,115884]
    contract_body [115885,118197]
        state_variable_declaration [115892,115912]
            type_name: IERC20 [115892,115898]
            visibility: public [115899,115905]
            identifier: token [115906,115911]
        state_variable_declaration [115918,115942]
            type_name: address [115918,115925]
            visibility: public [115926,115932]
            identifier: registry [115933,115941]
        state_variable_declaration [115948,115974]
            type_name: StakingInfo [115948,115959]
            visibility: public [115960,115966]
            identifier: logger [115967,115973]
        state_variable_declaration [115980,116010]
            type_name: StakingNFT [115980,115990]
            visibility: public [115991,115997]
            identifier: NFTContract [115998,116009]
        state_variable_declaration [116016,116053]
            type_name: ValidatorShareFactory [116016,116037]
            visibility: public [116038,116044]
            identifier: factory [116045,116052]
        state_variable_declaration [116059,116091]
            type_name: uint256 [116059,116066]
            visibility: public [116067,116073]
            identifier: WITHDRAWAL_DELAY [116074,116090]
        state_variable_declaration [116112,116140]
            type_name: uint256 [116112,116119]
            visibility: public [116120,116126]
            identifier: currentEpoch [116127,116139]
        state_variable_declaration [116185,116209]
            type_name: uint256 [116185,116192]
            visibility: public [116193,116199]
            identifier: dynasty [116200,116207]
        state_variable_declaration [116238,116271]
            type_name: uint256 [116238,116245]
            visibility: public [116246,116252]
            identifier: CHECKPOINT_REWARD [116253,116270]
        state_variable_declaration [116302,116328]
            type_name: uint256 [116302,116309]
            visibility: public [116310,116316]
            identifier: minDeposit [116317,116327]
        state_variable_declaration [116352,116382]
            type_name: uint256 [116352,116359]
            visibility: public [116360,116366]
            identifier: minHeimdallFee [116367,116381]
        state_variable_declaration [116406,116445]
            type_name: uint256 [116406,116413]
            visibility: public [116414,116420]
            identifier: checkPointBlockInterval [116421,116444]
        state_variable_declaration [116451,116484]
            type_name: uint256 [116451,116458]
            visibility: public [116459,116465]
            identifier: signerUpdateLimit [116466,116483]
        state_variable_declaration [116492,116526]
            type_name: uint256 [116492,116499]
            visibility: public [116500,116506]
            identifier: validatorThreshold [116507,116525]
        state_variable_declaration [116538,116565]
            type_name: uint256 [116538,116545]
            visibility: public [116546,116552]
            identifier: totalStaked [116553,116564]
        state_variable_declaration [116571,116597]
            type_name: uint256 [116571,116578]
            visibility: public [116579,116585]
            identifier: NFTCounter [116586,116596]
        state_variable_declaration [116603,116631]
            type_name: uint256 [116603,116610]
            visibility: public [116611,116617]
            identifier: totalRewards [116618,116630]
        state_variable_declaration [116637,116675]
            type_name: uint256 [116637,116644]
            visibility: public [116645,116651]
            identifier: totalRewardsLiquidated [116652,116674]
        state_variable_declaration [116681,116710]
            type_name: uint256 [116681,116688]
            visibility: public [116689,116695]
            identifier: auctionPeriod [116696,116709]
        state_variable_declaration [116736,116765]
            type_name: uint256 [116736,116743]
            visibility: public [116744,116750]
            identifier: proposerBonus [116751,116764]
        state_variable_declaration [116796,116828]
            type_name: bytes32 [116796,116803]
            visibility: public [116804,116810]
            identifier: accountStateRoot [116811,116827]
        state_variable_declaration [116907,116942]
            type_name: uint256 [116907,116914]
            visibility: public [116915,116921]
            identifier: replacementCoolDown [116922,116941]
        state_variable_declaration [116948,116978]
            type_name: bool [116948,116952]
            visibility: public [116953,116959]
            identifier: delegationEnabled [116960,116977]
        struct_declaration [116986,117147]
            struct: struct [116986,116992]
            identifier: Auction [116993,117000]
            struct_member [117012,117027]
                type_name: uint256 [117012,117019]
                identifier: amount [117020,117026]
            struct_member [117037,117056]
                type_name: uint256 [117037,117044]
                identifier: startEpoch [117045,117055]
            struct_member [117066,117079]
                type_name: address [117066,117073]
                identifier: user [117074,117078]
            struct_member [117089,117111]
                type_name: bool [117089,117093]
                identifier: acceptDelegation [117094,117110]
            struct_member [117121,117140]
                type_name: bytes [117121,117126]
                identifier: signerPubkey [117127,117139]
        struct_declaration [117155,117231]
            struct: struct [117155,117161]
            identifier: State [117162,117167]
            struct_member [117179,117194]
                type_name: uint256 [117179,117186]
                identifier: amount [117187,117193]
            struct_member [117204,117224]
                type_name: uint256 [117204,117211]
                identifier: stakerCount [117212,117223]
        struct_declaration [117239,117319]
            struct: struct [117239,117245]
            identifier: StateChange [117246,117257]
            struct_member [117269,117283]
                type_name: int256 [117269,117275]
                identifier: amount [117276,117282]
            struct_member [117293,117312]
                type_name: int256 [117293,117299]
                identifier: stakerCount [117300,117311]
        enum_declaration [117327,117375]
            enum: enum [117327,117331]
            identifier: Status [117332,117338]
            enum_value: Inactive [117340,117348]
            enum_value: Active [117350,117356]
            enum_value: Locked [117358,117364]
            enum_value: Unstaked [117366,117374]
        struct_declaration [117381,117636]
            struct: struct [117381,117387]
            identifier: Validator [117388,117397]
            struct_member [117409,117424]
                type_name: uint256 [117409,117416]
                identifier: amount [117417,117423]
            struct_member [117434,117449]
                type_name: uint256 [117434,117441]
                identifier: reward [117442,117448]
            struct_member [117459,117483]
                type_name: uint256 [117459,117466]
                identifier: activationEpoch [117467,117482]
            struct_member [117493,117519]
                type_name: uint256 [117493,117500]
                identifier: deactivationEpoch [117501,117518]
            struct_member [117529,117546]
                type_name: uint256 [117529,117536]
                identifier: jailTime [117537,117545]
            struct_member [117556,117571]
                type_name: address [117556,117563]
                identifier: signer [117564,117570]
            struct_member [117581,117605]
                type_name: address [117581,117588]
                identifier: contractAddress [117589,117604]
            struct_member [117615,117629]
                type_name: Status [117615,117621]
                identifier: status [117622,117628]
        state_variable_declaration [117644,117692]
            type_name: mapping(uint256 => Validator) [117644,117673]
            visibility: public [117674,117680]
            identifier: validators [117681,117691]
        state_variable_declaration [117734,117787]
            type_name: mapping(address => uint256) [117734,117761]
            visibility: public [117762,117768]
            identifier: signerToValidator [117769,117786]
        state_variable_declaration [117793,117821]
            type_name: State [117793,117798]
            visibility: public [117799,117805]
            identifier: validatorState [117806,117820]
        state_variable_declaration [117827,117888]
            type_name: mapping(uint256 => StateChange) [117827,117858]
            visibility: public [117859,117865]
            identifier: validatorStateChanges [117866,117887]
        state_variable_declaration [117896,117943]
            type_name: mapping(address => uint256) [117896,117923]
            visibility: public [117924,117930]
            identifier: userFeeExit [117931,117942]
        state_variable_declaration [117989,118041]
            type_name: mapping(uint256 => Auction) [117989,118016]
            visibility: public [118017,118023]
            identifier: validatorAuction [118024,118040]
        state_variable_declaration [118095,118154]
            type_name: mapping(uint256 => uint256) [118095,118122]
            visibility: public [118123,118129]
            identifier: latestSignerUpdateEpoch [118130,118153]
        state_variable_declaration [118162,118194]
            type_name: uint256 [118162,118169]
            visibility: public [118170,118176]
            identifier: totalHeimdallFee [118177,118193]
to
source_file [0,149751]
at 87
===
move-tree
---
contract_declaration [99709,99905]
    identifier: OwnableLockable [99718,99733]
    is: is [99734,99736]
    inheritance_specifier [99737,99745]
        user_defined_type [99737,99745]
            identifier: Lockable [99737,99745]
    inheritance_specifier [99747,99754]
        user_defined_type [99747,99754]
            identifier: Ownable [99747,99754]
    contract_body [99755,99905]
        function_definition [99762,99826]
            function: function [99762,99770]
            identifier: lock [99771,99775]
            visibility: public [99778,99784]
            modifier_invocation [99785,99794]
                identifier: onlyOwner [99785,99794]
            function_body [99795,99826]
                expression_statement [99806,99819]
                    call_expression [99806,99818]
                        member_expression: super.lock [99806,99816]
        function_definition [99834,99902]
            function: function [99834,99842]
            identifier: unlock [99843,99849]
            visibility: public [99852,99858]
            modifier_invocation [99859,99868]
                identifier: onlyOwner [99859,99868]
            function_body [99869,99902]
                expression_statement [99880,99895]
                    call_expression [99880,99894]
                        member_expression: super.unlock [99880,99892]
to
source_file [0,149751]
at 51
===
move-tree
---
contract_declaration [55865,56895]
    identifier: IERC721Receiver [55874,55889]
    contract_body [55890,56895]
        function_definition [56769,56892]
            function: function [56769,56777]
            identifier: onERC721Received [56778,56794]
            parameter [56795,56811]
                type_name: address [56795,56802]
                identifier: operator [56803,56811]
            parameter [56813,56825]
                type_name: address [56813,56820]
                identifier: from [56821,56825]
            parameter [56827,56842]
                type_name: uint256 [56827,56834]
                identifier: tokenId [56835,56842]
            parameter [56844,56861]
                type_name: bytes [56844,56849]
                memory: memory [56850,56856]
                identifier: data [56857,56861]
            visibility: public [56868,56874]
            return_type_definition [56875,56891]
                returns: returns [56875,56882]
                parameter [56884,56890]
                    type_name: bytes4 [56884,56890]
to
source_file [0,149751]
at 60
===
move-tree
---
contract_declaration [92142,99336]
    identifier: ERC20 [92151,92156]
    is: is [92157,92159]
    inheritance_specifier [92160,92166]
        user_defined_type [92160,92166]
            identifier: IERC20 [92160,92166]
    contract_body [92167,99336]
        using_directive [92174,92201]
            using: using [92174,92179]
            type_alias [92180,92188]
                identifier: SafeMath [92180,92188]
            for: for [92189,92192]
            type_name: uint256 [92193,92200]
        state_variable_declaration [92209,92256]
            type_name: mapping (address => uint256) [92209,92237]
            visibility: private [92238,92245]
            identifier: _balances [92246,92255]
        state_variable_declaration [92264,92331]
            type_name: mapping (address => mapping (address => uint256)) [92264,92313]
            visibility: private [92314,92321]
            identifier: _allowed [92322,92330]
        state_variable_declaration [92339,92368]
            type_name: uint256 [92339,92346]
            visibility: private [92347,92354]
            identifier: _totalSupply [92355,92367]
        function_definition [92443,92534]
            function: function [92443,92451]
            identifier: totalSupply [92452,92463]
            visibility: public [92466,92472]
            state_mutability [92473,92477]
                view: view [92473,92477]
            return_type_definition [92478,92495]
                returns: returns [92478,92485]
                parameter [92487,92494]
                    type_name: uint256 [92487,92494]
            function_body [92496,92534]
                return_statement [92507,92527]
                    return: return [92507,92513]
                    identifier: _totalSupply [92514,92526]
        function_definition [92753,92859]
            function: function [92753,92761]
            identifier: balanceOf [92762,92771]
            parameter [92772,92785]
                type_name: address [92772,92779]
                identifier: owner [92780,92785]
            visibility: public [92787,92793]
            state_mutability [92794,92798]
                view: view [92794,92798]
            return_type_definition [92799,92816]
                returns: returns [92799,92806]
                parameter [92808,92815]
                    type_name: uint256 [92808,92815]
            function_body [92817,92859]
                return_statement [92828,92852]
                    return: return [92828,92834]
                    array_access [92835,92851]
                        identifier: _balances [92835,92844]
                        identifier: owner [92845,92850]
        function_definition [93198,93329]
            function: function [93198,93206]
            identifier: allowance [93207,93216]
            parameter [93217,93230]
                type_name: address [93217,93224]
                identifier: owner [93225,93230]
            parameter [93232,93247]
                type_name: address [93232,93239]
                identifier: spender [93240,93247]
            visibility: public [93249,93255]
            state_mutability [93256,93260]
                view: view [93256,93260]
            return_type_definition [93261,93278]
                returns: returns [93261,93268]
                parameter [93270,93277]
                    type_name: uint256 [93270,93277]
            function_body [93279,93329]
                return_statement [93290,93322]
                    return: return [93290,93296]
                    array_access [93297,93321]
                        array_access [93297,93312]
                            identifier: _allowed [93297,93305]
                            identifier: owner [93306,93311]
                        identifier: spender [93313,93320]
        function_definition [93503,93643]
            function: function [93503,93511]
            identifier: transfer [93512,93520]
            parameter [93521,93531]
                type_name: address [93521,93528]
                identifier: to [93529,93531]
            parameter [93533,93546]
                type_name: uint256 [93533,93540]
                identifier: value [93541,93546]
            visibility: public [93548,93554]
            return_type_definition [93555,93569]
                returns: returns [93555,93562]
                parameter [93564,93568]
                    type_name: bool [93564,93568]
            function_body [93570,93643]
                expression_statement [93581,93614]
                    call_expression [93581,93613]
                        identifier: _transfer [93581,93590]
                        call_argument [93591,93601]
                            member_expression: msg.sender [93591,93601]
                        call_argument [93603,93605]
                            identifier: to [93603,93605]
                        call_argument [93607,93612]
                            identifier: value [93607,93612]
                return_statement [93624,93636]
                    return: return [93624,93630]
                    boolean_literal: true [93631,93635]
        function_definition [94290,94438]
            function: function [94290,94298]
            identifier: approve [94299,94306]
            parameter [94307,94322]
                type_name: address [94307,94314]
                identifier: spender [94315,94322]
            parameter [94324,94337]
                type_name: uint256 [94324,94331]
                identifier: value [94332,94337]
            visibility: public [94339,94345]
            return_type_definition [94346,94360]
                returns: returns [94346,94353]
                parameter [94355,94359]
                    type_name: bool [94355,94359]
            function_body [94361,94438]
                expression_statement [94372,94409]
                    call_expression [94372,94408]
                        identifier: _approve [94372,94380]
                        call_argument [94381,94391]
                            member_expression: msg.sender [94381,94391]
                        call_argument [94393,94400]
                            identifier: spender [94393,94400]
                        call_argument [94402,94407]
                            identifier: value [94402,94407]
                return_statement [94419,94431]
                    return: return [94419,94425]
                    boolean_literal: true [94426,94430]
        function_definition [94911,95139]
            function: function [94911,94919]
            identifier: transferFrom [94920,94932]
            parameter [94933,94945]
                type_name: address [94933,94940]
                identifier: from [94941,94945]
            parameter [94947,94957]
                type_name: address [94947,94954]
                identifier: to [94955,94957]
            parameter [94959,94972]
                type_name: uint256 [94959,94966]
                identifier: value [94967,94972]
            visibility: public [94974,94980]
            return_type_definition [94981,94995]
                returns: returns [94981,94988]
                parameter [94990,94994]
                    type_name: bool [94990,94994]
            function_body [94996,95139]
                expression_statement [95007,95034]
                    call_expression [95007,95033]
                        identifier: _transfer [95007,95016]
                        call_argument [95017,95021]
                            identifier: from [95017,95021]
                        call_argument [95023,95025]
                            identifier: to [95023,95025]
                        call_argument [95027,95032]
                            identifier: value [95027,95032]
                expression_statement [95044,95110]
                    call_expression [95044,95109]
                        identifier: _approve [95044,95052]
                        call_argument [95053,95057]
                            identifier: from [95053,95057]
                        call_argument [95059,95069]
                            member_expression: msg.sender [95059,95069]
                        call_argument [95071,95108]
                            call_expression [95071,95108]
                                member_expression: _allowed[from][msg.sender].sub [95071,95101]
                                call_argument [95102,95107]
                                    identifier: value [95102,95107]
                return_statement [95120,95132]
                    return: return [95120,95126]
                    boolean_literal: true [95127,95131]
        function_definition [95665,95868]
            function: function [95665,95673]
            identifier: increaseAllowance [95674,95691]
            parameter [95692,95707]
                type_name: address [95692,95699]
                identifier: spender [95700,95707]
            parameter [95709,95727]
                type_name: uint256 [95709,95716]
                identifier: addedValue [95717,95727]
            visibility: public [95729,95735]
            return_type_definition [95736,95750]
                returns: returns [95736,95743]
                parameter [95745,95749]
                    type_name: bool [95745,95749]
            function_body [95751,95868]
                expression_statement [95762,95839]
                    call_expression [95762,95838]
                        identifier: _approve [95762,95770]
                        call_argument [95771,95781]
                            member_expression: msg.sender [95771,95781]
                        call_argument [95783,95790]
                            identifier: spender [95783,95790]
                        call_argument [95792,95837]
                            call_expression [95792,95837]
                                member_expression: _allowed[msg.sender][spender].add [95792,95825]
                                call_argument [95826,95836]
                                    identifier: addedValue [95826,95836]
                return_statement [95849,95861]
                    return: return [95849,95855]
                    boolean_literal: true [95856,95860]
        function_definition [96399,96612]
            function: function [96399,96407]
            identifier: decreaseAllowance [96408,96425]
            parameter [96426,96441]
                type_name: address [96426,96433]
                identifier: spender [96434,96441]
            parameter [96443,96466]
                type_name: uint256 [96443,96450]
                identifier: subtractedValue [96451,96466]
            visibility: public [96468,96474]
            return_type_definition [96475,96489]
                returns: returns [96475,96482]
                parameter [96484,96488]
                    type_name: bool [96484,96488]
            function_body [96490,96612]
                expression_statement [96501,96583]
                    call_expression [96501,96582]
                        identifier: _approve [96501,96509]
                        call_argument [96510,96520]
                            member_expression: msg.sender [96510,96520]
                        call_argument [96522,96529]
                            identifier: spender [96522,96529]
                        call_argument [96531,96581]
                            call_expression [96531,96581]
                                member_expression: _allowed[msg.sender][spender].sub [96531,96564]
                                call_argument [96565,96580]
                                    identifier: subtractedValue [96565,96580]
                return_statement [96593,96605]
                    return: return [96593,96599]
                    boolean_literal: true [96600,96604]
        function_definition [96839,97101]
            function: function [96839,96847]
            identifier: _transfer [96848,96857]
            parameter [96858,96870]
                type_name: address [96858,96865]
                identifier: from [96866,96870]
            parameter [96872,96882]
                type_name: address [96872,96879]
                identifier: to [96880,96882]
            parameter [96884,96897]
                type_name: uint256 [96884,96891]
                identifier: value [96892,96897]
            visibility: internal [96899,96907]
            function_body [96908,97101]
                expression_statement [96919,96945]
                    call_expression [96919,96944]
                        identifier: require [96919,96926]
                        call_argument [96927,96943]
                            binary_expression [96927,96943]
                                identifier: to [96927,96929]
                                comparison_operator: != [96930,96932]
                                type_cast_expression [96933,96943]
                                    primitive_type: address [96933,96940]
                                    call_argument [96941,96942]
                                        number_literal: 0 [96941,96942]
                expression_statement [96957,97002]
                    assignment_expression [96957,97001]
                        array_access [96957,96972]
                            identifier: _balances [96957,96966]
                            identifier: from [96967,96971]
                        affectation_operator: = [96973,96974]
                        call_expression [96975,97001]
                            member_expression: _balances[from].sub [96975,96994]
                            call_argument [96995,97000]
                                identifier: value [96995,97000]
                expression_statement [97012,97053]
                    assignment_expression [97012,97052]
                        array_access [97012,97025]
                            identifier: _balances [97012,97021]
                            identifier: to [97022,97024]
                        affectation_operator: = [97026,97027]
                        call_expression [97028,97052]
                            member_expression: _balances[to].add [97028,97045]
                            call_argument [97046,97051]
                                identifier: value [97046,97051]
                emit_statement [97063,97094]
                    identifier: Transfer [97068,97076]
                    call_argument [97077,97081]
                        identifier: from [97077,97081]
                    call_argument [97083,97085]
                        identifier: to [97083,97085]
                    call_argument [97087,97092]
                        identifier: value [97087,97092]
        function_definition [97453,97722]
            function: function [97453,97461]
            identifier: _mint [97462,97467]
            parameter [97468,97483]
                type_name: address [97468,97475]
                identifier: account [97476,97483]
            parameter [97485,97498]
                type_name: uint256 [97485,97492]
                identifier: value [97493,97498]
            visibility: internal [97500,97508]
            function_body [97509,97722]
                expression_statement [97520,97551]
                    call_expression [97520,97550]
                        identifier: require [97520,97527]
                        call_argument [97528,97549]
                            binary_expression [97528,97549]
                                identifier: account [97528,97535]
                                comparison_operator: != [97536,97538]
                                type_cast_expression [97539,97549]
                                    primitive_type: address [97539,97546]
                                    call_argument [97547,97548]
                                        number_literal: 0 [97547,97548]
                expression_statement [97563,97602]
                    assignment_expression [97563,97601]
                        identifier: _totalSupply [97563,97575]
                        affectation_operator: = [97576,97577]
                        call_expression [97578,97601]
                            member_expression: _totalSupply.add [97578,97594]
                            call_argument [97595,97600]
                                identifier: value [97595,97600]
                expression_statement [97612,97663]
                    assignment_expression [97612,97662]
                        array_access [97612,97630]
                            identifier: _balances [97612,97621]
                            identifier: account [97622,97629]
                        affectation_operator: = [97631,97632]
                        call_expression [97633,97662]
                            member_expression: _balances[account].add [97633,97655]
                            call_argument [97656,97661]
                                identifier: value [97656,97661]
                emit_statement [97673,97715]
                    identifier: Transfer [97678,97686]
                    call_argument [97687,97697]
                        type_cast_expression [97687,97697]
                            primitive_type: address [97687,97694]
                            call_argument [97695,97696]
                                number_literal: 0 [97695,97696]
                    call_argument [97699,97706]
                        identifier: account [97699,97706]
                    call_argument [97708,97713]
                        identifier: value [97708,97713]
        function_definition [97956,98225]
            function: function [97956,97964]
            identifier: _burn [97965,97970]
            parameter [97971,97986]
                type_name: address [97971,97978]
                identifier: account [97979,97986]
            parameter [97988,98001]
                type_name: uint256 [97988,97995]
                identifier: value [97996,98001]
            visibility: internal [98003,98011]
            function_body [98012,98225]
                expression_statement [98023,98054]
                    call_expression [98023,98053]
                        identifier: require [98023,98030]
                        call_argument [98031,98052]
                            binary_expression [98031,98052]
                                identifier: account [98031,98038]
                                comparison_operator: != [98039,98041]
                                type_cast_expression [98042,98052]
                                    primitive_type: address [98042,98049]
                                    call_argument [98050,98051]
                                        number_literal: 0 [98050,98051]
                expression_statement [98066,98105]
                    assignment_expression [98066,98104]
                        identifier: _totalSupply [98066,98078]
                        affectation_operator: = [98079,98080]
                        call_expression [98081,98104]
                            member_expression: _totalSupply.sub [98081,98097]
                            call_argument [98098,98103]
                                identifier: value [98098,98103]
                expression_statement [98115,98166]
                    assignment_expression [98115,98165]
                        array_access [98115,98133]
                            identifier: _balances [98115,98124]
                            identifier: account [98125,98132]
                        affectation_operator: = [98134,98135]
                        call_expression [98136,98165]
                            member_expression: _balances[account].sub [98136,98158]
                            call_argument [98159,98164]
                                identifier: value [98159,98164]
                emit_statement [98176,98218]
                    identifier: Transfer [98181,98189]
                    call_argument [98190,98197]
                        identifier: account [98190,98197]
                    call_argument [98199,98209]
                        type_cast_expression [98199,98209]
                            primitive_type: address [98199,98206]
                            call_argument [98207,98208]
                                number_literal: 0 [98207,98208]
                    call_argument [98211,98216]
                        identifier: value [98211,98216]
        function_definition [98498,98752]
            function: function [98498,98506]
            identifier: _approve [98507,98515]
            parameter [98516,98529]
                type_name: address [98516,98523]
                identifier: owner [98524,98529]
            parameter [98531,98546]
                type_name: address [98531,98538]
                identifier: spender [98539,98546]
            parameter [98548,98561]
                type_name: uint256 [98548,98555]
                identifier: value [98556,98561]
            visibility: internal [98563,98571]
            function_body [98572,98752]
                expression_statement [98583,98614]
                    call_expression [98583,98613]
                        identifier: require [98583,98590]
                        call_argument [98591,98612]
                            binary_expression [98591,98612]
                                identifier: spender [98591,98598]
                                comparison_operator: != [98599,98601]
                                type_cast_expression [98602,98612]
                                    primitive_type: address [98602,98609]
                                    call_argument [98610,98611]
                                        number_literal: 0 [98610,98611]
                expression_statement [98624,98653]
                    call_expression [98624,98652]
                        identifier: require [98624,98631]
                        call_argument [98632,98651]
                            binary_expression [98632,98651]
                                identifier: owner [98632,98637]
                                comparison_operator: != [98638,98640]
                                type_cast_expression [98641,98651]
                                    primitive_type: address [98641,98648]
                                    call_argument [98649,98650]
                                        number_literal: 0 [98649,98650]
                expression_statement [98665,98698]
                    assignment_expression [98665,98697]
                        array_access [98665,98689]
                            array_access [98665,98680]
                                identifier: _allowed [98665,98673]
                                identifier: owner [98674,98679]
                            identifier: spender [98681,98688]
                        affectation_operator: = [98690,98691]
                        identifier: value [98692,98697]
                emit_statement [98708,98745]
                    identifier: Approval [98713,98721]
                    call_argument [98722,98727]
                        identifier: owner [98722,98727]
                    call_argument [98729,98736]
                        identifier: spender [98729,98736]
                    call_argument [98738,98743]
                        identifier: value [98738,98743]
        function_definition [99151,99333]
            function: function [99151,99159]
            identifier: _burnFrom [99160,99169]
            parameter [99170,99185]
                type_name: address [99170,99177]
                identifier: account [99178,99185]
            parameter [99187,99200]
                type_name: uint256 [99187,99194]
                identifier: value [99195,99200]
            visibility: internal [99202,99210]
            function_body [99211,99333]
                expression_statement [99222,99244]
                    call_expression [99222,99243]
                        identifier: _burn [99222,99227]
                        call_argument [99228,99235]
                            identifier: account [99228,99235]
                        call_argument [99237,99242]
                            identifier: value [99237,99242]
                expression_statement [99254,99326]
                    call_expression [99254,99325]
                        identifier: _approve [99254,99262]
                        call_argument [99263,99270]
                            identifier: account [99263,99270]
                        call_argument [99272,99282]
                            member_expression: msg.sender [99272,99282]
                        call_argument [99284,99324]
                            call_expression [99284,99324]
                                member_expression: _allowed[account][msg.sender].sub [99284,99317]
                                call_argument [99318,99323]
                                    identifier: value [99318,99323]
to
source_file [0,149751]
at 35
===
move-tree
---
interface_declaration [86581,86748]
    interface: interface [86581,86590]
    identifier: ERCProxy [86591,86599]
    contract_body [86600,86748]
        function_definition [86607,86672]
            function: function [86607,86615]
            identifier: proxyType [86616,86625]
            visibility: external [86628,86636]
            state_mutability [86637,86641]
                pure: pure [86637,86641]
            return_type_definition [86642,86671]
                returns: returns [86642,86649]
                parameter [86651,86670]
                    type_name: uint256 [86651,86658]
                    identifier: proxyTypeId [86659,86670]
        function_definition [86678,86745]
            function: function [86678,86686]
            identifier: implementation [86687,86701]
            visibility: external [86704,86712]
            state_mutability [86713,86717]
                view: view [86713,86717]
            return_type_definition [86718,86744]
                returns: returns [86718,86725]
                parameter [86727,86743]
                    type_name: address [86727,86734]
                    identifier: codeAddr [86735,86743]
to
source_file [0,149751]
at 80
===
move-tree
---
contract_declaration [85092,85323]
    identifier: ERC721Full [85101,85111]
    is: is [85112,85114]
    inheritance_specifier [85115,85121]
        user_defined_type [85115,85121]
            identifier: ERC721 [85115,85121]
    inheritance_specifier [85123,85139]
        user_defined_type [85123,85139]
            identifier: ERC721Enumerable [85123,85139]
    inheritance_specifier [85141,85155]
        user_defined_type [85141,85155]
            identifier: ERC721Metadata [85141,85155]
    contract_body [85156,85323]
        constructor_definition [85163,85320]
            constructor: constructor [85163,85174]
            parameter [85176,85194]
                type_name: string [85176,85182]
                memory: memory [85183,85189]
                identifier: name [85190,85194]
            parameter [85196,85216]
                type_name: string [85196,85202]
                memory: memory [85203,85209]
                identifier: symbol [85210,85216]
            public: public [85218,85224]
            modifier_invocation [85225,85253]
                identifier: ERC721Metadata [85225,85239]
                call_argument [85240,85244]
                    identifier: name [85240,85244]
                call_argument [85246,85252]
                    identifier: symbol [85246,85252]
            function_body [85254,85320]
to
source_file [0,149751]
at 77
===
move-tree
---
contract_declaration [85418,86232]
    identifier: StakingNFT [85427,85437]
    is: is [85438,85440]
    inheritance_specifier [85441,85451]
        user_defined_type [85441,85451]
            identifier: ERC721Full [85441,85451]
    inheritance_specifier [85453,85460]
        user_defined_type [85453,85460]
            identifier: Ownable [85453,85460]
    contract_body [85461,86232]
        constructor_definition [85468,85643]
            constructor: constructor [85468,85479]
            parameter [85480,85498]
                type_name: string [85480,85486]
                memory: memory [85487,85493]
                identifier: name [85494,85498]
            parameter [85500,85520]
                type_name: string [85500,85506]
                memory: memory [85507,85513]
                identifier: symbol [85514,85520]
            public: public [85531,85537]
            modifier_invocation [85547,85571]
                identifier: ERC721Full [85547,85557]
                call_argument [85558,85562]
                    identifier: name [85558,85562]
                call_argument [85564,85570]
                    identifier: symbol [85564,85570]
            function_body [85577,85643]
        function_definition [85651,85874]
            function: function [85651,85659]
            identifier: mint [85660,85664]
            parameter [85665,85675]
                type_name: address [85665,85672]
                identifier: to [85673,85675]
            parameter [85677,85692]
                type_name: uint256 [85677,85684]
                identifier: tokenId [85685,85692]
            visibility: public [85694,85700]
            modifier_invocation [85701,85710]
                identifier: onlyOwner [85701,85710]
            function_body [85711,85874]
                expression_statement [85722,85838]
                    call_expression [85722,85837]
                        identifier: require [85722,85729]
                        call_argument [85744,85762]
                            binary_expression [85744,85762]
                                call_expression [85744,85757]
                                    identifier: balanceOf [85744,85753]
                                    call_argument [85754,85756]
                                        identifier: to [85754,85756]
                                comparison_operator: == [85758,85760]
                                number_literal: 0 [85761,85762]
                        call_argument [85777,85826]
                            string_literal [85777,85826]
                                string: "Validators MUST NOT own multiple stake position" [85777,85826]
                expression_statement [85848,85867]
                    call_expression [85848,85866]
                        identifier: _mint [85848,85853]
                        call_argument [85854,85856]
                            identifier: to [85854,85856]
                        call_argument [85858,85865]
                            identifier: tokenId [85858,85865]
        function_definition [85882,85963]
            function: function [85882,85890]
            identifier: burn [85891,85895]
            parameter [85896,85911]
                type_name: uint256 [85896,85903]
                identifier: tokenId [85904,85911]
            visibility: public [85913,85919]
            modifier_invocation [85920,85929]
                identifier: onlyOwner [85920,85929]
            function_body [85930,85963]
                expression_statement [85941,85956]
                    call_expression [85941,85955]
                        identifier: _burn [85941,85946]
                        call_argument [85947,85954]
                            identifier: tokenId [85947,85954]
        function_definition [85971,86229]
            function: function [85971,85979]
            identifier: _transferFrom [85980,85993]
            parameter [85994,86006]
                type_name: address [85994,86001]
                identifier: from [86002,86006]
            parameter [86008,86018]
                type_name: address [86008,86015]
                identifier: to [86016,86018]
            parameter [86020,86035]
                type_name: uint256 [86020,86027]
                identifier: tokenId [86028,86035]
            visibility: internal [86037,86045]
            function_body [86046,86229]
                expression_statement [86057,86173]
                    call_expression [86057,86172]
                        identifier: require [86057,86064]
                        call_argument [86079,86097]
                            binary_expression [86079,86097]
                                call_expression [86079,86092]
                                    identifier: balanceOf [86079,86088]
                                    call_argument [86089,86091]
                                        identifier: to [86089,86091]
                                comparison_operator: == [86093,86095]
                                number_literal: 0 [86096,86097]
                        call_argument [86112,86161]
                            string_literal [86112,86161]
                                string: "Validators MUST NOT own multiple stake position" [86112,86161]
                expression_statement [86183,86222]
                    call_expression [86183,86221]
                        member_expression: super._transferFrom [86183,86202]
                        call_argument [86203,86207]
                            identifier: from [86203,86207]
                        call_argument [86209,86211]
                            identifier: to [86209,86211]
                        call_argument [86213,86220]
                            identifier: tokenId [86213,86220]
to
source_file [0,149751]
at 78
===
move-tree
---
contract_declaration [86835,87975]
    identifier: DelegateProxy [86844,86857]
    is: is [86858,86860]
    inheritance_specifier [86861,86869]
        user_defined_type [86861,86869]
            identifier: ERCProxy [86861,86869]
    contract_body [86870,87975]
        function_definition [86877,87006]
            function: function [86877,86885]
            identifier: proxyType [86886,86895]
            visibility: external [86898,86906]
            state_mutability [86907,86911]
                pure: pure [86907,86911]
            return_type_definition [86912,86941]
                returns: returns [86912,86919]
                parameter [86921,86940]
                    type_name: uint256 [86921,86928]
                    identifier: proxyTypeId [86929,86940]
            function_body [86942,87006]
                expression_statement [86983,86999]
                    assignment_expression [86983,86998]
                        identifier: proxyTypeId [86983,86994]
                        affectation_operator: = [86995,86996]
                        number_literal: 2 [86997,86998]
        function_definition [87014,87072]
            function: function [87014,87022]
            identifier: implementation [87023,87037]
            visibility: external [87040,87048]
            state_mutability [87049,87053]
                view: view [87049,87053]
            return_type_definition [87054,87071]
                returns: returns [87054,87061]
                parameter [87063,87070]
                    type_name: address [87063,87070]
        function_definition [87080,87972]
            function: function [87080,87088]
            identifier: delegatedFwd [87089,87101]
            parameter [87102,87114]
                type_name: address [87102,87109]
                identifier: _dst [87110,87114]
            parameter [87116,87138]
                type_name: bytes [87116,87121]
                memory: memory [87122,87128]
                identifier: _calldata [87129,87138]
            visibility: internal [87140,87148]
            function_body [87149,87972]
                assembly_statement [87225,87965]
                    assembly: assembly [87225,87233]
                    yul_variable_declaration [87249,87461]
                        let: let [87249,87252]
                        yul_identifier [87253,87259]
                            identifier: result [87253,87259]
                        :=: := [87260,87262]
                        yul_function_call [87263,87461]
                            yul_evm_builtin [87263,87275]
                                delegatecall: delegatecall [87263,87275]
                            yul_function_call [87294,87309]
                                yul_evm_builtin [87294,87297]
                                    sub: sub [87294,87297]
                                yul_function_call [87298,87301]
                                    yul_evm_builtin [87298,87301]
                                        gas: gas [87298,87301]
                                yul_decimal_number: 10000 [87303,87308]
                            yul_path [87328,87332]
                                yul_identifier [87328,87332]
                                    identifier: _dst [87328,87332]
                            yul_function_call [87351,87371]
                                yul_evm_builtin [87351,87354]
                                    add: add [87351,87354]
                                yul_path [87355,87364]
                                    yul_identifier [87355,87364]
                                        identifier: _calldata [87355,87364]
                                yul_hex_number: 0x20 [87366,87370]
                            yul_function_call [87390,87406]
                                yul_evm_builtin [87390,87395]
                                    mload: mload [87390,87395]
                                yul_path [87396,87405]
                                    yul_identifier [87396,87405]
                                        identifier: _calldata [87396,87405]
                            yul_decimal_number: 0 [87425,87426]
                            yul_decimal_number: 0 [87445,87446]
                    yul_variable_declaration [87475,87501]
                        let: let [87475,87478]
                        yul_identifier [87479,87483]
                            identifier: size [87479,87483]
                        :=: := [87484,87486]
                        yul_function_call [87487,87501]
                            yul_evm_builtin [87487,87501]
                                returndatasize: returndatasize [87487,87501]
                    yul_variable_declaration [87517,87539]
                        let: let [87517,87520]
                        yul_identifier [87521,87524]
                            identifier: ptr [87521,87524]
                        :=: := [87525,87527]
                        yul_function_call [87528,87539]
                            yul_evm_builtin [87528,87533]
                                mload: mload [87528,87533]
                            yul_hex_number: 0x40 [87534,87538]
                    yul_function_call [87553,87581]
                        yul_evm_builtin [87553,87567]
                            returndatacopy: returndatacopy [87553,87567]
                        yul_path [87568,87571]
                            yul_identifier [87568,87571]
                                identifier: ptr [87568,87571]
                        yul_decimal_number: 0 [87573,87574]
                        yul_path [87576,87580]
                            yul_identifier [87576,87580]
                                identifier: size [87576,87580]
                    yul_switch_statement [87772,87954]
                        switch: switch [87772,87778]
                        yul_path [87779,87785]
                            yul_identifier [87779,87785]
                                identifier: result [87779,87785]
                        case: case [87803,87807]
                        yul_decimal_number: 0 [87808,87809]
                        yul_block [87810,87869]
                            yul_function_call [87833,87850]
                                yul_evm_builtin [87833,87839]
                                    revert: revert [87833,87839]
                                yul_path [87840,87843]
                                    yul_identifier [87840,87843]
                                        identifier: ptr [87840,87843]
                                yul_path [87845,87849]
                                    yul_identifier [87845,87849]
                                        identifier: size [87845,87849]
                        default: default [87887,87894]
                        yul_block [87895,87954]
                            yul_function_call [87918,87935]
                                yul_evm_builtin [87918,87924]
                                    return: return [87918,87924]
                                yul_path [87925,87928]
                                    yul_identifier [87925,87928]
                                        identifier: ptr [87925,87928]
                                yul_path [87930,87934]
                                    yul_identifier [87930,87934]
                                        identifier: size [87930,87934]
to
source_file [0,149751]
at 24
===
move-tree
---
pragma_directive [3833,3856]
    pragma: pragma [3833,3839]
    solidity_pragma_token [3840,3855]
        solidity: solidity [3840,3848]
        solidity_version_comparison_operator [3848,3850]
            bitwise_operator:  ^ [3848,3850]
        solidity_version: 0.5.2 [3850,3855]
to
source_file [0,149751]
at 9
===
move-tree
---
contract_declaration [59737,60764]
    identifier: ERC165 [59746,59752]
    is: is [59753,59755]
    inheritance_specifier [59756,59763]
        user_defined_type [59756,59763]
            identifier: IERC165 [59756,59763]
    contract_body [59764,60764]
        state_variable_declaration [59771,59829]
            type_name: bytes4 [59771,59777]
            visibility: private [59778,59785]
            constant: constant [59786,59794]
            identifier: _INTERFACE_ID_ERC165 [59795,59815]
            affectation_operator: = [59816,59817]
            number_literal: 0x01ffc9a7 [59818,59828]
        state_variable_declaration [60026,60079]
            type_name: mapping(bytes4 => bool) [60026,60049]
            visibility: private [60050,60057]
            identifier: _supportedInterfaces [60058,60078]
        constructor_definition [60202,60285]
            constructor: constructor [60202,60213]
            internal: internal [60217,60225]
            function_body [60226,60285]
                expression_statement [60237,60278]
                    call_expression [60237,60277]
                        identifier: _registerInterface [60237,60255]
                        call_argument [60256,60276]
                            identifier: _INTERFACE_ID_ERC165 [60256,60276]
        function_definition [60381,60516]
            function: function [60381,60389]
            identifier: supportsInterface [60390,60407]
            parameter [60408,60426]
                type_name: bytes4 [60408,60414]
                identifier: interfaceId [60415,60426]
            visibility: external [60428,60436]
            state_mutability [60437,60441]
                view: view [60437,60441]
            return_type_definition [60442,60456]
                returns: returns [60442,60449]
                parameter [60451,60455]
                    type_name: bool [60451,60455]
            function_body [60457,60516]
                return_statement [60468,60509]
                    return: return [60468,60474]
                    array_access [60475,60508]
                        identifier: _supportedInterfaces [60475,60495]
                        identifier: interfaceId [60496,60507]
        function_definition [60600,60761]
            function: function [60600,60608]
            identifier: _registerInterface [60609,60627]
            parameter [60628,60646]
                type_name: bytes4 [60628,60634]
                identifier: interfaceId [60635,60646]
            visibility: internal [60648,60656]
            function_body [60657,60761]
                expression_statement [60668,60703]
                    call_expression [60668,60702]
                        identifier: require [60668,60675]
                        call_argument [60676,60701]
                            binary_expression [60676,60701]
                                identifier: interfaceId [60676,60687]
                                comparison_operator: != [60688,60690]
                                number_literal: 0xffffffff [60691,60701]
                expression_statement [60713,60754]
                    assignment_expression [60713,60753]
                        array_access [60713,60746]
                            identifier: _supportedInterfaces [60713,60733]
                            identifier: interfaceId [60734,60745]
                        affectation_operator: = [60747,60748]
                        boolean_literal: true [60749,60753]
to
source_file [0,149751]
at 66
===
move-tree
---
pragma_directive [25126,25149]
    pragma: pragma [25126,25132]
    solidity_pragma_token [25133,25148]
        solidity: solidity [25133,25141]
        solidity_version_comparison_operator [25141,25143]
            bitwise_operator:  ^ [25141,25143]
        solidity_version: 0.5.2 [25143,25148]
to
source_file [0,149751]
at 15
===
move-tree
---
contract_declaration [88062,91097]
    identifier: UpgradableProxy [88071,88086]
    is: is [88087,88089]
    inheritance_specifier [88090,88103]
        user_defined_type [88090,88103]
            identifier: DelegateProxy [88090,88103]
    contract_body [88104,91097]
        event_definition [88111,88174]
            identifier: ProxyUpdated [88117,88129]
            event_paramater [88130,88150]
                type_name: address [88130,88137]
                indexed: indexed [88138,88145]
                identifier: _new [88146,88150]
            event_paramater [88152,88172]
                type_name: address [88152,88159]
                indexed: indexed [88160,88167]
                identifier: _old [88168,88172]
        event_definition [88180,88226]
            identifier: OwnerUpdate [88186,88197]
            event_paramater [88198,88210]
                type_name: address [88198,88205]
                identifier: _new [88206,88210]
            event_paramater [88212,88224]
                type_name: address [88212,88219]
                identifier: _old [88220,88224]
        state_variable_declaration [88234,88321]
            type_name: bytes32 [88234,88241]
            constant: constant [88242,88250]
            identifier: IMPLEMENTATION_SLOT [88251,88270]
            affectation_operator: = [88271,88272]
            call_expression [88273,88320]
                identifier: keccak256 [88273,88282]
                call_argument [88283,88319]
                    string_literal [88283,88319]
                        string: "matic.network.proxy.implementation" [88283,88319]
        state_variable_declaration [88327,88396]
            type_name: bytes32 [88327,88334]
            constant: constant [88335,88343]
            identifier: OWNER_SLOT [88344,88354]
            affectation_operator: = [88355,88356]
            call_expression [88357,88395]
                identifier: keccak256 [88357,88366]
                call_argument [88367,88394]
                    string_literal [88367,88394]
                        string: "matic.network.proxy.owner" [88367,88394]
        constructor_definition [88404,88518]
            constructor: constructor [88404,88415]
            parameter [88416,88432]
                type_name: address [88416,88423]
                identifier: _proxyTo [88424,88432]
            public: public [88434,88440]
            function_body [88441,88518]
                expression_statement [88452,88473]
                    call_expression [88452,88472]
                        identifier: setOwner [88452,88460]
                        call_argument [88461,88471]
                            member_expression: msg.sender [88461,88471]
                expression_statement [88483,88511]
                    call_expression [88483,88510]
                        identifier: setImplementation [88483,88500]
                        call_argument [88501,88509]
                            identifier: _proxyTo [88501,88509]
        fallback_receive_definition [88526,88779]
            function: function [88526,88534]
            visibility: external [88537,88545]
            state_mutability [88546,88553]
                payable: payable [88546,88553]
            function_body [88554,88779]
                expression_statement [88727,88772]
                    call_expression [88727,88771]
                        identifier: delegatedFwd [88727,88739]
                        call_argument [88740,88760]
                            call_expression [88740,88760]
                                identifier: loadImplementation [88740,88758]
                        call_argument [88762,88770]
                            member_expression: msg.data [88762,88770]
        modifier_definition [88787,88891]
            modifier: modifier [88787,88795]
            identifier: onlyProxyOwner [88796,88810]
            function_body [88813,88891]
                expression_statement [88824,88872]
                    call_expression [88824,88871]
                        identifier: require [88824,88831]
                        call_argument [88832,88857]
                            binary_expression [88832,88857]
                                call_expression [88832,88843]
                                    identifier: loadOwner [88832,88841]
                                comparison_operator: == [88844,88846]
                                member_expression: msg.sender [88847,88857]
                        call_argument [88859,88870]
                            string_literal [88859,88870]
                                string: "NOT_OWNER" [88859,88870]
                expression_statement [88882,88884]
                    identifier: _ [88882,88883]
        function_definition [88899,88984]
            function: function [88899,88907]
            identifier: owner [88908,88913]
            visibility: external [88916,88924]
            state_mutability [88925,88929]
                view: view [88925,88929]
            return_type_definition [88930,88946]
                returns: returns [88930,88937]
                parameter [88938,88945]
                    type_name: address [88938,88945]
            function_body [88947,88984]
                return_statement [88958,88977]
                    return: return [88958,88964]
                    call_expression [88965,88976]
                        identifier: loadOwner [88965,88974]
        function_definition [88992,89211]
            function: function [88992,89000]
            identifier: loadOwner [89001,89010]
            visibility: internal [89013,89021]
            state_mutability [89022,89026]
                view: view [89022,89026]
            return_type_definition [89027,89043]
                returns: returns [89027,89034]
                parameter [89035,89042]
                    type_name: address [89035,89042]
            function_body [89044,89211]
                variable_declaration_statement [89055,89070]
                    variable_declaration [89055,89069]
                        type_name: address [89055,89062]
                        identifier: _owner [89063,89069]
                variable_declaration_statement [89080,89110]
                    variable_declaration [89080,89096]
                        type_name: bytes32 [89080,89087]
                        identifier: position [89088,89096]
                    affectation_operator: = [89097,89098]
                    identifier: OWNER_SLOT [89099,89109]
                assembly_statement [89120,89180]
                    assembly: assembly [89120,89128]
                    yul_assignment [89144,89169]
                        yul_path [89144,89150]
                            yul_identifier [89144,89150]
                                identifier: _owner [89144,89150]
                        :=: := [89151,89153]
                        yul_function_call [89154,89169]
                            yul_evm_builtin [89154,89159]
                                sload: sload [89154,89159]
                            yul_path [89160,89168]
                                yul_identifier [89160,89168]
                                    identifier: position [89160,89168]
                return_statement [89190,89204]
                    return: return [89190,89196]
                    identifier: _owner [89197,89203]
        function_definition [89219,89323]
            function: function [89219,89227]
            identifier: implementation [89228,89242]
            visibility: external [89245,89253]
            state_mutability [89254,89258]
                view: view [89254,89258]
            return_type_definition [89259,89276]
                returns: returns [89259,89266]
                parameter [89268,89275]
                    type_name: address [89268,89275]
            function_body [89277,89323]
                return_statement [89288,89316]
                    return: return [89288,89294]
                    call_expression [89295,89315]
                        identifier: loadImplementation [89295,89313]
        function_definition [89331,89565]
            function: function [89331,89339]
            identifier: loadImplementation [89340,89358]
            visibility: internal [89361,89369]
            state_mutability [89370,89374]
                view: view [89370,89374]
            return_type_definition [89375,89391]
                returns: returns [89375,89382]
                parameter [89383,89390]
                    type_name: address [89383,89390]
            function_body [89392,89565]
                variable_declaration_statement [89403,89417]
                    variable_declaration [89403,89416]
                        type_name: address [89403,89410]
                        identifier: _impl [89411,89416]
                variable_declaration_statement [89427,89466]
                    variable_declaration [89427,89443]
                        type_name: bytes32 [89427,89434]
                        identifier: position [89435,89443]
                    affectation_operator: = [89444,89445]
                    identifier: IMPLEMENTATION_SLOT [89446,89465]
                assembly_statement [89476,89535]
                    assembly: assembly [89476,89484]
                    yul_assignment [89500,89524]
                        yul_path [89500,89505]
                            yul_identifier [89500,89505]
                                identifier: _impl [89500,89505]
                        :=: := [89506,89508]
                        yul_function_call [89509,89524]
                            yul_evm_builtin [89509,89514]
                                sload: sload [89509,89514]
                            yul_path [89515,89523]
                                yul_identifier [89515,89523]
                                    identifier: position [89515,89523]
                return_statement [89545,89558]
                    return: return [89545,89551]
                    identifier: _impl [89552,89557]
        function_definition [89573,89785]
            function: function [89573,89581]
            identifier: transferOwnership [89582,89599]
            parameter [89600,89616]
                type_name: address [89600,89607]
                identifier: newOwner [89608,89616]
            visibility: public [89618,89624]
            modifier_invocation [89625,89639]
                identifier: onlyProxyOwner [89625,89639]
            function_body [89640,89785]
                expression_statement [89651,89699]
                    call_expression [89651,89698]
                        identifier: require [89651,89658]
                        call_argument [89659,89681]
                            binary_expression [89659,89681]
                                identifier: newOwner [89659,89667]
                                comparison_operator: != [89668,89670]
                                type_cast_expression [89671,89681]
                                    primitive_type: address [89671,89678]
                                    call_argument [89679,89680]
                                        number_literal: 0 [89679,89680]
                        call_argument [89683,89697]
                            string_literal [89683,89697]
                                string: "ZERO_ADDRESS" [89683,89697]
                emit_statement [89709,89749]
                    identifier: OwnerUpdate [89714,89725]
                    call_argument [89726,89734]
                        identifier: newOwner [89726,89734]
                    call_argument [89736,89747]
                        call_expression [89736,89747]
                            identifier: loadOwner [89736,89745]
                expression_statement [89759,89778]
                    call_expression [89759,89777]
                        identifier: setOwner [89759,89767]
                        call_argument [89768,89776]
                            identifier: newOwner [89768,89776]
        function_definition [89793,89956]
            function: function [89793,89801]
            identifier: setOwner [89802,89810]
            parameter [89811,89827]
                type_name: address [89811,89818]
                identifier: newOwner [89819,89827]
            visibility: private [89829,89836]
            function_body [89837,89956]
                variable_declaration_statement [89848,89878]
                    variable_declaration [89848,89864]
                        type_name: bytes32 [89848,89855]
                        identifier: position [89856,89864]
                    affectation_operator: = [89865,89866]
                    identifier: OWNER_SLOT [89867,89877]
                assembly_statement [89888,89949]
                    assembly: assembly [89888,89896]
                    yul_function_call [89912,89938]
                        yul_evm_builtin [89912,89918]
                            sstore: sstore [89912,89918]
                        yul_path [89919,89927]
                            yul_identifier [89919,89927]
                                identifier: position [89919,89927]
                        yul_path [89929,89937]
                            yul_identifier [89929,89937]
                                identifier: newOwner [89929,89937]
        function_definition [89964,90317]
            function: function [89964,89972]
            identifier: updateImplementation [89973,89993]
            parameter [89994,90013]
                type_name: address [89994,90001]
                identifier: _newProxyTo [90002,90013]
            visibility: public [90015,90021]
            modifier_invocation [90022,90036]
                identifier: onlyProxyOwner [90022,90036]
            function_body [90037,90317]
                expression_statement [90048,90110]
                    call_expression [90048,90109]
                        identifier: require [90048,90055]
                        call_argument [90056,90083]
                            binary_expression [90056,90083]
                                identifier: _newProxyTo [90056,90067]
                                comparison_operator: != [90068,90070]
                                type_cast_expression [90071,90083]
                                    primitive_type: address [90071,90078]
                                    call_argument [90079,90082]
                                        number_literal: 0x0 [90079,90082]
                        call_argument [90085,90108]
                            string_literal [90085,90108]
                                string: "INVALID_PROXY_ADDRESS" [90085,90108]
                expression_statement [90120,90194]
                    call_expression [90120,90193]
                        identifier: require [90120,90127]
                        call_argument [90128,90151]
                            call_expression [90128,90151]
                                identifier: isContract [90128,90138]
                                call_argument [90139,90150]
                                    identifier: _newProxyTo [90139,90150]
                        call_argument [90153,90192]
                            string_literal [90153,90192]
                                string: "DESTINATION_ADDRESS_IS_NOT_A_CONTRACT" [90153,90192]
                emit_statement [90206,90259]
                    identifier: ProxyUpdated [90211,90223]
                    call_argument [90224,90235]
                        identifier: _newProxyTo [90224,90235]
                    call_argument [90237,90257]
                        call_expression [90237,90257]
                            identifier: loadImplementation [90237,90255]
                expression_statement [90279,90310]
                    call_expression [90279,90309]
                        identifier: setImplementation [90279,90296]
                        call_argument [90297,90308]
                            identifier: _newProxyTo [90297,90308]
        function_definition [90325,90613]
            function: function [90325,90333]
            identifier: updateAndCall [90334,90347]
            parameter [90348,90367]
                type_name: address [90348,90355]
                identifier: _newProxyTo [90356,90367]
            parameter [90369,90386]
                type_name: bytes [90369,90374]
                memory: memory [90375,90381]
                identifier: data [90382,90386]
            state_mutability [90388,90395]
                payable: payable [90388,90395]
            visibility: public [90396,90402]
            modifier_invocation [90403,90417]
                identifier: onlyProxyOwner [90403,90417]
            function_body [90418,90613]
                expression_statement [90429,90463]
                    call_expression [90429,90462]
                        identifier: updateImplementation [90429,90449]
                        call_argument [90450,90461]
                            identifier: _newProxyTo [90450,90461]
                variable_declaration_statement [90475,90559]
                    variable_declaration_tuple [90475,90514]
                        variable_declaration [90476,90488]
                            type_name: bool [90476,90480]
                            identifier: success [90481,90488]
                        variable_declaration [90490,90513]
                            type_name: bytes [90490,90495]
                            memory: memory [90496,90502]
                            identifier: returnData [90503,90513]
                    affectation_operator: = [90515,90516]
                    call_expression [90517,90558]
                        call_expression [90517,90552]
                            member_expression: address(this).call.value [90517,90541]
                            call_argument [90542,90551]
                                member_expression: msg.value [90542,90551]
                        call_argument [90553,90557]
                            identifier: data [90553,90557]
                expression_statement [90569,90606]
                    call_expression [90569,90605]
                        identifier: require [90569,90576]
                        call_argument [90577,90584]
                            identifier: success [90577,90584]
                        call_argument [90586,90604]
                            type_cast_expression [90586,90604]
                                primitive_type: string [90586,90592]
                                call_argument [90593,90603]
                                    identifier: returnData [90593,90603]
        function_definition [90621,90808]
            function: function [90621,90629]
            identifier: setImplementation [90630,90647]
            parameter [90648,90667]
                type_name: address [90648,90655]
                identifier: _newProxyTo [90656,90667]
            visibility: private [90669,90676]
            function_body [90677,90808]
                variable_declaration_statement [90688,90727]
                    variable_declaration [90688,90704]
                        type_name: bytes32 [90688,90695]
                        identifier: position [90696,90704]
                    affectation_operator: = [90705,90706]
                    identifier: IMPLEMENTATION_SLOT [90707,90726]
                assembly_statement [90737,90801]
                    assembly: assembly [90737,90745]
                    yul_function_call [90761,90790]
                        yul_evm_builtin [90761,90767]
                            sstore: sstore [90761,90767]
                        yul_path [90768,90776]
                            yul_identifier [90768,90776]
                                identifier: position [90768,90776]
                        yul_path [90778,90789]
                            yul_identifier [90778,90789]
                                identifier: _newProxyTo [90778,90789]
        function_definition [90820,91094]
            function: function [90820,90828]
            identifier: isContract [90829,90839]
            parameter [90840,90855]
                type_name: address [90840,90847]
                identifier: _target [90848,90855]
            visibility: internal [90857,90865]
            state_mutability [90866,90870]
                view: view [90866,90870]
            return_type_definition [90871,90885]
                returns: returns [90871,90878]
                parameter [90880,90884]
                    type_name: bool [90880,90884]
            function_body [90886,91094]
                if_statement [90897,90963]
                    if: if [90897,90899]
                    binary_expression [90901,90922]
                        identifier: _target [90901,90908]
                        comparison_operator: == [90909,90911]
                        type_cast_expression [90912,90922]
                            primitive_type: address [90912,90919]
                            call_argument [90920,90921]
                                number_literal: 0 [90920,90921]
                    block_statement [90924,90963]
                        return_statement [90939,90952]
                            return: return [90939,90945]
                            boolean_literal: false [90946,90951]
                variable_declaration_statement [90975,90988]
                    variable_declaration [90975,90987]
                        type_name: uint256 [90975,90982]
                        identifier: size [90983,90987]
                assembly_statement [90998,91061]
                    assembly: assembly [90998,91006]
                    yul_assignment [91022,91050]
                        yul_path [91022,91026]
                            yul_identifier [91022,91026]
                                identifier: size [91022,91026]
                        :=: := [91027,91029]
                        yul_function_call [91030,91050]
                            yul_evm_builtin [91030,91041]
                                extcodesize: extcodesize [91030,91041]
                            yul_path [91042,91049]
                                yul_identifier [91042,91049]
                                    identifier: _target [91042,91049]
                return_statement [91071,91087]
                    return: return [91071,91077]
                    binary_expression [91078,91086]
                        identifier: size [91078,91082]
                        comparison_operator: > [91083,91084]
                        number_literal: 0 [91085,91086]
to
source_file [0,149751]
at 82
===
move-tree
---
pragma_directive [28655,28678]
    pragma: pragma [28655,28661]
    solidity_pragma_token [28662,28677]
        solidity: solidity [28662,28670]
        solidity_version_comparison_operator [28670,28672]
            bitwise_operator:  ^ [28670,28672]
        solidity_version: 0.5.2 [28672,28677]
to
source_file [0,149751]
at 28
===
move-tree
---
contract_declaration [91201,91485]
    identifier: ValidatorShareProxy [91210,91229]
    is: is [91230,91232]
    inheritance_specifier [91233,91248]
        user_defined_type [91233,91248]
            identifier: UpgradableProxy [91233,91248]
    contract_body [91249,91485]
        constructor_definition [91256,91323]
            constructor: constructor [91256,91267]
            parameter [91268,91285]
                type_name: address [91268,91275]
                identifier: _registry [91276,91285]
            public: public [91287,91293]
            modifier_invocation [91294,91320]
                identifier: UpgradableProxy [91294,91309]
                call_argument [91310,91319]
                    identifier: _registry [91310,91319]
            function_body [91321,91323]
        function_definition [91331,91482]
            function: function [91331,91339]
            identifier: loadImplementation [91340,91358]
            visibility: internal [91361,91369]
            state_mutability [91370,91374]
                view: view [91370,91374]
            return_type_definition [91375,91392]
                returns: returns [91375,91382]
                parameter [91384,91391]
                    type_name: address [91384,91391]
            function_body [91393,91482]
                return_statement [91404,91475]
                    return: return [91404,91410]
                    call_expression [91411,91474]
                        member_expression: Registry(super.loadImplementation()).getValidatorShareAddress [91411,91472]
to
source_file [0,149751]
at 83
===
move-tree
---
pragma_directive [15434,15457]
    pragma: pragma [15434,15440]
    solidity_pragma_token [15441,15456]
        solidity: solidity [15441,15449]
        solidity_version_comparison_operator [15449,15451]
            bitwise_operator:  ^ [15449,15451]
        solidity_version: 0.5.2 [15451,15456]
to
source_file [0,149751]
at 11
===
move-tree
---
pragma_directive [53859,53882]
    pragma: pragma [53859,53865]
    solidity_pragma_token [53866,53881]
        solidity: solidity [53866,53874]
        solidity_version_comparison_operator [53874,53876]
            bitwise_operator:  ^ [53874,53876]
        solidity_version: 0.5.2 [53876,53881]
to
source_file [0,149751]
at 38
===
move-tree
---
contract_declaration [81831,82072]
    identifier: IERC721Metadata [81840,81855]
    is: is [81856,81858]
    inheritance_specifier [81859,81866]
        user_defined_type [81859,81866]
            identifier: IERC721 [81859,81866]
    contract_body [81867,82072]
        function_definition [81874,81928]
            function: function [81874,81882]
            identifier: name [81883,81887]
            visibility: external [81890,81898]
            state_mutability [81899,81903]
                view: view [81899,81903]
            return_type_definition [81904,81927]
                returns: returns [81904,81911]
                parameter [81913,81926]
                    type_name: string [81913,81919]
                    memory: memory [81920,81926]
        function_definition [81934,81990]
            function: function [81934,81942]
            identifier: symbol [81943,81949]
            visibility: external [81952,81960]
            state_mutability [81961,81965]
                view: view [81961,81965]
            return_type_definition [81966,81989]
                returns: returns [81966,81973]
                parameter [81975,81988]
                    type_name: string [81975,81981]
                    memory: memory [81982,81988]
        function_definition [81996,82069]
            function: function [81996,82004]
            identifier: tokenURI [82005,82013]
            parameter [82014,82029]
                type_name: uint256 [82014,82021]
                identifier: tokenId [82022,82029]
            visibility: external [82031,82039]
            state_mutability [82040,82044]
                view: view [82040,82044]
            return_type_definition [82045,82068]
                returns: returns [82045,82052]
                parameter [82054,82067]
                    type_name: string [82054,82060]
                    memory: memory [82061,82067]
to
source_file [0,149751]
at 73
===
move-tree
---
contract_declaration [54560,55599]
    identifier: IERC721 [54569,54576]
    is: is [54577,54579]
    inheritance_specifier [54580,54587]
        user_defined_type [54580,54587]
            identifier: IERC165 [54580,54587]
    contract_body [54588,55599]
        event_definition [54595,54677]
            identifier: Transfer [54601,54609]
            event_paramater [54610,54630]
                type_name: address [54610,54617]
                indexed: indexed [54618,54625]
                identifier: from [54626,54630]
            event_paramater [54632,54650]
                type_name: address [54632,54639]
                indexed: indexed [54640,54647]
                identifier: to [54648,54650]
            event_paramater [54652,54675]
                type_name: uint256 [54652,54659]
                indexed: indexed [54660,54667]
                identifier: tokenId [54668,54675]
        event_definition [54683,54772]
            identifier: Approval [54689,54697]
            event_paramater [54698,54719]
                type_name: address [54698,54705]
                indexed: indexed [54706,54713]
                identifier: owner [54714,54719]
            event_paramater [54721,54745]
                type_name: address [54721,54728]
                indexed: indexed [54729,54736]
                identifier: approved [54737,54745]
            event_paramater [54747,54770]
                type_name: uint256 [54747,54754]
                indexed: indexed [54755,54762]
                identifier: tokenId [54763,54770]
        event_definition [54778,54863]
            identifier: ApprovalForAll [54784,54798]
            event_paramater [54799,54820]
                type_name: address [54799,54806]
                indexed: indexed [54807,54814]
                identifier: owner [54815,54820]
            event_paramater [54822,54846]
                type_name: address [54822,54829]
                indexed: indexed [54830,54837]
                identifier: operator [54838,54846]
            event_paramater [54848,54861]
                type_name: bool [54848,54852]
                identifier: approved [54853,54861]
        function_definition [54871,54943]
            function: function [54871,54879]
            identifier: balanceOf [54880,54889]
            parameter [54890,54903]
                type_name: address [54890,54897]
                identifier: owner [54898,54903]
            visibility: public [54905,54911]
            state_mutability [54912,54916]
                view: view [54912,54916]
            return_type_definition [54917,54942]
                returns: returns [54917,54924]
                parameter [54926,54941]
                    type_name: uint256 [54926,54933]
                    identifier: balance [54934,54941]
        function_definition [54949,55019]
            function: function [54949,54957]
            identifier: ownerOf [54958,54965]
            parameter [54966,54981]
                type_name: uint256 [54966,54973]
                identifier: tokenId [54974,54981]
            visibility: public [54983,54989]
            state_mutability [54990,54994]
                view: view [54990,54994]
            return_type_definition [54995,55018]
                returns: returns [54995,55002]
                parameter [55004,55017]
                    type_name: address [55004,55011]
                    identifier: owner [55012,55017]
        function_definition [55027,55080]
            function: function [55027,55035]
            identifier: approve [55036,55043]
            parameter [55044,55054]
                type_name: address [55044,55051]
                identifier: to [55052,55054]
            parameter [55056,55071]
                type_name: uint256 [55056,55063]
                identifier: tokenId [55064,55071]
            visibility: public [55073,55079]
        function_definition [55086,55163]
            function: function [55086,55094]
            identifier: getApproved [55095,55106]
            parameter [55107,55122]
                type_name: uint256 [55107,55114]
                identifier: tokenId [55115,55122]
            visibility: public [55124,55130]
            state_mutability [55131,55135]
                view: view [55131,55135]
            return_type_definition [55136,55162]
                returns: returns [55136,55143]
                parameter [55145,55161]
                    type_name: address [55145,55152]
                    identifier: operator [55153,55161]
        function_definition [55171,55239]
            function: function [55171,55179]
            identifier: setApprovalForAll [55180,55197]
            parameter [55198,55214]
                type_name: address [55198,55205]
                identifier: operator [55206,55214]
            parameter [55216,55230]
                type_name: bool [55216,55220]
                identifier: _approved [55221,55230]
            visibility: public [55232,55238]
        function_definition [55245,55331]
            function: function [55245,55253]
            identifier: isApprovedForAll [55254,55270]
            parameter [55271,55284]
                type_name: address [55271,55278]
                identifier: owner [55279,55284]
            parameter [55286,55302]
                type_name: address [55286,55293]
                identifier: operator [55294,55302]
            visibility: public [55304,55310]
            state_mutability [55311,55315]
                view: view [55311,55315]
            return_type_definition [55316,55330]
                returns: returns [55316,55323]
                parameter [55325,55329]
                    type_name: bool [55325,55329]
        function_definition [55339,55411]
            function: function [55339,55347]
            identifier: transferFrom [55348,55360]
            parameter [55361,55373]
                type_name: address [55361,55368]
                identifier: from [55369,55373]
            parameter [55375,55385]
                type_name: address [55375,55382]
                identifier: to [55383,55385]
            parameter [55387,55402]
                type_name: uint256 [55387,55394]
                identifier: tokenId [55395,55402]
            visibility: public [55404,55410]
        function_definition [55417,55493]
            function: function [55417,55425]
            identifier: safeTransferFrom [55426,55442]
            parameter [55443,55455]
                type_name: address [55443,55450]
                identifier: from [55451,55455]
            parameter [55457,55467]
                type_name: address [55457,55464]
                identifier: to [55465,55467]
            parameter [55469,55484]
                type_name: uint256 [55469,55476]
                identifier: tokenId [55477,55484]
            visibility: public [55486,55492]
        function_definition [55501,55596]
            function: function [55501,55509]
            identifier: safeTransferFrom [55510,55526]
            parameter [55527,55539]
                type_name: address [55527,55534]
                identifier: from [55535,55539]
            parameter [55541,55551]
                type_name: address [55541,55548]
                identifier: to [55549,55551]
            parameter [55553,55568]
                type_name: uint256 [55553,55560]
                identifier: tokenId [55561,55568]
            parameter [55570,55587]
                type_name: bytes [55570,55575]
                memory: memory [55576,55582]
                identifier: data [55583,55587]
            visibility: public [55589,55595]
to
source_file [0,149751]
at 58
===
move-tree
---
contract_declaration [27853,28587]
    identifier: RootChainable [27862,27875]
    is: is [27876,27878]
    inheritance_specifier [27879,27886]
        user_defined_type [27879,27886]
            identifier: Ownable [27879,27886]
    contract_body [27887,28587]
        state_variable_declaration [27894,27919]
            type_name: address [27894,27901]
            visibility: public [27902,27908]
            identifier: rootChain [27909,27918]
        event_definition [27953,28066]
            identifier: RootChainChanged [27959,27975]
            event_paramater [27986,28019]
                type_name: address [27986,27993]
                indexed: indexed [27994,28001]
                identifier: previousRootChain [28002,28019]
            event_paramater [28030,28058]
                type_name: address [28030,28037]
                indexed: indexed [28038,28045]
                identifier: newRootChain [28046,28058]
        modifier_definition [28140,28228]
            modifier: modifier [28140,28148]
            identifier: onlyRootChain [28149,28162]
            function_body [28165,28228]
                expression_statement [28176,28209]
                    call_expression [28176,28208]
                        identifier: require [28176,28183]
                        call_argument [28184,28207]
                            binary_expression [28184,28207]
                                member_expression: msg.sender [28184,28194]
                                comparison_operator: == [28195,28197]
                                identifier: rootChain [28198,28207]
                expression_statement [28219,28221]
                    identifier: _ [28219,28220]
        function_definition [28374,28584]
            function: function [28374,28382]
            identifier: changeRootChain [28383,28398]
            parameter [28399,28419]
                type_name: address [28399,28406]
                identifier: newRootChain [28407,28419]
            visibility: public [28421,28427]
            modifier_invocation [28428,28437]
                identifier: onlyOwner [28428,28437]
            function_body [28438,28584]
                expression_statement [28449,28485]
                    call_expression [28449,28484]
                        identifier: require [28449,28456]
                        call_argument [28457,28483]
                            binary_expression [28457,28483]
                                identifier: newRootChain [28457,28469]
                                comparison_operator: != [28470,28472]
                                type_cast_expression [28473,28483]
                                    primitive_type: address [28473,28480]
                                    call_argument [28481,28482]
                                        number_literal: 0 [28481,28482]
                emit_statement [28495,28542]
                    identifier: RootChainChanged [28500,28516]
                    call_argument [28517,28526]
                        identifier: rootChain [28517,28526]
                    call_argument [28528,28540]
                        identifier: newRootChain [28528,28540]
                expression_statement [28552,28577]
                    assignment_expression [28552,28576]
                        identifier: rootChain [28552,28561]
                        affectation_operator: = [28562,28563]
                        identifier: newRootChain [28564,28576]
to
source_file [0,149751]
at 87
===
move-tree
---
pragma_directive [26544,26567]
    pragma: pragma [26544,26550]
    solidity_pragma_token [26551,26566]
        solidity: solidity [26551,26559]
        solidity_version_comparison_operator [26559,26561]
            bitwise_operator:  ^ [26559,26561]
        solidity_version: 0.5.2 [26561,26566]
to
source_file [0,149751]
at 19
===
move-tree
---
pragma_directive [36921,36944]
    pragma: pragma [36921,36927]
    solidity_pragma_token [36928,36943]
        solidity: solidity [36928,36936]
        solidity_version_comparison_operator [36936,36938]
            bitwise_operator:  ^ [36936,36938]
        solidity_version: 0.5.2 [36938,36943]
to
source_file [0,149751]
at 34
===
move-tree
---
pragma_directive [54407,54430]
    pragma: pragma [54407,54413]
    solidity_pragma_token [54414,54429]
        solidity: solidity [54414,54422]
        solidity_version_comparison_operator [54422,54424]
            bitwise_operator:  ^ [54422,54424]
        solidity_version: 0.5.2 [54424,54429]
to
source_file [0,149751]
at 37
===
move-tree
---
pragma_directive [26975,26998]
    pragma: pragma [26975,26981]
    solidity_pragma_token [26982,26997]
        solidity: solidity [26982,26990]
        solidity_version_comparison_operator [26990,26992]
            bitwise_operator:  ^ [26990,26992]
        solidity_version: 0.5.2 [26992,26997]
to
source_file [0,149751]
at 21
===
move-tree
---
contract_declaration [4055,6072]
    identifier: Ownable [4064,4071]
    contract_body [4072,6072]
        state_variable_declaration [4079,4102]
            type_name: address [4079,4086]
            visibility: private [4087,4094]
            identifier: _owner [4095,4101]
        event_definition [4110,4194]
            identifier: OwnershipTransferred [4116,4136]
            event_paramater [4137,4166]
                type_name: address [4137,4144]
                indexed: indexed [4145,4152]
                identifier: previousOwner [4153,4166]
            event_paramater [4168,4192]
                type_name: address [4168,4175]
                indexed: indexed [4176,4183]
                identifier: newOwner [4184,4192]
        constructor_definition [4330,4448]
            constructor: constructor [4330,4341]
            internal: internal [4345,4353]
            function_body [4354,4448]
                expression_statement [4365,4385]
                    assignment_expression [4365,4384]
                        identifier: _owner [4365,4371]
                        affectation_operator: = [4372,4373]
                        member_expression: msg.sender [4374,4384]
                emit_statement [4395,4441]
                    identifier: OwnershipTransferred [4400,4420]
                    call_argument [4421,4431]
                        type_cast_expression [4421,4431]
                            primitive_type: address [4421,4428]
                            call_argument [4429,4430]
                                number_literal: 0 [4429,4430]
                    call_argument [4433,4439]
                        identifier: _owner [4433,4439]
        function_definition [4516,4595]
            function: function [4516,4524]
            identifier: owner [4525,4530]
            visibility: public [4533,4539]
            state_mutability [4540,4544]
                view: view [4540,4544]
            return_type_definition [4545,4562]
                returns: returns [4545,4552]
                parameter [4554,4561]
                    type_name: address [4554,4561]
            function_body [4563,4595]
                return_statement [4574,4588]
                    return: return [4574,4580]
                    identifier: _owner [4581,4587]
        modifier_definition [4688,4758]
            modifier: modifier [4688,4696]
            identifier: onlyOwner [4697,4706]
            function_body [4709,4758]
                expression_statement [4720,4739]
                    call_expression [4720,4738]
                        identifier: require [4720,4727]
                        call_argument [4728,4737]
                            call_expression [4728,4737]
                                identifier: isOwner [4728,4735]
                expression_statement [4749,4751]
                    identifier: _ [4749,4750]
        function_definition [4851,4943]
            function: function [4851,4859]
            identifier: isOwner [4860,4867]
            visibility: public [4870,4876]
            state_mutability [4877,4881]
                view: view [4877,4881]
            return_type_definition [4882,4896]
                returns: returns [4882,4889]
                parameter [4891,4895]
                    type_name: bool [4891,4895]
            function_body [4897,4943]
                return_statement [4908,4936]
                    return: return [4908,4914]
                    binary_expression [4915,4935]
                        member_expression: msg.sender [4915,4925]
                        comparison_operator: == [4926,4928]
                        identifier: _owner [4929,4935]
        function_definition [5306,5446]
            function: function [5306,5314]
            identifier: renounceOwnership [5315,5332]
            visibility: public [5335,5341]
            modifier_invocation [5342,5351]
                identifier: onlyOwner [5342,5351]
            function_body [5352,5446]
                emit_statement [5363,5409]
                    identifier: OwnershipTransferred [5368,5388]
                    call_argument [5389,5395]
                        identifier: _owner [5389,5395]
                    call_argument [5397,5407]
                        type_cast_expression [5397,5407]
                            primitive_type: address [5397,5404]
                            call_argument [5405,5406]
                                number_literal: 0 [5405,5406]
                expression_statement [5419,5439]
                    assignment_expression [5419,5438]
                        identifier: _owner [5419,5425]
                        affectation_operator: = [5426,5427]
                        type_cast_expression [5428,5438]
                            primitive_type: address [5428,5435]
                            call_argument [5436,5437]
                                number_literal: 0 [5436,5437]
        function_definition [5623,5732]
            function: function [5623,5631]
            identifier: transferOwnership [5632,5649]
            parameter [5650,5666]
                type_name: address [5650,5657]
                identifier: newOwner [5658,5666]
            visibility: public [5668,5674]
            modifier_invocation [5675,5684]
                identifier: onlyOwner [5675,5684]
            function_body [5685,5732]
                expression_statement [5696,5725]
                    call_expression [5696,5724]
                        identifier: _transferOwnership [5696,5714]
                        call_argument [5715,5723]
                            identifier: newOwner [5715,5723]
        function_definition [5882,6069]
            function: function [5882,5890]
            identifier: _transferOwnership [5891,5909]
            parameter [5910,5926]
                type_name: address [5910,5917]
                identifier: newOwner [5918,5926]
            visibility: internal [5928,5936]
            function_body [5937,6069]
                expression_statement [5948,5980]
                    call_expression [5948,5979]
                        identifier: require [5948,5955]
                        call_argument [5956,5978]
                            binary_expression [5956,5978]
                                identifier: newOwner [5956,5964]
                                comparison_operator: != [5965,5967]
                                type_cast_expression [5968,5978]
                                    primitive_type: address [5968,5975]
                                    call_argument [5976,5977]
                                        number_literal: 0 [5976,5977]
                emit_statement [5990,6034]
                    identifier: OwnershipTransferred [5995,6015]
                    call_argument [6016,6022]
                        identifier: _owner [6016,6022]
                    call_argument [6024,6032]
                        identifier: newOwner [6024,6032]
                expression_statement [6044,6062]
                    assignment_expression [6044,6061]
                        identifier: _owner [6044,6050]
                        affectation_operator: = [6051,6052]
                        identifier: newOwner [6053,6061]
to
source_file [0,149751]
at 37
===
move-tree
---
pragma_directive [23601,23624]
    pragma: pragma [23601,23607]
    solidity_pragma_token [23608,23623]
        solidity: solidity [23608,23616]
        solidity_version_comparison_operator [23616,23618]
            bitwise_operator:  ^ [23616,23618]
        solidity_version: 0.5.2 [23618,23623]
to
source_file [0,149751]
at 13
===
move-tree
---
contract_declaration [61004,72339]
    identifier: ERC721 [61013,61019]
    is: is [61020,61022]
    inheritance_specifier [61023,61029]
        user_defined_type [61023,61029]
            identifier: ERC165 [61023,61029]
    inheritance_specifier [61031,61038]
        user_defined_type [61031,61038]
            identifier: IERC721 [61031,61038]
    contract_body [61039,72339]
        using_directive [61046,61073]
            using: using [61046,61051]
            type_alias [61052,61060]
                identifier: SafeMath [61052,61060]
            for: for [61061,61064]
            type_name: uint256 [61065,61072]
        using_directive [61079,61105]
            using: using [61079,61084]
            type_alias [61085,61092]
                identifier: Address [61085,61092]
            for: for [61093,61096]
            type_name: address [61097,61104]
        using_directive [61111,61147]
            using: using [61111,61116]
            type_alias [61117,61125]
                identifier: Counters [61117,61125]
            for: for [61126,61129]
            type_name: Counters.Counter [61130,61146]
        state_variable_declaration [61329,61383]
            type_name: bytes4 [61329,61335]
            visibility: private [61336,61343]
            constant: constant [61344,61352]
            identifier: _ERC721_RECEIVED [61353,61369]
            affectation_operator: = [61370,61371]
            number_literal: 0x150b7a02 [61372,61382]
        state_variable_declaration [61430,61479]
            type_name: mapping (uint256 => address) [61430,61458]
            visibility: private [61459,61466]
            identifier: _tokenOwner [61467,61478]
        state_variable_declaration [61537,61590]
            type_name: mapping (uint256 => address) [61537,61565]
            visibility: private [61566,61573]
            identifier: _tokenApprovals [61574,61589]
        state_variable_declaration [61650,61714]
            type_name: mapping (address => Counters.Counter) [61650,61687]
            visibility: private [61688,61695]
            identifier: _ownedTokensCount [61696,61713]
        state_variable_declaration [61771,61845]
            type_name: mapping (address => mapping (address => bool)) [61771,61817]
            visibility: private [61818,61825]
            identifier: _operatorApprovals [61826,61844]
        state_variable_declaration [61853,61911]
            type_name: bytes4 [61853,61859]
            visibility: private [61860,61867]
            constant: constant [61868,61876]
            identifier: _INTERFACE_ID_ERC721 [61877,61897]
            affectation_operator: = [61898,61899]
            number_literal: 0x80ac58cd [61900,61910]
        constructor_definition [62548,62707]
            constructor: constructor [62548,62559]
            public: public [62563,62569]
            function_body [62570,62707]
                expression_statement [62659,62700]
                    call_expression [62659,62699]
                        identifier: _registerInterface [62659,62677]
                        call_argument [62678,62698]
                            identifier: _INTERFACE_ID_ERC721 [62678,62698]
        function_definition [62917,63080]
            function: function [62917,62925]
            identifier: balanceOf [62926,62935]
            parameter [62936,62949]
                type_name: address [62936,62943]
                identifier: owner [62944,62949]
            visibility: public [62951,62957]
            state_mutability [62958,62962]
                view: view [62958,62962]
            return_type_definition [62963,62980]
                returns: returns [62963,62970]
                parameter [62972,62979]
                    type_name: uint256 [62972,62979]
            function_body [62981,63080]
                expression_statement [62992,63021]
                    call_expression [62992,63020]
                        identifier: require [62992,62999]
                        call_argument [63000,63019]
                            binary_expression [63000,63019]
                                identifier: owner [63000,63005]
                                comparison_operator: != [63006,63008]
                                type_cast_expression [63009,63019]
                                    primitive_type: address [63009,63016]
                                    call_argument [63017,63018]
                                        number_literal: 0 [63017,63018]
                return_statement [63031,63073]
                    return: return [63031,63037]
                    call_expression [63038,63072]
                        member_expression: _ownedTokensCount[owner].current [63038,63070]
        function_definition [63305,63486]
            function: function [63305,63313]
            identifier: ownerOf [63314,63321]
            parameter [63322,63337]
                type_name: uint256 [63322,63329]
                identifier: tokenId [63330,63337]
            visibility: public [63339,63345]
            state_mutability [63346,63350]
                view: view [63346,63350]
            return_type_definition [63351,63368]
                returns: returns [63351,63358]
                parameter [63360,63367]
                    type_name: address [63360,63367]
            function_body [63369,63486]
                variable_declaration_statement [63380,63417]
                    variable_declaration [63380,63393]
                        type_name: address [63380,63387]
                        identifier: owner [63388,63393]
                    affectation_operator: = [63394,63395]
                    array_access [63396,63416]
                        identifier: _tokenOwner [63396,63407]
                        identifier: tokenId [63408,63415]
                expression_statement [63427,63456]
                    call_expression [63427,63455]
                        identifier: require [63427,63434]
                        call_argument [63435,63454]
                            binary_expression [63435,63454]
                                identifier: owner [63435,63440]
                                comparison_operator: != [63441,63443]
                                type_cast_expression [63444,63454]
                                    primitive_type: address [63444,63451]
                                    call_argument [63452,63453]
                                        number_literal: 0 [63452,63453]
                return_statement [63466,63479]
                    return: return [63466,63472]
                    identifier: owner [63473,63478]
        function_definition [63917,64216]
            function: function [63917,63925]
            identifier: approve [63926,63933]
            parameter [63934,63944]
                type_name: address [63934,63941]
                identifier: to [63942,63944]
            parameter [63946,63961]
                type_name: uint256 [63946,63953]
                identifier: tokenId [63954,63961]
            visibility: public [63963,63969]
            function_body [63970,64216]
                variable_declaration_statement [63981,64014]
                    variable_declaration [63981,63994]
                        type_name: address [63981,63988]
                        identifier: owner [63989,63994]
                    affectation_operator: = [63995,63996]
                    call_expression [63997,64013]
                        identifier: ownerOf [63997,64004]
                        call_argument [64005,64012]
                            identifier: tokenId [64005,64012]
                expression_statement [64024,64045]
                    call_expression [64024,64044]
                        identifier: require [64024,64031]
                        call_argument [64032,64043]
                            binary_expression [64032,64043]
                                identifier: to [64032,64034]
                                comparison_operator: != [64035,64037]
                                identifier: owner [64038,64043]
                expression_statement [64055,64123]
                    call_expression [64055,64122]
                        identifier: require [64055,64062]
                        call_argument [64063,64121]
                            binary_expression [64063,64121]
                                binary_expression [64063,64082]
                                    member_expression: msg.sender [64063,64073]
                                    comparison_operator: == [64074,64076]
                                    identifier: owner [64077,64082]
                                logical_operator: || [64083,64085]
                                call_expression [64086,64121]
                                    identifier: isApprovedForAll [64086,64102]
                                    call_argument [64103,64108]
                                        identifier: owner [64103,64108]
                                    call_argument [64110,64120]
                                        member_expression: msg.sender [64110,64120]
                expression_statement [64135,64165]
                    assignment_expression [64135,64164]
                        array_access [64135,64159]
                            identifier: _tokenApprovals [64135,64150]
                            identifier: tokenId [64151,64158]
                        affectation_operator: = [64160,64161]
                        identifier: to [64162,64164]
                emit_statement [64175,64209]
                    identifier: Approval [64180,64188]
                    call_argument [64189,64194]
                        identifier: owner [64189,64194]
                    call_argument [64196,64198]
                        identifier: to [64196,64198]
                    call_argument [64200,64207]
                        identifier: tokenId [64200,64207]
        function_definition [64509,64663]
            function: function [64509,64517]
            identifier: getApproved [64518,64529]
            parameter [64530,64545]
                type_name: uint256 [64530,64537]
                identifier: tokenId [64538,64545]
            visibility: public [64547,64553]
            state_mutability [64554,64558]
                view: view [64554,64558]
            return_type_definition [64559,64576]
                returns: returns [64559,64566]
                parameter [64568,64575]
                    type_name: address [64568,64575]
            function_body [64577,64663]
                expression_statement [64588,64614]
                    call_expression [64588,64613]
                        identifier: require [64588,64595]
                        call_argument [64596,64612]
                            call_expression [64596,64612]
                                identifier: _exists [64596,64603]
                                call_argument [64604,64611]
                                    identifier: tokenId [64604,64611]
                return_statement [64624,64656]
                    return: return [64624,64630]
                    array_access [64631,64655]
                        identifier: _tokenApprovals [64631,64646]
                        identifier: tokenId [64647,64654]
        function_definition [64963,65180]
            function: function [64963,64971]
            identifier: setApprovalForAll [64972,64989]
            parameter [64990,65000]
                type_name: address [64990,64997]
                identifier: to [64998,65000]
            parameter [65002,65015]
                type_name: bool [65002,65006]
                identifier: approved [65007,65015]
            visibility: public [65017,65023]
            function_body [65024,65180]
                expression_statement [65035,65061]
                    call_expression [65035,65060]
                        identifier: require [65035,65042]
                        call_argument [65043,65059]
                            binary_expression [65043,65059]
                                identifier: to [65043,65045]
                                comparison_operator: != [65046,65048]
                                member_expression: msg.sender [65049,65059]
                expression_statement [65071,65117]
                    assignment_expression [65071,65116]
                        array_access [65071,65105]
                            array_access [65071,65101]
                                identifier: _operatorApprovals [65071,65089]
                                member_expression: msg.sender [65090,65100]
                            identifier: to [65102,65104]
                        affectation_operator: = [65106,65107]
                        identifier: approved [65108,65116]
                emit_statement [65127,65173]
                    identifier: ApprovalForAll [65132,65146]
                    call_argument [65147,65157]
                        member_expression: msg.sender [65147,65157]
                    call_argument [65159,65161]
                        identifier: to [65159,65161]
                    call_argument [65163,65171]
                        identifier: approved [65163,65171]
        function_definition [65509,65656]
            function: function [65509,65517]
            identifier: isApprovedForAll [65518,65534]
            parameter [65535,65548]
                type_name: address [65535,65542]
                identifier: owner [65543,65548]
            parameter [65550,65566]
                type_name: address [65550,65557]
                identifier: operator [65558,65566]
            visibility: public [65568,65574]
            state_mutability [65575,65579]
                view: view [65575,65579]
            return_type_definition [65580,65594]
                returns: returns [65580,65587]
                parameter [65589,65593]
                    type_name: bool [65589,65593]
            function_body [65595,65656]
                return_statement [65606,65649]
                    return: return [65606,65612]
                    array_access [65613,65648]
                        array_access [65613,65638]
                            identifier: _operatorApprovals [65613,65631]
                            identifier: owner [65632,65637]
                        identifier: operator [65639,65647]
        function_definition [66100,66284]
            function: function [66100,66108]
            identifier: transferFrom [66109,66121]
            parameter [66122,66134]
                type_name: address [66122,66129]
                identifier: from [66130,66134]
            parameter [66136,66146]
                type_name: address [66136,66143]
                identifier: to [66144,66146]
            parameter [66148,66163]
                type_name: uint256 [66148,66155]
                identifier: tokenId [66156,66163]
            visibility: public [66165,66171]
            function_body [66172,66284]
                expression_statement [66183,66232]
                    call_expression [66183,66231]
                        identifier: require [66183,66190]
                        call_argument [66191,66230]
                            call_expression [66191,66230]
                                identifier: _isApprovedOrOwner [66191,66209]
                                call_argument [66210,66220]
                                    member_expression: msg.sender [66210,66220]
                                call_argument [66222,66229]
                                    identifier: tokenId [66222,66229]
                expression_statement [66244,66277]
                    call_expression [66244,66276]
                        identifier: _transferFrom [66244,66257]
                        call_argument [66258,66262]
                            identifier: from [66258,66262]
                        call_argument [66264,66266]
                            identifier: to [66264,66266]
                        call_argument [66268,66275]
                            identifier: tokenId [66268,66275]
        function_definition [66930,67064]
            function: function [66930,66938]
            identifier: safeTransferFrom [66939,66955]
            parameter [66956,66968]
                type_name: address [66956,66963]
                identifier: from [66964,66968]
            parameter [66970,66980]
                type_name: address [66970,66977]
                identifier: to [66978,66980]
            parameter [66982,66997]
                type_name: uint256 [66982,66989]
                identifier: tokenId [66990,66997]
            visibility: public [66999,67005]
            function_body [67006,67064]
                expression_statement [67017,67057]
                    call_expression [67017,67056]
                        identifier: safeTransferFrom [67017,67033]
                        call_argument [67034,67038]
                            identifier: from [67034,67038]
                        call_argument [67040,67042]
                            identifier: to [67040,67042]
                        call_argument [67044,67051]
                            identifier: tokenId [67044,67051]
                        call_argument [67053,67055]
                            string_literal [67053,67055]
                                string: "" [67053,67055]
        function_definition [67783,67997]
            function: function [67783,67791]
            identifier: safeTransferFrom [67792,67808]
            parameter [67809,67821]
                type_name: address [67809,67816]
                identifier: from [67817,67821]
            parameter [67823,67833]
                type_name: address [67823,67830]
                identifier: to [67831,67833]
            parameter [67835,67850]
                type_name: uint256 [67835,67842]
                identifier: tokenId [67843,67850]
            parameter [67852,67870]
                type_name: bytes [67852,67857]
                memory: memory [67858,67864]
                identifier: _data [67865,67870]
            visibility: public [67872,67878]
            function_body [67879,67997]
                expression_statement [67890,67922]
                    call_expression [67890,67921]
                        identifier: transferFrom [67890,67902]
                        call_argument [67903,67907]
                            identifier: from [67903,67907]
                        call_argument [67909,67911]
                            identifier: to [67909,67911]
                        call_argument [67913,67920]
                            identifier: tokenId [67913,67920]
                expression_statement [67932,67990]
                    call_expression [67932,67989]
                        identifier: require [67932,67939]
                        call_argument [67940,67988]
                            call_expression [67940,67988]
                                identifier: _checkOnERC721Received [67940,67962]
                                call_argument [67963,67967]
                                    identifier: from [67963,67967]
                                call_argument [67969,67971]
                                    identifier: to [67969,67971]
                                call_argument [67973,67980]
                                    identifier: tokenId [67973,67980]
                                call_argument [67982,67987]
                                    identifier: _data [67982,67987]
        function_definition [68198,68353]
            function: function [68198,68206]
            identifier: _exists [68207,68214]
            parameter [68215,68230]
                type_name: uint256 [68215,68222]
                identifier: tokenId [68223,68230]
            visibility: internal [68232,68240]
            state_mutability [68241,68245]
                view: view [68241,68245]
            return_type_definition [68246,68260]
                returns: returns [68246,68253]
                parameter [68255,68259]
                    type_name: bool [68255,68259]
            function_body [68261,68353]
                variable_declaration_statement [68272,68309]
                    variable_declaration [68272,68285]
                        type_name: address [68272,68279]
                        identifier: owner [68280,68285]
                    affectation_operator: = [68286,68287]
                    array_access [68288,68308]
                        identifier: _tokenOwner [68288,68299]
                        identifier: tokenId [68300,68307]
                return_statement [68319,68346]
                    return: return [68319,68325]
                    binary_expression [68326,68345]
                        identifier: owner [68326,68331]
                        comparison_operator: != [68332,68334]
                        type_cast_expression [68335,68345]
                            primitive_type: address [68335,68342]
                            call_argument [68343,68344]
                                number_literal: 0 [68343,68344]
        function_definition [68722,68971]
            function: function [68722,68730]
            identifier: _isApprovedOrOwner [68731,68749]
            parameter [68750,68765]
                type_name: address [68750,68757]
                identifier: spender [68758,68765]
            parameter [68767,68782]
                type_name: uint256 [68767,68774]
                identifier: tokenId [68775,68782]
            visibility: internal [68784,68792]
            state_mutability [68793,68797]
                view: view [68793,68797]
            return_type_definition [68798,68812]
                returns: returns [68798,68805]
                parameter [68807,68811]
                    type_name: bool [68807,68811]
            function_body [68813,68971]
                variable_declaration_statement [68824,68857]
                    variable_declaration [68824,68837]
                        type_name: address [68824,68831]
                        identifier: owner [68832,68837]
                    affectation_operator: = [68838,68839]
                    call_expression [68840,68856]
                        identifier: ownerOf [68840,68847]
                        call_argument [68848,68855]
                            identifier: tokenId [68848,68855]
                return_statement [68867,68964]
                    return: return [68867,68873]
                    parenthesized_expression [68874,68963]
                        binary_expression [68875,68962]
                            binary_expression [68875,68926]
                                binary_expression [68875,68891]
                                    identifier: spender [68875,68882]
                                    comparison_operator: == [68883,68885]
                                    identifier: owner [68886,68891]
                                logical_operator: || [68892,68894]
                                binary_expression [68895,68926]
                                    call_expression [68895,68915]
                                        identifier: getApproved [68895,68906]
                                        call_argument [68907,68914]
                                            identifier: tokenId [68907,68914]
                                    comparison_operator: == [68916,68918]
                                    identifier: spender [68919,68926]
                            logical_operator: || [68927,68929]
                            call_expression [68930,68962]
                                identifier: isApprovedForAll [68930,68946]
                                call_argument [68947,68952]
                                    identifier: owner [68947,68952]
                                call_argument [68954,68961]
                                    identifier: spender [68954,68961]
        function_definition [69222,69489]
            function: function [69222,69230]
            identifier: _mint [69231,69236]
            parameter [69237,69247]
                type_name: address [69237,69244]
                identifier: to [69245,69247]
            parameter [69249,69264]
                type_name: uint256 [69249,69256]
                identifier: tokenId [69257,69264]
            visibility: internal [69266,69274]
            function_body [69275,69489]
                expression_statement [69286,69312]
                    call_expression [69286,69311]
                        identifier: require [69286,69293]
                        call_argument [69294,69310]
                            binary_expression [69294,69310]
                                identifier: to [69294,69296]
                                comparison_operator: != [69297,69299]
                                type_cast_expression [69300,69310]
                                    primitive_type: address [69300,69307]
                                    call_argument [69308,69309]
                                        number_literal: 0 [69308,69309]
                expression_statement [69322,69349]
                    call_expression [69322,69348]
                        identifier: require [69322,69329]
                        call_argument [69330,69347]
                            unary_expression [69330,69347]
                                !: ! [69330,69331]
                                call_expression [69331,69347]
                                    identifier: _exists [69331,69338]
                                    call_argument [69339,69346]
                                        identifier: tokenId [69339,69346]
                expression_statement [69361,69387]
                    assignment_expression [69361,69386]
                        array_access [69361,69381]
                            identifier: _tokenOwner [69361,69372]
                            identifier: tokenId [69373,69380]
                        affectation_operator: = [69382,69383]
                        identifier: to [69384,69386]
                expression_statement [69397,69431]
                    call_expression [69397,69430]
                        member_expression: _ownedTokensCount[to].increment [69397,69428]
                emit_statement [69443,69482]
                    identifier: Transfer [69448,69456]
                    call_argument [69457,69467]
                        type_cast_expression [69457,69467]
                            primitive_type: address [69457,69464]
                            call_argument [69465,69466]
                                number_literal: 0 [69465,69466]
                    call_argument [69469,69471]
                        identifier: to [69469,69471]
                    call_argument [69473,69480]
                        identifier: tokenId [69473,69480]
        function_definition [69771,70063]
            function: function [69771,69779]
            identifier: _burn [69780,69785]
            parameter [69786,69799]
                type_name: address [69786,69793]
                identifier: owner [69794,69799]
            parameter [69801,69816]
                type_name: uint256 [69801,69808]
                identifier: tokenId [69809,69816]
            visibility: internal [69818,69826]
            function_body [69827,70063]
                expression_statement [69838,69873]
                    call_expression [69838,69872]
                        identifier: require [69838,69845]
                        call_argument [69846,69871]
                            binary_expression [69846,69871]
                                call_expression [69846,69862]
                                    identifier: ownerOf [69846,69853]
                                    call_argument [69854,69861]
                                        identifier: tokenId [69854,69861]
                                comparison_operator: == [69863,69865]
                                identifier: owner [69866,69871]
                expression_statement [69885,69909]
                    call_expression [69885,69908]
                        identifier: _clearApproval [69885,69899]
                        call_argument [69900,69907]
                            identifier: tokenId [69900,69907]
                expression_statement [69921,69958]
                    call_expression [69921,69957]
                        member_expression: _ownedTokensCount[owner].decrement [69921,69955]
                expression_statement [69968,70002]
                    assignment_expression [69968,70001]
                        array_access [69968,69988]
                            identifier: _tokenOwner [69968,69979]
                            identifier: tokenId [69980,69987]
                        affectation_operator: = [69989,69990]
                        type_cast_expression [69991,70001]
                            primitive_type: address [69991,69998]
                            call_argument [69999,70000]
                                number_literal: 0 [69999,70000]
                emit_statement [70014,70056]
                    identifier: Transfer [70019,70027]
                    call_argument [70028,70033]
                        identifier: owner [70028,70033]
                    call_argument [70035,70045]
                        type_cast_expression [70035,70045]
                            primitive_type: address [70035,70042]
                            call_argument [70043,70044]
                                number_literal: 0 [70043,70044]
                    call_argument [70047,70054]
                        identifier: tokenId [70047,70054]
        function_definition [70249,70341]
            function: function [70249,70257]
            identifier: _burn [70258,70263]
            parameter [70264,70279]
                type_name: uint256 [70264,70271]
                identifier: tokenId [70272,70279]
            visibility: internal [70281,70289]
            function_body [70290,70341]
                expression_statement [70301,70334]
                    call_expression [70301,70333]
                        identifier: _burn [70301,70306]
                        call_argument [70307,70323]
                            call_expression [70307,70323]
                                identifier: ownerOf [70307,70314]
                                call_argument [70315,70322]
                                    identifier: tokenId [70315,70322]
                        call_argument [70325,70332]
                            identifier: tokenId [70325,70332]
        function_definition [70725,71099]
            function: function [70725,70733]
            identifier: _transferFrom [70734,70747]
            parameter [70748,70760]
                type_name: address [70748,70755]
                identifier: from [70756,70760]
            parameter [70762,70772]
                type_name: address [70762,70769]
                identifier: to [70770,70772]
            parameter [70774,70789]
                type_name: uint256 [70774,70781]
                identifier: tokenId [70782,70789]
            visibility: internal [70791,70799]
            function_body [70800,71099]
                expression_statement [70811,70845]
                    call_expression [70811,70844]
                        identifier: require [70811,70818]
                        call_argument [70819,70843]
                            binary_expression [70819,70843]
                                call_expression [70819,70835]
                                    identifier: ownerOf [70819,70826]
                                    call_argument [70827,70834]
                                        identifier: tokenId [70827,70834]
                                comparison_operator: == [70836,70838]
                                identifier: from [70839,70843]
                expression_statement [70855,70881]
                    call_expression [70855,70880]
                        identifier: require [70855,70862]
                        call_argument [70863,70879]
                            binary_expression [70863,70879]
                                identifier: to [70863,70865]
                                comparison_operator: != [70866,70868]
                                type_cast_expression [70869,70879]
                                    primitive_type: address [70869,70876]
                                    call_argument [70877,70878]
                                        number_literal: 0 [70877,70878]
                expression_statement [70893,70917]
                    call_expression [70893,70916]
                        identifier: _clearApproval [70893,70907]
                        call_argument [70908,70915]
                            identifier: tokenId [70908,70915]
                expression_statement [70929,70965]
                    call_expression [70929,70964]
                        member_expression: _ownedTokensCount[from].decrement [70929,70962]
                expression_statement [70975,71009]
                    call_expression [70975,71008]
                        member_expression: _ownedTokensCount[to].increment [70975,71006]
                expression_statement [71021,71047]
                    assignment_expression [71021,71046]
                        array_access [71021,71041]
                            identifier: _tokenOwner [71021,71032]
                            identifier: tokenId [71033,71040]
                        affectation_operator: = [71042,71043]
                        identifier: to [71044,71046]
                emit_statement [71059,71092]
                    identifier: Transfer [71064,71072]
                    call_argument [71073,71077]
                        identifier: from [71073,71077]
                    call_argument [71079,71081]
                        identifier: to [71079,71081]
                    call_argument [71083,71090]
                        identifier: tokenId [71083,71090]
        function_definition [71638,71994]
            function: function [71638,71646]
            identifier: _checkOnERC721Received [71647,71669]
            parameter [71670,71682]
                type_name: address [71670,71677]
                identifier: from [71678,71682]
            parameter [71684,71694]
                type_name: address [71684,71691]
                identifier: to [71692,71694]
            parameter [71696,71711]
                type_name: uint256 [71696,71703]
                identifier: tokenId [71704,71711]
            parameter [71713,71731]
                type_name: bytes [71713,71718]
                memory: memory [71719,71725]
                identifier: _data [71726,71731]
            visibility: internal [71742,71750]
            return_type_definition [71751,71765]
                returns: returns [71751,71758]
                parameter [71760,71764]
                    type_name: bool [71760,71764]
            function_body [71771,71994]
                if_statement [71782,71842]
                    if: if [71782,71784]
                    unary_expression [71786,71802]
                        !: ! [71786,71787]
                        call_expression [71787,71802]
                            member_expression: to.isContract [71787,71800]
                    block_statement [71804,71842]
                        return_statement [71819,71831]
                            return: return [71819,71825]
                            boolean_literal: true [71826,71830]
                variable_declaration_statement [71854,71941]
                    variable_declaration [71854,71867]
                        type_name: bytes4 [71854,71860]
                        identifier: retval [71861,71867]
                    affectation_operator: = [71868,71869]
                    call_expression [71870,71940]
                        member_expression: IERC721Receiver(to).onERC721Received [71870,71906]
                        call_argument [71907,71917]
                            member_expression: msg.sender [71907,71917]
                        call_argument [71919,71923]
                            identifier: from [71919,71923]
                        call_argument [71925,71932]
                            identifier: tokenId [71925,71932]
                        call_argument [71934,71939]
                            identifier: _data [71934,71939]
                return_statement [71951,71987]
                    return: return [71951,71957]
                    parenthesized_expression [71958,71986]
                        binary_expression [71959,71985]
                            identifier: retval [71959,71965]
                            comparison_operator: == [71966,71968]
                            identifier: _ERC721_RECEIVED [71969,71985]
        function_definition [72161,72336]
            function: function [72161,72169]
            identifier: _clearApproval [72170,72184]
            parameter [72185,72200]
                type_name: uint256 [72185,72192]
                identifier: tokenId [72193,72200]
            visibility: private [72202,72209]
            function_body [72210,72336]
                if_statement [72221,72329]
                    if: if [72221,72223]
                    binary_expression [72225,72263]
                        array_access [72225,72249]
                            identifier: _tokenApprovals [72225,72240]
                            identifier: tokenId [72241,72248]
                        comparison_operator: != [72250,72252]
                        type_cast_expression [72253,72263]
                            primitive_type: address [72253,72260]
                            call_argument [72261,72262]
                                number_literal: 0 [72261,72262]
                    block_statement [72265,72329]
                        expression_statement [72280,72318]
                            assignment_expression [72280,72317]
                                array_access [72280,72304]
                                    identifier: _tokenApprovals [72280,72295]
                                    identifier: tokenId [72296,72303]
                                affectation_operator: = [72305,72306]
                                type_cast_expression [72307,72317]
                                    primitive_type: address [72307,72314]
                                    call_argument [72315,72316]
                                        number_literal: 0 [72315,72316]
to
source_file [0,149751]
at 68
===
move-tree
---
contract_declaration [100281,114843]
    identifier: ValidatorShare [100290,100304]
    is: is [100305,100307]
    inheritance_specifier [100308,100323]
        user_defined_type [100308,100323]
            identifier: IValidatorShare [100308,100323]
    inheritance_specifier [100325,100345]
        user_defined_type [100325,100345]
            identifier: ERC20NonTransferable [100325,100345]
    inheritance_specifier [100347,100362]
        user_defined_type [100347,100362]
            identifier: OwnableLockable [100347,100362]
    inheritance_specifier [100364,100377]
        user_defined_type [100364,100377]
            identifier: Initializable [100364,100377]
    contract_body [100378,114843]
        struct_declaration [100385,100473]
            struct: struct [100385,100391]
            identifier: DelegatorUnbond [100392,100407]
            struct_member [100419,100434]
                type_name: uint256 [100419,100426]
                identifier: shares [100427,100433]
            struct_member [100444,100466]
                type_name: uint256 [100444,100451]
                identifier: withdrawEpoch [100452,100465]
        state_variable_declaration [100481,100528]
            type_name: uint256 [100481,100488]
            constant: constant [100489,100497]
            identifier: EXCHANGE_RATE_PRECISION [100498,100521]
            affectation_operator: = [100522,100523]
            number_literal: 100 [100524,100527]
        state_variable_declaration [100662,100719]
            type_name: uint256 [100662,100669]
            constant: constant [100670,100678]
            identifier: EXCHANGE_RATE_HIGH_PRECISION [100679,100707]
            affectation_operator: = [100708,100709]
            binary_expression [100710,100718]
                number_literal: 10 [100710,100712]
                **: ** [100713,100715]
                number_literal: 29 [100716,100718]
        state_variable_declaration [100726,100768]
            type_name: uint256 [100726,100733]
            constant: constant [100734,100742]
            identifier: MAX_COMMISION_RATE [100743,100761]
            affectation_operator: = [100762,100763]
            number_literal: 100 [100764,100767]
        state_variable_declaration [100774,100817]
            type_name: uint256 [100774,100781]
            constant: constant [100782,100790]
            identifier: REWARD_PRECISION [100791,100807]
            affectation_operator: = [100808,100809]
            binary_expression [100810,100816]
                number_literal: 10 [100810,100812]
                **: ** [100812,100814]
                number_literal: 25 [100814,100816]
        state_variable_declaration [100825,100858]
            type_name: StakingInfo [100825,100836]
            visibility: public [100837,100843]
            identifier: stakingLogger [100844,100857]
        state_variable_declaration [100864,100898]
            type_name: IStakeManager [100864,100877]
            visibility: public [100878,100884]
            identifier: stakeManager [100885,100897]
        state_variable_declaration [100904,100931]
            type_name: uint256 [100904,100911]
            visibility: public [100912,100918]
            identifier: validatorId [100919,100930]
        state_variable_declaration [100937,100969]
            type_name: uint256 [100937,100944]
            visibility: public [100945,100951]
            identifier: validatorRewards [100952,100968]
        state_variable_declaration [100975,101005]
            type_name: uint256 [100975,100982]
            visibility: public [100983,100989]
            identifier: commissionRate [100990,101004]
        state_variable_declaration [101074,101110]
            type_name: uint256 [101074,101081]
            visibility: public [101082,101088]
            identifier: lastCommissionUpdate [101089,101109]
        state_variable_declaration [101116,101150]
            type_name: uint256 [101116,101123]
            visibility: public [101124,101130]
            identifier: minAmount [101131,101140]
            affectation_operator: = [101141,101142]
            binary_expression [101143,101149]
                number_literal: 10 [101143,101145]
                **: ** [101145,101147]
                number_literal: 18 [101147,101149]
        state_variable_declaration [101177,101205]
            type_name: uint256 [101177,101184]
            visibility: public [101185,101191]
            identifier: __totalStake [101192,101204]
        state_variable_declaration [101211,101241]
            type_name: uint256 [101211,101218]
            visibility: public [101219,101225]
            identifier: rewardPerShare [101226,101240]
        state_variable_declaration [101247,101275]
            type_name: uint256 [101247,101254]
            visibility: public [101255,101261]
            identifier: activeAmount [101262,101274]
        state_variable_declaration [101281,101311]
            type_name: bool [101281,101285]
            visibility: public [101286,101292]
            identifier: delegation [101293,101303]
            affectation_operator: = [101304,101305]
            boolean_literal: true [101306,101310]
        state_variable_declaration [101319,101347]
            type_name: uint256 [101319,101326]
            visibility: public [101327,101333]
            identifier: withdrawPool [101334,101346]
        state_variable_declaration [101353,101383]
            type_name: uint256 [101353,101360]
            visibility: public [101361,101367]
            identifier: withdrawShares [101368,101382]
        state_variable_declaration [101410,101453]
            type_name: mapping(address => uint256) [101410,101437]
            identifier: __amountStaked [101438,101452]
        state_variable_declaration [101459,101510]
            type_name: mapping(address => DelegatorUnbond) [101459,101494]
            visibility: public [101495,101501]
            identifier: unbonds [101502,101509]
        state_variable_declaration [101516,101572]
            type_name: mapping(address => uint256) [101516,101543]
            visibility: public [101544,101550]
            identifier: initalRewardPerShare [101551,101571]
        modifier_definition [101580,101709]
            modifier: modifier [101580,101588]
            identifier: onlyValidator [101589,101602]
            function_body [101605,101709]
                expression_statement [101616,101690]
                    call_expression [101616,101689]
                        identifier: require [101616,101623]
                        call_argument [101624,101671]
                            binary_expression [101624,101671]
                                call_expression [101624,101657]
                                    member_expression: stakeManager.ownerOf [101624,101644]
                                    call_argument [101645,101656]
                                        identifier: validatorId [101645,101656]
                                comparison_operator: == [101658,101660]
                                member_expression: msg.sender [101661,101671]
                        call_argument [101673,101688]
                            string_literal [101673,101688]
                                string: "not validator" [101673,101688]
                expression_statement [101700,101702]
                    identifier: _ [101700,101701]
        function_definition [101825,102192]
            function: function [101825,101833]
            identifier: initialize [101834,101844]
            parameter [101845,101865]
                type_name: uint256 [101845,101852]
                identifier: _validatorId [101853,101865]
            parameter [101867,101889]
                type_name: address [101867,101874]
                identifier: _stakingLogger [101875,101889]
            parameter [101891,101912]
                type_name: address [101891,101898]
                identifier: _stakeManager [101899,101912]
            visibility: external [101914,101922]
            modifier_invocation [101923,101934]
                identifier: initializer [101923,101934]
            function_body [101936,102192]
                expression_statement [101947,101974]
                    assignment_expression [101947,101973]
                        identifier: validatorId [101947,101958]
                        affectation_operator: = [101959,101960]
                        identifier: _validatorId [101961,101973]
                expression_statement [101984,102028]
                    assignment_expression [101984,102027]
                        identifier: stakingLogger [101984,101997]
                        affectation_operator: = [101998,101999]
                        call_expression [102000,102027]
                            identifier: StakingInfo [102000,102011]
                            call_argument [102012,102026]
                                identifier: _stakingLogger [102012,102026]
                expression_statement [102038,102082]
                    assignment_expression [102038,102081]
                        identifier: stakeManager [102038,102050]
                        affectation_operator: = [102051,102052]
                        call_expression [102053,102081]
                            identifier: IStakeManager [102053,102066]
                            call_argument [102067,102080]
                                identifier: _stakeManager [102067,102080]
                expression_statement [102092,102126]
                    call_expression [102092,102125]
                        identifier: _transferOwnership [102092,102110]
                        call_argument [102111,102124]
                            identifier: _stakeManager [102111,102124]
                expression_statement [102138,102157]
                    assignment_expression [102138,102156]
                        identifier: minAmount [102138,102147]
                        affectation_operator: = [102148,102149]
                        binary_expression [102150,102156]
                            number_literal: 10 [102150,102152]
                            **: ** [102152,102154]
                            number_literal: 18 [102154,102156]
                expression_statement [102167,102185]
                    assignment_expression [102167,102184]
                        identifier: delegation [102167,102177]
                        affectation_operator: = [102178,102179]
                        boolean_literal: true [102180,102184]
        function_definition [102200,102957]
            function: function [102200,102208]
            identifier: updateCommissionRate [102209,102229]
            parameter [102230,102255]
                type_name: uint256 [102230,102237]
                identifier: newCommissionRate [102238,102255]
            visibility: external [102257,102265]
            modifier_invocation [102266,102279]
                identifier: onlyValidator [102266,102279]
            function_body [102280,102957]
                variable_declaration_statement [102291,102328]
                    variable_declaration [102291,102304]
                        type_name: uint256 [102291,102298]
                        identifier: epoch [102299,102304]
                    affectation_operator: = [102305,102306]
                    call_expression [102307,102327]
                        member_expression: stakeManager.epoch [102307,102325]
                variable_declaration_statement [102338,102391]
                    variable_declaration [102338,102367]
                        type_name: uint256 [102338,102345]
                        identifier: _lastCommissionUpdate [102346,102367]
                    affectation_operator: = [102368,102369]
                    identifier: lastCommissionUpdate [102370,102390]
                expression_statement [102403,102662]
                    call_expression [102403,102661]
                        identifier: require [102403,102410]
                        call_argument [102455,102553]
                            binary_expression [102455,102553]
                                parenthesized_expression [102455,102523]
                                    binary_expression [102456,102522]
                                        call_expression [102456,102513]
                                            member_expression: _lastCommissionUpdate.add [102456,102481]
                                            call_argument [102482,102512]
                                                call_expression [102482,102512]
                                                    member_expression: stakeManager.withdrawalDelay [102482,102510]
                                        comparison_operator: <= [102514,102516]
                                        identifier: epoch [102517,102522]
                                logical_operator: || [102524,102526]
                                binary_expression [102527,102553]
                                    identifier: _lastCommissionUpdate [102527,102548]
                                    comparison_operator: == [102549,102551]
                                    number_literal: 0 [102552,102553]
                        call_argument [102610,102650]
                            string_literal [102610,102650]
                                string: "Commission rate update cooldown period" [102610,102650]
                expression_statement [102674,102770]
                    call_expression [102674,102769]
                        identifier: require [102674,102681]
                        call_argument [102682,102721]
                            binary_expression [102682,102721]
                                identifier: newCommissionRate [102682,102699]
                                comparison_operator: <= [102700,102702]
                                identifier: MAX_COMMISION_RATE [102703,102721]
                        call_argument [102723,102768]
                            string_literal [102723,102768]
                                string: "Commission rate should be in range of 0-100" [102723,102768]
                expression_statement [102780,102866]
                    call_expression [102780,102865]
                        member_expression: stakingLogger.logUpdateCommissionRate [102780,102817]
                        call_argument [102818,102829]
                            identifier: validatorId [102818,102829]
                        call_argument [102831,102848]
                            identifier: newCommissionRate [102831,102848]
                        call_argument [102850,102864]
                            identifier: commissionRate [102850,102864]
                expression_statement [102876,102911]
                    assignment_expression [102876,102910]
                        identifier: commissionRate [102876,102890]
                        affectation_operator: = [102891,102892]
                        identifier: newCommissionRate [102893,102910]
                expression_statement [102921,102950]
                    assignment_expression [102921,102949]
                        identifier: lastCommissionUpdate [102921,102941]
                        affectation_operator: = [102942,102943]
                        identifier: epoch [102944,102949]
        function_definition [102965,103438]
            function: function [102965,102973]
            identifier: updateRewards [102974,102987]
            parameter [102988,103002]
                type_name: uint256 [102988,102995]
                identifier: reward [102996,103002]
            parameter [103004,103032]
                type_name: uint256 [103004,103011]
                identifier: checkpointStakePower [103012,103032]
            parameter [103034,103056]
                type_name: uint256 [103034,103041]
                identifier: validatorStake [103042,103056]
            visibility: external [103067,103075]
            modifier_invocation [103085,103094]
                identifier: onlyOwner [103085,103094]
            return_type_definition [103104,103121]
                returns: returns [103104,103111]
                parameter [103113,103120]
                    type_name: uint256 [103113,103120]
            function_body [103127,103438]
                variable_declaration_statement [103138,103200]
                    variable_declaration [103138,103164]
                        type_name: uint256 [103138,103145]
                        identifier: combinedStakePower [103146,103164]
                    affectation_operator: = [103165,103166]
                    call_expression [103167,103199]
                        member_expression: validatorStake.add [103167,103185]
                        call_argument [103186,103198]
                            identifier: activeAmount [103186,103198]
                variable_declaration_statement [103248,103323]
                    variable_declaration [103248,103263]
                        type_name: uint256 [103248,103255]
                        identifier: rewards [103256,103263]
                    affectation_operator: = [103264,103265]
                    call_expression [103266,103322]
                        member_expression: combinedStakePower.mul(reward).div [103266,103300]
                        call_argument [103301,103321]
                            identifier: checkpointStakePower [103301,103321]
                expression_statement [103335,103395]
                    call_expression [103335,103394]
                        identifier: _updateRewards [103335,103349]
                        call_argument [103350,103357]
                            identifier: rewards [103350,103357]
                        call_argument [103359,103373]
                            identifier: validatorStake [103359,103373]
                        call_argument [103375,103393]
                            identifier: combinedStakePower [103375,103393]
                return_statement [103405,103431]
                    return: return [103405,103411]
                    identifier: combinedStakePower [103412,103430]
        function_definition [103446,103680]
            function: function [103446,103454]
            identifier: addProposerBonus [103455,103471]
            parameter [103472,103487]
                type_name: uint256 [103472,103479]
                identifier: rewards [103480,103487]
            parameter [103489,103511]
                type_name: uint256 [103489,103496]
                identifier: validatorStake [103497,103511]
            visibility: public [103513,103519]
            modifier_invocation [103520,103529]
                identifier: onlyOwner [103520,103529]
            function_body [103530,103680]
                variable_declaration_statement [103541,103603]
                    variable_declaration [103541,103567]
                        type_name: uint256 [103541,103548]
                        identifier: combinedStakePower [103549,103567]
                    affectation_operator: = [103568,103569]
                    call_expression [103570,103602]
                        member_expression: validatorStake.add [103570,103588]
                        call_argument [103589,103601]
                            identifier: activeAmount [103589,103601]
                expression_statement [103613,103673]
                    call_expression [103613,103672]
                        identifier: _updateRewards [103613,103627]
                        call_argument [103628,103635]
                            identifier: rewards [103628,103635]
                        call_argument [103637,103651]
                            identifier: validatorStake [103637,103651]
                        call_argument [103653,103671]
                            identifier: combinedStakePower [103653,103671]
        function_definition [103688,104532]
            function: function [103688,103696]
            identifier: _updateRewards [103697,103711]
            parameter [103712,103727]
                type_name: uint256 [103712,103719]
                identifier: rewards [103720,103727]
            parameter [103729,103751]
                type_name: uint256 [103729,103736]
                identifier: validatorStake [103737,103751]
            parameter [103753,103779]
                type_name: uint256 [103753,103760]
                identifier: combinedStakePower [103761,103779]
            visibility: internal [103781,103789]
            function_body [103790,104532]
                variable_declaration_statement [103801,103881]
                    variable_declaration [103801,103826]
                        type_name: uint256 [103801,103808]
                        identifier: _validatorRewards [103809,103826]
                    affectation_operator: = [103827,103828]
                    call_expression [103829,103880]
                        member_expression: validatorStake.mul(rewards).div [103829,103860]
                        call_argument [103861,103879]
                            identifier: combinedStakePower [103861,103879]
                if_statement [103954,104154]
                    if: if [103954,103956]
                    binary_expression [103958,103976]
                        identifier: commissionRate [103958,103972]
                        comparison_operator: > [103973,103974]
                        number_literal: 0 [103975,103976]
                    block_statement [103978,104154]
                        expression_statement [103993,104143]
                            assignment_expression [103993,104142]
                                identifier: _validatorRewards [103993,104010]
                                affectation_operator: = [104011,104012]
                                call_expression [104013,104142]
                                    member_expression: _validatorRewards.add [104013,104034]
                                    call_argument [104053,104127]
                                        call_expression [104053,104127]
                                            member_expression: rewards.sub(_validatorRewards).mul(commissionRate).div [104053,104107]
                                            call_argument [104108,104126]
                                                identifier: MAX_COMMISION_RATE [104108,104126]
                expression_statement [104166,104225]
                    assignment_expression [104166,104224]
                        identifier: validatorRewards [104166,104182]
                        affectation_operator: = [104183,104184]
                        call_expression [104185,104224]
                            member_expression: validatorRewards.add [104185,104205]
                            call_argument [104206,104223]
                                identifier: _validatorRewards [104206,104223]
                variable_declaration_statement [104237,104296]
                    variable_declaration [104237,104262]
                        type_name: uint256 [104237,104244]
                        identifier: delegatorsRewards [104245,104262]
                    affectation_operator: = [104263,104264]
                    call_expression [104265,104295]
                        member_expression: rewards.sub [104265,104276]
                        call_argument [104277,104294]
                            identifier: _validatorRewards [104277,104294]
                variable_declaration_statement [104306,104342]
                    variable_declaration [104306,104325]
                        type_name: uint256 [104306,104313]
                        identifier: totalShares [104314,104325]
                    affectation_operator: = [104326,104327]
                    call_expression [104328,104341]
                        identifier: totalSupply [104328,104339]
                if_statement [104352,104525]
                    if: if [104352,104354]
                    binary_expression [104356,104371]
                        identifier: totalShares [104356,104367]
                        comparison_operator: > [104368,104369]
                        number_literal: 0 [104370,104371]
                    block_statement [104373,104525]
                        expression_statement [104388,104514]
                            assignment_expression [104388,104513]
                                identifier: rewardPerShare [104388,104402]
                                affectation_operator: = [104403,104404]
                                call_expression [104405,104513]
                                    member_expression: rewardPerShare.add [104405,104423]
                                    call_argument [104442,104498]
                                        call_expression [104442,104498]
                                            member_expression: delegatorsRewards.mul(REWARD_PRECISION).div [104442,104485]
                                            call_argument [104486,104497]
                                                identifier: totalShares [104486,104497]
        function_definition [104540,104742]
            function: function [104540,104548]
            identifier: withdrawRewardsValidator [104549,104573]
            visibility: external [104576,104584]
            modifier_invocation [104585,104594]
                identifier: onlyOwner [104585,104594]
            return_type_definition [104595,104612]
                returns: returns [104595,104602]
                parameter [104604,104611]
                    type_name: uint256 [104604,104611]
            function_body [104613,104742]
                variable_declaration_statement [104624,104669]
                    variable_declaration [104624,104649]
                        type_name: uint256 [104624,104631]
                        identifier: _validatorRewards [104632,104649]
                    affectation_operator: = [104650,104651]
                    identifier: validatorRewards [104652,104668]
                expression_statement [104679,104700]
                    assignment_expression [104679,104699]
                        identifier: validatorRewards [104679,104695]
                        affectation_operator: = [104696,104697]
                        number_literal: 0 [104698,104699]
                return_statement [104710,104735]
                    return: return [104710,104716]
                    identifier: _validatorRewards [104717,104734]
        function_definition [104750,105009]
            function: function [104750,104758]
            identifier: _getRatePrecision [104759,104776]
            visibility: private [104779,104786]
            state_mutability [104787,104791]
                view: view [104787,104791]
            return_type_definition [104792,104808]
                returns: returns [104792,104799]
                parameter [104800,104807]
                    type_name: uint256 [104800,104807]
            function_body [104809,105009]
                if_statement [104875,104953]
                    if: if [104875,104877]
                    binary_expression [104879,104894]
                        identifier: validatorId [104879,104890]
                        comparison_operator: < [104891,104892]
                        number_literal: 8 [104893,104894]
                    block_statement [104896,104953]
                        return_statement [104911,104942]
                            return: return [104911,104917]
                            identifier: EXCHANGE_RATE_PRECISION [104918,104941]
                return_statement [104966,105002]
                    return: return [104966,104972]
                    identifier: EXCHANGE_RATE_HIGH_PRECISION [104973,105001]
        function_definition [105017,105315]
            function: function [105017,105025]
            identifier: exchangeRate [105026,105038]
            visibility: public [105041,105047]
            state_mutability [105048,105052]
                view: view [105048,105052]
            return_type_definition [105053,105070]
                returns: returns [105053,105060]
                parameter [105062,105069]
                    type_name: uint256 [105062,105069]
            function_body [105071,105315]
                variable_declaration_statement [105082,105118]
                    variable_declaration [105082,105101]
                        type_name: uint256 [105082,105089]
                        identifier: totalShares [105090,105101]
                    affectation_operator: = [105102,105103]
                    call_expression [105104,105117]
                        identifier: totalSupply [105104,105115]
                variable_declaration_statement [105128,105168]
                    variable_declaration [105128,105145]
                        type_name: uint256 [105128,105135]
                        identifier: precision [105136,105145]
                    affectation_operator: = [105146,105147]
                    call_expression [105148,105167]
                        identifier: _getRatePrecision [105148,105165]
                return_statement [105178,105308]
                    return: return [105178,105184]
                    call_expression [105198,105307]
                        member_expression: totalShares == 0                 ? precision                 : activeAmount.mul(precision).div [105198,105294]
                        call_argument [105295,105306]
                            identifier: totalShares [105295,105306]
        function_definition [105323,105966]
            function: function [105323,105331]
            identifier: withdrawExchangeRate [105332,105352]
            visibility: public [105355,105361]
            state_mutability [105362,105366]
                view: view [105362,105366]
            return_type_definition [105367,105384]
                returns: returns [105367,105374]
                parameter [105376,105383]
                    type_name: uint256 [105376,105383]
            function_body [105385,105966]
                variable_declaration_statement [105396,105436]
                    variable_declaration [105396,105413]
                        type_name: uint256 [105396,105403]
                        identifier: precision [105404,105413]
                    affectation_operator: = [105414,105415]
                    call_expression [105416,105435]
                        identifier: _getRatePrecision [105416,105433]
                if_statement [105446,105758]
                    if: if [105446,105448]
                    binary_expression [105450,105465]
                        identifier: validatorId [105450,105461]
                        comparison_operator: < [105462,105463]
                        number_literal: 8 [105464,105465]
                    block_statement [105467,105758]
                        return_statement [105730,105747]
                            return: return [105730,105736]
                            identifier: precision [105737,105746]
                variable_declaration_statement [105770,105811]
                    variable_declaration [105770,105793]
                        type_name: uint256 [105770,105777]
                        identifier: _withdrawShares [105778,105793]
                    affectation_operator: = [105794,105795]
                    identifier: withdrawShares [105796,105810]
                return_statement [105821,105959]
                    return: return [105821,105827]
                    call_expression [105841,105958]
                        member_expression: _withdrawShares == 0                 ? precision                 : withdrawPool.mul(precision).div [105841,105941]
                        call_argument [105942,105957]
                            identifier: _withdrawShares [105942,105957]
        function_definition [105974,106101]
            function: function [105974,105982]
            identifier: buyVoucher [105983,105993]
            parameter [105994,106009]
                type_name: uint256 [105994,106001]
                identifier: _amount [106002,106009]
            parameter [106011,106035]
                type_name: uint256 [106011,106018]
                identifier: _minSharesToMint [106019,106035]
            visibility: public [106037,106043]
            function_body [106044,106101]
                expression_statement [106055,106094]
                    call_expression [106055,106093]
                        identifier: _buyVoucher [106055,106066]
                        call_argument [106067,106074]
                            identifier: _amount [106067,106074]
                        call_argument [106076,106092]
                            identifier: _minSharesToMint [106076,106092]
        function_definition [106109,106485]
            function: function [106109,106117]
            identifier: _buyVoucher [106118,106129]
            parameter [106130,106145]
                type_name: uint256 [106130,106137]
                identifier: _amount [106138,106145]
            parameter [106147,106171]
                type_name: uint256 [106147,106154]
                identifier: _minSharesToMint [106155,106171]
            visibility: internal [106173,106181]
            return_type_definition [106182,106198]
                returns: returns [106182,106189]
                parameter [106190,106197]
                    type_name: uint256 [106190,106197]
            function_body [106199,106485]
                expression_statement [106210,106249]
                    call_expression [106210,106248]
                        identifier: _withdrawAndTransferReward [106210,106236]
                        call_argument [106237,106247]
                            member_expression: msg.sender [106237,106247]
                variable_declaration_statement [106259,106335]
                    variable_declaration [106259,106282]
                        type_name: uint256 [106259,106266]
                        identifier: amountToDeposit [106267,106282]
                    affectation_operator: = [106283,106284]
                    call_expression [106285,106334]
                        identifier: _buyShares [106285,106295]
                        call_argument [106296,106303]
                            identifier: _amount [106296,106303]
                        call_argument [106305,106321]
                            identifier: _minSharesToMint [106305,106321]
                        call_argument [106323,106333]
                            member_expression: msg.sender [106323,106333]
                expression_statement [106345,106445]
                    call_expression [106345,106444]
                        identifier: require [106345,106352]
                        call_argument [106353,106425]
                            call_expression [106353,106425]
                                member_expression: stakeManager.delegationDeposit [106353,106383]
                                call_argument [106384,106395]
                                    identifier: validatorId [106384,106395]
                                call_argument [106397,106412]
                                    identifier: amountToDeposit [106397,106412]
                                call_argument [106414,106424]
                                    member_expression: msg.sender [106414,106424]
                        call_argument [106427,106443]
                            string_literal [106427,106443]
                                string: "deposit failed" [106427,106443]
                return_statement [106455,106478]
                    return: return [106455,106461]
                    identifier: amountToDeposit [106462,106477]
        function_definition [106493,106801]
            function: function [106493,106501]
            identifier: _getTotalStake [106502,106516]
            parameter [106517,106529]
                type_name: address [106517,106524]
                identifier: user [106525,106529]
            visibility: internal [106531,106539]
            state_mutability [106540,106544]
                view: view [106540,106544]
            return_type_definition [106545,106570]
                returns: returns [106545,106552]
                parameter [106553,106560]
                    type_name: uint256 [106553,106560]
                parameter [106562,106569]
                    type_name: uint256 [106562,106569]
            function_body [106571,106801]
                variable_declaration_statement [106582,106615]
                    variable_declaration [106582,106596]
                        type_name: uint256 [106582,106589]
                        identifier: shares [106590,106596]
                    affectation_operator: = [106597,106598]
                    call_expression [106599,106614]
                        identifier: balanceOf [106599,106608]
                        call_argument [106609,106613]
                            identifier: user [106609,106613]
                variable_declaration_statement [106625,106655]
                    variable_declaration [106625,106637]
                        type_name: uint256 [106625,106632]
                        identifier: rate [106633,106637]
                    affectation_operator: = [106638,106639]
                    call_expression [106640,106654]
                        identifier: exchangeRate [106640,106652]
                if_statement [106665,106725]
                    if: if [106665,106667]
                    binary_expression [106669,106680]
                        identifier: shares [106669,106675]
                        comparison_operator: == [106676,106678]
                        number_literal: 0 [106679,106680]
                    block_statement [106682,106725]
                        return_statement [106697,106714]
                            return: return [106697,106703]
                            tuple_expression [106704,106713]
                                number_literal: 0 [106705,106706]
                                identifier: rate [106708,106712]
                return_statement [106737,106794]
                    return: return [106737,106743]
                    tuple_expression [106744,106793]
                        call_expression [106745,106786]
                            member_expression: rate.mul(shares).div [106745,106765]
                            call_argument [106766,106785]
                                call_expression [106766,106785]
                                    identifier: _getRatePrecision [106766,106783]
                        identifier: rate [106788,106792]
        function_definition [106809,106864]
            function: function [106809,106817]
            identifier: restake [106818,106825]
            visibility: public [106828,106834]
            function_body [106835,106864]
                expression_statement [106846,106857]
                    call_expression [106846,106856]
                        identifier: _restake [106846,106854]
        function_definition [106872,107660]
            function: function [106872,106880]
            identifier: _restake [106881,106889]
            visibility: internal [106892,106900]
            return_type_definition [106901,106917]
                returns: returns [106901,106908]
                parameter [106909,106916]
                    type_name: uint256 [106909,106916]
            function_body [106918,107660]
                variable_declaration_statement [106929,106980]
                    variable_declaration [106929,106949]
                        type_name: uint256 [106929,106936]
                        identifier: liquidReward [106937,106949]
                    affectation_operator: = [106950,106951]
                    call_expression [106952,106979]
                        identifier: _withdrawReward [106952,106967]
                        call_argument [106968,106978]
                            member_expression: msg.sender [106968,106978]
                expression_statement [106990,107057]
                    call_expression [106990,107056]
                        identifier: require [106990,106997]
                        call_argument [106998,107023]
                            binary_expression [106998,107023]
                                identifier: liquidReward [106998,107010]
                                comparison_operator: >= [107011,107013]
                                identifier: minAmount [107014,107023]
                        call_argument [107025,107055]
                            string_literal [107025,107055]
                                string: "Too small rewards to restake" [107025,107055]
                variable_declaration_statement [107069,107134]
                    variable_declaration [107069,107091]
                        type_name: uint256 [107069,107076]
                        identifier: amountRestaked [107077,107091]
                    affectation_operator: = [107092,107093]
                    call_expression [107094,107133]
                        identifier: _buyShares [107094,107104]
                        call_argument [107105,107117]
                            identifier: liquidReward [107105,107117]
                        call_argument [107119,107120]
                            number_literal: 0 [107119,107120]
                        call_argument [107122,107132]
                            member_expression: msg.sender [107122,107132]
                if_statement [107144,107471]
                    if: if [107144,107146]
                    binary_expression [107148,107177]
                        identifier: liquidReward [107148,107160]
                        comparison_operator: > [107161,107162]
                        identifier: amountRestaked [107163,107177]
                    block_statement [107179,107471]
                        expression_statement [107236,107351]
                            call_expression [107236,107350]
                                identifier: require [107236,107243]
                                call_argument [107244,107326]
                                    call_expression [107244,107326]
                                        member_expression: stakeManager.transferFunds [107244,107270]
                                        call_argument [107271,107282]
                                            identifier: validatorId [107271,107282]
                                        call_argument [107284,107313]
                                            binary_expression [107284,107313]
                                                identifier: liquidReward [107284,107296]
                                                arithmetic_operator: - [107297,107298]
                                                identifier: amountRestaked [107299,107313]
                                        call_argument [107315,107325]
                                            member_expression: msg.sender [107315,107325]
                                call_argument [107328,107349]
                                    string_literal [107328,107349]
                                        string: "Insufficent rewards" [107328,107349]
                        expression_statement [107365,107460]
                            call_expression [107365,107459]
                                member_expression: stakingLogger.logDelegatorClaimRewards [107365,107403]
                                call_argument [107404,107415]
                                    identifier: validatorId [107404,107415]
                                call_argument [107417,107427]
                                    member_expression: msg.sender [107417,107427]
                                call_argument [107429,107458]
                                    binary_expression [107429,107458]
                                        identifier: liquidReward [107429,107441]
                                        arithmetic_operator: - [107442,107443]
                                        identifier: amountRestaked [107444,107458]
                variable_declaration_statement [107483,107536]
                    variable_declaration_tuple [107483,107506]
                        variable_declaration [107484,107503]
                            type_name: uint256 [107484,107491]
                            identifier: totalStaked [107492,107503]
                    affectation_operator: = [107507,107508]
                    call_expression [107509,107535]
                        identifier: _getTotalStake [107509,107523]
                        call_argument [107524,107534]
                            member_expression: msg.sender [107524,107534]
                expression_statement [107546,107619]
                    call_expression [107546,107618]
                        member_expression: stakingLogger.logDelegatorRestaked [107546,107580]
                        call_argument [107581,107592]
                            identifier: validatorId [107581,107592]
                        call_argument [107594,107604]
                            member_expression: msg.sender [107594,107604]
                        call_argument [107606,107617]
                            identifier: totalStaked [107606,107617]
                return_statement [107631,107653]
                    return: return [107631,107637]
                    identifier: amountRestaked [107638,107652]
        function_definition [107668,108651]
            function: function [107668,107676]
            identifier: _buyShares [107677,107687]
            parameter [107688,107703]
                type_name: uint256 [107688,107695]
                identifier: _amount [107696,107703]
            parameter [107705,107729]
                type_name: uint256 [107705,107712]
                identifier: _minSharesToMint [107713,107729]
            parameter [107731,107743]
                type_name: address [107731,107738]
                identifier: user [107739,107743]
            visibility: private [107745,107752]
            modifier_invocation [107753,107769]
                identifier: onlyWhenUnlocked [107753,107769]
            return_type_definition [107770,107786]
                returns: returns [107770,107777]
                parameter [107778,107785]
                    type_name: uint256 [107778,107785]
            function_body [107787,108651]
                expression_statement [107798,107844]
                    call_expression [107798,107843]
                        identifier: require [107798,107805]
                        call_argument [107806,107816]
                            identifier: delegation [107806,107816]
                        call_argument [107818,107842]
                            string_literal [107818,107842]
                                string: "Delegation is disabled" [107818,107842]
                variable_declaration_statement [107856,107886]
                    variable_declaration [107856,107868]
                        type_name: uint256 [107856,107863]
                        identifier: rate [107864,107868]
                    affectation_operator: = [107869,107870]
                    call_expression [107871,107885]
                        identifier: exchangeRate [107871,107883]
                variable_declaration_statement [107896,107936]
                    variable_declaration [107896,107913]
                        type_name: uint256 [107896,107903]
                        identifier: precision [107904,107913]
                    affectation_operator: = [107914,107915]
                    call_expression [107916,107935]
                        identifier: _getRatePrecision [107916,107933]
                variable_declaration_statement [107946,107996]
                    variable_declaration [107946,107960]
                        type_name: uint256 [107946,107953]
                        identifier: shares [107954,107960]
                    affectation_operator: = [107961,107962]
                    call_expression [107963,107995]
                        member_expression: _amount.mul(precision).div [107963,107989]
                        call_argument [107990,107994]
                            identifier: rate [107990,107994]
                expression_statement [108006,108063]
                    call_expression [108006,108062]
                        identifier: require [108006,108013]
                        call_argument [108014,108040]
                            binary_expression [108014,108040]
                                identifier: shares [108014,108020]
                                comparison_operator: >= [108021,108023]
                                identifier: _minSharesToMint [108024,108040]
                        call_argument [108042,108061]
                            string_literal [108042,108061]
                                string: "Too much slippage" [108042,108061]
                expression_statement [108073,108124]
                    call_expression [108073,108123]
                        identifier: require [108073,108080]
                        call_argument [108081,108106]
                            binary_expression [108081,108106]
                                member_expression: unbonds[user].shares [108081,108101]
                                comparison_operator: == [108102,108104]
                                number_literal: 0 [108105,108106]
                        call_argument [108108,108122]
                            string_literal [108108,108122]
                                string: "Ongoing exit" [108108,108122]
                expression_statement [108136,108156]
                    call_expression [108136,108155]
                        identifier: _mint [108136,108141]
                        call_argument [108142,108146]
                            identifier: user [108142,108146]
                        call_argument [108148,108154]
                            identifier: shares [108148,108154]
                expression_statement [108265,108330]
                    assignment_expression [108265,108329]
                        identifier: _amount [108265,108272]
                        affectation_operator: = [108273,108274]
                        call_expression [108275,108329]
                            member_expression: _amount.sub [108275,108286]
                            call_argument [108287,108328]
                                call_expression [108287,108328]
                                    member_expression: _amount % rate.mul(shares).div [108287,108317]
                                    call_argument [108318,108327]
                                        identifier: precision [108318,108327]
                expression_statement [108342,108383]
                    assignment_expression [108342,108382]
                        identifier: activeAmount [108342,108354]
                        affectation_operator: = [108355,108356]
                        call_expression [108357,108382]
                            member_expression: activeAmount.add [108357,108373]
                            call_argument [108374,108381]
                                identifier: _amount [108374,108381]
                expression_statement [108393,108457]
                    call_expression [108393,108456]
                        member_expression: stakeManager.updateValidatorState [108393,108426]
                        call_argument [108427,108438]
                            identifier: validatorId [108427,108438]
                        call_argument [108440,108455]
                            type_cast_expression [108440,108455]
                                primitive_type: int256 [108440,108446]
                                call_argument [108447,108454]
                                    identifier: _amount [108447,108454]
                variable_declaration_statement [108469,108504]
                    variable_declaration [108469,108487]
                        type_name: StakingInfo [108469,108480]
                        identifier: logger [108481,108487]
                    affectation_operator: = [108488,108489]
                    identifier: stakingLogger [108490,108503]
                expression_statement [108514,108572]
                    call_expression [108514,108571]
                        member_expression: logger.logShareMinted [108514,108535]
                        call_argument [108536,108547]
                            identifier: validatorId [108536,108547]
                        call_argument [108549,108553]
                            identifier: user [108549,108553]
                        call_argument [108555,108562]
                            identifier: _amount [108555,108562]
                        call_argument [108564,108570]
                            identifier: shares [108564,108570]
                expression_statement [108582,108617]
                    call_expression [108582,108616]
                        member_expression: logger.logStakeUpdate [108582,108603]
                        call_argument [108604,108615]
                            identifier: validatorId [108604,108615]
                return_statement [108629,108644]
                    return: return [108629,108635]
                    identifier: _amount [108636,108643]
        function_definition [108659,108791]
            function: function [108659,108667]
            identifier: _reduceActiveStake [108668,108686]
            parameter [108687,108712]
                type_name: uint256 [108687,108694]
                identifier: activeStakeReduce [108695,108712]
            visibility: private [108714,108721]
            function_body [108722,108791]
                expression_statement [108733,108784]
                    assignment_expression [108733,108783]
                        identifier: activeAmount [108733,108745]
                        affectation_operator: = [108746,108747]
                        call_expression [108748,108783]
                            member_expression: activeAmount.sub [108748,108764]
                            call_argument [108765,108782]
                                identifier: activeStakeReduce [108765,108782]
        function_definition [108799,108934]
            function: function [108799,108807]
            identifier: _reduceWithdrawPool [108808,108827]
            parameter [108828,108854]
                type_name: uint256 [108828,108835]
                identifier: withdrawPoolReduce [108836,108854]
            visibility: private [108856,108863]
            function_body [108864,108934]
                expression_statement [108875,108927]
                    assignment_expression [108875,108926]
                        identifier: withdrawPool [108875,108887]
                        affectation_operator: = [108888,108889]
                        call_expression [108890,108926]
                            member_expression: withdrawPool.sub [108890,108906]
                            call_argument [108907,108925]
                                identifier: withdrawPoolReduce [108907,108925]
        function_definition [108942,110382]
            function: function [108942,108950]
            identifier: sellVoucher [108951,108962]
            parameter [108963,108982]
                type_name: uint256 [108963,108970]
                identifier: claimAmount [108971,108982]
            parameter [108984,109011]
                type_name: uint256 [108984,108991]
                identifier: maximumSharesToBurn [108992,109011]
            visibility: public [109013,109019]
            function_body [109020,110382]
                variable_declaration_statement [109115,109180]
                    variable_declaration_tuple [109115,109150]
                        variable_declaration [109116,109135]
                            type_name: uint256 [109116,109123]
                            identifier: totalStaked [109124,109135]
                        variable_declaration [109137,109149]
                            type_name: uint256 [109137,109144]
                            identifier: rate [109145,109149]
                    affectation_operator: = [109151,109152]
                    call_expression [109153,109179]
                        identifier: _getTotalStake [109153,109167]
                        call_argument [109168,109178]
                            member_expression: msg.sender [109168,109178]
                expression_statement [109190,109267]
                    call_expression [109190,109266]
                        identifier: require [109190,109197]
                        call_argument [109198,109243]
                            binary_expression [109198,109243]
                                binary_expression [109198,109213]
                                    identifier: totalStaked [109198,109209]
                                    comparison_operator: > [109210,109211]
                                    number_literal: 0 [109212,109213]
                                logical_operator: && [109214,109216]
                                binary_expression [109217,109243]
                                    identifier: totalStaked [109217,109228]
                                    comparison_operator: >= [109229,109231]
                                    identifier: claimAmount [109232,109243]
                        call_argument [109245,109265]
                            string_literal [109245,109265]
                                string: "Too much requested" [109245,109265]
                variable_declaration_statement [109331,109371]
                    variable_declaration [109331,109348]
                        type_name: uint256 [109331,109338]
                        identifier: precision [109339,109348]
                    affectation_operator: = [109349,109350]
                    call_expression [109351,109370]
                        identifier: _getRatePrecision [109351,109368]
                variable_declaration_statement [109381,109435]
                    variable_declaration [109381,109395]
                        type_name: uint256 [109381,109388]
                        identifier: shares [109389,109395]
                    affectation_operator: = [109396,109397]
                    call_expression [109398,109434]
                        member_expression: claimAmount.mul(precision).div [109398,109428]
                        call_argument [109429,109433]
                            identifier: rate [109429,109433]
                expression_statement [109445,109505]
                    call_expression [109445,109504]
                        identifier: require [109445,109452]
                        call_argument [109453,109482]
                            binary_expression [109453,109482]
                                identifier: shares [109453,109459]
                                comparison_operator: <= [109460,109462]
                                identifier: maximumSharesToBurn [109463,109482]
                        call_argument [109484,109503]
                            string_literal [109484,109503]
                                string: "too much slippage" [109484,109503]
                expression_statement [109517,109556]
                    call_expression [109517,109555]
                        identifier: _withdrawAndTransferReward [109517,109543]
                        call_argument [109544,109554]
                            member_expression: msg.sender [109544,109554]
                expression_statement [109576,109602]
                    call_expression [109576,109601]
                        identifier: _burn [109576,109581]
                        call_argument [109582,109592]
                            member_expression: msg.sender [109582,109592]
                        call_argument [109594,109600]
                            identifier: shares [109594,109600]
                expression_statement [109612,109681]
                    call_expression [109612,109680]
                        member_expression: stakeManager.updateValidatorState [109612,109645]
                        call_argument [109646,109657]
                            identifier: validatorId [109646,109657]
                        call_argument [109659,109679]
                            unary_expression [109659,109679]
                                arithmetic_operator: - [109659,109660]
                                type_cast_expression [109660,109679]
                                    primitive_type: int256 [109660,109666]
                                    call_argument [109667,109678]
                                        identifier: claimAmount [109667,109678]
                expression_statement [109693,109725]
                    call_expression [109693,109724]
                        identifier: _reduceActiveStake [109693,109711]
                        call_argument [109712,109723]
                            identifier: claimAmount [109712,109723]
                variable_declaration_statement [109737,109821]
                    variable_declaration [109737,109763]
                        type_name: uint256 [109737,109744]
                        identifier: _withdrawPoolShare [109745,109763]
                    affectation_operator: = [109764,109765]
                    call_expression [109766,109820]
                        member_expression: claimAmount.mul(precision).div [109766,109796]
                        call_argument [109797,109819]
                            call_expression [109797,109819]
                                identifier: withdrawExchangeRate [109797,109817]
                expression_statement [109831,109876]
                    assignment_expression [109831,109875]
                        identifier: withdrawPool [109831,109843]
                        affectation_operator: = [109844,109845]
                        call_expression [109846,109875]
                            member_expression: withdrawPool.add [109846,109862]
                            call_argument [109863,109874]
                                identifier: claimAmount [109863,109874]
                expression_statement [109886,109942]
                    assignment_expression [109886,109941]
                        identifier: withdrawShares [109886,109900]
                        affectation_operator: = [109901,109902]
                        call_expression [109903,109941]
                            member_expression: withdrawShares.add [109903,109921]
                            call_argument [109922,109940]
                                identifier: _withdrawPoolShare [109922,109940]
                variable_declaration_statement [109962,110014]
                    variable_declaration [109962,109991]
                        type_name: DelegatorUnbond [109962,109977]
                        memory: memory [109978,109984]
                        identifier: unbond [109985,109991]
                    affectation_operator: = [109992,109993]
                    array_access [109994,110013]
                        identifier: unbonds [109994,110001]
                        member_expression: msg.sender [110002,110012]
                expression_statement [110024,110078]
                    assignment_expression [110024,110077]
                        member_expression: unbond.shares [110024,110037]
                        affectation_operator: = [110038,110039]
                        call_expression [110040,110077]
                            member_expression: unbond.shares.add [110040,110057]
                            call_argument [110058,110076]
                                identifier: _withdrawPoolShare [110058,110076]
                expression_statement [110122,110166]
                    assignment_expression [110122,110165]
                        member_expression: unbond.withdrawEpoch [110122,110142]
                        affectation_operator: = [110143,110144]
                        call_expression [110145,110165]
                            member_expression: stakeManager.epoch [110145,110163]
                expression_statement [110176,110205]
                    assignment_expression [110176,110204]
                        array_access [110176,110195]
                            identifier: unbonds [110176,110183]
                            member_expression: msg.sender [110184,110194]
                        affectation_operator: = [110196,110197]
                        identifier: unbond [110198,110204]
                variable_declaration_statement [110217,110252]
                    variable_declaration [110217,110235]
                        type_name: StakingInfo [110217,110228]
                        identifier: logger [110229,110235]
                    affectation_operator: = [110236,110237]
                    identifier: stakingLogger [110238,110251]
                expression_statement [110262,110330]
                    call_expression [110262,110329]
                        member_expression: logger.logShareBurned [110262,110283]
                        call_argument [110284,110295]
                            identifier: validatorId [110284,110295]
                        call_argument [110297,110307]
                            member_expression: msg.sender [110297,110307]
                        call_argument [110309,110320]
                            identifier: claimAmount [110309,110320]
                        call_argument [110322,110328]
                            identifier: shares [110322,110328]
                expression_statement [110340,110375]
                    call_expression [110340,110374]
                        member_expression: logger.logStakeUpdate [110340,110361]
                        call_argument [110362,110373]
                            identifier: validatorId [110362,110373]
        function_definition [110390,110604]
            function: function [110390,110398]
            identifier: _withdrawReward [110399,110414]
            parameter [110415,110427]
                type_name: address [110415,110422]
                identifier: user [110423,110427]
            visibility: private [110429,110436]
            return_type_definition [110437,110453]
                returns: returns [110437,110444]
                parameter [110445,110452]
                    type_name: uint256 [110445,110452]
            function_body [110454,110604]
                variable_declaration_statement [110465,110512]
                    variable_declaration [110465,110486]
                        type_name: uint256 [110465,110472]
                        identifier: liquidRewards [110473,110486]
                    affectation_operator: = [110487,110488]
                    call_expression [110489,110511]
                        identifier: getLiquidRewards [110489,110505]
                        call_argument [110506,110510]
                            identifier: user [110506,110510]
                expression_statement [110522,110566]
                    assignment_expression [110522,110565]
                        array_access [110522,110548]
                            identifier: initalRewardPerShare [110522,110542]
                            identifier: user [110543,110547]
                        affectation_operator: = [110549,110550]
                        identifier: rewardPerShare [110551,110565]
                return_statement [110576,110597]
                    return: return [110576,110582]
                    identifier: liquidRewards [110583,110596]
        function_definition [110612,111031]
            function: function [110612,110620]
            identifier: _withdrawAndTransferReward [110621,110647]
            parameter [110648,110660]
                type_name: address [110648,110655]
                identifier: user [110656,110660]
            visibility: private [110662,110669]
            return_type_definition [110670,110686]
                returns: returns [110670,110677]
                parameter [110678,110685]
                    type_name: uint256 [110678,110685]
            function_body [110687,111031]
                variable_declaration_statement [110698,110744]
                    variable_declaration [110698,110719]
                        type_name: uint256 [110698,110705]
                        identifier: liquidRewards [110706,110719]
                    affectation_operator: = [110720,110721]
                    call_expression [110722,110743]
                        identifier: _withdrawReward [110722,110737]
                        call_argument [110738,110742]
                            identifier: user [110738,110742]
                if_statement [110754,110983]
                    if: if [110754,110756]
                    binary_expression [110758,110775]
                        identifier: liquidRewards [110758,110771]
                        comparison_operator: > [110772,110773]
                        number_literal: 0 [110774,110775]
                    block_statement [110777,110983]
                        expression_statement [110792,110885]
                            call_expression [110792,110884]
                                identifier: require [110792,110799]
                                call_argument [110800,110860]
                                    call_expression [110800,110860]
                                        member_expression: stakeManager.transferFunds [110800,110826]
                                        call_argument [110827,110838]
                                            identifier: validatorId [110827,110838]
                                        call_argument [110840,110853]
                                            identifier: liquidRewards [110840,110853]
                                        call_argument [110855,110859]
                                            identifier: user [110855,110859]
                                call_argument [110862,110883]
                                    string_literal [110862,110883]
                                        string: "Insufficent rewards" [110862,110883]
                        expression_statement [110899,110972]
                            call_expression [110899,110971]
                                member_expression: stakingLogger.logDelegatorClaimRewards [110899,110937]
                                call_argument [110938,110949]
                                    identifier: validatorId [110938,110949]
                                call_argument [110951,110955]
                                    identifier: user [110951,110955]
                                call_argument [110957,110970]
                                    identifier: liquidRewards [110957,110970]
                return_statement [111003,111024]
                    return: return [111003,111009]
                    identifier: liquidRewards [111010,111023]
        function_definition [111039,111216]
            function: function [111039,111047]
            identifier: withdrawRewards [111048,111063]
            visibility: public [111066,111072]
            function_body [111073,111216]
                variable_declaration_statement [111084,111141]
                    variable_declaration [111084,111099]
                        type_name: uint256 [111084,111091]
                        identifier: rewards [111092,111099]
                    affectation_operator: = [111100,111101]
                    call_expression [111102,111140]
                        identifier: _withdrawAndTransferReward [111102,111128]
                        call_argument [111129,111139]
                            member_expression: msg.sender [111129,111139]
                expression_statement [111151,111209]
                    call_expression [111151,111208]
                        identifier: require [111151,111158]
                        call_argument [111159,111179]
                            binary_expression [111159,111179]
                                identifier: rewards [111159,111166]
                                comparison_operator: >= [111167,111169]
                                identifier: minAmount [111170,111179]
                        call_argument [111181,111207]
                            string_literal [111181,111207]
                                string: "Too small rewards amount" [111181,111207]
        function_definition [111224,111930]
            function: function [111224,111232]
            identifier: migrateOut [111233,111243]
            parameter [111244,111256]
                type_name: address [111244,111251]
                identifier: user [111252,111256]
            parameter [111258,111272]
                type_name: uint256 [111258,111265]
                identifier: amount [111266,111272]
            visibility: external [111274,111282]
            modifier_invocation [111283,111292]
                identifier: onlyOwner [111283,111292]
            function_body [111293,111930]
                expression_statement [111304,111337]
                    call_expression [111304,111336]
                        identifier: _withdrawAndTransferReward [111304,111330]
                        call_argument [111331,111335]
                            identifier: user [111331,111335]
                variable_declaration_statement [111347,111406]
                    variable_declaration_tuple [111347,111382]
                        variable_declaration [111348,111367]
                            type_name: uint256 [111348,111355]
                            identifier: totalStaked [111356,111367]
                        variable_declaration [111369,111381]
                            type_name: uint256 [111369,111376]
                            identifier: rate [111377,111381]
                    affectation_operator: = [111383,111384]
                    call_expression [111385,111405]
                        identifier: _getTotalStake [111385,111399]
                        call_argument [111400,111404]
                            identifier: user [111400,111404]
                expression_statement [111416,111469]
                    call_expression [111416,111468]
                        identifier: require [111416,111423]
                        call_argument [111424,111445]
                            binary_expression [111424,111445]
                                identifier: totalStaked [111424,111435]
                                comparison_operator: >= [111436,111438]
                                identifier: amount [111439,111445]
                        call_argument [111447,111467]
                            string_literal [111447,111467]
                                string: "Migrating too much" [111447,111467]
                variable_declaration_statement [111481,111521]
                    variable_declaration [111481,111498]
                        type_name: uint256 [111481,111488]
                        identifier: precision [111489,111498]
                    affectation_operator: = [111499,111500]
                    call_expression [111501,111520]
                        identifier: _getRatePrecision [111501,111518]
                variable_declaration_statement [111531,111580]
                    variable_declaration [111531,111545]
                        type_name: uint256 [111531,111538]
                        identifier: shares [111539,111545]
                    affectation_operator: = [111546,111547]
                    call_expression [111548,111579]
                        member_expression: amount.mul(precision).div [111548,111573]
                        call_argument [111574,111578]
                            identifier: rate [111574,111578]
                expression_statement [111590,111610]
                    call_expression [111590,111609]
                        identifier: _burn [111590,111595]
                        call_argument [111596,111600]
                            identifier: user [111596,111600]
                        call_argument [111602,111608]
                            identifier: shares [111602,111608]
                expression_statement [111622,111686]
                    call_expression [111622,111685]
                        member_expression: stakeManager.updateValidatorState [111622,111655]
                        call_argument [111656,111667]
                            identifier: validatorId [111656,111667]
                        call_argument [111669,111684]
                            unary_expression [111669,111684]
                                arithmetic_operator: - [111669,111670]
                                type_cast_expression [111670,111684]
                                    primitive_type: int256 [111670,111676]
                                    call_argument [111677,111683]
                                        identifier: amount [111677,111683]
                expression_statement [111696,111723]
                    call_expression [111696,111722]
                        identifier: _reduceActiveStake [111696,111714]
                        call_argument [111715,111721]
                            identifier: amount [111715,111721]
                expression_statement [111735,111799]
                    call_expression [111735,111798]
                        member_expression: stakingLogger.logShareBurned [111735,111763]
                        call_argument [111764,111775]
                            identifier: validatorId [111764,111775]
                        call_argument [111777,111781]
                            identifier: user [111777,111781]
                        call_argument [111783,111789]
                            identifier: amount [111783,111789]
                        call_argument [111791,111797]
                            identifier: shares [111791,111797]
                expression_statement [111809,111851]
                    call_expression [111809,111850]
                        member_expression: stakingLogger.logStakeUpdate [111809,111837]
                        call_argument [111838,111849]
                            identifier: validatorId [111838,111849]
                expression_statement [111861,111923]
                    call_expression [111861,111922]
                        member_expression: stakingLogger.logDelegatorUnstaked [111861,111895]
                        call_argument [111896,111907]
                            identifier: validatorId [111896,111907]
                        call_argument [111909,111913]
                            identifier: user [111909,111913]
                        call_argument [111915,111921]
                            identifier: amount [111915,111921]
        function_definition [111938,112052]
            function: function [111938,111946]
            identifier: migrateIn [111947,111956]
            parameter [111957,111969]
                type_name: address [111957,111964]
                identifier: user [111965,111969]
            parameter [111971,111985]
                type_name: uint256 [111971,111978]
                identifier: amount [111979,111985]
            visibility: external [111987,111995]
            modifier_invocation [111996,112005]
                identifier: onlyOwner [111996,112005]
            function_body [112006,112052]
                expression_statement [112017,112045]
                    call_expression [112017,112044]
                        identifier: _buyShares [112017,112027]
                        call_argument [112028,112034]
                            identifier: amount [112028,112034]
                        call_argument [112036,112037]
                            number_literal: 0 [112036,112037]
                        call_argument [112039,112043]
                            identifier: user [112039,112043]
        function_definition [112060,112343]
            function: function [112060,112068]
            identifier: getLiquidRewards [112069,112085]
            parameter [112086,112098]
                type_name: address [112086,112093]
                identifier: user [112094,112098]
            visibility: public [112100,112106]
            state_mutability [112107,112111]
                view: view [112107,112111]
            return_type_definition [112112,112129]
                returns: returns [112112,112119]
                parameter [112121,112128]
                    type_name: uint256 [112121,112128]
            function_body [112130,112343]
                variable_declaration_statement [112141,112174]
                    variable_declaration [112141,112155]
                        type_name: uint256 [112141,112148]
                        identifier: shares [112149,112155]
                    affectation_operator: = [112156,112157]
                    call_expression [112158,112173]
                        identifier: balanceOf [112158,112167]
                        call_argument [112168,112172]
                            identifier: user [112168,112172]
                if_statement [112184,112236]
                    if: if [112184,112186]
                    binary_expression [112188,112199]
                        identifier: shares [112188,112194]
                        comparison_operator: == [112195,112197]
                        number_literal: 0 [112198,112199]
                    block_statement [112201,112236]
                        return_statement [112216,112225]
                            return: return [112216,112222]
                            number_literal: 0 [112223,112224]
                return_statement [112248,112336]
                    return: return [112248,112254]
                    call_expression [112255,112335]
                        member_expression: rewardPerShare.sub(initalRewardPerShare[user]).mul(shares).div [112255,112317]
                        call_argument [112318,112334]
                            identifier: REWARD_PRECISION [112318,112334]
        function_definition [112351,112429]
            function: function [112351,112359]
            identifier: unstakeClaimTokens [112360,112378]
            visibility: public [112381,112387]
            function_body [112388,112429]
                expression_statement [112399,112422]
                    call_expression [112399,112421]
                        identifier: _claimUnstakedTokens [112399,112419]
        function_definition [112437,113234]
            function: function [112437,112445]
            identifier: _claimUnstakedTokens [112446,112466]
            visibility: internal [112469,112477]
            return_type_definition [112478,112494]
                returns: returns [112478,112485]
                parameter [112486,112493]
                    type_name: uint256 [112486,112493]
            function_body [112495,113234]
                variable_declaration_statement [112506,112558]
                    variable_declaration [112506,112535]
                        type_name: DelegatorUnbond [112506,112521]
                        memory: memory [112522,112528]
                        identifier: unbond [112529,112535]
                    affectation_operator: = [112536,112537]
                    array_access [112538,112557]
                        identifier: unbonds [112538,112545]
                        member_expression: msg.sender [112546,112556]
                variable_declaration_statement [112570,112601]
                    variable_declaration [112570,112584]
                        type_name: uint256 [112570,112577]
                        identifier: shares [112578,112584]
                    affectation_operator: = [112585,112586]
                    member_expression: unbond.shares [112587,112600]
                expression_statement [112611,112784]
                    call_expression [112611,112783]
                        identifier: require [112611,112618]
                        call_argument [112633,112727]
                            binary_expression [112633,112727]
                                binary_expression [112633,112713]
                                    call_expression [112633,112689]
                                        member_expression: unbond.withdrawEpoch.add [112633,112657]
                                        call_argument [112658,112688]
                                            call_expression [112658,112688]
                                                member_expression: stakeManager.withdrawalDelay [112658,112686]
                                    comparison_operator: <= [112690,112692]
                                    call_expression [112693,112713]
                                        member_expression: stakeManager.epoch [112693,112711]
                                logical_operator: && [112714,112716]
                                binary_expression [112717,112727]
                                    identifier: shares [112717,112723]
                                    comparison_operator: > [112724,112725]
                                    number_literal: 0 [112726,112727]
                        call_argument [112742,112772]
                            string_literal [112742,112772]
                                string: "Incomplete withdrawal period" [112742,112772]
                variable_declaration_statement [112796,112874]
                    variable_declaration [112796,112811]
                        type_name: uint256 [112796,112803]
                        identifier: _amount [112804,112811]
                    affectation_operator: = [112812,112813]
                    call_expression [112814,112873]
                        member_expression: withdrawExchangeRate().mul(shares).div [112814,112852]
                        call_argument [112853,112872]
                            call_expression [112853,112872]
                                identifier: _getRatePrecision [112853,112870]
                expression_statement [112884,112928]
                    assignment_expression [112884,112927]
                        identifier: withdrawShares [112884,112898]
                        affectation_operator: = [112899,112900]
                        call_expression [112901,112927]
                            member_expression: withdrawShares.sub [112901,112919]
                            call_argument [112920,112926]
                                identifier: shares [112920,112926]
                expression_statement [112938,112979]
                    assignment_expression [112938,112978]
                        identifier: withdrawPool [112938,112950]
                        affectation_operator: = [112951,112952]
                        call_expression [112953,112978]
                            member_expression: withdrawPool.sub [112953,112969]
                            call_argument [112970,112977]
                                identifier: _amount [112970,112977]
                expression_statement [112991,113084]
                    call_expression [112991,113083]
                        identifier: require [112991,112998]
                        call_argument [112999,113059]
                            call_expression [112999,113059]
                                member_expression: stakeManager.transferFunds [112999,113025]
                                call_argument [113026,113037]
                                    identifier: validatorId [113026,113037]
                                call_argument [113039,113046]
                                    identifier: _amount [113039,113046]
                                call_argument [113048,113058]
                                    member_expression: msg.sender [113048,113058]
                        call_argument [113061,113082]
                            string_literal [113061,113082]
                                string: "Insufficent rewards" [113061,113082]
                expression_statement [113094,113163]
                    call_expression [113094,113162]
                        member_expression: stakingLogger.logDelegatorUnstaked [113094,113128]
                        call_argument [113129,113140]
                            identifier: validatorId [113129,113140]
                        call_argument [113142,113152]
                            member_expression: msg.sender [113142,113152]
                        call_argument [113154,113161]
                            identifier: _amount [113154,113161]
                expression_statement [113173,113200]
                    array_access [113173,113199]
                        unary_expression [113173,113187]
                            delete: delete [113173,113179]
                            identifier: unbonds [113180,113187]
                        member_expression: msg.sender [113188,113198]
                return_statement [113212,113227]
                    return: return [113212,113218]
                    identifier: _amount [113219,113226]
        function_definition [113242,114034]
            function: function [113242,113250]
            identifier: slash [113251,113256]
            parameter [113257,113271]
                type_name: uint256 [113257,113264]
                identifier: valPow [113265,113271]
            parameter [113273,113299]
                type_name: uint256 [113273,113280]
                identifier: totalAmountToSlash [113281,113299]
            visibility: external [113301,113309]
            modifier_invocation [113310,113319]
                identifier: onlyOwner [113310,113319]
            return_type_definition [113320,113337]
                returns: returns [113320,113327]
                parameter [113329,113336]
                    type_name: uint256 [113329,113336]
            function_body [113338,114034]
                variable_declaration_statement [113349,113386]
                    variable_declaration [113349,113370]
                        type_name: uint256 [113349,113356]
                        identifier: _withdrawPool [113357,113370]
                    affectation_operator: = [113371,113372]
                    identifier: withdrawPool [113373,113385]
                variable_declaration_statement [113396,113455]
                    variable_declaration [113396,113420]
                        type_name: uint256 [113396,113403]
                        identifier: delegationAmount [113404,113420]
                    affectation_operator: = [113421,113422]
                    call_expression [113423,113454]
                        member_expression: activeAmount.add [113423,113439]
                        call_argument [113440,113453]
                            identifier: _withdrawPool [113440,113453]
                if_statement [113465,113527]
                    if: if [113465,113467]
                    binary_expression [113469,113490]
                        identifier: delegationAmount [113469,113485]
                        comparison_operator: == [113486,113488]
                        number_literal: 0 [113489,113490]
                    block_statement [113492,113527]
                        return_statement [113507,113516]
                            return: return [113507,113513]
                            number_literal: 0 [113514,113515]
                variable_declaration_statement [113617,113717]
                    variable_declaration [113617,113639]
                        type_name: uint256 [113617,113624]
                        identifier: _amountToSlash [113625,113639]
                    affectation_operator: = [113640,113641]
                    call_expression [113642,113716]
                        member_expression: delegationAmount.mul(totalAmountToSlash).div [113642,113686]
                        call_argument [113687,113715]
                            call_expression [113687,113715]
                                member_expression: valPow.add [113687,113697]
                                call_argument [113698,113714]
                                    identifier: delegationAmount [113698,113714]
                variable_declaration_statement [113727,113822]
                    variable_declaration [113727,113763]
                        type_name: uint256 [113727,113734]
                        identifier: _amountToSlashWithdrawalPool [113735,113763]
                    affectation_operator: = [113764,113765]
                    call_expression [113766,113821]
                        member_expression: _withdrawPool.mul(_amountToSlash).div [113766,113803]
                        call_argument [113804,113820]
                            identifier: delegationAmount [113804,113820]
                expression_statement [113866,113935]
                    call_expression [113866,113934]
                        identifier: _reduceActiveStake [113866,113884]
                        call_argument [113885,113933]
                            call_expression [113885,113933]
                                member_expression: _amountToSlash.sub [113885,113903]
                                call_argument [113904,113932]
                                    identifier: _amountToSlashWithdrawalPool [113904,113932]
                expression_statement [113945,113995]
                    call_expression [113945,113994]
                        identifier: _reduceWithdrawPool [113945,113964]
                        call_argument [113965,113993]
                            identifier: _amountToSlashWithdrawalPool [113965,113993]
                return_statement [114005,114027]
                    return: return [114005,114011]
                    identifier: _amountToSlash [114012,114026]
        function_definition [114042,114148]
            function: function [114042,114050]
            identifier: updateDelegation [114051,114067]
            parameter [114068,114084]
                type_name: bool [114068,114072]
                identifier: _delegation [114073,114084]
            visibility: external [114086,114094]
            modifier_invocation [114095,114104]
                identifier: onlyOwner [114095,114104]
            function_body [114105,114148]
                expression_statement [114116,114141]
                    assignment_expression [114116,114140]
                        identifier: delegation [114116,114126]
                        affectation_operator: = [114127,114128]
                        identifier: _delegation [114129,114140]
        function_definition [114156,114484]
            function: function [114156,114164]
            identifier: drain [114165,114170]
            parameter [114181,114194]
                type_name: address [114181,114188]
                identifier: token [114189,114194]
            parameter [114205,114232]
                type_name: address payable [114205,114220]
                identifier: destination [114221,114232]
            parameter [114243,114257]
                type_name: uint256 [114243,114250]
                identifier: amount [114251,114257]
            visibility: external [114265,114273]
            modifier_invocation [114274,114283]
                identifier: onlyOwner [114274,114283]
            function_body [114284,114484]
                if_statement [114295,114477]
                    if: if [114295,114297]
                    binary_expression [114299,114320]
                        identifier: token [114299,114304]
                        comparison_operator: == [114305,114307]
                        type_cast_expression [114308,114320]
                            primitive_type: address [114308,114315]
                            call_argument [114316,114319]
                                number_literal: 0x0 [114316,114319]
                    block_statement [114322,114377]
                        expression_statement [114337,114366]
                            call_expression [114337,114365]
                                member_expression: destination.transfer [114337,114357]
                                call_argument [114358,114364]
                                    identifier: amount [114358,114364]
                    else: else [114378,114382]
                    block_statement [114383,114477]
                        expression_statement [114398,114466]
                            call_expression [114398,114465]
                                identifier: require [114398,114405]
                                call_argument [114406,114448]
                                    call_expression [114406,114448]
                                        member_expression: ERC20(token).transfer [114406,114427]
                                        call_argument [114428,114439]
                                            identifier: destination [114428,114439]
                                        call_argument [114441,114447]
                                            identifier: amount [114441,114447]
                                call_argument [114450,114464]
                                    string_literal [114450,114464]
                                        string: "Drain failed" [114450,114464]
        function_definition [114492,114588]
            function: function [114492,114500]
            identifier: getActiveAmount [114501,114516]
            visibility: external [114519,114527]
            state_mutability [114528,114532]
                view: view [114528,114532]
            return_type_definition [114533,114549]
                returns: returns [114533,114540]
                parameter [114541,114548]
                    type_name: uint256 [114541,114548]
            function_body [114550,114588]
                return_statement [114561,114581]
                    return: return [114561,114567]
                    identifier: activeAmount [114568,114580]
        function_definition [114596,114716]
            function: function [114596,114604]
            identifier: unlockContract [114605,114619]
            visibility: external [114622,114630]
            modifier_invocation [114631,114640]
                identifier: onlyOwner [114631,114640]
            return_type_definition [114641,114658]
                returns: returns [114641,114648]
                parameter [114650,114657]
                    type_name: uint256 [114650,114657]
            function_body [114659,114716]
                expression_statement [114670,114679]
                    call_expression [114670,114678]
                        identifier: unlock [114670,114676]
                return_statement [114689,114709]
                    return: return [114689,114695]
                    identifier: activeAmount [114696,114708]
        function_definition [114724,114840]
            function: function [114724,114732]
            identifier: lockContract [114733,114745]
            visibility: external [114748,114756]
            modifier_invocation [114757,114766]
                identifier: onlyOwner [114757,114766]
            return_type_definition [114767,114784]
                returns: returns [114767,114774]
                parameter [114776,114783]
                    type_name: uint256 [114776,114783]
            function_body [114785,114840]
                expression_statement [114796,114803]
                    call_expression [114796,114802]
                        identifier: lock [114796,114800]
                return_statement [114813,114833]
                    return: return [114813,114819]
                    identifier: activeAmount [114820,114832]
to
source_file [0,149751]
at 52
===
move-tree
---
pragma_directive [26364,26387]
    pragma: pragma [26364,26370]
    solidity_pragma_token [26371,26386]
        solidity: solidity [26371,26379]
        solidity_version_comparison_operator [26379,26381]
            bitwise_operator:  ^ [26379,26381]
        solidity_version: 0.5.2 [26381,26386]
to
source_file [0,149751]
at 17
===
move-tree
---
contract_declaration [114949,115705]
    identifier: ValidatorShareFactory [114958,114979]
    contract_body [114980,115705]
        function_definition [115057,115702]
            function: function [115057,115065]
            identifier: create [115066,115072]
            parameter [115073,115092]
                type_name: uint256 [115073,115080]
                identifier: validatorId [115081,115092]
            parameter [115094,115115]
                type_name: address [115094,115101]
                identifier: loggerAddress [115102,115115]
            parameter [115117,115133]
                type_name: address [115117,115124]
                identifier: registry [115125,115133]
            visibility: public [115135,115141]
            return_type_definition [115142,115159]
                returns: returns [115142,115149]
                parameter [115151,115158]
                    type_name: address [115151,115158]
            function_body [115160,115702]
                variable_declaration_statement [115171,115233]
                    variable_declaration [115171,115196]
                        type_name: ValidatorShareProxy [115171,115190]
                        identifier: proxy [115191,115196]
                    affectation_operator: = [115197,115198]
                    call_expression [115199,115232]
                        new_expression [115199,115222]
                            new: new [115199,115202]
                            type_name: ValidatorShareProxy [115203,115222]
                        call_argument [115223,115231]
                            identifier: registry [115223,115231]
                expression_statement [115245,115281]
                    call_expression [115245,115280]
                        member_expression: proxy.transferOwnership [115245,115268]
                        call_argument [115269,115279]
                            member_expression: msg.sender [115269,115279]
                variable_declaration_statement [115293,115328]
                    variable_declaration [115293,115310]
                        type_name: address [115293,115300]
                        identifier: proxyAddr [115301,115310]
                    affectation_operator: = [115311,115312]
                    type_cast_expression [115313,115327]
                        primitive_type: address [115313,115320]
                        call_argument [115321,115326]
                            identifier: proxy [115321,115326]
                variable_declaration_statement [115338,115625]
                    variable_declaration_tuple [115338,115371]
                        variable_declaration [115339,115351]
                            type_name: bool [115339,115343]
                            identifier: success [115344,115351]
                        variable_declaration [115353,115370]
                            type_name: bytes [115353,115358]
                            memory: memory [115359,115365]
                            identifier: data [115366,115370]
                    affectation_operator: = [115372,115373]
                    call_expression [115374,115624]
                        call_expression [115374,115403]
                            member_expression: proxyAddr.call.gas [115374,115392]
                            call_argument [115393,115402]
                                call_expression [115393,115402]
                                    identifier: gasleft [115393,115400]
                        call_argument [115418,115613]
                            call_expression [115418,115613]
                                member_expression: abi.encodeWithSelector [115418,115440]
                                call_argument [115459,115504]
                                    member_expression: ValidatorShare(proxyAddr).initialize.selector [115459,115504]
                                call_argument [115524,115535]
                                    identifier: validatorId [115524,115535]
                                call_argument [115555,115568]
                                    identifier: loggerAddress [115555,115568]
                                call_argument [115588,115598]
                                    member_expression: msg.sender [115588,115598]
                expression_statement [115635,115666]
                    call_expression [115635,115665]
                        identifier: require [115635,115642]
                        call_argument [115643,115650]
                            identifier: success [115643,115650]
                        call_argument [115652,115664]
                            type_cast_expression [115652,115664]
                                primitive_type: string [115652,115658]
                                call_argument [115659,115663]
                                    identifier: data [115659,115663]
                return_statement [115678,115695]
                    return: return [115678,115684]
                    identifier: proxyAddr [115685,115694]
to
source_file [0,149751]
at 85
===
move-tree
---
contract_declaration [73128,81583]
    identifier: ERC721Enumerable [73137,73153]
    is: is [73154,73156]
    inheritance_specifier [73157,73163]
        user_defined_type [73157,73163]
            identifier: ERC165 [73157,73163]
    inheritance_specifier [73165,73171]
        user_defined_type [73165,73171]
            identifier: ERC721 [73165,73171]
    inheritance_specifier [73173,73190]
        user_defined_type [73173,73190]
            identifier: IERC721Enumerable [73173,73190]
    contract_body [73191,81583]
        state_variable_declaration [73252,73303]
            type_name: mapping(address => uint256[]) [73252,73281]
            visibility: private [73282,73289]
            identifier: _ownedTokens [73290,73302]
        state_variable_declaration [73375,73429]
            type_name: mapping(uint256 => uint256) [73375,73402]
            visibility: private [73403,73410]
            identifier: _ownedTokensIndex [73411,73428]
        state_variable_declaration [73492,73521]
            type_name: uint256[] [73492,73501]
            visibility: private [73502,73509]
            identifier: _allTokens [73510,73520]
        state_variable_declaration [73594,73646]
            type_name: mapping(uint256 => uint256) [73594,73621]
            visibility: private [73622,73629]
            identifier: _allTokensIndex [73630,73645]
        state_variable_declaration [73654,73723]
            type_name: bytes4 [73654,73660]
            visibility: private [73661,73668]
            constant: constant [73669,73677]
            identifier: _INTERFACE_ID_ERC721_ENUMERABLE [73678,73709]
            affectation_operator: = [73710,73711]
            number_literal: 0x780e9d63 [73712,73722]
        constructor_definition [73999,74178]
            constructor: constructor [73999,74010]
            public: public [74014,74020]
            function_body [74021,74178]
                expression_statement [74119,74171]
                    call_expression [74119,74170]
                        identifier: _registerInterface [74119,74137]
                        call_argument [74138,74169]
                            identifier: _INTERFACE_ID_ERC721_ENUMERABLE [74138,74169]
        function_definition [74559,74744]
            function: function [74559,74567]
            identifier: tokenOfOwnerByIndex [74568,74587]
            parameter [74588,74601]
                type_name: address [74588,74595]
                identifier: owner [74596,74601]
            parameter [74603,74616]
                type_name: uint256 [74603,74610]
                identifier: index [74611,74616]
            visibility: public [74618,74624]
            state_mutability [74625,74629]
                view: view [74625,74629]
            return_type_definition [74630,74647]
                returns: returns [74630,74637]
                parameter [74639,74646]
                    type_name: uint256 [74639,74646]
            function_body [74648,74744]
                expression_statement [74659,74693]
                    call_expression [74659,74692]
                        identifier: require [74659,74666]
                        call_argument [74667,74691]
                            binary_expression [74667,74691]
                                identifier: index [74667,74672]
                                comparison_operator: < [74673,74674]
                                call_expression [74675,74691]
                                    identifier: balanceOf [74675,74684]
                                    call_argument [74685,74690]
                                        identifier: owner [74685,74690]
                return_statement [74703,74737]
                    return: return [74703,74709]
                    array_access [74710,74736]
                        array_access [74710,74729]
                            identifier: _ownedTokens [74710,74722]
                            identifier: owner [74723,74728]
                        identifier: index [74730,74735]
        function_definition [74902,74998]
            function: function [74902,74910]
            identifier: totalSupply [74911,74922]
            visibility: public [74925,74931]
            state_mutability [74932,74936]
                view: view [74932,74936]
            return_type_definition [74937,74954]
                returns: returns [74937,74944]
                parameter [74946,74953]
                    type_name: uint256 [74946,74953]
            function_body [74955,74998]
                return_statement [74966,74991]
                    return: return [74966,74972]
                    member_expression: _allTokens.length [74973,74990]
        function_definition [75343,75494]
            function: function [75343,75351]
            identifier: tokenByIndex [75352,75364]
            parameter [75365,75378]
                type_name: uint256 [75365,75372]
                identifier: index [75373,75378]
            visibility: public [75380,75386]
            state_mutability [75387,75391]
                view: view [75387,75391]
            return_type_definition [75392,75409]
                returns: returns [75392,75399]
                parameter [75401,75408]
                    type_name: uint256 [75401,75408]
            function_body [75410,75494]
                expression_statement [75421,75452]
                    call_expression [75421,75451]
                        identifier: require [75421,75428]
                        call_argument [75429,75450]
                            binary_expression [75429,75450]
                                identifier: index [75429,75434]
                                comparison_operator: < [75435,75436]
                                call_expression [75437,75450]
                                    identifier: totalSupply [75437,75448]
                return_statement [75462,75487]
                    return: return [75462,75468]
                    array_access [75469,75486]
                        identifier: _allTokens [75469,75479]
                        identifier: index [75480,75485]
        function_definition [75878,76123]
            function: function [75878,75886]
            identifier: _transferFrom [75887,75900]
            parameter [75901,75913]
                type_name: address [75901,75908]
                identifier: from [75909,75913]
            parameter [75915,75925]
                type_name: address [75915,75922]
                identifier: to [75923,75925]
            parameter [75927,75942]
                type_name: uint256 [75927,75934]
                identifier: tokenId [75935,75942]
            visibility: internal [75944,75952]
            function_body [75953,76123]
                expression_statement [75964,76003]
                    call_expression [75964,76002]
                        member_expression: super._transferFrom [75964,75983]
                        call_argument [75984,75988]
                            identifier: from [75984,75988]
                        call_argument [75990,75992]
                            identifier: to [75990,75992]
                        call_argument [75994,76001]
                            identifier: tokenId [75994,76001]
                expression_statement [76015,76063]
                    call_expression [76015,76062]
                        identifier: _removeTokenFromOwnerEnumeration [76015,76047]
                        call_argument [76048,76052]
                            identifier: from [76048,76052]
                        call_argument [76054,76061]
                            identifier: tokenId [76054,76061]
                expression_statement [76075,76116]
                    call_expression [76075,76115]
                        identifier: _addTokenToOwnerEnumeration [76075,76102]
                        call_argument [76103,76105]
                            identifier: to [76103,76105]
                        call_argument [76107,76114]
                            identifier: tokenId [76107,76114]
        function_definition [76386,76588]
            function: function [76386,76394]
            identifier: _mint [76395,76400]
            parameter [76401,76411]
                type_name: address [76401,76408]
                identifier: to [76409,76411]
            parameter [76413,76428]
                type_name: uint256 [76413,76420]
                identifier: tokenId [76421,76428]
            visibility: internal [76430,76438]
            function_body [76439,76588]
                expression_statement [76450,76475]
                    call_expression [76450,76474]
                        member_expression: super._mint [76450,76461]
                        call_argument [76462,76464]
                            identifier: to [76462,76464]
                        call_argument [76466,76473]
                            identifier: tokenId [76466,76473]
                expression_statement [76487,76528]
                    call_expression [76487,76527]
                        identifier: _addTokenToOwnerEnumeration [76487,76514]
                        call_argument [76515,76517]
                            identifier: to [76515,76517]
                        call_argument [76519,76526]
                            identifier: tokenId [76519,76526]
                expression_statement [76540,76581]
                    call_expression [76540,76580]
                        identifier: _addTokenToAllTokensEnumeration [76540,76571]
                        call_argument [76572,76579]
                            identifier: tokenId [76572,76579]
        function_definition [76869,77241]
            function: function [76869,76877]
            identifier: _burn [76878,76883]
            parameter [76884,76897]
                type_name: address [76884,76891]
                identifier: owner [76892,76897]
            parameter [76899,76914]
                type_name: uint256 [76899,76906]
                identifier: tokenId [76907,76914]
            visibility: internal [76916,76924]
            function_body [76925,77241]
                expression_statement [76936,76964]
                    call_expression [76936,76963]
                        member_expression: super._burn [76936,76947]
                        call_argument [76948,76953]
                            identifier: owner [76948,76953]
                        call_argument [76955,76962]
                            identifier: tokenId [76955,76962]
                expression_statement [76976,77025]
                    call_expression [76976,77024]
                        identifier: _removeTokenFromOwnerEnumeration [76976,77008]
                        call_argument [77009,77014]
                            identifier: owner [77009,77014]
                        call_argument [77016,77023]
                            identifier: tokenId [77016,77023]
                expression_statement [77145,77176]
                    assignment_expression [77145,77175]
                        array_access [77145,77171]
                            identifier: _ownedTokensIndex [77145,77162]
                            identifier: tokenId [77163,77170]
                        affectation_operator: = [77172,77173]
                        number_literal: 0 [77174,77175]
                expression_statement [77188,77234]
                    call_expression [77188,77233]
                        identifier: _removeTokenFromAllTokensEnumeration [77188,77224]
                        call_argument [77225,77232]
                            identifier: tokenId [77225,77232]
        function_definition [77452,77578]
            function: function [77452,77460]
            identifier: _tokensOfOwner [77461,77475]
            parameter [77476,77489]
                type_name: address [77476,77483]
                identifier: owner [77484,77489]
            visibility: internal [77491,77499]
            state_mutability [77500,77504]
                view: view [77500,77504]
            return_type_definition [77505,77532]
                returns: returns [77505,77512]
                parameter [77514,77531]
                    type_name: uint256[] [77514,77523]
                    storage: storage [77524,77531]
            function_body [77533,77578]
                return_statement [77544,77571]
                    return: return [77544,77550]
                    array_access [77551,77570]
                        identifier: _ownedTokens [77551,77563]
                        identifier: owner [77564,77569]
        function_definition [77879,78065]
            function: function [77879,77887]
            identifier: _addTokenToOwnerEnumeration [77888,77915]
            parameter [77916,77926]
                type_name: address [77916,77923]
                identifier: to [77924,77926]
            parameter [77928,77943]
                type_name: uint256 [77928,77935]
                identifier: tokenId [77936,77943]
            visibility: private [77945,77952]
            function_body [77953,78065]
                expression_statement [77964,78017]
                    assignment_expression [77964,78016]
                        array_access [77964,77990]
                            identifier: _ownedTokensIndex [77964,77981]
                            identifier: tokenId [77982,77989]
                        affectation_operator: = [77991,77992]
                        member_expression: _ownedTokens[to].length [77993,78016]
                expression_statement [78027,78058]
                    call_expression [78027,78057]
                        member_expression: _ownedTokens[to].push [78027,78048]
                        call_argument [78049,78056]
                            identifier: tokenId [78049,78056]
        function_definition [78266,78430]
            function: function [78266,78274]
            identifier: _addTokenToAllTokensEnumeration [78275,78306]
            parameter [78307,78322]
                type_name: uint256 [78307,78314]
                identifier: tokenId [78315,78322]
            visibility: private [78324,78331]
            function_body [78332,78430]
                expression_statement [78343,78388]
                    assignment_expression [78343,78387]
                        array_access [78343,78367]
                            identifier: _allTokensIndex [78343,78358]
                            identifier: tokenId [78359,78366]
                        affectation_operator: = [78368,78369]
                        member_expression: _allTokens.length [78370,78387]
                expression_statement [78398,78423]
                    call_expression [78398,78422]
                        member_expression: _allTokens.push [78398,78413]
                        call_argument [78414,78421]
                            identifier: tokenId [78414,78421]
        function_definition [79055,80203]
            function: function [79055,79063]
            identifier: _removeTokenFromOwnerEnumeration [79064,79096]
            parameter [79097,79109]
                type_name: address [79097,79104]
                identifier: from [79105,79109]
            parameter [79111,79126]
                type_name: uint256 [79111,79118]
                identifier: tokenId [79119,79126]
            visibility: private [79128,79135]
            function_body [79136,80203]
                variable_declaration_statement [79321,79379]
                    variable_declaration [79321,79343]
                        type_name: uint256 [79321,79328]
                        identifier: lastTokenIndex [79329,79343]
                    affectation_operator: = [79344,79345]
                    call_expression [79346,79378]
                        member_expression: _ownedTokens[from].length.sub [79346,79375]
                        call_argument [79376,79377]
                            number_literal: 1 [79376,79377]
                variable_declaration_statement [79389,79437]
                    variable_declaration [79389,79407]
                        type_name: uint256 [79389,79396]
                        identifier: tokenIndex [79397,79407]
                    affectation_operator: = [79408,79409]
                    array_access [79410,79436]
                        identifier: _ownedTokensIndex [79410,79427]
                        identifier: tokenId [79428,79435]
                if_statement [79539,79867]
                    if: if [79539,79541]
                    binary_expression [79543,79571]
                        identifier: tokenIndex [79543,79553]
                        comparison_operator: != [79554,79556]
                        identifier: lastTokenIndex [79557,79571]
                    block_statement [79573,79867]
                        variable_declaration_statement [79588,79645]
                            variable_declaration [79588,79607]
                                type_name: uint256 [79588,79595]
                                identifier: lastTokenId [79596,79607]
                            affectation_operator: = [79608,79609]
                            array_access [79610,79644]
                                array_access [79610,79628]
                                    identifier: _ownedTokens [79610,79622]
                                    identifier: from [79623,79627]
                                identifier: lastTokenIndex [79629,79643]
                        expression_statement [79661,79706]
                            assignment_expression [79661,79705]
                                array_access [79661,79691]
                                    array_access [79661,79679]
                                        identifier: _ownedTokens [79661,79673]
                                        identifier: from [79674,79678]
                                    identifier: tokenIndex [79680,79690]
                                affectation_operator: = [79692,79693]
                                identifier: lastTokenId [79694,79705]
                        expression_statement [79778,79822]
                            assignment_expression [79778,79821]
                                array_access [79778,79808]
                                    identifier: _ownedTokensIndex [79778,79795]
                                    identifier: lastTokenId [79796,79807]
                                affectation_operator: = [79809,79810]
                                identifier: tokenIndex [79811,79821]
                expression_statement [79956,79984]
                    update_expression [79956,79983]
                        member_expression: _ownedTokens[from].length [79956,79981]
                        increment_operator: -- [79981,79983]
        function_definition [80498,81580]
            function: function [80498,80506]
            identifier: _removeTokenFromAllTokensEnumeration [80507,80543]
            parameter [80544,80559]
                type_name: uint256 [80544,80551]
                identifier: tokenId [80552,80559]
            visibility: private [80561,80568]
            function_body [80569,81580]
                variable_declaration_statement [80751,80801]
                    variable_declaration [80751,80773]
                        type_name: uint256 [80751,80758]
                        identifier: lastTokenIndex [80759,80773]
                    affectation_operator: = [80774,80775]
                    call_expression [80776,80800]
                        member_expression: _allTokens.length.sub [80776,80797]
                        call_argument [80798,80799]
                            number_literal: 1 [80798,80799]
                variable_declaration_statement [80811,80857]
                    variable_declaration [80811,80829]
                        type_name: uint256 [80811,80818]
                        identifier: tokenIndex [80819,80829]
                    affectation_operator: = [80830,80831]
                    array_access [80832,80856]
                        identifier: _allTokensIndex [80832,80847]
                        identifier: tokenId [80848,80855]
                variable_declaration_statement [81183,81232]
                    variable_declaration [81183,81202]
                        type_name: uint256 [81183,81190]
                        identifier: lastTokenId [81191,81202]
                    affectation_operator: = [81203,81204]
                    array_access [81205,81231]
                        identifier: _allTokens [81205,81215]
                        identifier: lastTokenIndex [81216,81230]
                expression_statement [81244,81281]
                    assignment_expression [81244,81280]
                        array_access [81244,81266]
                            identifier: _allTokens [81244,81254]
                            identifier: tokenIndex [81255,81265]
                        affectation_operator: = [81267,81268]
                        identifier: lastTokenId [81269,81280]
                expression_statement [81349,81391]
                    assignment_expression [81349,81390]
                        array_access [81349,81377]
                            identifier: _allTokensIndex [81349,81364]
                            identifier: lastTokenId [81365,81376]
                        affectation_operator: = [81378,81379]
                        identifier: tokenIndex [81380,81390]
                expression_statement [81514,81534]
                    update_expression [81514,81533]
                        member_expression: _allTokens.length [81514,81531]
                        increment_operator: -- [81531,81533]
                expression_statement [81544,81573]
                    assignment_expression [81544,81572]
                        array_access [81544,81568]
                            identifier: _allTokensIndex [81544,81559]
                            identifier: tokenId [81560,81567]
                        affectation_operator: = [81569,81570]
                        number_literal: 0 [81571,81572]
to
source_file [0,149751]
at 72

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [3964,3995]
    pragma: pragma [3964,3970]
    solidity_pragma_token [3971,3994]
        solidity: solidity [3971,3979]
        solidity_version_comparison_operator [3979,3982]
            comparison_operator:  >= [3979,3982]
        solidity_version: 0.5.0 [3982,3987]
        solidity_version_comparison_operator [3987,3989]
            <:  < [3987,3989]
        solidity_version: 0.7.0 [3989,3994]
to
source_file [0,149751]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [34610,34633]
    pragma: pragma [34610,34616]
    solidity_pragma_token [34617,34632]
        solidity: solidity [34617,34625]
        solidity_version:  0.5.17 [34625,34632]
to
source_file [0,149751]
at 30

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [36936,36959]
    pragma: pragma [36936,36942]
    solidity_pragma_token [36943,36958]
        solidity: solidity [36943,36951]
        solidity_version:  0.5.17 [36951,36958]
to
source_file [0,149751]
at 33

New cluster:
===
insert-node
---
contract_declaration [45787,45977]
to
source_file [0,149751]
at 38
------------
===
insert-node
---
identifier: ERC20NonTradable [45796,45812]
to
contract_declaration [45787,45977]
at 0
===
insert-node
---
is: is [45813,45815]
to
contract_declaration [45787,45977]
at 1
===
insert-node
---
contract_declaration [45787,45977]
to
source_file [0,149751]
at 38

New cluster:
Unknown cluster type
------------
===
insert-tree
---
contract_declaration [64233,64562]
    identifier: IStakeManagerEventsHub [64242,64264]
    contract_body [64265,64562]
        struct_declaration [64272,64503]
            struct: struct [64272,64278]
            identifier: Validator [64279,64288]
            struct_member [64300,64315]
                type_name: uint256 [64300,64307]
                identifier: amount [64308,64314]
            struct_member [64325,64340]
                type_name: uint256 [64325,64332]
                identifier: reward [64333,64339]
            struct_member [64350,64374]
                type_name: uint256 [64350,64357]
                identifier: activationEpoch [64358,64373]
            struct_member [64384,64410]
                type_name: uint256 [64384,64391]
                identifier: deactivationEpoch [64392,64409]
            struct_member [64420,64437]
                type_name: uint256 [64420,64427]
                identifier: jailTime [64428,64436]
            struct_member [64447,64462]
                type_name: address [64447,64454]
                identifier: signer [64455,64461]
            struct_member [64472,64496]
                type_name: address [64472,64479]
                identifier: contractAddress [64480,64495]
        state_variable_declaration [64511,64559]
            type_name: mapping(uint256 => Validator) [64511,64540]
            visibility: public [64541,64547]
            identifier: validators [64548,64558]
to
source_file [0,149751]
at 47

New cluster:
===
insert-node
---
contract_declaration [64566,67075]
to
source_file [0,149751]
at 48
------------
===
insert-node
---
identifier: onlyValidatorContract [64651,64672]
to
modifier_definition [64642,64920]
at 1
===
insert-node
---
contract_body [64602,67075]
to
contract_declaration [64566,67075]
at 3
===
insert-node
---
identifier: require [64851,64858]
to
call_expression [64851,64900]
at 0
===
insert-node
---
call_expression [64851,64900]
to
expression_statement [64851,64901]
at 0
===
insert-node
---
modifier_definition [64642,64920]
to
contract_body [64602,67075]
at 1
===
insert-node
---
modifier: modifier [64642,64650]
to
modifier_definition [64642,64920]
at 0
===
insert-node
---
contract_declaration [64566,67075]
to
source_file [0,149751]
at 48
===
insert-node
---
identifier: EventsHub [64575,64584]
to
contract_declaration [64566,67075]
at 0
===
insert-node
---
expression_statement [64851,64901]
to
function_body [64694,64920]
at 2
===
insert-node
---
is: is [64585,64587]
to
contract_declaration [64566,67075]
at 1
===
insert-node
---
function_body [64694,64920]
to
modifier_definition [64642,64920]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [67429,67452]
    pragma: pragma [67429,67435]
    solidity_pragma_token [67436,67451]
        solidity: solidity [67436,67444]
        solidity_version:  0.5.17 [67444,67451]
to
source_file [0,149751]
at 52

New cluster:
===
insert-node
---
contract_declaration [115568,115832]
to
source_file [0,149751]
at 86
------------
===
insert-node
---
is: is [115591,115593]
to
contract_declaration [115568,115832]
at 1
===
insert-node
---
contract_declaration [115568,115832]
to
source_file [0,149751]
at 86
===
insert-node
---
contract_body [115627,115832]
to
contract_declaration [115568,115832]
at 4
===
insert-node
---
identifier: DelegateProxy [115577,115590]
to
contract_declaration [115568,115832]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [120802,120825]
    pragma: pragma [120802,120808]
    solidity_pragma_token [120809,120824]
        solidity: solidity [120809,120817]
        solidity_version:  0.5.17 [120817,120824]
to
source_file [0,149751]
at 95

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [123783,123806]
    pragma: pragma [123783,123789]
    solidity_pragma_token [123790,123805]
        solidity: solidity [123790,123798]
        solidity_version:  0.5.17 [123798,123805]
to
source_file [0,149751]
at 97

New cluster:
Unknown cluster type
------------
===
insert-tree
---
contract_declaration [123810,124390]
    identifier: StakeManagerStorageExtension [123819,123847]
    contract_body [123848,124390]
        state_variable_declaration [123855,123880]
            type_name: address [123855,123862]
            visibility: public [123863,123869]
            identifier: eventsHub [123870,123879]
        state_variable_declaration [123886,123916]
            type_name: uint256 [123886,123893]
            visibility: public [123894,123900]
            identifier: rewardPerStake [123901,123915]
        state_variable_declaration [123922,123951]
            type_name: address [123922,123929]
            visibility: public [123930,123936]
            identifier: extensionCode [123937,123950]
        state_variable_declaration [123957,123982]
            type_name: address[] [123957,123966]
            visibility: public [123967,123973]
            identifier: signers [123974,123981]
        state_variable_declaration [123990,124034]
            type_name: uint256 [123990,123997]
            constant: constant [123998,124006]
            identifier: CHK_REWARD_PRECISION [124007,124027]
            affectation_operator: = [124028,124029]
            number_literal: 100 [124030,124033]
        state_variable_declaration [124040,124073]
            type_name: uint256 [124040,124047]
            visibility: public [124048,124054]
            identifier: prevBlockInterval [124055,124072]
        state_variable_declaration [124141,124184]
            type_name: uint256 [124141,124148]
            visibility: public [124149,124155]
            identifier: rewardDecreasePerCheckpoint [124156,124183]
        state_variable_declaration [124229,124267]
            type_name: uint256 [124229,124236]
            visibility: public [124237,124243]
            identifier: maxRewardedCheckpoints [124244,124266]
        state_variable_declaration [124350,124387]
            type_name: uint256 [124350,124357]
            visibility: public [124358,124364]
            identifier: checkpointRewardDelta [124365,124386]
to
source_file [0,149751]
at 98

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [124463,124486]
    pragma: pragma [124463,124469]
    solidity_pragma_token [124470,124485]
        solidity: solidity [124470,124478]
        solidity_version:  0.5.17 [124478,124485]
to
source_file [0,149751]
at 99

New cluster:
===
insert-node
---
contract_declaration [124512,131995]
to
source_file [0,149751]
at 100
------------
===
insert-node
---
function_definition [130848,131640]
to
contract_body [124611,131995]
at 6
===
insert-node
---
call_expression [131075,131290]
to
expression_statement [131075,131291]
at 0
===
insert-node
---
contract_body [124611,131995]
to
contract_declaration [124512,131995]
at 5
===
insert-node
---
is: is [124543,124545]
to
contract_declaration [124512,131995]
at 1
===
insert-node
---
logical_operator: || [131183,131185]
to
binary_expression [131127,131212]
at 1
===
insert-node
---
visibility: external [130926,130934]
to
function_definition [130848,131640]
at 4
===
insert-node
---
function: function [130848,130856]
to
function_definition [130848,131640]
at 0
===
insert-node
---
call_argument [131127,131212]
to
call_expression [131075,131290]
at 1
===
insert-node
---
identifier: updateCommissionRate [130857,130877]
to
function_definition [130848,131640]
at 1
===
insert-node
---
contract_declaration [124512,131995]
to
source_file [0,149751]
at 100
===
insert-node
---
function_body [130935,131640]
to
function_definition [130848,131640]
at 5
===
insert-node
---
identifier: StakeManagerExtension [124521,124542]
to
contract_declaration [124512,131995]
at 0
===
insert-node
---
expression_statement [131075,131291]
to
function_body [130935,131640]
at 2
===
insert-node
---
binary_expression [131127,131212]
to
call_argument [131127,131212]
at 0
===
insert-node
---
identifier: require [131075,131082]
to
call_expression [131075,131290]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [132059,132082]
    pragma: pragma [132059,132065]
    solidity_pragma_token [132066,132081]
        solidity: solidity [132066,132074]
        solidity_version:  0.5.17 [132074,132081]
to
source_file [0,149751]
at 101

New cluster:
MOVE from contract_declaration [118328,149751]
------------
===
move-tree
---
inheritance_specifier [118353,118366]
    user_defined_type [118353,118366]
        identifier: IStakeManager [118353,118366]
to
contract_declaration [118328,149751]
at 4

New cluster:
===
insert-node
---
library: library [3999,4006]
to
library_declaration [6258,15384]
at 0
------------
===
insert-node
---
library: library [3999,4006]
to
library_declaration [6258,15384]
at 0

New cluster:
===
insert-node
---
identifier: RLPReader [4007,4016]
to
library_declaration [6258,15384]
at 1
------------
===
insert-node
---
identifier: RLPReader [4007,4016]
to
library_declaration [6258,15384]
at 1

New cluster:
UPDATE from DelegateProxy to DelegateProxyForwarder
------------
===
update-node
---
identifier: DelegateProxy [86844,86857]
replace DelegateProxy by DelegateProxyForwarder

New cluster:
MOVE from contract_body [35144,36852]
------------
===
move-tree
---
function_definition [35732,35888]
    function: function [35732,35740]
    identifier: stake [35741,35746]
    parameter [35757,35771]
        type_name: uint256 [35757,35764]
        identifier: amount [35765,35771]
    parameter [35782,35801]
        type_name: uint256 [35782,35789]
        identifier: heimdallFee [35790,35801]
    parameter [35812,35833]
        type_name: bool [35812,35816]
        identifier: acceptDelegation [35817,35833]
    parameter [35844,35871]
        type_name: bytes [35844,35849]
        calldata: calldata [35850,35858]
        identifier: signerPubkey [35859,35871]
    visibility: external [35879,35887]
to
contract_body [35144,36852]
at 14

New cluster:
MOVE from contract_declaration [45787,45977]
------------
===
move-tree
---
inheritance_specifier [99463,99468]
    user_defined_type [99463,99468]
        identifier: ERC20 [99463,99468]
to
contract_declaration [45787,45977]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
contract_body [45822,45977]
    function_definition [45829,45974]
        function: function [45829,45837]
        identifier: _approve [45838,45846]
        parameter [45857,45870]
            type_name: address [45857,45864]
            identifier: owner [45865,45870]
        parameter [45881,45896]
            type_name: address [45881,45888]
            identifier: spender [45889,45896]
        parameter [45907,45920]
            type_name: uint256 [45907,45914]
            identifier: value [45915,45920]
        visibility: internal [45928,45936]
        function_body [45937,45974]
            revert_statement [45948,45967]
                revert: revert [45948,45954]
                parenthesized_expression [45954,45966]
                    string_literal [45955,45965]
                        string: "disabled" [45955,45965]
to
contract_declaration [45787,45977]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [64588,64601]
    user_defined_type [64588,64601]
        identifier: Initializable [64588,64601]
to
contract_declaration [64566,67075]
at 2

New cluster:
===
insert-node
---
identifier: ValidatorShare [67483,67497]
to
contract_declaration [100281,114843]
at 0
------------
===
insert-node
---
identifier: ValidatorShare [67483,67497]
to
contract_declaration [100281,114843]
at 0

New cluster:
===
insert-node
---
is: is [67498,67500]
to
contract_declaration [100281,114843]
at 1
------------
===
insert-node
---
is: is [67498,67500]
to
contract_declaration [100281,114843]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [67518,67534]
    user_defined_type [67518,67534]
        identifier: ERC20NonTradable [67518,67534]
to
contract_declaration [100281,114843]
at 5

New cluster:
MOVE from contract_body [100378,114843]
------------
===
move-tree
---
function_definition [106493,106801]
    function: function [106493,106501]
    identifier: _getTotalStake [106502,106516]
    parameter [106517,106529]
        type_name: address [106517,106524]
        identifier: user [106525,106529]
    visibility: internal [106531,106539]
    state_mutability [106540,106544]
        view: view [106540,106544]
    return_type_definition [106545,106570]
        returns: returns [106545,106552]
        parameter [106553,106560]
            type_name: uint256 [106553,106560]
        parameter [106562,106569]
            type_name: uint256 [106562,106569]
    function_body [106571,106801]
        variable_declaration_statement [106582,106615]
            variable_declaration [106582,106596]
                type_name: uint256 [106582,106589]
                identifier: shares [106590,106596]
            affectation_operator: = [106597,106598]
            call_expression [106599,106614]
                identifier: balanceOf [106599,106608]
                call_argument [106609,106613]
                    identifier: user [106609,106613]
        variable_declaration_statement [106625,106655]
            variable_declaration [106625,106637]
                type_name: uint256 [106625,106632]
                identifier: rate [106633,106637]
            affectation_operator: = [106638,106639]
            call_expression [106640,106654]
                identifier: exchangeRate [106640,106652]
        if_statement [106665,106725]
            if: if [106665,106667]
            binary_expression [106669,106680]
                identifier: shares [106669,106675]
                comparison_operator: == [106676,106678]
                number_literal: 0 [106679,106680]
            block_statement [106682,106725]
                return_statement [106697,106714]
                    return: return [106697,106703]
                    tuple_expression [106704,106713]
                        number_literal: 0 [106705,106706]
                        identifier: rate [106708,106712]
        return_statement [106737,106794]
            return: return [106737,106743]
            tuple_expression [106744,106793]
                call_expression [106745,106786]
                    member_expression: rate.mul(shares).div [106745,106765]
                    call_argument [106766,106785]
                        call_expression [106766,106785]
                            identifier: _getRatePrecision [106766,106783]
                identifier: rate [106788,106792]
to
contract_body [100378,114843]
at 30
===
move-tree
---
function_definition [110390,110604]
    function: function [110390,110398]
    identifier: _withdrawReward [110399,110414]
    parameter [110415,110427]
        type_name: address [110415,110422]
        identifier: user [110423,110427]
    visibility: private [110429,110436]
    return_type_definition [110437,110453]
        returns: returns [110437,110444]
        parameter [110445,110452]
            type_name: uint256 [110445,110452]
    function_body [110454,110604]
        variable_declaration_statement [110465,110512]
            variable_declaration [110465,110486]
                type_name: uint256 [110465,110472]
                identifier: liquidRewards [110473,110486]
            affectation_operator: = [110487,110488]
            call_expression [110489,110511]
                identifier: getLiquidRewards [110489,110505]
                call_argument [110506,110510]
                    identifier: user [110506,110510]
        expression_statement [110522,110566]
            assignment_expression [110522,110565]
                array_access [110522,110548]
                    identifier: initalRewardPerShare [110522,110542]
                    identifier: user [110543,110547]
                affectation_operator: = [110549,110550]
                identifier: rewardPerShare [110551,110565]
        return_statement [110576,110597]
            return: return [110576,110582]
            identifier: liquidRewards [110583,110596]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [108942,110382]
    function: function [108942,108950]
    identifier: sellVoucher [108951,108962]
    parameter [108963,108982]
        type_name: uint256 [108963,108970]
        identifier: claimAmount [108971,108982]
    parameter [108984,109011]
        type_name: uint256 [108984,108991]
        identifier: maximumSharesToBurn [108992,109011]
    visibility: public [109013,109019]
    function_body [109020,110382]
        variable_declaration_statement [109115,109180]
            variable_declaration_tuple [109115,109150]
                variable_declaration [109116,109135]
                    type_name: uint256 [109116,109123]
                    identifier: totalStaked [109124,109135]
                variable_declaration [109137,109149]
                    type_name: uint256 [109137,109144]
                    identifier: rate [109145,109149]
            affectation_operator: = [109151,109152]
            call_expression [109153,109179]
                identifier: _getTotalStake [109153,109167]
                call_argument [109168,109178]
                    member_expression: msg.sender [109168,109178]
        expression_statement [109190,109267]
            call_expression [109190,109266]
                identifier: require [109190,109197]
                call_argument [109198,109243]
                    binary_expression [109198,109243]
                        binary_expression [109198,109213]
                            identifier: totalStaked [109198,109209]
                            comparison_operator: > [109210,109211]
                            number_literal: 0 [109212,109213]
                        logical_operator: && [109214,109216]
                        binary_expression [109217,109243]
                            identifier: totalStaked [109217,109228]
                            comparison_operator: >= [109229,109231]
                            identifier: claimAmount [109232,109243]
                call_argument [109245,109265]
                    string_literal [109245,109265]
                        string: "Too much requested" [109245,109265]
        variable_declaration_statement [109331,109371]
            variable_declaration [109331,109348]
                type_name: uint256 [109331,109338]
                identifier: precision [109339,109348]
            affectation_operator: = [109349,109350]
            call_expression [109351,109370]
                identifier: _getRatePrecision [109351,109368]
        variable_declaration_statement [109381,109435]
            variable_declaration [109381,109395]
                type_name: uint256 [109381,109388]
                identifier: shares [109389,109395]
            affectation_operator: = [109396,109397]
            call_expression [109398,109434]
                member_expression: claimAmount.mul(precision).div [109398,109428]
                call_argument [109429,109433]
                    identifier: rate [109429,109433]
        expression_statement [109445,109505]
            call_expression [109445,109504]
                identifier: require [109445,109452]
                call_argument [109453,109482]
                    binary_expression [109453,109482]
                        identifier: shares [109453,109459]
                        comparison_operator: <= [109460,109462]
                        identifier: maximumSharesToBurn [109463,109482]
                call_argument [109484,109503]
                    string_literal [109484,109503]
                        string: "too much slippage" [109484,109503]
        expression_statement [109517,109556]
            call_expression [109517,109555]
                identifier: _withdrawAndTransferReward [109517,109543]
                call_argument [109544,109554]
                    member_expression: msg.sender [109544,109554]
        expression_statement [109576,109602]
            call_expression [109576,109601]
                identifier: _burn [109576,109581]
                call_argument [109582,109592]
                    member_expression: msg.sender [109582,109592]
                call_argument [109594,109600]
                    identifier: shares [109594,109600]
        expression_statement [109612,109681]
            call_expression [109612,109680]
                member_expression: stakeManager.updateValidatorState [109612,109645]
                call_argument [109646,109657]
                    identifier: validatorId [109646,109657]
                call_argument [109659,109679]
                    unary_expression [109659,109679]
                        arithmetic_operator: - [109659,109660]
                        type_cast_expression [109660,109679]
                            primitive_type: int256 [109660,109666]
                            call_argument [109667,109678]
                                identifier: claimAmount [109667,109678]
        expression_statement [109693,109725]
            call_expression [109693,109724]
                identifier: _reduceActiveStake [109693,109711]
                call_argument [109712,109723]
                    identifier: claimAmount [109712,109723]
        variable_declaration_statement [109737,109821]
            variable_declaration [109737,109763]
                type_name: uint256 [109737,109744]
                identifier: _withdrawPoolShare [109745,109763]
            affectation_operator: = [109764,109765]
            call_expression [109766,109820]
                member_expression: claimAmount.mul(precision).div [109766,109796]
                call_argument [109797,109819]
                    call_expression [109797,109819]
                        identifier: withdrawExchangeRate [109797,109817]
        expression_statement [109831,109876]
            assignment_expression [109831,109875]
                identifier: withdrawPool [109831,109843]
                affectation_operator: = [109844,109845]
                call_expression [109846,109875]
                    member_expression: withdrawPool.add [109846,109862]
                    call_argument [109863,109874]
                        identifier: claimAmount [109863,109874]
        expression_statement [109886,109942]
            assignment_expression [109886,109941]
                identifier: withdrawShares [109886,109900]
                affectation_operator: = [109901,109902]
                call_expression [109903,109941]
                    member_expression: withdrawShares.add [109903,109921]
                    call_argument [109922,109940]
                        identifier: _withdrawPoolShare [109922,109940]
        variable_declaration_statement [109962,110014]
            variable_declaration [109962,109991]
                type_name: DelegatorUnbond [109962,109977]
                memory: memory [109978,109984]
                identifier: unbond [109985,109991]
            affectation_operator: = [109992,109993]
            array_access [109994,110013]
                identifier: unbonds [109994,110001]
                member_expression: msg.sender [110002,110012]
        expression_statement [110024,110078]
            assignment_expression [110024,110077]
                member_expression: unbond.shares [110024,110037]
                affectation_operator: = [110038,110039]
                call_expression [110040,110077]
                    member_expression: unbond.shares.add [110040,110057]
                    call_argument [110058,110076]
                        identifier: _withdrawPoolShare [110058,110076]
        expression_statement [110122,110166]
            assignment_expression [110122,110165]
                member_expression: unbond.withdrawEpoch [110122,110142]
                affectation_operator: = [110143,110144]
                call_expression [110145,110165]
                    member_expression: stakeManager.epoch [110145,110163]
        expression_statement [110176,110205]
            assignment_expression [110176,110204]
                array_access [110176,110195]
                    identifier: unbonds [110176,110183]
                    member_expression: msg.sender [110184,110194]
                affectation_operator: = [110196,110197]
                identifier: unbond [110198,110204]
        variable_declaration_statement [110217,110252]
            variable_declaration [110217,110235]
                type_name: StakingInfo [110217,110228]
                identifier: logger [110229,110235]
            affectation_operator: = [110236,110237]
            identifier: stakingLogger [110238,110251]
        expression_statement [110262,110330]
            call_expression [110262,110329]
                member_expression: logger.logShareBurned [110262,110283]
                call_argument [110284,110295]
                    identifier: validatorId [110284,110295]
                call_argument [110297,110307]
                    member_expression: msg.sender [110297,110307]
                call_argument [110309,110320]
                    identifier: claimAmount [110309,110320]
                call_argument [110322,110328]
                    identifier: shares [110322,110328]
        expression_statement [110340,110375]
            call_expression [110340,110374]
                member_expression: logger.logStakeUpdate [110340,110361]
                call_argument [110362,110373]
                    identifier: validatorId [110362,110373]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [112437,113234]
    function: function [112437,112445]
    identifier: _claimUnstakedTokens [112446,112466]
    visibility: internal [112469,112477]
    return_type_definition [112478,112494]
        returns: returns [112478,112485]
        parameter [112486,112493]
            type_name: uint256 [112486,112493]
    function_body [112495,113234]
        variable_declaration_statement [112506,112558]
            variable_declaration [112506,112535]
                type_name: DelegatorUnbond [112506,112521]
                memory: memory [112522,112528]
                identifier: unbond [112529,112535]
            affectation_operator: = [112536,112537]
            array_access [112538,112557]
                identifier: unbonds [112538,112545]
                member_expression: msg.sender [112546,112556]
        variable_declaration_statement [112570,112601]
            variable_declaration [112570,112584]
                type_name: uint256 [112570,112577]
                identifier: shares [112578,112584]
            affectation_operator: = [112585,112586]
            member_expression: unbond.shares [112587,112600]
        expression_statement [112611,112784]
            call_expression [112611,112783]
                identifier: require [112611,112618]
                call_argument [112633,112727]
                    binary_expression [112633,112727]
                        binary_expression [112633,112713]
                            call_expression [112633,112689]
                                member_expression: unbond.withdrawEpoch.add [112633,112657]
                                call_argument [112658,112688]
                                    call_expression [112658,112688]
                                        member_expression: stakeManager.withdrawalDelay [112658,112686]
                            comparison_operator: <= [112690,112692]
                            call_expression [112693,112713]
                                member_expression: stakeManager.epoch [112693,112711]
                        logical_operator: && [112714,112716]
                        binary_expression [112717,112727]
                            identifier: shares [112717,112723]
                            comparison_operator: > [112724,112725]
                            number_literal: 0 [112726,112727]
                call_argument [112742,112772]
                    string_literal [112742,112772]
                        string: "Incomplete withdrawal period" [112742,112772]
        variable_declaration_statement [112796,112874]
            variable_declaration [112796,112811]
                type_name: uint256 [112796,112803]
                identifier: _amount [112804,112811]
            affectation_operator: = [112812,112813]
            call_expression [112814,112873]
                member_expression: withdrawExchangeRate().mul(shares).div [112814,112852]
                call_argument [112853,112872]
                    call_expression [112853,112872]
                        identifier: _getRatePrecision [112853,112870]
        expression_statement [112884,112928]
            assignment_expression [112884,112927]
                identifier: withdrawShares [112884,112898]
                affectation_operator: = [112899,112900]
                call_expression [112901,112927]
                    member_expression: withdrawShares.sub [112901,112919]
                    call_argument [112920,112926]
                        identifier: shares [112920,112926]
        expression_statement [112938,112979]
            assignment_expression [112938,112978]
                identifier: withdrawPool [112938,112950]
                affectation_operator: = [112951,112952]
                call_expression [112953,112978]
                    member_expression: withdrawPool.sub [112953,112969]
                    call_argument [112970,112977]
                        identifier: _amount [112970,112977]
        expression_statement [112991,113084]
            call_expression [112991,113083]
                identifier: require [112991,112998]
                call_argument [112999,113059]
                    call_expression [112999,113059]
                        member_expression: stakeManager.transferFunds [112999,113025]
                        call_argument [113026,113037]
                            identifier: validatorId [113026,113037]
                        call_argument [113039,113046]
                            identifier: _amount [113039,113046]
                        call_argument [113048,113058]
                            member_expression: msg.sender [113048,113058]
                call_argument [113061,113082]
                    string_literal [113061,113082]
                        string: "Insufficent rewards" [113061,113082]
        expression_statement [113094,113163]
            call_expression [113094,113162]
                member_expression: stakingLogger.logDelegatorUnstaked [113094,113128]
                call_argument [113129,113140]
                    identifier: validatorId [113129,113140]
                call_argument [113142,113152]
                    member_expression: msg.sender [113142,113152]
                call_argument [113154,113161]
                    identifier: _amount [113154,113161]
        expression_statement [113173,113200]
            array_access [113173,113199]
                unary_expression [113173,113187]
                    delete: delete [113173,113179]
                    identifier: unbonds [113180,113187]
                member_expression: msg.sender [113188,113198]
        return_statement [113212,113227]
            return: return [113212,113218]
            identifier: _amount [113219,113226]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [112060,112343]
    function: function [112060,112068]
    identifier: getLiquidRewards [112069,112085]
    parameter [112086,112098]
        type_name: address [112086,112093]
        identifier: user [112094,112098]
    visibility: public [112100,112106]
    state_mutability [112107,112111]
        view: view [112107,112111]
    return_type_definition [112112,112129]
        returns: returns [112112,112119]
        parameter [112121,112128]
            type_name: uint256 [112121,112128]
    function_body [112130,112343]
        variable_declaration_statement [112141,112174]
            variable_declaration [112141,112155]
                type_name: uint256 [112141,112148]
                identifier: shares [112149,112155]
            affectation_operator: = [112156,112157]
            call_expression [112158,112173]
                identifier: balanceOf [112158,112167]
                call_argument [112168,112172]
                    identifier: user [112168,112172]
        if_statement [112184,112236]
            if: if [112184,112186]
            binary_expression [112188,112199]
                identifier: shares [112188,112194]
                comparison_operator: == [112195,112197]
                number_literal: 0 [112198,112199]
            block_statement [112201,112236]
                return_statement [112216,112225]
                    return: return [112216,112222]
                    number_literal: 0 [112223,112224]
        return_statement [112248,112336]
            return: return [112248,112254]
            call_expression [112255,112335]
                member_expression: rewardPerShare.sub(initalRewardPerShare[user]).mul(shares).div [112255,112317]
                call_argument [112318,112334]
                    identifier: REWARD_PRECISION [112318,112334]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [104750,105009]
    function: function [104750,104758]
    identifier: _getRatePrecision [104759,104776]
    visibility: private [104779,104786]
    state_mutability [104787,104791]
        view: view [104787,104791]
    return_type_definition [104792,104808]
        returns: returns [104792,104799]
        parameter [104800,104807]
            type_name: uint256 [104800,104807]
    function_body [104809,105009]
        if_statement [104875,104953]
            if: if [104875,104877]
            binary_expression [104879,104894]
                identifier: validatorId [104879,104890]
                comparison_operator: < [104891,104892]
                number_literal: 8 [104893,104894]
            block_statement [104896,104953]
                return_statement [104911,104942]
                    return: return [104911,104917]
                    identifier: EXCHANGE_RATE_PRECISION [104918,104941]
        return_statement [104966,105002]
            return: return [104966,104972]
            identifier: EXCHANGE_RATE_HIGH_PRECISION [104973,105001]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [107668,108651]
    function: function [107668,107676]
    identifier: _buyShares [107677,107687]
    parameter [107688,107703]
        type_name: uint256 [107688,107695]
        identifier: _amount [107696,107703]
    parameter [107705,107729]
        type_name: uint256 [107705,107712]
        identifier: _minSharesToMint [107713,107729]
    parameter [107731,107743]
        type_name: address [107731,107738]
        identifier: user [107739,107743]
    visibility: private [107745,107752]
    modifier_invocation [107753,107769]
        identifier: onlyWhenUnlocked [107753,107769]
    return_type_definition [107770,107786]
        returns: returns [107770,107777]
        parameter [107778,107785]
            type_name: uint256 [107778,107785]
    function_body [107787,108651]
        expression_statement [107798,107844]
            call_expression [107798,107843]
                identifier: require [107798,107805]
                call_argument [107806,107816]
                    identifier: delegation [107806,107816]
                call_argument [107818,107842]
                    string_literal [107818,107842]
                        string: "Delegation is disabled" [107818,107842]
        variable_declaration_statement [107856,107886]
            variable_declaration [107856,107868]
                type_name: uint256 [107856,107863]
                identifier: rate [107864,107868]
            affectation_operator: = [107869,107870]
            call_expression [107871,107885]
                identifier: exchangeRate [107871,107883]
        variable_declaration_statement [107896,107936]
            variable_declaration [107896,107913]
                type_name: uint256 [107896,107903]
                identifier: precision [107904,107913]
            affectation_operator: = [107914,107915]
            call_expression [107916,107935]
                identifier: _getRatePrecision [107916,107933]
        variable_declaration_statement [107946,107996]
            variable_declaration [107946,107960]
                type_name: uint256 [107946,107953]
                identifier: shares [107954,107960]
            affectation_operator: = [107961,107962]
            call_expression [107963,107995]
                member_expression: _amount.mul(precision).div [107963,107989]
                call_argument [107990,107994]
                    identifier: rate [107990,107994]
        expression_statement [108006,108063]
            call_expression [108006,108062]
                identifier: require [108006,108013]
                call_argument [108014,108040]
                    binary_expression [108014,108040]
                        identifier: shares [108014,108020]
                        comparison_operator: >= [108021,108023]
                        identifier: _minSharesToMint [108024,108040]
                call_argument [108042,108061]
                    string_literal [108042,108061]
                        string: "Too much slippage" [108042,108061]
        expression_statement [108073,108124]
            call_expression [108073,108123]
                identifier: require [108073,108080]
                call_argument [108081,108106]
                    binary_expression [108081,108106]
                        member_expression: unbonds[user].shares [108081,108101]
                        comparison_operator: == [108102,108104]
                        number_literal: 0 [108105,108106]
                call_argument [108108,108122]
                    string_literal [108108,108122]
                        string: "Ongoing exit" [108108,108122]
        expression_statement [108136,108156]
            call_expression [108136,108155]
                identifier: _mint [108136,108141]
                call_argument [108142,108146]
                    identifier: user [108142,108146]
                call_argument [108148,108154]
                    identifier: shares [108148,108154]
        expression_statement [108265,108330]
            assignment_expression [108265,108329]
                identifier: _amount [108265,108272]
                affectation_operator: = [108273,108274]
                call_expression [108275,108329]
                    member_expression: _amount.sub [108275,108286]
                    call_argument [108287,108328]
                        call_expression [108287,108328]
                            member_expression: _amount % rate.mul(shares).div [108287,108317]
                            call_argument [108318,108327]
                                identifier: precision [108318,108327]
        expression_statement [108342,108383]
            assignment_expression [108342,108382]
                identifier: activeAmount [108342,108354]
                affectation_operator: = [108355,108356]
                call_expression [108357,108382]
                    member_expression: activeAmount.add [108357,108373]
                    call_argument [108374,108381]
                        identifier: _amount [108374,108381]
        expression_statement [108393,108457]
            call_expression [108393,108456]
                member_expression: stakeManager.updateValidatorState [108393,108426]
                call_argument [108427,108438]
                    identifier: validatorId [108427,108438]
                call_argument [108440,108455]
                    type_cast_expression [108440,108455]
                        primitive_type: int256 [108440,108446]
                        call_argument [108447,108454]
                            identifier: _amount [108447,108454]
        variable_declaration_statement [108469,108504]
            variable_declaration [108469,108487]
                type_name: StakingInfo [108469,108480]
                identifier: logger [108481,108487]
            affectation_operator: = [108488,108489]
            identifier: stakingLogger [108490,108503]
        expression_statement [108514,108572]
            call_expression [108514,108571]
                member_expression: logger.logShareMinted [108514,108535]
                call_argument [108536,108547]
                    identifier: validatorId [108536,108547]
                call_argument [108549,108553]
                    identifier: user [108549,108553]
                call_argument [108555,108562]
                    identifier: _amount [108555,108562]
                call_argument [108564,108570]
                    identifier: shares [108564,108570]
        expression_statement [108582,108617]
            call_expression [108582,108616]
                member_expression: logger.logStakeUpdate [108582,108603]
                call_argument [108604,108615]
                    identifier: validatorId [108604,108615]
        return_statement [108629,108644]
            return: return [108629,108635]
            identifier: _amount [108636,108643]
to
contract_body [100378,114843]
at 50
===
move-tree
---
function_definition [110612,111031]
    function: function [110612,110620]
    identifier: _withdrawAndTransferReward [110621,110647]
    parameter [110648,110660]
        type_name: address [110648,110655]
        identifier: user [110656,110660]
    visibility: private [110662,110669]
    return_type_definition [110670,110686]
        returns: returns [110670,110677]
        parameter [110678,110685]
            type_name: uint256 [110678,110685]
    function_body [110687,111031]
        variable_declaration_statement [110698,110744]
            variable_declaration [110698,110719]
                type_name: uint256 [110698,110705]
                identifier: liquidRewards [110706,110719]
            affectation_operator: = [110720,110721]
            call_expression [110722,110743]
                identifier: _withdrawReward [110722,110737]
                call_argument [110738,110742]
                    identifier: user [110738,110742]
        if_statement [110754,110983]
            if: if [110754,110756]
            binary_expression [110758,110775]
                identifier: liquidRewards [110758,110771]
                comparison_operator: > [110772,110773]
                number_literal: 0 [110774,110775]
            block_statement [110777,110983]
                expression_statement [110792,110885]
                    call_expression [110792,110884]
                        identifier: require [110792,110799]
                        call_argument [110800,110860]
                            call_expression [110800,110860]
                                member_expression: stakeManager.transferFunds [110800,110826]
                                call_argument [110827,110838]
                                    identifier: validatorId [110827,110838]
                                call_argument [110840,110853]
                                    identifier: liquidRewards [110840,110853]
                                call_argument [110855,110859]
                                    identifier: user [110855,110859]
                        call_argument [110862,110883]
                            string_literal [110862,110883]
                                string: "Insufficent rewards" [110862,110883]
                expression_statement [110899,110972]
                    call_expression [110899,110971]
                        member_expression: stakingLogger.logDelegatorClaimRewards [110899,110937]
                        call_argument [110938,110949]
                            identifier: validatorId [110938,110949]
                        call_argument [110951,110955]
                            identifier: user [110951,110955]
                        call_argument [110957,110970]
                            identifier: liquidRewards [110957,110970]
        return_statement [111003,111024]
            return: return [111003,111009]
            identifier: liquidRewards [111010,111023]
to
contract_body [100378,114843]
at 50

New cluster:
MOVE from contract_declaration [115568,115832]
------------
===
move-tree
---
inheritance_specifier [86861,86869]
    user_defined_type [86861,86869]
        identifier: ERCProxy [86861,86869]
to
contract_declaration [115568,115832]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [115604,115626]
    user_defined_type [115604,115626]
        identifier: DelegateProxyForwarder [115604,115626]
to
contract_declaration [115568,115832]
at 3

New cluster:
MOVE from contract_body [115885,118197]
------------
===
move-tree
---
struct_declaration [116986,117147]
    struct: struct [116986,116992]
    identifier: Auction [116993,117000]
    struct_member [117012,117027]
        type_name: uint256 [117012,117019]
        identifier: amount [117020,117026]
    struct_member [117037,117056]
        type_name: uint256 [117037,117044]
        identifier: startEpoch [117045,117055]
    struct_member [117066,117079]
        type_name: address [117066,117073]
        identifier: user [117074,117078]
    struct_member [117089,117111]
        type_name: bool [117089,117093]
        identifier: acceptDelegation [117094,117110]
    struct_member [117121,117140]
        type_name: bytes [117121,117126]
        identifier: signerPubkey [117127,117139]
to
contract_body [115885,118197]
at 1
===
move-tree
---
struct_declaration [117155,117231]
    struct: struct [117155,117161]
    identifier: State [117162,117167]
    struct_member [117179,117194]
        type_name: uint256 [117179,117186]
        identifier: amount [117187,117193]
    struct_member [117204,117224]
        type_name: uint256 [117204,117211]
        identifier: stakerCount [117212,117223]
to
contract_body [115885,118197]
at 2
===
move-tree
---
enum_declaration [117327,117375]
    enum: enum [117327,117331]
    identifier: Status [117332,117338]
    enum_value: Inactive [117340,117348]
    enum_value: Active [117350,117356]
    enum_value: Locked [117358,117364]
    enum_value: Unstaked [117366,117374]
to
contract_body [115885,118197]
at 0
===
move-tree
---
struct_declaration [117381,117636]
    struct: struct [117381,117387]
    identifier: Validator [117388,117397]
    struct_member [117409,117424]
        type_name: uint256 [117409,117416]
        identifier: amount [117417,117423]
    struct_member [117434,117449]
        type_name: uint256 [117434,117441]
        identifier: reward [117442,117448]
    struct_member [117459,117483]
        type_name: uint256 [117459,117466]
        identifier: activationEpoch [117467,117482]
    struct_member [117493,117519]
        type_name: uint256 [117493,117500]
        identifier: deactivationEpoch [117501,117518]
    struct_member [117529,117546]
        type_name: uint256 [117529,117536]
        identifier: jailTime [117537,117545]
    struct_member [117556,117571]
        type_name: address [117556,117563]
        identifier: signer [117564,117570]
    struct_member [117581,117605]
        type_name: address [117581,117588]
        identifier: contractAddress [117589,117604]
    struct_member [117615,117629]
        type_name: Status [117615,117621]
        identifier: status [117622,117628]
to
contract_body [115885,118197]
at 4
===
move-tree
---
struct_declaration [117239,117319]
    struct: struct [117239,117245]
    identifier: StateChange [117246,117257]
    struct_member [117269,117283]
        type_name: int256 [117269,117275]
        identifier: amount [117276,117282]
    struct_member [117293,117312]
        type_name: int256 [117293,117299]
        identifier: stakerCount [117300,117311]
to
contract_body [115885,118197]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [124546,124565]
    user_defined_type [124546,124565]
        identifier: StakeManagerStorage [124546,124565]
to
contract_declaration [124512,131995]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [124567,124580]
    user_defined_type [124567,124580]
        identifier: Initializable [124567,124580]
to
contract_declaration [124512,131995]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [124582,124610]
    user_defined_type [124582,124610]
        identifier: StakeManagerStorageExtension [124582,124610]
to
contract_declaration [124512,131995]
at 4

New cluster:
===
insert-node
---
identifier: StakeManager [132137,132149]
to
contract_declaration [118328,149751]
at 0
------------
===
insert-node
---
identifier: StakeManager [132137,132149]
to
contract_declaration [118328,149751]
at 0

New cluster:
===
insert-node
---
is: is [132150,132152]
to
contract_declaration [118328,149751]
at 1
------------
===
insert-node
---
is: is [132150,132152]
to
contract_declaration [118328,149751]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [132224,132246]
    user_defined_type [132224,132246]
        identifier: DelegateProxyForwarder [132224,132246]
to
contract_declaration [118328,149751]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [132253,132281]
    user_defined_type [132253,132281]
        identifier: StakeManagerStorageExtension [132253,132281]
to
contract_declaration [118328,149751]
at 8

New cluster:
MOVE from contract_body [118403,149751]
------------
===
move-tree
---
function_definition [148798,148990]
    function: function [148798,148806]
    identifier: pubToAddress [148807,148819]
    parameter [148820,148836]
        type_name: bytes [148820,148825]
        memory: memory [148826,148832]
        identifier: pub [148833,148836]
    visibility: private [148838,148845]
    state_mutability [148846,148850]
        pure: pure [148846,148850]
    return_type_definition [148851,148868]
        returns: returns [148851,148858]
        parameter [148860,148867]
            type_name: address [148860,148867]
    function_body [148869,148990]
        expression_statement [148880,148924]
            call_expression [148880,148923]
                identifier: require [148880,148887]
                call_argument [148888,148904]
                    binary_expression [148888,148904]
                        member_expression: pub.length [148888,148898]
                        comparison_operator: == [148899,148901]
                        number_literal: 64 [148902,148904]
                call_argument [148906,148922]
                    string_literal [148906,148922]
                        string: "Invalid pubkey" [148906,148922]
        return_statement [148934,148983]
            return: return [148934,148940]
            type_cast_expression [148941,148982]
                primitive_type: address [148941,148948]
                call_argument [148949,148981]
                    type_cast_expression [148949,148981]
                        primitive_type: uint160 [148949,148956]
                        call_argument [148957,148980]
                            type_cast_expression [148957,148980]
                                primitive_type: uint256 [148957,148964]
                                call_argument [148965,148979]
                                    call_expression [148965,148979]
                                        identifier: keccak256 [148965,148974]
                                        call_argument [148975,148978]
                                            identifier: pub [148975,148978]
to
contract_body [118403,149751]
at 58
===
move-tree
---
function_definition [137347,137465]
    function: function [137347,137355]
    identifier: currentValidatorSetTotalStake [137356,137385]
    visibility: public [137388,137394]
    state_mutability [137395,137399]
        view: view [137395,137399]
    return_type_definition [137400,137417]
        returns: returns [137400,137407]
        parameter [137409,137416]
            type_name: uint256 [137409,137416]
    function_body [137418,137465]
        return_statement [137429,137458]
            return: return [137429,137435]
            member_expression: validatorState.amount [137436,137457]
to
contract_body [118403,149751]
at 18
===
move-tree
---
function_definition [121387,121553]
    function: function [121387,121395]
    identifier: _claimFee [121396,121405]
    parameter [121406,121418]
        type_name: address [121406,121413]
        identifier: user [121414,121418]
    parameter [121420,121434]
        type_name: uint256 [121420,121427]
        identifier: amount [121428,121434]
    visibility: private [121436,121443]
    function_body [121444,121553]
        expression_statement [121455,121503]
            assignment_expression [121455,121502]
                identifier: totalHeimdallFee [121455,121471]
                affectation_operator: = [121472,121473]
                call_expression [121474,121502]
                    member_expression: totalHeimdallFee.sub [121474,121494]
                    call_argument [121495,121501]
                        identifier: amount [121495,121501]
        expression_statement [121513,121546]
            call_expression [121513,121545]
                member_expression: logger.logClaimFee [121513,121531]
                call_argument [121532,121536]
                    identifier: user [121532,121536]
                call_argument [121538,121544]
                    identifier: amount [121538,121544]
to
contract_body [118403,149751]
at 62
===
move-tree
---
function_definition [125554,127692]
    function: function [125554,125562]
    identifier: confirmAuctionBid [125563,125580]
    parameter [125591,125610]
        type_name: uint256 [125591,125598]
        identifier: validatorId [125599,125610]
    parameter [125621,125640]
        type_name: uint256 [125621,125628]
        identifier: heimdallFee [125629,125640]
    visibility: external [125673,125681]
    modifier_invocation [125682,125698]
        identifier: onlyWhenUnlocked [125682,125698]
    function_body [125699,127692]
        variable_declaration_statement [125710,125766]
            variable_declaration [125710,125733]
                type_name: Auction [125710,125717]
                storage: storage [125718,125725]
                identifier: auction [125726,125733]
            affectation_operator: = [125734,125735]
            array_access [125736,125765]
                identifier: validatorAuction [125736,125752]
                identifier: validatorId [125753,125764]
        variable_declaration_statement [125776,125811]
            variable_declaration [125776,125795]
                type_name: address [125776,125783]
                identifier: auctionUser [125784,125795]
            affectation_operator: = [125796,125797]
            member_expression: auction.user [125798,125810]
        expression_statement [125823,125980]
            call_expression [125823,125979]
                identifier: require [125823,125830]
                call_argument [125845,125915]
                    binary_expression [125845,125915]
                        binary_expression [125845,125870]
                            member_expression: msg.sender [125845,125855]
                            comparison_operator: == [125856,125858]
                            identifier: auctionUser [125859,125870]
                        logical_operator: || [125871,125873]
                        binary_expression [125874,125915]
                            call_expression [125874,125900]
                                identifier: getValidatorId [125874,125888]
                                call_argument [125889,125899]
                                    member_expression: msg.sender [125889,125899]
                            comparison_operator: == [125901,125903]
                            identifier: validatorId [125904,125915]
                call_argument [125930,125968]
                    string_literal [125930,125968]
                        string: "Only bidder or validator can confirm" [125930,125968]
        variable_declaration_statement [125992,126029]
            variable_declaration [125992,126013]
                type_name: uint256 [125992,125999]
                identifier: _currentEpoch [126000,126013]
            affectation_operator: = [126014,126015]
            identifier: currentEpoch [126016,126028]
        expression_statement [126039,126205]
            call_expression [126039,126204]
                identifier: require [126039,126046]
                call_argument [126061,126144]
                    binary_expression [126061,126144]
                        binary_expression [126061,126127]
                            call_expression [126061,126098]
                                member_expression: _currentEpoch.sub [126061,126078]
                                call_argument [126079,126097]
                                    member_expression: auction.startEpoch [126079,126097]
                            %: % [126099,126100]
                            call_expression [126101,126127]
                                member_expression: auctionPeriod.add [126101,126118]
                                call_argument [126119,126126]
                                    identifier: dynasty [126119,126126]
                        comparison_operator: >= [126128,126130]
                        identifier: auctionPeriod [126131,126144]
                call_argument [126159,126193]
                    string_literal [126159,126193]
                        string: "Not allowed before auctionPeriod" [126159,126193]
        expression_statement [126215,126272]
            call_expression [126215,126271]
                identifier: require [126215,126222]
                call_argument [126223,126251]
                    binary_expression [126223,126251]
                        member_expression: auction.user [126223,126235]
                        comparison_operator: != [126236,126238]
                        type_cast_expression [126239,126251]
                            primitive_type: address [126239,126246]
                            call_argument [126247,126250]
                                number_literal: 0x0 [126247,126250]
                call_argument [126253,126270]
                    string_literal [126253,126270]
                        string: "Invalid auction" [126253,126270]
        variable_declaration_statement [126284,126341]
            variable_declaration [126284,126307]
                type_name: uint256 [126284,126291]
                identifier: validatorAmount [126292,126307]
            affectation_operator: = [126308,126309]
            member_expression: validators[validatorId].amount [126310,126340]
        variable_declaration_statement [126351,126392]
            variable_declaration [126351,126373]
                type_name: uint256 [126351,126358]
                identifier: perceivedStake [126359,126373]
            affectation_operator: = [126374,126375]
            identifier: validatorAmount [126376,126391]
        variable_declaration_statement [126402,126441]
            variable_declaration [126402,126423]
                type_name: uint256 [126402,126409]
                identifier: auctionAmount [126410,126423]
            affectation_operator: = [126424,126425]
            member_expression: auction.amount [126426,126440]
        variable_declaration_statement [126451,126514]
            variable_declaration [126451,126471]
                type_name: address [126451,126458]
                identifier: contractAddr [126459,126471]
            affectation_operator: = [126472,126473]
            member_expression: validators[validatorId].contractAddress [126474,126513]
        if_statement [126526,126671]
            if: if [126526,126528]
            binary_expression [126530,126558]
                identifier: contractAddr [126530,126542]
                comparison_operator: != [126543,126545]
                type_cast_expression [126546,126558]
                    primitive_type: address [126546,126553]
                    call_argument [126554,126557]
                        number_literal: 0x0 [126554,126557]
            block_statement [126560,126671]
                expression_statement [126575,126660]
                    assignment_expression [126575,126659]
                        identifier: perceivedStake [126575,126589]
                        affectation_operator: = [126590,126591]
                        call_expression [126592,126659]
                            member_expression: perceivedStake.add [126592,126610]
                            call_argument [126611,126658]
                                call_expression [126611,126658]
                                    member_expression: IValidatorShare(contractAddr).getActiveAmount [126611,126656]
        if_statement [126723,127524]
            if: if [126723,126725]
            binary_expression [126727,126808]
                member_expression: perceivedStake >= auctionAmount && validators[validatorId].deactivationEpoch [126727,126803]
                comparison_operator: == [126804,126806]
                number_literal: 0 [126807,126808]
            block_statement [126810,127076]
                expression_statement [126825,126898]
                    call_expression [126825,126897]
                        identifier: require [126825,126832]
                        call_argument [126833,126875]
                            call_expression [126833,126875]
                                member_expression: token.transfer [126833,126847]
                                call_argument [126848,126859]
                                    identifier: auctionUser [126848,126859]
                                call_argument [126861,126874]
                                    identifier: auctionAmount [126861,126874]
                        call_argument [126877,126896]
                            string_literal [126877,126896]
                                string: "Bid return failed" [126877,126896]
                expression_statement [126948,126983]
                    assignment_expression [126948,126982]
                        member_expression: auction.startEpoch [126948,126966]
                        affectation_operator: = [126967,126968]
                        identifier: _currentEpoch [126969,126982]
                expression_statement [126997,127065]
                    call_expression [126997,127064]
                        member_expression: logger.logConfirmAuction [126997,127021]
                        call_argument [127022,127033]
                            identifier: validatorId [127022,127033]
                        call_argument [127035,127046]
                            identifier: validatorId [127035,127046]
                        call_argument [127048,127063]
                            identifier: validatorAmount [127048,127063]
            else: else [127077,127081]
            block_statement [127082,127524]
                expression_statement [127122,127169]
                    call_expression [127122,127168]
                        identifier: _transferAndTopUp [127122,127139]
                        call_argument [127140,127151]
                            identifier: auctionUser [127140,127151]
                        call_argument [127153,127164]
                            identifier: heimdallFee [127153,127164]
                        call_argument [127166,127167]
                            number_literal: 0 [127166,127167]
                expression_statement [127183,127220]
                    call_expression [127183,127219]
                        identifier: _unstake [127183,127191]
                        call_argument [127192,127203]
                            identifier: validatorId [127192,127203]
                        call_argument [127205,127218]
                            identifier: _currentEpoch [127205,127218]
                variable_declaration_statement [127236,127430]
                    variable_declaration [127236,127258]
                        type_name: uint256 [127236,127243]
                        identifier: newValidatorId [127244,127258]
                    affectation_operator: = [127259,127260]
                    call_expression [127261,127429]
                        identifier: _stakeFor [127261,127270]
                        call_argument [127289,127300]
                            identifier: auctionUser [127289,127300]
                        call_argument [127319,127332]
                            identifier: auctionAmount [127319,127332]
                        call_argument [127351,127375]
                            member_expression: auction.acceptDelegation [127351,127375]
                        call_argument [127394,127414]
                            member_expression: auction.signerPubkey [127394,127414]
                expression_statement [127444,127513]
                    call_expression [127444,127512]
                        member_expression: logger.logConfirmAuction [127444,127468]
                        call_argument [127469,127483]
                            identifier: newValidatorId [127469,127483]
                        call_argument [127485,127496]
                            identifier: validatorId [127485,127496]
                        call_argument [127498,127511]
                            identifier: auctionAmount [127498,127511]
        variable_declaration_statement [127534,127574]
            variable_declaration [127534,127552]
                type_name: uint256 [127534,127541]
                identifier: startEpoch [127542,127552]
            affectation_operator: = [127553,127554]
            member_expression: auction.startEpoch [127555,127573]
        expression_statement [127584,127621]
            array_access [127584,127620]
                unary_expression [127584,127607]
                    delete: delete [127584,127590]
                    identifier: validatorAuction [127591,127607]
                identifier: validatorId [127608,127619]
        expression_statement [127631,127685]
            assignment_expression [127631,127684]
                member_expression: validatorAuction[validatorId].startEpoch [127631,127671]
                affectation_operator: = [127672,127673]
                identifier: startEpoch [127674,127684]
to
contract_body [124611,131995]
at 3
===
move-tree
---
function_definition [122438,122700]
    function: function [122438,122446]
    identifier: totalStakedFor [122447,122461]
    parameter [122462,122474]
        type_name: address [122462,122469]
        identifier: user [122470,122474]
    visibility: external [122476,122484]
    state_mutability [122485,122489]
        view: view [122485,122489]
    return_type_definition [122490,122507]
        returns: returns [122490,122497]
        parameter [122499,122506]
            type_name: uint256 [122499,122506]
    function_body [122508,122700]
        if_statement [122519,122616]
            if: if [122519,122521]
            binary_expression [122523,122579]
                call_expression [122523,122574]
                    member_expression: user == address(0x0) || NFTContract.balanceOf [122523,122568]
                    call_argument [122569,122573]
                        identifier: user [122569,122573]
                comparison_operator: == [122575,122577]
                number_literal: 0 [122578,122579]
            block_statement [122581,122616]
                return_statement [122596,122605]
                    return: return [122596,122602]
                    number_literal: 0 [122603,122604]
        return_statement [122626,122693]
            return: return [122626,122632]
            member_expression: validators[NFTContract.tokenOfOwnerByIndex(user, 0)].amount [122633,122692]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [147842,148790]
    function: function [147842,147850]
    identifier: updateTimeline [147851,147865]
    parameter [147876,147889]
        type_name: int256 [147876,147882]
        identifier: amount [147883,147889]
    parameter [147900,147918]
        type_name: int256 [147900,147906]
        identifier: stakerCount [147907,147918]
    parameter [147929,147948]
        type_name: uint256 [147929,147936]
        identifier: targetEpoch [147937,147948]
    visibility: private [147956,147963]
    function_body [147964,148790]
        if_statement [147975,148783]
            if: if [147975,147977]
            binary_expression [147979,147995]
                identifier: targetEpoch [147979,147990]
                comparison_operator: == [147991,147993]
                number_literal: 0 [147994,147995]
            block_statement [147997,148623]
                if_statement [148066,148311]
                    if: if [148066,148068]
                    binary_expression [148070,148080]
                        identifier: amount [148070,148076]
                        comparison_operator: > [148077,148078]
                        number_literal: 0 [148079,148080]
                    block_statement [148082,148183]
                        expression_statement [148101,148168]
                            assignment_expression [148101,148167]
                                member_expression: validatorState.amount [148101,148122]
                                affectation_operator: = [148123,148124]
                                call_expression [148125,148167]
                                    member_expression: validatorState.amount.add [148125,148150]
                                    call_argument [148151,148166]
                                        type_cast_expression [148151,148166]
                                            primitive_type: uint256 [148151,148158]
                                            call_argument [148159,148165]
                                                identifier: amount [148159,148165]
                    else: else [148184,148188]
                    if_statement [148189,148311]
                        if: if [148189,148191]
                        binary_expression [148193,148203]
                            identifier: amount [148193,148199]
                            comparison_operator: < [148200,148201]
                            number_literal: 0 [148202,148203]
                        block_statement [148205,148311]
                            expression_statement [148224,148296]
                                assignment_expression [148224,148295]
                                    member_expression: validatorState.amount [148224,148245]
                                    affectation_operator: = [148246,148247]
                                    call_expression [148248,148295]
                                        member_expression: validatorState.amount.sub [148248,148273]
                                        call_argument [148274,148294]
                                            type_cast_expression [148274,148294]
                                                primitive_type: uint256 [148274,148281]
                                                call_argument [148282,148293]
                                                    binary_expression [148282,148293]
                                                        identifier: amount [148282,148288]
                                                        arithmetic_operator: * [148289,148290]
                                                        unary_expression [148291,148293]
                                                            arithmetic_operator: - [148291,148292]
                                                            number_literal: 1 [148292,148293]
                if_statement [148327,148612]
                    if: if [148327,148329]
                    binary_expression [148331,148346]
                        identifier: stakerCount [148331,148342]
                        comparison_operator: > [148343,148344]
                        number_literal: 0 [148345,148346]
                    block_statement [148348,148464]
                        expression_statement [148367,148449]
                            assignment_expression [148367,148448]
                                member_expression: validatorState.stakerCount [148367,148393]
                                affectation_operator: = [148394,148395]
                                call_expression [148396,148448]
                                    member_expression: validatorState.stakerCount.add [148396,148426]
                                    call_argument [148427,148447]
                                        type_cast_expression [148427,148447]
                                            primitive_type: uint256 [148427,148434]
                                            call_argument [148435,148446]
                                                identifier: stakerCount [148435,148446]
                    else: else [148465,148469]
                    if_statement [148470,148612]
                        if: if [148470,148472]
                        binary_expression [148474,148489]
                            identifier: stakerCount [148474,148485]
                            comparison_operator: < [148486,148487]
                            number_literal: 0 [148488,148489]
                        block_statement [148491,148612]
                            expression_statement [148510,148597]
                                assignment_expression [148510,148596]
                                    member_expression: validatorState.stakerCount [148510,148536]
                                    affectation_operator: = [148537,148538]
                                    call_expression [148539,148596]
                                        member_expression: validatorState.stakerCount.sub [148539,148569]
                                        call_argument [148570,148595]
                                            type_cast_expression [148570,148595]
                                                primitive_type: uint256 [148570,148577]
                                                call_argument [148578,148594]
                                                    binary_expression [148578,148594]
                                                        identifier: stakerCount [148578,148589]
                                                        arithmetic_operator: * [148590,148591]
                                                        unary_expression [148592,148594]
                                                            arithmetic_operator: - [148592,148593]
                                                            number_literal: 1 [148593,148594]
            else: else [148624,148628]
            block_statement [148629,148783]
                expression_statement [148644,148696]
                    augmented_assignment_expression [148644,148695]
                        member_expression: validatorStateChanges[targetEpoch].amount [148644,148685]
                        affectation_operator: += [148686,148688]
                        identifier: amount [148689,148695]
                expression_statement [148710,148772]
                    augmented_assignment_expression [148710,148771]
                        member_expression: validatorStateChanges[targetEpoch].stakerCount [148710,148756]
                        affectation_operator: += [148757,148759]
                        identifier: stakerCount [148760,148771]
to
contract_body [118403,149751]
at 56
===
move-tree
---
function_definition [129319,129814]
    function: function [129319,129327]
    identifier: stakeFor [129328,129336]
    parameter [129347,129359]
        type_name: address [129347,129354]
        identifier: user [129355,129359]
    parameter [129370,129384]
        type_name: uint256 [129370,129377]
        identifier: amount [129378,129384]
    parameter [129395,129414]
        type_name: uint256 [129395,129402]
        identifier: heimdallFee [129403,129414]
    parameter [129425,129446]
        type_name: bool [129425,129429]
        identifier: acceptDelegation [129430,129446]
    parameter [129457,129482]
        type_name: bytes [129457,129462]
        memory: memory [129463,129469]
        identifier: signerPubkey [129470,129482]
    visibility: public [129490,129496]
    modifier_invocation [129497,129513]
        identifier: onlyWhenUnlocked [129497,129513]
    function_body [129514,129814]
        expression_statement [129525,129618]
            call_expression [129525,129617]
                identifier: require [129525,129532]
                call_argument [129533,129579]
                    binary_expression [129533,129579]
                        call_expression [129533,129558]
                            identifier: currentValidatorSetSize [129533,129556]
                        comparison_operator: < [129559,129560]
                        identifier: validatorThreshold [129561,129579]
                call_argument [129581,129616]
                    string_literal [129581,129616]
                        string: "Validator set Threshold exceeded!" [129581,129616]
        expression_statement [129628,129686]
            call_expression [129628,129685]
                identifier: require [129628,129635]
                call_argument [129636,129655]
                    binary_expression [129636,129655]
                        identifier: amount [129636,129642]
                        comparison_operator: > [129643,129644]
                        identifier: minDeposit [129645,129655]
                call_argument [129657,129684]
                    string_literal [129657,129684]
                        string: "min deposit limit failed!" [129657,129684]
        expression_statement [129696,129741]
            call_expression [129696,129740]
                identifier: _transferAndTopUp [129696,129713]
                call_argument [129714,129718]
                    identifier: user [129714,129718]
                call_argument [129720,129731]
                    identifier: heimdallFee [129720,129731]
                call_argument [129733,129739]
                    identifier: amount [129733,129739]
        expression_statement [129751,129807]
            call_expression [129751,129806]
                identifier: _stakeFor [129751,129760]
                call_argument [129761,129765]
                    identifier: user [129761,129765]
                call_argument [129767,129773]
                    identifier: amount [129767,129773]
                call_argument [129775,129791]
                    identifier: acceptDelegation [129775,129791]
                call_argument [129793,129805]
                    identifier: signerPubkey [129793,129805]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [132790,133178]
    function: function [132790,132798]
    identifier: migrateDelegation [132799,132816]
    parameter [132817,132840]
        type_name: uint256 [132817,132824]
        identifier: fromValidatorId [132825,132840]
    parameter [132842,132863]
        type_name: uint256 [132842,132849]
        identifier: toValidatorId [132850,132863]
    parameter [132865,132879]
        type_name: uint256 [132865,132872]
        identifier: amount [132873,132879]
    visibility: public [132881,132887]
    function_body [132888,133178]
        expression_statement [132899,132970]
            call_expression [132899,132969]
                identifier: require [132899,132906]
                call_argument [132907,132947]
                    binary_expression [132907,132947]
                        binary_expression [132907,132926]
                            identifier: fromValidatorId [132907,132922]
                            comparison_operator: < [132923,132924]
                            number_literal: 8 [132925,132926]
                        logical_operator: && [132927,132929]
                        binary_expression [132930,132947]
                            identifier: toValidatorId [132930,132943]
                            comparison_operator: > [132944,132945]
                            number_literal: 7 [132946,132947]
                call_argument [132949,132968]
                    string_literal [132949,132968]
                        string: "Invalid migration" [132949,132968]
        expression_statement [132980,133072]
            call_expression [132980,133071]
                member_expression: IValidatorShare(validators[fromValidatorId].contractAddress).migrateOut [132980,133051]
                call_argument [133052,133062]
                    member_expression: msg.sender [133052,133062]
                call_argument [133064,133070]
                    identifier: amount [133064,133070]
        expression_statement [133082,133171]
            call_expression [133082,133170]
                member_expression: IValidatorShare(validators[toValidatorId].contractAddress).migrateIn [133082,133150]
                call_argument [133151,133161]
                    member_expression: msg.sender [133151,133161]
                call_argument [133163,133169]
                    identifier: amount [133163,133169]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [122708,125546]
    function: function [122708,122716]
    identifier: startAuction [122717,122729]
    parameter [122740,122759]
        type_name: uint256 [122740,122747]
        identifier: validatorId [122748,122759]
    parameter [122770,122784]
        type_name: uint256 [122770,122777]
        identifier: amount [122778,122784]
    parameter [122795,122817]
        type_name: bool [122795,122799]
        identifier: _acceptDelegation [122800,122817]
    parameter [122828,122856]
        type_name: bytes [122828,122833]
        calldata: calldata [122834,122842]
        identifier: _signerPubkey [122843,122856]
    visibility: external [122864,122872]
    modifier_invocation [122873,122889]
        identifier: onlyWhenUnlocked [122873,122889]
    function_body [122890,125546]
        variable_declaration_statement [122901,122965]
            variable_declaration [122901,122931]
                type_name: uint256 [122901,122908]
                identifier: currentValidatorAmount [122909,122931]
            affectation_operator: = [122932,122933]
            member_expression: validators[validatorId].amount [122934,122964]
        expression_statement [122977,123137]
            call_expression [122977,123136]
                identifier: require [122977,122984]
                call_argument [122999,123076]
                    binary_expression [122999,123076]
                        binary_expression [122999,123045]
                            member_expression: validators[validatorId].deactivationEpoch [122999,123040]
                            comparison_operator: == [123041,123043]
                            number_literal: 0 [123044,123045]
                        logical_operator: && [123046,123048]
                        binary_expression [123049,123076]
                            identifier: currentValidatorAmount [123049,123071]
                            comparison_operator: != [123072,123074]
                            number_literal: 0 [123075,123076]
                call_argument [123091,123125]
                    string_literal [123091,123125]
                        string: "Invalid validator for an auction" [123091,123125]
        variable_declaration_statement [123147,123205]
            variable_declaration [123147,123172]
                type_name: uint256 [123147,123154]
                identifier: senderValidatorId [123155,123172]
            affectation_operator: = [123173,123174]
            array_access [123175,123204]
                identifier: signerToValidator [123175,123192]
                member_expression: msg.sender [123193,123203]
        expression_statement [123269,123475]
            call_expression [123269,123474]
                identifier: require [123269,123276]
                call_argument [123291,123426]
                    binary_expression [123291,123426]
                        binary_expression [123291,123329]
                            call_expression [123291,123324]
                                member_expression: NFTContract.balanceOf [123291,123312]
                                call_argument [123313,123323]
                                    member_expression: msg.sender [123313,123323]
                            comparison_operator: == [123325,123327]
                            number_literal: 0 [123328,123329]
                        logical_operator: && [123330,123332]
                        binary_expression [123383,123426]
                            identifier: senderValidatorId [123383,123400]
                            comparison_operator: != [123401,123403]
                            identifier: INCORRECT_VALIDATOR_ID [123404,123426]
                call_argument [123441,123463]
                    string_literal [123441,123463]
                        string: "Already used address" [123441,123463]
        variable_declaration_statement [123487,123524]
            variable_declaration [123487,123508]
                type_name: uint256 [123487,123494]
                identifier: _currentEpoch [123495,123508]
            affectation_operator: = [123509,123510]
            identifier: currentEpoch [123511,123523]
        variable_declaration_statement [123534,123585]
            variable_declaration [123534,123562]
                type_name: uint256 [123534,123541]
                identifier: _replacementCoolDown [123542,123562]
            affectation_operator: = [123563,123564]
            identifier: replacementCoolDown [123565,123584]
        expression_statement [123672,123767]
            call_expression [123672,123766]
                identifier: require [123672,123679]
                call_argument [123680,123746]
                    binary_expression [123680,123746]
                        binary_expression [123680,123705]
                            identifier: _replacementCoolDown [123680,123700]
                            comparison_operator: == [123701,123703]
                            number_literal: 0 [123704,123705]
                        logical_operator: || [123706,123708]
                        binary_expression [123709,123746]
                            identifier: _replacementCoolDown [123709,123729]
                            comparison_operator: <= [123730,123732]
                            identifier: _currentEpoch [123733,123746]
                call_argument [123748,123765]
                    string_literal [123748,123765]
                        string: "Cooldown period" [123748,123765]
        expression_statement [124250,124428]
            call_expression [124250,124427]
                identifier: require [124250,124257]
                call_argument [124272,124377]
                    binary_expression [124272,124377]
                        parenthesized_expression [124272,124361]
                            binary_expression [124273,124360]
                                call_expression [124273,124331]
                                    member_expression: _currentEpoch.sub [124273,124290]
                                    call_argument [124291,124330]
                                        member_expression: validators[validatorId].activationEpoch [124291,124330]
                                %: % [124332,124333]
                                call_expression [124334,124360]
                                    member_expression: dynasty.add [124334,124345]
                                    call_argument [124346,124359]
                                        identifier: auctionPeriod [124346,124359]
                        comparison_operator: < [124362,124363]
                        identifier: auctionPeriod [124364,124377]
                call_argument [124392,124416]
                    string_literal [124392,124416]
                        string: "Invalid auction period" [124392,124416]
        variable_declaration_statement [124440,124488]
            variable_declaration [124440,124462]
                type_name: uint256 [124440,124447]
                identifier: perceivedStake [124448,124462]
            affectation_operator: = [124463,124464]
            identifier: currentValidatorAmount [124465,124487]
        variable_declaration_statement [124498,124558]
            variable_declaration [124498,124515]
                type_name: address [124498,124505]
                identifier: _contract [124506,124515]
            affectation_operator: = [124516,124517]
            member_expression: validators[validatorId].contractAddress [124518,124557]
        if_statement [124570,124709]
            if: if [124570,124572]
            binary_expression [124574,124599]
                identifier: _contract [124574,124583]
                comparison_operator: != [124584,124586]
                type_cast_expression [124587,124599]
                    primitive_type: address [124587,124594]
                    call_argument [124595,124598]
                        number_literal: 0x0 [124595,124598]
            block_statement [124601,124709]
                expression_statement [124616,124698]
                    assignment_expression [124616,124697]
                        identifier: perceivedStake [124616,124630]
                        affectation_operator: = [124631,124632]
                        call_expression [124633,124697]
                            member_expression: perceivedStake.add [124633,124651]
                            call_argument [124652,124696]
                                call_expression [124652,124696]
                                    member_expression: IValidatorShare(_contract).getActiveAmount [124652,124694]
        variable_declaration_statement [124721,124777]
            variable_declaration [124721,124744]
                type_name: Auction [124721,124728]
                storage: storage [124729,124736]
                identifier: auction [124737,124744]
            affectation_operator: = [124745,124746]
            array_access [124747,124776]
                identifier: validatorAuction [124747,124763]
                identifier: validatorId [124764,124775]
        variable_declaration_statement [124787,124833]
            variable_declaration [124787,124815]
                type_name: uint256 [124787,124794]
                identifier: currentAuctionAmount [124795,124815]
            affectation_operator: = [124816,124817]
            member_expression: auction.amount [124818,124832]
        expression_statement [124845,124909]
            assignment_expression [124845,124908]
                identifier: perceivedStake [124845,124859]
                affectation_operator: = [124860,124861]
                call_expression [124862,124908]
                    member_expression: Math.max [124862,124870]
                    call_argument [124871,124885]
                        identifier: perceivedStake [124871,124885]
                    call_argument [124887,124907]
                        identifier: currentAuctionAmount [124887,124907]
        expression_statement [124921,124973]
            call_expression [124921,124972]
                identifier: require [124921,124928]
                call_argument [124929,124952]
                    binary_expression [124929,124952]
                        identifier: perceivedStake [124929,124943]
                        comparison_operator: < [124944,124945]
                        identifier: amount [124946,124952]
                call_argument [124954,124971]
                    string_literal [124954,124971]
                        string: "Must bid higher" [124954,124971]
        expression_statement [124983,125072]
            call_expression [124983,125071]
                identifier: require [124983,124990]
                call_argument [124991,125044]
                    call_expression [124991,125044]
                        member_expression: token.transferFrom [124991,125009]
                        call_argument [125010,125020]
                            member_expression: msg.sender [125010,125020]
                        call_argument [125022,125035]
                            type_cast_expression [125022,125035]
                                primitive_type: address [125022,125029]
                                call_argument [125030,125034]
                                    identifier: this [125030,125034]
                        call_argument [125037,125043]
                            identifier: amount [125037,125043]
                call_argument [125046,125070]
                    string_literal [125046,125070]
                        string: "Transfer amount failed" [125046,125070]
        if_statement [125116,125254]
            if: if [125116,125118]
            binary_expression [125120,125145]
                identifier: currentAuctionAmount [125120,125140]
                comparison_operator: != [125141,125143]
                number_literal: 0 [125144,125145]
            block_statement [125147,125254]
                expression_statement [125162,125243]
                    call_expression [125162,125242]
                        identifier: require [125162,125169]
                        call_argument [125170,125220]
                            call_expression [125170,125220]
                                member_expression: token.transfer [125170,125184]
                                call_argument [125185,125197]
                                    member_expression: auction.user [125185,125197]
                                call_argument [125199,125219]
                                    identifier: currentAuctionAmount [125199,125219]
                        call_argument [125222,125241]
                            string_literal [125222,125241]
                                string: "Bid return failed" [125222,125241]
        expression_statement [125297,125321]
            assignment_expression [125297,125320]
                member_expression: auction.amount [125297,125311]
                affectation_operator: = [125312,125313]
                identifier: amount [125314,125320]
        expression_statement [125331,125357]
            assignment_expression [125331,125356]
                member_expression: auction.user [125331,125343]
                affectation_operator: = [125344,125345]
                member_expression: msg.sender [125346,125356]
        expression_statement [125367,125412]
            assignment_expression [125367,125411]
                member_expression: auction.acceptDelegation [125367,125391]
                affectation_operator: = [125392,125393]
                identifier: _acceptDelegation [125394,125411]
        expression_statement [125422,125459]
            assignment_expression [125422,125458]
                member_expression: auction.signerPubkey [125422,125442]
                affectation_operator: = [125443,125444]
                identifier: _signerPubkey [125445,125458]
        expression_statement [125471,125539]
            call_expression [125471,125538]
                member_expression: logger.logStartAuction [125471,125493]
                call_argument [125494,125505]
                    identifier: validatorId [125494,125505]
                call_argument [125507,125529]
                    identifier: currentValidatorAmount [125507,125529]
                call_argument [125531,125537]
                    identifier: amount [125531,125537]
to
contract_body [124611,131995]
at 2
===
move-tree
---
function_definition [137473,137619]
    function: function [137473,137481]
    identifier: getValidatorContract [137482,137502]
    parameter [137503,137522]
        type_name: uint256 [137503,137510]
        identifier: validatorId [137511,137522]
    visibility: public [137524,137530]
    state_mutability [137531,137535]
        view: view [137531,137535]
    return_type_definition [137536,137553]
        returns: returns [137536,137543]
        parameter [137545,137552]
            type_name: address [137545,137552]
    function_body [137554,137619]
        return_statement [137565,137612]
            return: return [137565,137571]
            member_expression: validators[validatorId].contractAddress [137572,137611]
to
contract_body [118403,149751]
at 19
===
move-tree
---
function_definition [120213,120325]
    function: function [120213,120221]
    identifier: setDelegationEnabled [120222,120242]
    parameter [120243,120255]
        type_name: bool [120243,120247]
        identifier: enabled [120248,120255]
    visibility: public [120257,120263]
    modifier_invocation [120264,120278]
        identifier: onlyGovernance [120264,120278]
    function_body [120279,120325]
        expression_statement [120290,120318]
            assignment_expression [120290,120317]
                identifier: delegationEnabled [120290,120307]
                affectation_operator: = [120308,120309]
                identifier: enabled [120310,120317]
to
contract_body [118403,149751]
at 19
===
move-tree
---
function_definition [133186,133320]
    function: function [133186,133194]
    identifier: getValidatorId [133195,133209]
    parameter [133210,133222]
        type_name: address [133210,133217]
        identifier: user [133218,133222]
    visibility: public [133224,133230]
    state_mutability [133231,133235]
        view: view [133231,133235]
    return_type_definition [133236,133253]
        returns: returns [133236,133243]
        parameter [133245,133252]
            type_name: uint256 [133245,133252]
    function_body [133254,133320]
        return_statement [133265,133313]
            return: return [133265,133271]
            call_expression [133272,133312]
                member_expression: NFTContract.tokenOfOwnerByIndex [133272,133303]
                call_argument [133304,133308]
                    identifier: user [133304,133308]
                call_argument [133310,133311]
                    number_literal: 0 [133310,133311]
to
contract_body [118403,149751]
at 16
===
move-tree
---
function_definition [134734,135109]
    function: function [134734,134742]
    identifier: updateValidatorState [134743,134763]
    parameter [134764,134783]
        type_name: uint256 [134764,134771]
        identifier: validatorId [134772,134783]
    parameter [134785,134798]
        type_name: int256 [134785,134791]
        identifier: amount [134792,134798]
    visibility: public [134800,134806]
    function_body [134807,135109]
        if_statement [134818,134960]
            if: if [134818,134820]
            binary_expression [134822,134832]
                identifier: amount [134822,134828]
                comparison_operator: > [134829,134830]
                number_literal: 0 [134831,134832]
            block_statement [134834,134960]
                expression_statement [134896,134949]
                    call_expression [134896,134948]
                        identifier: require [134896,134903]
                        call_argument [134904,134921]
                            identifier: delegationEnabled [134904,134921]
                        call_argument [134923,134947]
                            string_literal [134923,134947]
                                string: "Delegation is disabled" [134923,134947]
        expression_statement [134972,135063]
            call_expression [134972,135062]
                identifier: require [134972,134979]
                call_argument [134980,135033]
                    binary_expression [134980,135033]
                        member_expression: validators[validatorId].contractAddress [134980,135019]
                        comparison_operator: == [135020,135022]
                        member_expression: msg.sender [135023,135033]
                call_argument [135035,135061]
                    string_literal [135035,135061]
                        string: "Invalid contract address" [135035,135061]
        expression_statement [135073,135102]
            call_expression [135073,135101]
                identifier: updateTimeline [135073,135087]
                call_argument [135088,135094]
                    identifier: amount [135088,135094]
                call_argument [135096,135097]
                    number_literal: 0 [135096,135097]
                call_argument [135099,135100]
                    number_literal: 0 [135099,135100]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [149334,149748]
    function: function [149334,149342]
    identifier: updateValidatorDelegation [149343,149368]
    parameter [149369,149384]
        type_name: bool [149369,149373]
        identifier: delegation [149374,149384]
    visibility: external [149386,149394]
    function_body [149395,149748]
        variable_declaration_statement [149406,149458]
            variable_declaration [149406,149425]
                type_name: uint256 [149406,149413]
                identifier: validatorId [149414,149425]
            affectation_operator: = [149426,149427]
            array_access [149428,149457]
                identifier: signerToValidator [149428,149445]
                member_expression: msg.sender [149446,149456]
        expression_statement [149468,149521]
            call_expression [149468,149520]
                identifier: require [149468,149475]
                call_argument [149476,149500]
                    call_expression [149476,149500]
                        identifier: isValidator [149476,149487]
                        call_argument [149488,149499]
                            identifier: validatorId [149488,149499]
                call_argument [149502,149519]
                    string_literal [149502,149519]
                        string: "not a validator" [149502,149519]
        variable_declaration_statement [149533,149596]
            variable_declaration [149533,149553]
                type_name: address [149533,149540]
                identifier: contractAddr [149541,149553]
            affectation_operator: = [149554,149555]
            member_expression: validators[validatorId].contractAddress [149556,149595]
        expression_statement [149606,149670]
            call_expression [149606,149669]
                identifier: require [149606,149613]
                call_argument [149614,149642]
                    binary_expression [149614,149642]
                        identifier: contractAddr [149614,149626]
                        comparison_operator: != [149627,149629]
                        type_cast_expression [149630,149642]
                            primitive_type: address [149630,149637]
                            call_argument [149638,149641]
                                number_literal: 0x0 [149638,149641]
                call_argument [149644,149668]
                    string_literal [149644,149668]
                        string: "delegation not enabled" [149644,149668]
        expression_statement [149682,149741]
            call_expression [149682,149740]
                member_expression: IValidatorShare(contractAddr).updateDelegation [149682,149728]
                call_argument [149729,149739]
                    identifier: delegation [149729,149739]
to
contract_body [118403,149751]
at 57
===
move-tree
---
function_definition [129822,130759]
    function: function [129822,129830]
    identifier: unstakeClaim [129831,129843]
    parameter [129844,129863]
        type_name: uint256 [129844,129851]
        identifier: validatorId [129852,129863]
    visibility: public [129865,129871]
    modifier_invocation [129872,129895]
        identifier: onlyStaker [129872,129882]
        call_argument [129883,129894]
            identifier: validatorId [129883,129894]
    function_body [129896,130759]
        variable_declaration_statement [129907,129977]
            variable_declaration [129907,129932]
                type_name: uint256 [129907,129914]
                identifier: deactivationEpoch [129915,129932]
            affectation_operator: = [129933,129934]
            member_expression: validators[validatorId].deactivationEpoch [129935,129976]
        expression_statement [130048,130249]
            call_expression [130048,130248]
                identifier: require [130048,130055]
                call_argument [130070,130237]
                    binary_expression [130070,130237]
                        member_expression: deactivationEpoch > 0 &&                 deactivationEpoch.add(WITHDRAWAL_DELAY) <= currentEpoch &&                 validators[validatorId].status [130070,130218]
                        comparison_operator: != [130219,130221]
                        member_expression: Status.Unstaked [130222,130237]
        variable_declaration_statement [130261,130309]
            variable_declaration [130261,130275]
                type_name: uint256 [130261,130268]
                identifier: amount [130269,130275]
            affectation_operator: = [130276,130277]
            member_expression: validators[validatorId].amount [130278,130308]
        variable_declaration_statement [130319,130368]
            variable_declaration [130319,130341]
                type_name: uint256 [130319,130326]
                identifier: newTotalStaked [130327,130341]
            affectation_operator: = [130342,130343]
            call_expression [130344,130367]
                member_expression: totalStaked.sub [130344,130359]
                call_argument [130360,130366]
                    identifier: amount [130360,130366]
        expression_statement [130378,130407]
            assignment_expression [130378,130406]
                identifier: totalStaked [130378,130389]
                affectation_operator: = [130390,130391]
                identifier: newTotalStaked [130392,130406]
        expression_statement [130419,130449]
            call_expression [130419,130448]
                member_expression: NFTContract.burn [130419,130435]
                call_argument [130436,130447]
                    identifier: validatorId [130436,130447]
        expression_statement [130461,130536]
            assignment_expression [130461,130535]
                array_access [130461,130510]
                    identifier: signerToValidator [130461,130478]
                    member_expression: validators[validatorId].signer [130479,130509]
                affectation_operator: = [130511,130512]
                identifier: INCORRECT_VALIDATOR_ID [130513,130535]
        expression_statement [130546,130595]
            assignment_expression [130546,130594]
                member_expression: validators[validatorId].status [130546,130576]
                affectation_operator: = [130577,130578]
                member_expression: Status.Unstaked [130579,130594]
        expression_statement [130605,130674]
            call_expression [130605,130673]
                identifier: require [130605,130612]
                call_argument [130613,130647]
                    call_expression [130613,130647]
                        member_expression: token.transfer [130613,130627]
                        call_argument [130628,130638]
                            member_expression: msg.sender [130628,130638]
                        call_argument [130640,130646]
                            identifier: amount [130640,130646]
                call_argument [130649,130672]
                    string_literal [130649,130672]
                        string: "Transfer stake failed" [130649,130672]
        expression_statement [130684,130752]
            call_expression [130684,130751]
                member_expression: logger.logUnstaked [130684,130702]
                call_argument [130703,130713]
                    member_expression: msg.sender [130703,130713]
                call_argument [130715,130726]
                    identifier: validatorId [130715,130726]
                call_argument [130728,130734]
                    identifier: amount [130728,130734]
                call_argument [130736,130750]
                    identifier: newTotalStaked [130736,130750]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [128572,128983]
    function: function [128572,128580]
    identifier: transferFunds [128581,128594]
    parameter [128605,128624]
        type_name: uint256 [128605,128612]
        identifier: validatorId [128613,128624]
    parameter [128635,128649]
        type_name: uint256 [128635,128642]
        identifier: amount [128643,128649]
    parameter [128660,128677]
        type_name: address [128660,128667]
        identifier: delegator [128668,128677]
    visibility: external [128685,128693]
    return_type_definition [128694,128708]
        returns: returns [128694,128701]
        parameter [128703,128707]
            type_name: bool [128703,128707]
    function_body [128709,128983]
        expression_statement [128720,128925]
            call_expression [128720,128924]
                identifier: require [128720,128727]
                call_argument [128742,128872]
                    binary_expression [128742,128872]
                        call_expression [128742,128858]
                            member_expression: validators[validatorId].contractAddress == msg.sender ||             Registry(registry).getSlashingManagerAddress [128742,128856]
                        comparison_operator: == [128859,128861]
                        member_expression: msg.sender [128862,128872]
                call_argument [128887,128913]
                    string_literal [128887,128913]
                        string: "Invalid contract address" [128887,128913]
        return_statement [128935,128976]
            return: return [128935,128941]
            call_expression [128942,128975]
                member_expression: token.transfer [128942,128956]
                call_argument [128957,128966]
                    identifier: delegator [128957,128966]
                call_argument [128968,128974]
                    identifier: amount [128968,128974]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [131971,132347]
    function: function [131971,131979]
    identifier: _liquidateRewards [131980,131997]
    parameter [131998,132017]
        type_name: uint256 [131998,132005]
        identifier: validatorId [132006,132017]
    parameter [132019,132040]
        type_name: address [132019,132026]
        identifier: validatorUser [132027,132040]
    parameter [132042,132056]
        type_name: uint256 [132042,132049]
        identifier: reward [132050,132056]
    visibility: private [132058,132065]
    function_body [132066,132347]
        expression_statement [132077,132137]
            assignment_expression [132077,132136]
                identifier: totalRewardsLiquidated [132077,132099]
                affectation_operator: = [132100,132101]
                call_expression [132102,132136]
                    member_expression: totalRewardsLiquidated.add [132102,132128]
                    call_argument [132129,132135]
                        identifier: reward [132129,132135]
        expression_statement [132147,132182]
            assignment_expression [132147,132181]
                member_expression: validators[validatorId].reward [132147,132177]
                affectation_operator: = [132178,132179]
                number_literal: 0 [132180,132181]
        expression_statement [132192,132262]
            call_expression [132192,132261]
                identifier: require [132192,132199]
                call_argument [132200,132237]
                    call_expression [132200,132237]
                        member_expression: token.transfer [132200,132214]
                        call_argument [132215,132228]
                            identifier: validatorUser [132215,132228]
                        call_argument [132230,132236]
                            identifier: reward [132230,132236]
                call_argument [132239,132260]
                    string_literal [132239,132260]
                        string: "Insufficent rewards" [132239,132260]
        expression_statement [132272,132340]
            call_expression [132272,132339]
                member_expression: logger.logClaimRewards [132272,132294]
                call_argument [132295,132306]
                    identifier: validatorId [132295,132306]
                call_argument [132308,132314]
                    identifier: reward [132308,132314]
                call_argument [132316,132338]
                    identifier: totalRewardsLiquidated [132316,132338]
to
contract_body [118403,149751]
at 62
===
move-tree
---
function_definition [137222,137339]
    function: function [137222,137230]
    identifier: currentValidatorSetSize [137231,137254]
    visibility: public [137257,137263]
    state_mutability [137264,137268]
        view: view [137264,137268]
    return_type_definition [137269,137286]
        returns: returns [137269,137276]
        parameter [137278,137285]
            type_name: uint256 [137278,137285]
    function_body [137287,137339]
        return_statement [137298,137332]
            return: return [137298,137304]
            member_expression: validatorState.stakerCount [137305,137331]
to
contract_body [118403,149751]
at 17
===
move-tree
---
function_definition [127700,128258]
    function: function [127700,127708]
    identifier: unstake [127709,127716]
    parameter [127717,127736]
        type_name: uint256 [127717,127724]
        identifier: validatorId [127725,127736]
    visibility: external [127738,127746]
    modifier_invocation [127747,127770]
        identifier: onlyStaker [127747,127757]
        call_argument [127758,127769]
            identifier: validatorId [127758,127769]
    function_body [127771,128258]
        expression_statement [127782,127864]
            call_expression [127782,127863]
                identifier: require [127782,127789]
                call_argument [127790,127831]
                    binary_expression [127790,127831]
                        member_expression: validatorAuction[validatorId].amount [127790,127826]
                        comparison_operator: == [127827,127829]
                        number_literal: 0 [127830,127831]
                call_argument [127833,127862]
                    string_literal [127833,127862]
                        string: "Wait for auction completion" [127833,127862]
        expression_statement [127874,128139]
            call_expression [127874,128138]
                identifier: require [127874,127881]
                call_argument [127896,128127]
                    binary_expression [127896,128127]
                        binary_expression [127896,128006]
                            member_expression: validators[validatorId].activationEpoch > 0 &&                 validators[validatorId].deactivationEpoch [127896,128001]
                            comparison_operator: == [128002,128004]
                            number_literal: 0 [128005,128006]
                        logical_operator: && [128007,128009]
                        parenthesized_expression [128027,128127]
                            binary_expression [128028,128126]
                                member_expression: validators[validatorId].status == Status.Active || validators[validatorId].status [128028,128109]
                                comparison_operator: == [128110,128112]
                                member_expression: Status.Locked [128113,128126]
        variable_declaration_statement [128151,128191]
            variable_declaration [128151,128168]
                type_name: uint256 [128151,128158]
                identifier: exitEpoch [128159,128168]
            affectation_operator: = [128169,128170]
            call_expression [128171,128190]
                member_expression: currentEpoch.add [128171,128187]
                call_argument [128188,128189]
                    number_literal: 1 [128188,128189]
        expression_statement [128218,128251]
            call_expression [128218,128250]
                identifier: _unstake [128218,128226]
                call_argument [128227,128238]
                    identifier: validatorId [128227,128238]
                call_argument [128240,128249]
                    identifier: exitEpoch [128240,128249]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [121561,122174]
    function: function [121561,121569]
    identifier: claimFee [121570,121578]
    parameter [121589,121611]
        type_name: uint256 [121589,121596]
        identifier: accumFeeAmount [121597,121611]
    parameter [121622,121635]
        type_name: uint256 [121622,121629]
        identifier: index [121630,121635]
    parameter [121646,121664]
        type_name: bytes [121646,121651]
        memory: memory [121652,121658]
        identifier: proof [121659,121664]
    visibility: public [121672,121678]
    function_body [121679,122174]
        expression_statement [121764,121927]
            call_expression [121764,121926]
                identifier: require [121764,121771]
                call_argument [121786,121883]
                    call_expression [121786,121883]
                        member_expression: keccak256(abi.encode(msg.sender, accumFeeAmount)).checkMembership [121786,121851]
                        call_argument [121852,121857]
                            identifier: index [121852,121857]
                        call_argument [121859,121875]
                            identifier: accountStateRoot [121859,121875]
                        call_argument [121877,121882]
                            identifier: proof [121877,121882]
                call_argument [121898,121915]
                    string_literal [121898,121915]
                        string: "Wrong acc proof" [121898,121915]
        variable_declaration_statement [121937,122006]
            variable_declaration [121937,121959]
                type_name: uint256 [121937,121944]
                identifier: withdrawAmount [121945,121959]
            affectation_operator: = [121960,121961]
            call_expression [121962,122005]
                member_expression: accumFeeAmount.sub [121962,121980]
                call_argument [121981,122004]
                    array_access [121981,122004]
                        identifier: userFeeExit [121981,121992]
                        member_expression: msg.sender [121993,122003]
        expression_statement [122016,122054]
            call_expression [122016,122053]
                identifier: _claimFee [122016,122025]
                call_argument [122026,122036]
                    member_expression: msg.sender [122026,122036]
                call_argument [122038,122052]
                    identifier: withdrawAmount [122038,122052]
        expression_statement [122064,122105]
            assignment_expression [122064,122104]
                array_access [122064,122087]
                    identifier: userFeeExit [122064,122075]
                    member_expression: msg.sender [122076,122086]
                affectation_operator: = [122088,122089]
                identifier: accumFeeAmount [122090,122104]
        expression_statement [122115,122167]
            call_expression [122115,122166]
                identifier: require [122115,122122]
                call_argument [122123,122165]
                    call_expression [122123,122165]
                        member_expression: token.transfer [122123,122137]
                        call_argument [122138,122148]
                            member_expression: msg.sender [122138,122148]
                        call_argument [122150,122164]
                            identifier: withdrawAmount [122150,122164]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [120971,121379]
    function: function [120971,120979]
    identifier: _transferAndTopUp [120980,120997]
    parameter [121008,121020]
        type_name: address [121008,121015]
        identifier: user [121016,121020]
    parameter [121031,121042]
        type_name: uint256 [121031,121038]
        identifier: fee [121039,121042]
    parameter [121053,121077]
        type_name: uint256 [121053,121060]
        identifier: additionalAmount [121061,121077]
    visibility: private [121085,121092]
    function_body [121093,121379]
        expression_statement [121104,121162]
            call_expression [121104,121161]
                identifier: require [121104,121111]
                call_argument [121112,121133]
                    binary_expression [121112,121133]
                        identifier: fee [121112,121115]
                        comparison_operator: >= [121116,121118]
                        identifier: minHeimdallFee [121119,121133]
                call_argument [121135,121160]
                    string_literal [121135,121160]
                        string: "Not enough heimdall fee" [121135,121160]
        expression_statement [121172,121277]
            call_expression [121172,121276]
                identifier: require [121172,121179]
                call_argument [121180,121252]
                    call_expression [121180,121252]
                        member_expression: token.transferFrom [121180,121198]
                        call_argument [121199,121209]
                            member_expression: msg.sender [121199,121209]
                        call_argument [121211,121224]
                            type_cast_expression [121211,121224]
                                primitive_type: address [121211,121218]
                                call_argument [121219,121223]
                                    identifier: this [121219,121223]
                        call_argument [121226,121251]
                            call_expression [121226,121251]
                                member_expression: fee.add [121226,121233]
                                call_argument [121234,121250]
                                    identifier: additionalAmount [121234,121250]
                call_argument [121254,121275]
                    string_literal [121254,121275]
                        string: "Fee transfer failed" [121254,121275]
        expression_statement [121287,121332]
            assignment_expression [121287,121331]
                identifier: totalHeimdallFee [121287,121303]
                affectation_operator: = [121304,121305]
                call_expression [121306,121331]
                    member_expression: totalHeimdallFee.add [121306,121326]
                    call_argument [121327,121330]
                        identifier: fee [121327,121330]
        expression_statement [121342,121372]
            call_expression [121342,121371]
                member_expression: logger.logTopUpFee [121342,121360]
                call_argument [121361,121365]
                    identifier: user [121361,121365]
                call_argument [121367,121370]
                    identifier: fee [121367,121370]
to
contract_body [118403,149751]
at 62
===
move-tree
---
function_definition [148998,149326]
    function: function [148998,149006]
    identifier: reinitialize [149007,149019]
    parameter [149030,149050]
        type_name: address [149030,149037]
        identifier: _NFTContract [149038,149050]
    parameter [149061,149083]
        type_name: address [149061,149068]
        identifier: _stakingLogger [149069,149083]
    parameter [149094,149124]
        type_name: address [149094,149101]
        identifier: _validatorShareFactory [149102,149124]
    visibility: external [149132,149140]
    modifier_invocation [149141,149155]
        identifier: onlyGovernance [149141,149155]
    function_body [149156,149326]
        expression_statement [149167,149206]
            assignment_expression [149167,149205]
                identifier: NFTContract [149167,149178]
                affectation_operator: = [149179,149180]
                call_expression [149181,149205]
                    identifier: StakingNFT [149181,149191]
                    call_argument [149192,149204]
                        identifier: _NFTContract [149192,149204]
        expression_statement [149216,149253]
            assignment_expression [149216,149252]
                identifier: logger [149216,149222]
                affectation_operator: = [149223,149224]
                call_expression [149225,149252]
                    identifier: StakingInfo [149225,149236]
                    call_argument [149237,149251]
                        identifier: _stakingLogger [149237,149251]
        expression_statement [149263,149319]
            assignment_expression [149263,149318]
                identifier: factory [149263,149270]
                affectation_operator: = [149271,149272]
                call_expression [149273,149318]
                    identifier: ValidatorShareFactory [149273,149294]
                    call_argument [149295,149317]
                        identifier: _validatorShareFactory [149295,149317]
to
contract_body [118403,149751]
at 49
===
move-tree
---
function_definition [128991,129311]
    function: function [128991,128999]
    identifier: delegationDeposit [129000,129017]
    parameter [129028,129047]
        type_name: uint256 [129028,129035]
        identifier: validatorId [129036,129047]
    parameter [129058,129072]
        type_name: uint256 [129058,129065]
        identifier: amount [129066,129072]
    parameter [129083,129100]
        type_name: address [129083,129090]
        identifier: delegator [129091,129100]
    visibility: external [129108,129116]
    return_type_definition [129117,129131]
        returns: returns [129117,129124]
        parameter [129126,129130]
            type_name: bool [129126,129130]
    function_body [129132,129311]
        expression_statement [129143,129234]
            call_expression [129143,129233]
                identifier: require [129143,129150]
                call_argument [129151,129204]
                    binary_expression [129151,129204]
                        member_expression: validators[validatorId].contractAddress [129151,129190]
                        comparison_operator: == [129191,129193]
                        member_expression: msg.sender [129194,129204]
                call_argument [129206,129232]
                    string_literal [129206,129232]
                        string: "Invalid contract address" [129206,129232]
        return_statement [129244,129304]
            return: return [129244,129250]
            call_expression [129251,129303]
                member_expression: token.transferFrom [129251,129269]
                call_argument [129270,129279]
                    identifier: delegator [129270,129279]
                call_argument [129281,129294]
                    type_cast_expression [129281,129294]
                        primitive_type: address [129281,129288]
                        call_argument [129289,129293]
                            identifier: this [129289,129293]
                call_argument [129296,129302]
                    identifier: amount [129296,129302]
to
contract_body [118403,149751]
at 49
===
move-tree
---
state_variable_declaration [118585,118646]
    type_name: uint256 [118585,118592]
    visibility: private [118593,118600]
    constant: constant [118601,118609]
    identifier: INCORRECT_VALIDATOR_ID [118610,118632]
    affectation_operator: = [118633,118634]
    binary_expression [118635,118645]
        binary_expression [118635,118641]
            number_literal: 2 [118635,118636]
            **: ** [118636,118638]
            number_literal: 256 [118638,118641]
        arithmetic_operator: - [118642,118643]
        number_literal: 1 [118644,118645]
to
contract_body [115885,118197]
at 8
===
move-tree
---
function_definition [130803,131963]
    function: function [130803,130811]
    identifier: restake [130812,130819]
    parameter [130830,130849]
        type_name: uint256 [130830,130837]
        identifier: validatorId [130838,130849]
    parameter [130860,130874]
        type_name: uint256 [130860,130867]
        identifier: amount [130868,130874]
    parameter [130885,130902]
        type_name: bool [130885,130889]
        identifier: stakeRewards [130890,130902]
    visibility: public [130910,130916]
    modifier_invocation [130917,130933]
        identifier: onlyWhenUnlocked [130917,130933]
    modifier_invocation [130934,130957]
        identifier: onlyStaker [130934,130944]
        call_argument [130945,130956]
            identifier: validatorId [130945,130956]
    function_body [130958,131963]
        expression_statement [130969,131048]
            call_expression [130969,131047]
                identifier: require [130969,130976]
                call_argument [130977,131023]
                    binary_expression [130977,131023]
                        member_expression: validators[validatorId].deactivationEpoch [130977,131018]
                        comparison_operator: == [131019,131021]
                        number_literal: 0 [131022,131023]
                call_argument [131025,131046]
                    string_literal [131025,131046]
                        string: "No use of restaking" [131025,131046]
        if_statement [131060,131190]
            if: if [131060,131062]
            binary_expression [131064,131074]
                identifier: amount [131064,131070]
                comparison_operator: > [131071,131072]
                number_literal: 0 [131073,131074]
            block_statement [131076,131190]
                expression_statement [131091,131179]
                    call_expression [131091,131178]
                        identifier: require [131091,131098]
                        call_argument [131099,131152]
                            call_expression [131099,131152]
                                member_expression: token.transferFrom [131099,131117]
                                call_argument [131118,131128]
                                    member_expression: msg.sender [131118,131128]
                                call_argument [131130,131143]
                                    type_cast_expression [131130,131143]
                                        primitive_type: address [131130,131137]
                                        call_argument [131138,131142]
                                            identifier: this [131138,131142]
                                call_argument [131145,131151]
                                    identifier: amount [131145,131151]
                        call_argument [131154,131177]
                            string_literal [131154,131177]
                                string: "Transfer stake failed" [131154,131177]
        if_statement [131202,131584]
            if: if [131202,131204]
            identifier: stakeRewards [131206,131218]
            block_statement [131220,131584]
                expression_statement [131235,131287]
                    assignment_expression [131235,131286]
                        identifier: amount [131235,131241]
                        affectation_operator: = [131242,131243]
                        call_expression [131244,131286]
                            member_expression: amount.add [131244,131254]
                            call_argument [131255,131285]
                                member_expression: validators[validatorId].reward [131255,131285]
                variable_declaration_statement [131301,131364]
                    variable_declaration [131301,131321]
                        type_name: address [131301,131308]
                        identifier: contractAddr [131309,131321]
                    affectation_operator: = [131322,131323]
                    member_expression: validators[validatorId].contractAddress [131324,131363]
                if_statement [131378,131524]
                    if: if [131378,131380]
                    binary_expression [131382,131410]
                        identifier: contractAddr [131382,131394]
                        comparison_operator: != [131395,131397]
                        type_cast_expression [131398,131410]
                            primitive_type: address [131398,131405]
                            call_argument [131406,131409]
                                number_literal: 0x0 [131406,131409]
                    block_statement [131412,131524]
                        expression_statement [131431,131509]
                            assignment_expression [131431,131508]
                                identifier: amount [131431,131437]
                                affectation_operator: = [131438,131439]
                                call_expression [131440,131508]
                                    member_expression: amount.add [131440,131450]
                                    call_argument [131451,131507]
                                        call_expression [131451,131507]
                                            member_expression: IValidatorShare(contractAddr).withdrawRewardsValidator [131451,131505]
                expression_statement [131538,131573]
                    assignment_expression [131538,131572]
                        member_expression: validators[validatorId].reward [131538,131568]
                        affectation_operator: = [131569,131570]
                        number_literal: 0 [131571,131572]
        variable_declaration_statement [131596,131645]
            variable_declaration [131596,131618]
                type_name: uint256 [131596,131603]
                identifier: newTotalStaked [131604,131618]
            affectation_operator: = [131619,131620]
            call_expression [131621,131644]
                member_expression: totalStaked.add [131621,131636]
                call_argument [131637,131643]
                    identifier: amount [131637,131643]
        expression_statement [131655,131684]
            assignment_expression [131655,131683]
                identifier: totalStaked [131655,131666]
                affectation_operator: = [131667,131668]
                identifier: newTotalStaked [131669,131683]
        expression_statement [131694,131770]
            assignment_expression [131694,131769]
                member_expression: validators[validatorId].amount [131694,131724]
                affectation_operator: = [131725,131726]
                call_expression [131727,131769]
                    member_expression: validators[validatorId].amount.add [131727,131761]
                    call_argument [131762,131768]
                        identifier: amount [131762,131768]
        expression_statement [131782,131819]
            call_expression [131782,131818]
                identifier: updateTimeline [131782,131796]
                call_argument [131797,131811]
                    type_cast_expression [131797,131811]
                        primitive_type: int256 [131797,131803]
                        call_argument [131804,131810]
                            identifier: amount [131804,131810]
                call_argument [131813,131814]
                    number_literal: 0 [131813,131814]
                call_argument [131816,131817]
                    number_literal: 0 [131816,131817]
        expression_statement [131831,131866]
            call_expression [131831,131865]
                member_expression: logger.logStakeUpdate [131831,131852]
                call_argument [131853,131864]
                    identifier: validatorId [131853,131864]
        expression_statement [131876,131956]
            call_expression [131876,131955]
                member_expression: logger.logRestaked [131876,131894]
                call_argument [131895,131906]
                    identifier: validatorId [131895,131906]
                call_argument [131908,131938]
                    member_expression: validators[validatorId].amount [131908,131938]
                call_argument [131940,131954]
                    identifier: newTotalStaked [131940,131954]
to
contract_body [118403,149751]
at 49

New cluster:
===
insert-node
---
function_definition [21716,22613]
to
contract_body [23647,25078]
at 0
------------
===
insert-node
---
return: return [22357,22363]
to
return_statement [22357,22377]
at 0
===
insert-node
---
if: if [22318,22320]
to
if_statement [22318,22388]
at 0
===
insert-node
---
return_statement [22357,22377]
to
block_statement [22342,22388]
at 0
===
insert-node
---
if: if [22053,22055]
to
if_statement [22053,22184]
at 0
===
insert-node
---
return_statement [22153,22173]
to
block_statement [22138,22184]
at 0
===
insert-node
---
block_statement [22138,22184]
to
if_statement [22053,22184]
at 2
===
insert-node
---
return: return [22153,22159]
to
return_statement [22153,22173]
at 0
===
insert-node
---
block_statement [22342,22388]
to
if_statement [22318,22388]
at 2
===
insert-node
---
visibility: internal [21779,21787]
to
function_definition [21716,22613]
at 4
===
insert-node
---
function: function [21716,21724]
to
function_definition [21716,22613]
at 0
===
insert-node
---
if_statement [22318,22388]
to
function_body [21834,22613]
at 6
===
insert-node
---
identifier: ecrecovery [21725,21735]
to
function_definition [21716,22613]
at 1
===
insert-node
---
function_body [21834,22613]
to
function_definition [21716,22613]
at 7
===
insert-node
---
if_statement [22053,22184]
to
function_body [21834,22613]
at 4
===
insert-node
---
function_definition [21716,22613]
to
contract_body [23647,25078]
at 0

New cluster:
===
insert-node
---
modifier_definition [25715,25791]
to
contract_body [26593,26923]
at 2
------------
===
insert-node
---
modifier_definition [25715,25791]
to
contract_body [26593,26923]
at 2
===
insert-node
---
function_body [25741,25791]
to
modifier_definition [25715,25791]
at 2

New cluster:
===
insert-node
---
function_definition [25799,25981]
to
contract_body [26593,26923]
at 3
------------
===
insert-node
---
visibility: private [25828,25835]
to
function_definition [25799,25981]
at 2
===
insert-node
---
function_definition [25799,25981]
to
contract_body [26593,26923]
at 3
===
insert-node
---
function: function [25799,25807]
to
function_definition [25799,25981]
at 0
===
insert-node
---
identifier: _assertGovernance [25808,25825]
to
function_definition [25799,25981]
at 1

New cluster:
MOVE from contract_body [86870,87975]
------------
===
move-tree
---
function_definition [90820,91094]
    function: function [90820,90828]
    identifier: isContract [90829,90839]
    parameter [90840,90855]
        type_name: address [90840,90847]
        identifier: _target [90848,90855]
    visibility: internal [90857,90865]
    state_mutability [90866,90870]
        view: view [90866,90870]
    return_type_definition [90871,90885]
        returns: returns [90871,90878]
        parameter [90880,90884]
            type_name: bool [90880,90884]
    function_body [90886,91094]
        if_statement [90897,90963]
            if: if [90897,90899]
            binary_expression [90901,90922]
                identifier: _target [90901,90908]
                comparison_operator: == [90909,90911]
                type_cast_expression [90912,90922]
                    primitive_type: address [90912,90919]
                    call_argument [90920,90921]
                        number_literal: 0 [90920,90921]
            block_statement [90924,90963]
                return_statement [90939,90952]
                    return: return [90939,90945]
                    boolean_literal: false [90946,90951]
        variable_declaration_statement [90975,90988]
            variable_declaration [90975,90987]
                type_name: uint256 [90975,90982]
                identifier: size [90983,90987]
        assembly_statement [90998,91061]
            assembly: assembly [90998,91006]
            yul_assignment [91022,91050]
                yul_path [91022,91026]
                    yul_identifier [91022,91026]
                        identifier: size [91022,91026]
                :=: := [91027,91029]
                yul_function_call [91030,91050]
                    yul_evm_builtin [91030,91041]
                        extcodesize: extcodesize [91030,91041]
                    yul_path [91042,91049]
                        yul_identifier [91042,91049]
                            identifier: _target [91042,91049]
        return_statement [91071,91087]
            return: return [91071,91077]
            binary_expression [91078,91086]
                identifier: size [91078,91082]
                comparison_operator: > [91083,91084]
                number_literal: 0 [91085,91086]
to
contract_body [86870,87975]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [36156,36209]
    function: function [36156,36164]
    identifier: getRegistry [36165,36176]
    visibility: public [36179,36185]
    state_mutability [36186,36190]
        view: view [36186,36190]
    return_type_definition [36191,36208]
        returns: returns [36191,36198]
        parameter [36200,36207]
            type_name: address [36200,36207]
to
contract_body [35144,36852]
at 13

New cluster:
===
insert-node
---
function_definition [36282,36357]
to
contract_body [35144,36852]
at 15
------------
===
insert-node
---
function_definition [36282,36357]
to
contract_body [35144,36852]
at 15
===
insert-node
---
function: function [36282,36290]
to
function_definition [36282,36357]
at 0
===
insert-node
---
identifier: delegatedAmount [36291,36306]
to
function_definition [36282,36357]
at 1
===
insert-node
---
visibility: public [36328,36334]
to
function_definition [36282,36357]
at 3

New cluster:
===
insert-node
---
function_definition [36365,36451]
to
contract_body [35144,36852]
at 16
------------
===
insert-node
---
identifier: decreaseValidatorDelegatedAmount [36374,36406]
to
function_definition [36365,36451]
at 1
===
insert-node
---
function_definition [36365,36451]
to
contract_body [35144,36852]
at 16
===
insert-node
---
function: function [36365,36373]
to
function_definition [36365,36451]
at 0
===
insert-node
---
visibility: public [36444,36450]
to
function_definition [36365,36451]
at 4

New cluster:
===
insert-node
---
function_definition [36459,36538]
to
contract_body [35144,36852]
at 17
------------
===
insert-node
---
function_definition [36459,36538]
to
contract_body [35144,36852]
at 17
===
insert-node
---
function: function [36459,36467]
to
function_definition [36459,36538]
at 0
===
insert-node
---
visibility: public [36514,36520]
to
function_definition [36459,36538]
at 3
===
insert-node
---
identifier: withdrawDelegatorsReward [36468,36492]
to
function_definition [36459,36538]
at 1

New cluster:
===
insert-node
---
function_definition [36546,36622]
to
contract_body [35144,36852]
at 18
------------
===
insert-node
---
function_definition [36546,36622]
to
contract_body [35144,36852]
at 18
===
insert-node
---
function: function [36546,36554]
to
function_definition [36546,36622]
at 0
===
insert-node
---
visibility: public [36593,36599]
to
function_definition [36546,36622]
at 3
===
insert-node
---
identifier: delegatorsReward [36555,36571]
to
function_definition [36546,36622]
at 1

New cluster:
===
insert-node
---
function_definition [37281,37333]
to
contract_body [37035,38197]
at 7
------------
===
insert-node
---
function_definition [37281,37333]
to
contract_body [37035,38197]
at 7
===
insert-node
---
return_type_definition [37307,37332]
to
function_definition [37281,37333]
at 3
===
insert-node
---
returns: returns [37307,37314]
to
return_type_definition [37307,37332]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [64609,64634]
    type_name: Registry [64609,64617]
    visibility: public [64618,64624]
    identifier: registry [64625,64633]
to
contract_body [64602,67075]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [64928,65089]
    modifier: modifier [64928,64936]
    identifier: onlyStakeManager [64937,64953]
    function_body [64956,65089]
        expression_statement [64967,65070]
            call_expression [64967,65069]
                identifier: require [64967,64974]
                call_argument [64975,65022]
                    binary_expression [64975,65022]
                        call_expression [64975,65008]
                            member_expression: registry.getStakeManagerAddress [64975,65006]
                        comparison_operator: == [65009,65011]
                        member_expression: msg.sender [65012,65022]
                call_argument [65033,65068]
                    string_literal [65033,65068]
                        string: "Invalid sender, not stake manager" [65033,65068]
        expression_statement [65080,65082]
            identifier: _ [65080,65081]
to
contract_body [64602,67075]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [65097,65197]
    function: function [65097,65105]
    identifier: initialize [65106,65116]
    parameter [65117,65135]
        type_name: Registry [65117,65125]
        identifier: _registry [65126,65135]
    visibility: external [65137,65145]
    modifier_invocation [65146,65157]
        identifier: initializer [65146,65157]
    function_body [65158,65197]
        expression_statement [65169,65190]
            assignment_expression [65169,65189]
                identifier: registry [65169,65177]
                affectation_operator: = [65178,65179]
                identifier: _registry [65180,65189]
to
contract_body [64602,67075]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [65205,65387]
    identifier: ShareBurnedWithId [65211,65228]
    event_paramater [65239,65266]
        type_name: uint256 [65239,65246]
        indexed: indexed [65247,65254]
        identifier: validatorId [65255,65266]
    event_paramater [65277,65297]
        type_name: address [65277,65284]
        indexed: indexed [65285,65292]
        identifier: user [65293,65297]
    event_paramater [65308,65330]
        type_name: uint256 [65308,65315]
        indexed: indexed [65316,65323]
        identifier: amount [65324,65330]
    event_paramater [65341,65355]
        type_name: uint256 [65341,65348]
        identifier: tokens [65349,65355]
    event_paramater [65366,65379]
        type_name: uint256 [65366,65373]
        identifier: nonce [65374,65379]
to
contract_body [64602,67075]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [65395,65684]
    function: function [65395,65403]
    identifier: logShareBurnedWithId [65404,65424]
    parameter [65435,65454]
        type_name: uint256 [65435,65442]
        identifier: validatorId [65443,65454]
    parameter [65465,65477]
        type_name: address [65465,65472]
        identifier: user [65473,65477]
    parameter [65488,65502]
        type_name: uint256 [65488,65495]
        identifier: amount [65496,65502]
    parameter [65513,65527]
        type_name: uint256 [65513,65520]
        identifier: tokens [65521,65527]
    parameter [65538,65551]
        type_name: uint256 [65538,65545]
        identifier: nonce [65546,65551]
    visibility: public [65559,65565]
    modifier_invocation [65566,65600]
        identifier: onlyValidatorContract [65566,65587]
        call_argument [65588,65599]
            identifier: validatorId [65588,65599]
    function_body [65601,65684]
        emit_statement [65612,65677]
            identifier: ShareBurnedWithId [65617,65634]
            call_argument [65635,65646]
                identifier: validatorId [65635,65646]
            call_argument [65648,65652]
                identifier: user [65648,65652]
            call_argument [65654,65660]
                identifier: amount [65654,65660]
            call_argument [65662,65668]
                identifier: tokens [65662,65668]
            call_argument [65670,65675]
                identifier: nonce [65670,65675]
to
contract_body [64602,67075]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [65692,65846]
    identifier: DelegatorUnstakeWithId [65698,65720]
    event_paramater [65731,65758]
        type_name: uint256 [65731,65738]
        indexed: indexed [65739,65746]
        identifier: validatorId [65747,65758]
    event_paramater [65769,65789]
        type_name: address [65769,65776]
        indexed: indexed [65777,65784]
        identifier: user [65785,65789]
    event_paramater [65800,65814]
        type_name: uint256 [65800,65807]
        identifier: amount [65808,65814]
    event_paramater [65825,65838]
        type_name: uint256 [65825,65832]
        identifier: nonce [65833,65838]
to
contract_body [64602,67075]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [65854,66121]
    function: function [65854,65862]
    identifier: logDelegatorUnstakedWithId [65863,65889]
    parameter [65900,65919]
        type_name: uint256 [65900,65907]
        identifier: validatorId [65908,65919]
    parameter [65930,65942]
        type_name: address [65930,65937]
        identifier: user [65938,65942]
    parameter [65953,65967]
        type_name: uint256 [65953,65960]
        identifier: amount [65961,65967]
    parameter [65978,65991]
        type_name: uint256 [65978,65985]
        identifier: nonce [65986,65991]
    visibility: public [65999,66005]
    modifier_invocation [66006,66040]
        identifier: onlyValidatorContract [66006,66027]
        call_argument [66028,66039]
            identifier: validatorId [66028,66039]
    function_body [66041,66121]
        emit_statement [66052,66114]
            identifier: DelegatorUnstakeWithId [66057,66079]
            call_argument [66080,66091]
                identifier: validatorId [66080,66091]
            call_argument [66093,66097]
                identifier: user [66093,66097]
            call_argument [66099,66105]
                identifier: amount [66099,66105]
            call_argument [66107,66112]
                identifier: nonce [66107,66112]
to
contract_body [64602,67075]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [66129,66282]
    identifier: RewardParams [66135,66147]
    event_paramater [66158,66193]
        type_name: uint256 [66158,66165]
        identifier: rewardDecreasePerCheckpoint [66166,66193]
    event_paramater [66204,66234]
        type_name: uint256 [66204,66211]
        identifier: maxRewardedCheckpoints [66212,66234]
    event_paramater [66245,66274]
        type_name: uint256 [66245,66252]
        identifier: checkpointRewardDelta [66253,66274]
to
contract_body [64602,67075]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [66290,66585]
    function: function [66290,66298]
    identifier: logRewardParams [66299,66314]
    parameter [66325,66360]
        type_name: uint256 [66325,66332]
        identifier: rewardDecreasePerCheckpoint [66333,66360]
    parameter [66371,66401]
        type_name: uint256 [66371,66378]
        identifier: maxRewardedCheckpoints [66379,66401]
    parameter [66412,66441]
        type_name: uint256 [66412,66419]
        identifier: checkpointRewardDelta [66420,66441]
    visibility: public [66449,66455]
    modifier_invocation [66456,66472]
        identifier: onlyStakeManager [66456,66472]
    function_body [66473,66585]
        emit_statement [66484,66578]
            identifier: RewardParams [66489,66501]
            call_argument [66502,66529]
                identifier: rewardDecreasePerCheckpoint [66502,66529]
            call_argument [66531,66553]
                identifier: maxRewardedCheckpoints [66531,66553]
            call_argument [66555,66576]
                identifier: checkpointRewardDelta [66555,66576]
to
contract_body [64602,67075]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [66593,66753]
    identifier: UpdateCommissionRate [66599,66619]
    event_paramater [66630,66657]
        type_name: uint256 [66630,66637]
        indexed: indexed [66638,66645]
        identifier: validatorId [66646,66657]
    event_paramater [66668,66701]
        type_name: uint256 [66668,66675]
        indexed: indexed [66676,66683]
        identifier: newCommissionRate [66684,66701]
    event_paramater [66712,66745]
        type_name: uint256 [66712,66719]
        indexed: indexed [66720,66727]
        identifier: oldCommissionRate [66728,66745]
to
contract_body [64602,67075]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [66761,67072]
    function: function [66761,66769]
    identifier: logUpdateCommissionRate [66770,66793]
    parameter [66804,66823]
        type_name: uint256 [66804,66811]
        identifier: validatorId [66812,66823]
    parameter [66834,66859]
        type_name: uint256 [66834,66841]
        identifier: newCommissionRate [66842,66859]
    parameter [66870,66895]
        type_name: uint256 [66870,66877]
        identifier: oldCommissionRate [66878,66895]
    visibility: public [66903,66909]
    modifier_invocation [66910,66926]
        identifier: onlyStakeManager [66910,66926]
    function_body [66927,67072]
        emit_statement [66938,67065]
            identifier: UpdateCommissionRate [66943,66963]
            call_argument [66978,66989]
                identifier: validatorId [66978,66989]
            call_argument [67004,67021]
                identifier: newCommissionRate [67004,67021]
            call_argument [67036,67053]
                identifier: oldCommissionRate [67036,67053]
to
contract_body [64602,67075]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68123,68166]
    type_name: uint256 [68123,68130]
    visibility: public [68131,68137]
    identifier: validatorRewards_deprecated [68138,68165]
to
contract_body [100378,114843]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68172,68213]
    type_name: uint256 [68172,68179]
    visibility: public [68180,68186]
    identifier: commissionRate_deprecated [68187,68212]
to
contract_body [100378,114843]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68219,68266]
    type_name: uint256 [68219,68226]
    visibility: public [68227,68233]
    identifier: lastCommissionUpdate_deprecated [68234,68265]
to
contract_body [100378,114843]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68272,68297]
    type_name: uint256 [68272,68279]
    visibility: public [68280,68286]
    identifier: minAmount [68287,68296]
to
contract_body [100378,114843]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68305,68342]
    type_name: uint256 [68305,68312]
    visibility: public [68313,68319]
    identifier: totalStake_deprecated [68320,68341]
to
contract_body [100378,114843]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68420,68443]
    type_name: bool [68420,68424]
    visibility: public [68425,68431]
    identifier: delegation [68432,68442]
to
contract_body [100378,114843]
at 20

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68523,68575]
    type_name: mapping(address => uint256) [68523,68550]
    identifier: amountStaked_deprecated [68551,68574]
to
contract_body [100378,114843]
at 24

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68748,68796]
    type_name: mapping(address => uint256) [68748,68775]
    visibility: public [68776,68782]
    identifier: unbondNonces [68783,68795]
to
contract_body [100378,114843]
at 28

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68802,68877]
    type_name: mapping(address => mapping(uint256 => DelegatorUnbond)) [68802,68857]
    visibility: public [68858,68864]
    identifier: unbonds_new [68865,68876]
to
contract_body [100378,114843]
at 29

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [68885,68912]
    type_name: EventsHub [68885,68894]
    visibility: public [68895,68901]
    identifier: eventsHub [68902,68911]
to
contract_body [100378,114843]
at 30

New cluster:
===
insert-node
---
function_definition [70723,70862]
to
contract_body [100378,114843]
at 41
------------
===
insert-node
---
function_definition [70723,70862]
to
contract_body [100378,114843]
at 41
===
insert-node
---
function: function [70723,70731]
to
function_definition [70723,70862]
at 0
===
insert-node
---
visibility: public [70763,70769]
to
function_definition [70723,70862]
at 3
===
insert-node
---
identifier: getLiquidRewards [70732,70748]
to
function_definition [70723,70862]
at 1

New cluster:
===
insert-node
---
function_definition [70870,71034]
to
contract_body [100378,114843]
at 42
------------
===
insert-node
---
function: function [70870,70878]
to
function_definition [70870,71034]
at 0
===
insert-node
---
function_definition [70870,71034]
to
contract_body [100378,114843]
at 42
===
insert-node
---
identifier: getRewardPerShare [70879,70896]
to
function_definition [70870,71034]
at 1
===
insert-node
---
visibility: public [70899,70905]
to
function_definition [70870,71034]
at 2

New cluster:
===
insert-node
---
function_definition [72487,73102]
to
contract_body [100378,114843]
at 47
------------
===
insert-node
---
visibility: public [72558,72564]
to
function_definition [72487,73102]
at 4
===
insert-node
---
function: function [72487,72495]
to
function_definition [72487,73102]
at 0
===
insert-node
---
function_definition [72487,73102]
to
contract_body [100378,114843]
at 47
===
insert-node
---
function_body [72565,73102]
to
function_definition [72487,73102]
at 5
===
insert-node
---
identifier: sellVoucher [72496,72507]
to
function_definition [72487,73102]
at 1

New cluster:
===
insert-node
---
function_definition [74186,74463]
to
contract_body [100378,114843]
at 53
------------
===
insert-node
---
function_definition [74186,74463]
to
contract_body [100378,114843]
at 53
===
insert-node
---
identifier: unstakeClaimTokens [74195,74213]
to
function_definition [74186,74463]
at 1
===
insert-node
---
expression_statement [74388,74456]
to
function_body [74223,74463]
at 3
===
insert-node
---
call_expression [74388,74455]
to
expression_statement [74388,74456]
at 0
===
insert-node
---
function: function [74186,74194]
to
function_definition [74186,74463]
at 0
===
insert-node
---
visibility: public [74216,74222]
to
function_definition [74186,74463]
at 2
===
insert-node
---
member_expression: stakingLogger.logDelegatorUnstaked [74388,74422]
to
call_expression [74388,74455]
at 0
===
insert-node
---
function_body [74223,74463]
to
function_definition [74186,74463]
at 3

New cluster:
===
insert-node
---
function_definition [76004,76700]
to
contract_body [100378,114843]
at 58
------------
===
insert-node
---
identifier: sellVoucher_new [76013,76028]
to
function_definition [76004,76700]
at 1
===
insert-node
---
identifier: DelegatorUnbond [76301,76316]
to
call_expression [76301,76420]
at 0
===
insert-node
---
function: function [76004,76012]
to
function_definition [76004,76700]
at 0
===
insert-node
---
identifier: withdrawEpoch [76373,76386]
to
call_struct_argument [76373,76408]
at 0
===
insert-node
---
call_expression [76538,76640]
to
expression_statement [76538,76641]
at 0
===
insert-node
---
call_struct_argument [76373,76408]
to
call_argument [76317,76419]
at 1
===
insert-node
---
member_expression: _getOrCacheEventsHub().logShareBurnedWithId [76538,76581]
to
call_expression [76538,76640]
at 0
===
insert-node
---
call_expression [76301,76420]
to
variable_declaration_statement [76269,76421]
at 2
===
insert-node
---
visibility: public [76079,76085]
to
function_definition [76004,76700]
at 4
===
insert-node
---
variable_declaration_statement [76269,76421]
to
function_body [76086,76700]
at 2
===
insert-node
---
call_argument [76317,76419]
to
call_expression [76301,76420]
at 1
===
insert-node
---
affectation_operator: = [76299,76300]
to
variable_declaration_statement [76269,76421]
at 1
===
insert-node
---
function_body [76086,76700]
to
function_definition [76004,76700]
at 5
===
insert-node
---
expression_statement [76538,76641]
to
function_body [76086,76700]
at 5
===
insert-node
---
function_definition [76004,76700]
to
contract_body [100378,114843]
at 58
===
insert-node
---
:: : [76386,76387]
to
call_struct_argument [76373,76408]
at 1

New cluster:
===
insert-node
---
function_definition [76708,77070]
to
contract_body [100378,114843]
at 59
------------
===
insert-node
---
member_expression: _getOrCacheEventsHub().logDelegatorUnstakedWithId [76967,77016]
to
call_expression [76967,77062]
at 0
===
insert-node
---
function_body [76768,77070]
to
function_definition [76708,77070]
at 4
===
insert-node
---
identifier: unstakeClaimTokens_new [76717,76739]
to
function_definition [76708,77070]
at 1
===
insert-node
---
expression_statement [76967,77063]
to
function_body [76768,77070]
at 3
===
insert-node
---
function_definition [76708,77070]
to
contract_body [100378,114843]
at 59
===
insert-node
---
call_expression [76967,77062]
to
expression_statement [76967,77063]
at 0
===
insert-node
---
visibility: public [76761,76767]
to
function_definition [76708,77070]
at 3
===
insert-node
---
function: function [76708,76716]
to
function_definition [76708,77070]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [77123,77465]
    function: function [77123,77131]
    identifier: _getOrCacheEventsHub [77132,77152]
    visibility: private [77155,77162]
    return_type_definition [77163,77181]
        returns: returns [77163,77170]
        parameter [77171,77180]
            type_name: EventsHub [77171,77180]
    function_body [77182,77465]
        variable_declaration_statement [77193,77226]
            variable_declaration [77193,77213]
                type_name: EventsHub [77193,77202]
                identifier: _eventsHub [77203,77213]
            affectation_operator: = [77214,77215]
            identifier: eventsHub [77216,77225]
        if_statement [77236,77430]
            if: if [77236,77238]
            binary_expression [77240,77268]
                identifier: _eventsHub [77240,77250]
                comparison_operator: == [77251,77253]
                call_expression [77254,77268]
                    identifier: EventsHub [77254,77263]
                    call_argument [77264,77267]
                        number_literal: 0x0 [77264,77267]
            block_statement [77270,77430]
                expression_statement [77285,77382]
                    assignment_expression [77285,77381]
                        identifier: _eventsHub [77285,77295]
                        affectation_operator: = [77296,77297]
                        call_expression [77298,77381]
                            identifier: EventsHub [77298,77307]
                            call_argument [77308,77380]
                                call_expression [77308,77380]
                                    member_expression: Registry(stakeManager.getRegistry()).contractMap [77308,77356]
                                    call_argument [77357,77379]
                                        call_expression [77357,77379]
                                            identifier: keccak256 [77357,77366]
                                            call_argument [77367,77378]
                                                string_literal [77367,77378]
                                                    string: "eventsHub" [77367,77378]
                expression_statement [77396,77419]
                    assignment_expression [77396,77418]
                        identifier: eventsHub [77396,77405]
                        affectation_operator: = [77406,77407]
                        identifier: _eventsHub [77408,77418]
        return_statement [77440,77458]
            return: return [77440,77446]
            identifier: _eventsHub [77447,77457]
to
contract_body [100378,114843]
at 60

New cluster:
===
insert-node
---
function_definition [79486,79963]
to
contract_body [100378,114843]
at 64
------------
===
insert-node
---
identifier: _calculateRewardPerShareWithRewards [79495,79530]
to
function_definition [79486,79963]
at 1
===
insert-node
---
function_body [79589,79963]
to
function_definition [79486,79963]
at 6
===
insert-node
---
block_statement [79679,79921]
to
if_statement [79651,79921]
at 2
===
insert-node
---
if_statement [79651,79921]
to
function_body [79589,79963]
at 1
===
insert-node
---
if: if [79651,79653]
to
if_statement [79651,79921]
at 0
===
insert-node
---
function_definition [79486,79963]
to
contract_body [100378,114843]
at 64
===
insert-node
---
function: function [79486,79494]
to
function_definition [79486,79963]
at 0
===
insert-node
---
visibility: private [79558,79565]
to
function_definition [79486,79963]
at 3

New cluster:
===
insert-node
---
function_definition [82315,82667]
to
contract_body [100378,114843]
at 69
------------
===
insert-node
---
function: function [82315,82323]
to
function_definition [82315,82667]
at 0
===
insert-node
---
function_definition [82315,82667]
to
contract_body [100378,114843]
at 69
===
insert-node
---
visibility: internal [82409,82417]
to
function_definition [82315,82667]
at 5
===
insert-node
---
identifier: _transfer [82324,82333]
to
function_definition [82315,82667]
at 1

New cluster:
MOVE from contract_body [115627,115832]
------------
===
move-tree
---
function_definition [86877,87006]
    function: function [86877,86885]
    identifier: proxyType [86886,86895]
    visibility: external [86898,86906]
    state_mutability [86907,86911]
        pure: pure [86907,86911]
    return_type_definition [86912,86941]
        returns: returns [86912,86919]
        parameter [86921,86940]
            type_name: uint256 [86921,86928]
            identifier: proxyTypeId [86929,86940]
    function_body [86942,87006]
        expression_statement [86983,86999]
            assignment_expression [86983,86998]
                identifier: proxyTypeId [86983,86994]
                affectation_operator: = [86995,86996]
                number_literal: 2 [86997,86998]
to
contract_body [115627,115832]
at 0
===
move-tree
---
function_definition [87014,87072]
    function: function [87014,87022]
    identifier: implementation [87023,87037]
    visibility: external [87040,87048]
    state_mutability [87049,87053]
        view: view [87049,87053]
    return_type_definition [87054,87071]
        returns: returns [87054,87061]
        parameter [87063,87070]
            type_name: address [87063,87070]
to
contract_body [115627,115832]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [121757,121799]
    type_name: uint256 [121757,121764]
    constant: constant [121765,121773]
    identifier: MAX_COMMISION_RATE [121774,121792]
    affectation_operator: = [121793,121794]
    number_literal: 100 [121795,121798]
to
contract_body [115885,118197]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [121805,121847]
    type_name: uint256 [121805,121812]
    constant: constant [121813,121821]
    identifier: MAX_PROPOSER_BONUS [121822,121840]
    affectation_operator: = [121841,121842]
    number_literal: 100 [121843,121846]
to
contract_body [115885,118197]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [121853,121896]
    type_name: uint256 [121853,121860]
    constant: constant [121861,121869]
    identifier: REWARD_PRECISION [121870,121886]
    affectation_operator: = [121887,121888]
    binary_expression [121889,121895]
        number_literal: 10 [121889,121891]
        **: ** [121891,121893]
        number_literal: 25 [121893,121895]
to
contract_body [115885,118197]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [121970,122019]
    type_name: uint256 [121970,121977]
    visibility: internal [121978,121986]
    constant: constant [121987,121995]
    identifier: INITIALIZED_AMOUNT [121996,122014]
    affectation_operator: = [122015,122016]
    number_literal: 1 [122017,122018]
to
contract_body [115885,118197]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
using_directive [124618,124645]
    using: using [124618,124623]
    type_alias [124624,124632]
        identifier: SafeMath [124624,124632]
    for: for [124633,124636]
    type_name: uint256 [124637,124644]
to
contract_body [124611,131995]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
constructor_definition [124653,124709]
    constructor: constructor [124653,124664]
    public: public [124667,124673]
    modifier_invocation [124674,124706]
        identifier: GovernanceLockable [124674,124692]
        call_argument [124693,124705]
            type_cast_expression [124693,124705]
                primitive_type: address [124693,124700]
                call_argument [124701,124704]
                    number_literal: 0x0 [124701,124704]
    function_body [124707,124709]
to
contract_body [124611,131995]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [129271,130156]
    function: function [129271,129279]
    identifier: migrateValidatorsData [129280,129301]
    parameter [129302,129325]
        type_name: uint256 [129302,129309]
        identifier: validatorIdFrom [129310,129325]
    parameter [129327,129348]
        type_name: uint256 [129327,129334]
        identifier: validatorIdTo [129335,129348]
    visibility: external [129350,129358]
    function_body [129359,130156]
        for_statement [129377,130149]
            for: for [129377,129380]
            variable_declaration_statement [129382,129410]
                variable_declaration [129382,129391]
                    type_name: uint256 [129382,129389]
                    identifier: i [129390,129391]
                affectation_operator: = [129392,129393]
                identifier: validatorIdFrom [129394,129409]
            expression_statement [129411,129429]
                binary_expression [129411,129428]
                    identifier: i [129411,129412]
                    comparison_operator: < [129413,129414]
                    identifier: validatorIdTo [129415,129428]
            update_expression [129430,129433]
                increment_operator: ++ [129430,129432]
                identifier: i [129432,129433]
            block_statement [129435,130149]
                variable_declaration_statement [129450,129529]
                    variable_declaration [129450,129480]
                        type_name: ValidatorShare [129450,129464]
                        identifier: contractAddress [129465,129480]
                    affectation_operator: = [129481,129482]
                    call_expression [129483,129528]
                        identifier: ValidatorShare [129483,129497]
                        call_argument [129498,129527]
                            member_expression: validators[i].contractAddress [129498,129527]
                if_statement [129543,130070]
                    if: if [129543,129545]
                    binary_expression [129547,129583]
                        identifier: contractAddress [129547,129562]
                        comparison_operator: != [129563,129565]
                        call_expression [129566,129583]
                            identifier: ValidatorShare [129566,129580]
                            call_argument [129581,129582]
                                number_literal: 0 [129581,129582]
                    block_statement [129585,129962]
                        expression_statement [129680,129773]
                            assignment_expression [129680,129772]
                                member_expression: validators[i].reward [129680,129700]
                                affectation_operator: = [129701,129702]
                                call_expression [129703,129772]
                                    member_expression: contractAddress.validatorRewards_deprecated().add [129703,129752]
                                    call_argument [129753,129771]
                                        identifier: INITIALIZED_AMOUNT [129753,129771]
                        expression_statement [129791,129854]
                            assignment_expression [129791,129853]
                                member_expression: validators[i].delegatedAmount [129791,129820]
                                affectation_operator: = [129821,129822]
                                call_expression [129823,129853]
                                    member_expression: contractAddress.activeAmount [129823,129851]
                        expression_statement [129872,129947]
                            assignment_expression [129872,129946]
                                member_expression: validators[i].commissionRate [129872,129900]
                                affectation_operator: = [129901,129902]
                                call_expression [129903,129946]
                                    member_expression: contractAddress.commissionRate_deprecated [129903,129944]
                    else: else [129963,129967]
                    block_statement [129968,130070]
                        expression_statement [129987,130055]
                            assignment_expression [129987,130054]
                                member_expression: validators[i].reward [129987,130007]
                                affectation_operator: = [130008,130009]
                                call_expression [130010,130054]
                                    member_expression: validators[i].reward.add [130010,130034]
                                    call_argument [130035,130053]
                                        identifier: INITIALIZED_AMOUNT [130035,130053]
                expression_statement [130086,130138]
                    assignment_expression [130086,130137]
                        member_expression: validators[i].delegatorsReward [130086,130116]
                        affectation_operator: = [130117,130118]
                        identifier: INITIALIZED_AMOUNT [130119,130137]
to
contract_body [124611,131995]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [130164,130840]
    function: function [130164,130172]
    identifier: updateCheckpointRewardParams [130173,130201]
    parameter [130212,130248]
        type_name: uint256 [130212,130219]
        identifier: _rewardDecreasePerCheckpoint [130220,130248]
    parameter [130259,130290]
        type_name: uint256 [130259,130266]
        identifier: _maxRewardedCheckpoints [130267,130290]
    parameter [130301,130331]
        type_name: uint256 [130301,130308]
        identifier: _checkpointRewardDelta [130309,130331]
    visibility: external [130339,130347]
    function_body [130348,130840]
        expression_statement [130359,130450]
            call_expression [130359,130449]
                identifier: require [130359,130366]
                call_argument [130367,130448]
                    binary_expression [130367,130448]
                        call_expression [130367,130424]
                            member_expression: _maxRewardedCheckpoints.mul [130367,130394]
                            call_argument [130395,130423]
                                identifier: _rewardDecreasePerCheckpoint [130395,130423]
                        comparison_operator: <= [130425,130427]
                        identifier: CHK_REWARD_PRECISION [130428,130448]
        expression_statement [130460,130516]
            call_expression [130460,130515]
                identifier: require [130460,130467]
                call_argument [130468,130514]
                    binary_expression [130468,130514]
                        identifier: _checkpointRewardDelta [130468,130490]
                        comparison_operator: <= [130491,130493]
                        identifier: CHK_REWARD_PRECISION [130494,130514]
        expression_statement [130528,130587]
            assignment_expression [130528,130586]
                identifier: rewardDecreasePerCheckpoint [130528,130555]
                affectation_operator: = [130556,130557]
                identifier: _rewardDecreasePerCheckpoint [130558,130586]
        expression_statement [130597,130646]
            assignment_expression [130597,130645]
                identifier: maxRewardedCheckpoints [130597,130619]
                affectation_operator: = [130620,130621]
                identifier: _maxRewardedCheckpoints [130622,130645]
        expression_statement [130656,130703]
            assignment_expression [130656,130702]
                identifier: checkpointRewardDelta [130656,130677]
                affectation_operator: = [130678,130679]
                identifier: _checkpointRewardDelta [130680,130702]
        expression_statement [130715,130833]
            call_expression [130715,130832]
                member_expression: _getOrCacheEventsHub().logRewardParams [130715,130753]
                call_argument [130754,130782]
                    identifier: _rewardDecreasePerCheckpoint [130754,130782]
                call_argument [130784,130807]
                    identifier: _maxRewardedCheckpoints [130784,130807]
                call_argument [130809,130831]
                    identifier: _checkpointRewardDelta [130809,130831]
to
contract_body [124611,131995]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [131648,131992]
    function: function [131648,131656]
    identifier: _getOrCacheEventsHub [131657,131677]
    visibility: private [131680,131687]
    return_type_definition [131688,131706]
        returns: returns [131688,131695]
        parameter [131696,131705]
            type_name: EventsHub [131696,131705]
    function_body [131707,131992]
        variable_declaration_statement [131718,131762]
            variable_declaration [131718,131738]
                type_name: EventsHub [131718,131727]
                identifier: _eventsHub [131728,131738]
            affectation_operator: = [131739,131740]
            call_expression [131741,131761]
                identifier: EventsHub [131741,131750]
                call_argument [131751,131760]
                    identifier: eventsHub [131751,131760]
        if_statement [131772,131957]
            if: if [131772,131774]
            binary_expression [131776,131804]
                identifier: _eventsHub [131776,131786]
                comparison_operator: == [131787,131789]
                call_expression [131790,131804]
                    identifier: EventsHub [131790,131799]
                    call_argument [131800,131803]
                        number_literal: 0x0 [131800,131803]
            block_statement [131806,131957]
                expression_statement [131821,131900]
                    assignment_expression [131821,131899]
                        identifier: _eventsHub [131821,131831]
                        affectation_operator: = [131832,131833]
                        call_expression [131834,131899]
                            identifier: EventsHub [131834,131843]
                            call_argument [131844,131898]
                                call_expression [131844,131898]
                                    member_expression: Registry(registry).contractMap [131844,131874]
                                    call_argument [131875,131897]
                                        call_expression [131875,131897]
                                            identifier: keccak256 [131875,131884]
                                            call_argument [131885,131896]
                                                string_literal [131885,131896]
                                                    string: "eventsHub" [131885,131896]
                expression_statement [131914,131946]
                    assignment_expression [131914,131945]
                        identifier: eventsHub [131914,131923]
                        affectation_operator: = [131924,131925]
                        type_cast_expression [131926,131945]
                            primitive_type: address [131926,131933]
                            call_argument [131934,131944]
                                identifier: _eventsHub [131934,131944]
        return_statement [131967,131985]
            return: return [131967,131973]
            identifier: _eventsHub [131974,131984]
to
contract_body [124611,131995]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [132432,132651]
    struct: struct [132432,132438]
    identifier: UnsignedValidatorsContext [132439,132464]
    struct_member [132476,132507]
        type_name: uint256 [132476,132483]
        identifier: unsignedValidatorIndex [132484,132506]
    struct_member [132517,132540]
        type_name: uint256 [132517,132524]
        identifier: validatorIndex [132525,132539]
    struct_member [132550,132579]
        type_name: uint256[] [132550,132559]
        identifier: unsignedValidators [132560,132578]
    struct_member [132589,132610]
        type_name: address[] [132589,132598]
        identifier: validators [132599,132609]
    struct_member [132620,132644]
        type_name: uint256 [132620,132627]
        identifier: totalValidators [132628,132643]
to
contract_body [118403,149751]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [132659,132811]
    struct: struct [132659,132665]
    identifier: UnstakedValidatorsContext [132666,132691]
    struct_member [132703,132729]
        type_name: uint256 [132703,132710]
        identifier: deactivationEpoch [132711,132728]
    struct_member [132739,132771]
        type_name: uint256[] [132739,132748]
        identifier: deactivatedValidators [132749,132770]
    struct_member [132781,132804]
        type_name: uint256 [132781,132788]
        identifier: validatorIndex [132789,132803]
to
contract_body [118403,149751]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [133064,133170]
    modifier: modifier [133064,133072]
    identifier: onlyDelegation [133073,133087]
    parameter [133088,133107]
        type_name: uint256 [133088,133095]
        identifier: validatorId [133096,133107]
    function_body [133109,133170]
        expression_statement [133120,133151]
            call_expression [133120,133150]
                identifier: _assertDelegation [133120,133137]
                call_argument [133138,133149]
                    identifier: validatorId [133138,133149]
        expression_statement [133161,133163]
            identifier: _ [133161,133162]
to
contract_body [118403,149751]
at 9

New cluster:
===
insert-node
---
function_definition [133178,133348]
to
contract_body [118403,149751]
at 10
------------
===
insert-node
---
function_definition [133178,133348]
to
contract_body [118403,149751]
at 10
===
insert-node
---
visibility: private [133226,133233]
to
function_definition [133178,133348]
at 3
===
insert-node
---
function: function [133178,133186]
to
function_definition [133178,133348]
at 0
===
insert-node
---
identifier: _assertDelegation [133187,133204]
to
function_definition [133178,133348]
at 1
===
insert-node
---
function_body [133239,133348]
to
function_definition [133178,133348]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [134871,134958]
    function: function [134871,134879]
    identifier: getRegistry [134880,134891]
    visibility: public [134894,134900]
    state_mutability [134901,134905]
        view: view [134901,134905]
    return_type_definition [134906,134923]
        returns: returns [134906,134913]
        parameter [134915,134922]
            type_name: address [134915,134922]
    function_body [134924,134958]
        return_statement [134935,134951]
            return: return [134935,134941]
            identifier: registry [134942,134950]
to
contract_body [118403,149751]
at 13

New cluster:
===
insert-node
---
function_definition [135633,135774]
to
contract_body [118403,149751]
at 20
------------
===
insert-node
---
visibility: public [135679,135685]
to
function_definition [135633,135774]
at 3
===
insert-node
---
function_definition [135633,135774]
to
contract_body [118403,149751]
at 20
===
insert-node
---
function: function [135633,135641]
to
function_definition [135633,135774]
at 0
===
insert-node
---
identifier: delegatedAmount [135642,135657]
to
function_definition [135633,135774]
at 1

New cluster:
===
insert-node
---
function_definition [135782,136065]
to
contract_body [118403,149751]
at 21
------------
===
insert-node
---
identifier: delegatorsReward [135791,135807]
to
function_definition [135782,136065]
at 1
===
insert-node
---
visibility: public [135829,135835]
to
function_definition [135782,136065]
at 3
===
insert-node
---
function: function [135782,135790]
to
function_definition [135782,136065]
at 0
===
insert-node
---
function_definition [135782,136065]
to
contract_body [118403,149751]
at 21

New cluster:
===
insert-node
---
function_definition [136073,136448]
to
contract_body [118403,149751]
at 22
------------
===
insert-node
---
function: function [136073,136081]
to
function_definition [136073,136448]
at 0
===
insert-node
---
identifier: validatorReward [136082,136097]
to
function_definition [136073,136448]
at 1
===
insert-node
---
visibility: public [136119,136125]
to
function_definition [136073,136448]
at 3
===
insert-node
---
function_definition [136073,136448]
to
contract_body [118403,149751]
at 22

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [136861,137185]
    function: function [136861,136869]
    identifier: isValidator [136870,136881]
    parameter [136882,136901]
        type_name: uint256 [136882,136889]
        identifier: validatorId [136890,136901]
    visibility: public [136903,136909]
    state_mutability [136910,136914]
        view: view [136910,136914]
    return_type_definition [136915,136929]
        returns: returns [136915,136922]
        parameter [136924,136928]
            type_name: bool [136924,136928]
    function_body [136930,137185]
        return_statement [136941,137178]
            return: return [136941,136947]
            call_expression [136961,137177]
                identifier: _isValidator [136961,136973]
                call_argument [136992,137022]
                    member_expression: validators[validatorId].status [136992,137022]
                call_argument [137041,137071]
                    member_expression: validators[validatorId].amount [137041,137071]
                call_argument [137090,137131]
                    member_expression: validators[validatorId].deactivationEpoch [137090,137131]
                call_argument [137150,137162]
                    identifier: currentEpoch [137150,137162]
to
contract_body [118403,149751]
at 26

New cluster:
===
insert-node
---
function_definition [138169,138331]
to
contract_body [118403,149751]
at 34
------------
===
insert-node
---
identifier: updateCheckPointBlockInterval [138178,138207]
to
function_definition [138169,138331]
at 1
===
insert-node
---
visibility: public [138225,138231]
to
function_definition [138169,138331]
at 3
===
insert-node
---
function: function [138169,138177]
to
function_definition [138169,138331]
at 0
===
insert-node
---
function_definition [138169,138331]
to
contract_body [118403,149751]
at 34
===
insert-node
---
function_body [138247,138331]
to
function_definition [138169,138331]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [138565,139107]
    function: function [138565,138573]
    identifier: updateCheckpointRewardParams [138574,138602]
    parameter [138613,138649]
        type_name: uint256 [138613,138620]
        identifier: _rewardDecreasePerCheckpoint [138621,138649]
    parameter [138660,138691]
        type_name: uint256 [138660,138667]
        identifier: _maxRewardedCheckpoints [138668,138691]
    parameter [138702,138732]
        type_name: uint256 [138702,138709]
        identifier: _checkpointRewardDelta [138710,138732]
    visibility: public [138740,138746]
    modifier_invocation [138747,138761]
        identifier: onlyGovernance [138747,138761]
    function_body [138762,139107]
        expression_statement [138773,139100]
            call_expression [138773,139099]
                identifier: delegatedFwd [138773,138785]
                call_argument [138800,138813]
                    identifier: extensionCode [138800,138813]
                call_argument [138828,139088]
                    call_expression [138828,139088]
                        member_expression: abi.encodeWithSelector [138828,138850]
                        call_argument [138869,138943]
                            member_expression: StakeManagerExtension(extensionCode).updateCheckpointRewardParams.selector [138869,138943]
                        call_argument [138962,138990]
                            identifier: _rewardDecreasePerCheckpoint [138962,138990]
                        call_argument [139009,139032]
                            identifier: _maxRewardedCheckpoints [139009,139032]
                        call_argument [139051,139073]
                            identifier: _checkpointRewardDelta [139051,139073]
to
contract_body [118403,149751]
at 37

New cluster:
===
insert-node
---
function_definition [139152,139522]
to
contract_body [118403,149751]
at 38
------------
===
insert-node
---
visibility: public [139231,139237]
to
function_definition [139152,139522]
at 4
===
insert-node
---
identifier: migrateValidatorsData [139161,139182]
to
function_definition [139152,139522]
at 1
===
insert-node
---
function: function [139152,139160]
to
function_definition [139152,139522]
at 0
===
insert-node
---
function_definition [139152,139522]
to
contract_body [118403,149751]
at 38

New cluster:
===
insert-node
---
function_definition [139530,139634]
to
contract_body [118403,149751]
at 39
------------
===
insert-node
---
identifier: insertSigners [139539,139552]
to
function_definition [139530,139634]
at 1
===
insert-node
---
function: function [139530,139538]
to
function_definition [139530,139634]
at 0
===
insert-node
---
visibility: public [139580,139586]
to
function_definition [139530,139634]
at 3
===
insert-node
---
function_definition [139530,139634]
to
contract_body [118403,149751]
at 39

New cluster:
===
insert-node
---
function_definition [141163,141552]
to
contract_body [118403,149751]
at 46
------------
===
insert-node
---
identifier: drainValidatorShares [141172,141192]
to
function_definition [141163,141552]
at 1
===
insert-node
---
visibility: external [141321,141329]
to
function_definition [141163,141552]
at 6
===
insert-node
---
call_expression [141477,141544]
to
expression_statement [141477,141545]
at 0
===
insert-node
---
function_definition [141163,141552]
to
contract_body [118403,149751]
at 46
===
insert-node
---
member_expression: IValidatorShare(contractAddr).drain [141477,141512]
to
call_expression [141477,141544]
at 0
===
insert-node
---
function: function [141163,141171]
to
function_definition [141163,141552]
at 0
===
insert-node
---
function_body [141345,141552]
to
function_definition [141163,141552]
at 8
===
insert-node
---
expression_statement [141477,141545]
to
function_body [141345,141552]
at 2

New cluster:
===
insert-node
---
function_definition [141560,141690]
to
contract_body [118403,149751]
at 47
------------
===
insert-node
---
function: function [141560,141568]
to
function_definition [141560,141690]
at 0
===
insert-node
---
function_body [141636,141690]
to
function_definition [141560,141690]
at 6
===
insert-node
---
call_expression [141647,141682]
to
expression_statement [141647,141683]
at 0
===
insert-node
---
expression_statement [141647,141683]
to
function_body [141636,141690]
at 0
===
insert-node
---
function_definition [141560,141690]
to
contract_body [118403,149751]
at 47
===
insert-node
---
identifier: drain [141569,141574]
to
function_definition [141560,141690]
at 1
===
insert-node
---
visibility: external [141612,141620]
to
function_definition [141560,141690]
at 4
===
insert-node
---
identifier: _transferToken [141647,141661]
to
call_expression [141647,141682]
at 0

New cluster:
===
insert-node
---
function_definition [142247,142397]
to
contract_body [118403,149751]
at 49
------------
===
insert-node
---
function_definition [142247,142397]
to
contract_body [118403,149751]
at 49
===
insert-node
---
visibility: public [142303,142309]
to
function_definition [142247,142397]
at 4
===
insert-node
---
function_body [142327,142397]
to
function_definition [142247,142397]
at 6
===
insert-node
---
function: function [142247,142255]
to
function_definition [142247,142397]
at 0
===
insert-node
---
identifier: topUpForFee [142256,142267]
to
function_definition [142247,142397]
at 1

New cluster:
===
insert-node
---
function_definition [143288,143792]
to
contract_body [118403,149751]
at 52
------------
===
insert-node
---
call_argument [143536,143773]
to
call_expression [143481,143784]
at 2
===
insert-node
---
member_expression: abi.encodeWithSelector [143536,143558]
to
call_expression [143536,143773]
at 0
===
insert-node
---
identifier: startAuction [143297,143309]
to
function_definition [143288,143792]
at 1
===
insert-node
---
expression_statement [143481,143785]
to
function_body [143470,143792]
at 0
===
insert-node
---
function_definition [143288,143792]
to
contract_body [118403,149751]
at 52
===
insert-node
---
call_expression [143536,143773]
to
call_argument [143536,143773]
at 0
===
insert-node
---
visibility: external [143444,143452]
to
function_definition [143288,143792]
at 6
===
insert-node
---
function: function [143288,143296]
to
function_definition [143288,143792]
at 0
===
insert-node
---
call_expression [143481,143784]
to
expression_statement [143481,143785]
at 0
===
insert-node
---
function_body [143470,143792]
to
function_definition [143288,143792]
at 8
===
insert-node
---
identifier: delegatedFwd [143481,143493]
to
call_expression [143481,143784]
at 0

New cluster:
===
insert-node
---
function_definition [143800,144241]
to
contract_body [118403,149751]
at 53
------------
===
insert-node
---
function_definition [143800,144241]
to
contract_body [118403,149751]
at 53
===
insert-node
---
identifier: confirmAuctionBid [143809,143826]
to
function_definition [143800,144241]
at 1
===
insert-node
---
call_argument [144011,144222]
to
call_expression [143956,144233]
at 2
===
insert-node
---
visibility: external [143919,143927]
to
function_definition [143800,144241]
at 4
===
insert-node
---
function: function [143800,143808]
to
function_definition [143800,144241]
at 0
===
insert-node
---
function_body [143945,144241]
to
function_definition [143800,144241]
at 6
===
insert-node
---
expression_statement [143956,144234]
to
function_body [143945,144241]
at 0
===
insert-node
---
identifier: delegatedFwd [143956,143968]
to
call_expression [143956,144233]
at 0
===
insert-node
---
member_expression: abi.encodeWithSelector [144011,144033]
to
call_expression [144011,144222]
at 0
===
insert-node
---
call_expression [143956,144233]
to
expression_statement [143956,144234]
at 0
===
insert-node
---
call_expression [144011,144222]
to
call_argument [144011,144222]
at 0

New cluster:
===
insert-node
---
function_definition [144249,144876]
to
contract_body [118403,149751]
at 54
------------
===
insert-node
---
call_expression [144720,144789]
to
variable_declaration_statement [144695,144790]
at 2
===
insert-node
---
function_body [144483,144876]
to
function_definition [144249,144876]
at 9
===
insert-node
---
affectation_operator: = [144718,144719]
to
variable_declaration_statement [144695,144790]
at 1
===
insert-node
---
call_expression [144647,144682]
to
expression_statement [144647,144683]
at 0
===
insert-node
---
function_definition [144249,144876]
to
contract_body [118403,149751]
at 54
===
insert-node
---
expression_statement [144647,144683]
to
function_body [144483,144876]
at 2
===
insert-node
---
identifier: _unstake [144647,144655]
to
call_expression [144647,144682]
at 0
===
insert-node
---
identifier: _stakeFor [144720,144729]
to
call_expression [144720,144789]
at 0
===
insert-node
---
visibility: external [144474,144482]
to
function_definition [144249,144876]
at 8
===
insert-node
---
function: function [144249,144257]
to
function_definition [144249,144876]
at 0
===
insert-node
---
identifier: dethroneAndStake [144258,144274]
to
function_definition [144249,144876]
at 1
===
insert-node
---
variable_declaration_statement [144695,144790]
to
function_body [144483,144876]
at 3

New cluster:
===
insert-node
---
function_definition [148742,148918]
to
contract_body [118403,149751]
at 61
------------
===
insert-node
---
expression_statement [148868,148911]
to
function_body [148819,148918]
at 1
===
insert-node
---
function_body [148819,148918]
to
function_definition [148742,148918]
at 5
===
insert-node
---
function: function [148742,148750]
to
function_definition [148742,148918]
at 0
===
insert-node
---
identifier: withdrawRewards [148751,148766]
to
function_definition [148742,148918]
at 1
===
insert-node
---
visibility: public [148788,148794]
to
function_definition [148742,148918]
at 3
===
insert-node
---
call_expression [148868,148910]
to
expression_statement [148868,148911]
at 0
===
insert-node
---
function_definition [148742,148918]
to
contract_body [118403,149751]
at 61
===
insert-node
---
identifier: _liquidateRewards [148868,148885]
to
call_expression [148868,148910]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [149884,150083]
    function: function [149884,149892]
    identifier: increaseValidatorDelegatedAmount [149893,149925]
    parameter [149926,149945]
        type_name: uint256 [149926,149933]
        identifier: validatorId [149934,149945]
    parameter [149947,149961]
        type_name: uint256 [149947,149954]
        identifier: amount [149955,149961]
    visibility: private [149963,149970]
    function_body [149971,150083]
        expression_statement [149982,150076]
            assignment_expression [149982,150075]
                member_expression: validators[validatorId].delegatedAmount [149982,150021]
                affectation_operator: = [150022,150023]
                call_expression [150024,150075]
                    member_expression: validators[validatorId].delegatedAmount.add [150024,150067]
                    call_argument [150068,150074]
                        identifier: amount [150068,150074]
to
contract_body [118403,149751]
at 64

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [150091,150317]
    function: function [150091,150099]
    identifier: decreaseValidatorDelegatedAmount [150100,150132]
    parameter [150133,150152]
        type_name: uint256 [150133,150140]
        identifier: validatorId [150141,150152]
    parameter [150154,150168]
        type_name: uint256 [150154,150161]
        identifier: amount [150162,150168]
    visibility: public [150170,150176]
    modifier_invocation [150177,150204]
        identifier: onlyDelegation [150177,150191]
        call_argument [150192,150203]
            identifier: validatorId [150192,150203]
    function_body [150205,150317]
        expression_statement [150216,150310]
            assignment_expression [150216,150309]
                member_expression: validators[validatorId].delegatedAmount [150216,150255]
                affectation_operator: = [150256,150257]
                call_expression [150258,150309]
                    member_expression: validators[validatorId].delegatedAmount.sub [150258,150301]
                    call_argument [150302,150308]
                        identifier: amount [150302,150308]
to
contract_body [118403,149751]
at 65

New cluster:
===
insert-node
---
function_definition [151171,154355]
to
contract_body [118403,149751]
at 67
------------
===
insert-node
---
block_statement [152048,153815]
to
for_statement [152006,153815]
at 4
===
insert-node
---
function_definition [151171,154355]
to
contract_body [118403,149751]
at 67
===
insert-node
---
affectation_operator: = [152078,152079]
to
variable_declaration_statement [152063,152119]
at 1
===
insert-node
---
call_expression [152080,152118]
to
variable_declaration_statement [152063,152119]
at 2
===
insert-node
---
variable_declaration_statement [152063,152119]
to
block_statement [152048,153815]
at 0
===
insert-node
---
identifier: _isValidator [152761,152773]
to
call_expression [152761,152834]
at 0
===
insert-node
---
else: else [153407,153411]
to
if_statement [152757,153804]
at 3
===
insert-node
---
visibility: external [151354,151362]
to
function_definition [151171,154355]
at 7
===
insert-node
---
member_expression: ECVerify.ecrecovery [152080,152099]
to
call_expression [152080,152118]
at 0
===
insert-node
---
function: function [151171,151179]
to
function_definition [151171,154355]
at 0
===
insert-node
---
function_body [151395,154355]
to
function_definition [151171,154355]
at 10
===
insert-node
---
if: if [152135,152137]
to
if_statement [152135,152269]
at 0
===
insert-node
---
identifier: checkSignatures [151180,151195]
to
function_definition [151171,154355]
at 1
===
insert-node
---
if: if [152757,152759]
to
if_statement [152757,153804]
at 0
===
insert-node
---
if_statement [152285,152467]
to
block_statement [152048,153815]
at 2
===
insert-node
---
block_statement [152836,153406]
to
if_statement [152757,153804]
at 2
===
insert-node
---
for_statement [152006,153815]
to
function_body [151395,154355]
at 11
===
insert-node
---
if_statement [152135,152269]
to
block_statement [152048,153815]
at 1
===
insert-node
---
if_statement [152757,153804]
to
block_statement [152048,153815]
at 7
===
insert-node
---
for: for [152006,152009]
to
for_statement [152006,153815]
at 0
===
insert-node
---
call_expression [152761,152834]
to
if_statement [152757,153804]
at 1
===
insert-node
---
if: if [152285,152287]
to
if_statement [152285,152467]
at 0

New cluster:
===
insert-node
---
function_definition [154363,154787]
to
contract_body [118403,149751]
at 68
------------
===
insert-node
---
identifier: delegatedFwd [154525,154537]
to
call_expression [154525,154779]
at 0
===
insert-node
---
call_expression [154580,154768]
to
call_argument [154580,154768]
at 0
===
insert-node
---
member_expression: abi.encodeWithSelector [154580,154602]
to
call_expression [154580,154768]
at 0
===
insert-node
---
function: function [154363,154371]
to
function_definition [154363,154787]
at 0
===
insert-node
---
identifier: updateCommissionRate [154372,154392]
to
function_definition [154363,154787]
at 1
===
insert-node
---
call_expression [154525,154779]
to
expression_statement [154525,154780]
at 0
===
insert-node
---
function_body [154474,154787]
to
function_definition [154363,154787]
at 6
===
insert-node
---
visibility: external [154441,154449]
to
function_definition [154363,154787]
at 4
===
insert-node
---
call_argument [154580,154768]
to
call_expression [154525,154779]
at 2
===
insert-node
---
function_definition [154363,154787]
to
contract_body [118403,149751]
at 68
===
insert-node
---
expression_statement [154525,154780]
to
function_body [154474,154787]
at 1

New cluster:
===
insert-node
---
function_definition [154795,155149]
to
contract_body [118403,149751]
at 69
------------
===
insert-node
---
visibility: public [154850,154856]
to
function_definition [154795,155149]
at 3
===
insert-node
---
function_definition [154795,155149]
to
contract_body [118403,149751]
at 69
===
insert-node
---
identifier: withdrawDelegatorsReward [154804,154828]
to
function_definition [154795,155149]
at 1
===
insert-node
---
function: function [154795,154803]
to
function_definition [154795,155149]
at 0

New cluster:
===
insert-node
---
function_definition [159991,160295]
to
contract_body [118403,149751]
at 78
------------
===
insert-node
---
identifier: _isValidator [160000,160012]
to
function_definition [159991,160295]
at 1
===
insert-node
---
function_definition [159991,160295]
to
contract_body [118403,149751]
at 78
===
insert-node
---
visibility: private [160137,160144]
to
function_definition [159991,160295]
at 6
===
insert-node
---
function: function [159991,159999]
to
function_definition [159991,160295]
at 0

New cluster:
===
insert-node
---
function_definition [160303,160909]
to
contract_body [118403,149751]
at 79
------------
===
insert-node
---
visibility: private [160403,160410]
to
function_definition [160303,160909]
at 4
===
insert-node
---
function: function [160303,160311]
to
function_definition [160303,160909]
at 0
===
insert-node
---
identifier: _fillUnsignedValidators [160312,160335]
to
function_definition [160303,160909]
at 1
===
insert-node
---
function_definition [160303,160909]
to
contract_body [118403,149751]
at 79

New cluster:
===
insert-node
---
function_definition [160917,163480]
to
contract_body [118403,149751]
at 80
------------
===
insert-node
---
function: function [160917,160925]
to
function_definition [160917,163480]
at 0
===
insert-node
---
identifier: _calculateCheckpointReward [160926,160952]
to
function_definition [160917,163480]
at 1
===
insert-node
---
visibility: internal [161063,161071]
to
function_definition [160917,163480]
at 5
===
insert-node
---
function_definition [160917,163480]
to
contract_body [118403,149751]
at 80
===
insert-node
---
function_body [161090,163480]
to
function_definition [160917,163480]
at 7

New cluster:
===
insert-node
---
function_definition [163488,165306]
to
contract_body [118403,149751]
at 81
------------
===
insert-node
---
affectation_operator: = [164254,164255]
to
variable_declaration_statement [164235,164284]
at 1
===
insert-node
---
affectation_operator: = [164324,164325]
to
variable_declaration_statement [164296,164349]
at 1
===
insert-node
---
function_body [163868,165306]
to
function_definition [163488,165306]
at 12
===
insert-node
---
function: function [163488,163496]
to
function_definition [163488,165306]
at 0
===
insert-node
---
variable_declaration_statement [164235,164284]
to
function_body [163868,165306]
at 4
===
insert-node
---
affectation_operator: = [164173,164174]
to
variable_declaration_statement [164150,164225]
at 1
===
insert-node
---
variable_declaration_statement [164042,164138]
to
function_body [163868,165306]
at 2
===
insert-node
---
variable_declaration_statement [164296,164349]
to
function_body [163868,165306]
at 5
===
insert-node
---
variable_declaration_statement [164150,164225]
to
function_body [163868,165306]
at 3
===
insert-node
---
identifier: _increaseRewardAndAssertConsensus [163497,163530]
to
function_definition [163488,165306]
at 1
===
insert-node
---
affectation_operator: = [164057,164058]
to
variable_declaration_statement [164042,164138]
at 1
===
insert-node
---
function_definition [163488,165306]
to
contract_body [118403,149751]
at 81
===
insert-node
---
visibility: private [163842,163849]
to
function_definition [163488,165306]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [165314,165731]
    function: function [165314,165322]
    identifier: _updateValidatorsRewards [165323,165347]
    parameter [165358,165393]
        type_name: uint256[] [165358,165367]
        memory: memory [165368,165374]
        identifier: unsignedValidators [165375,165393]
    parameter [165404,165435]
        type_name: uint256 [165404,165411]
        identifier: totalUnsignedValidators [165412,165435]
    parameter [165446,165471]
        type_name: uint256 [165446,165453]
        identifier: newRewardPerStake [165454,165471]
    visibility: private [165479,165486]
    function_body [165487,165731]
        variable_declaration_statement [165498,165545]
            variable_declaration [165498,165527]
                type_name: uint256 [165498,165505]
                identifier: currentRewardPerStake [165506,165527]
            affectation_operator: = [165528,165529]
            identifier: rewardPerStake [165530,165544]
        for_statement [165555,165724]
            for: for [165555,165558]
            variable_declaration_statement [165560,165574]
                variable_declaration [165560,165569]
                    type_name: uint256 [165560,165567]
                    identifier: i [165568,165569]
                affectation_operator: = [165570,165571]
                number_literal: 0 [165572,165573]
            expression_statement [165575,165603]
                binary_expression [165575,165602]
                    identifier: i [165575,165576]
                    comparison_operator: < [165577,165578]
                    identifier: totalUnsignedValidators [165579,165602]
            update_expression [165604,165607]
                increment_operator: ++ [165604,165606]
                identifier: i [165606,165607]
            block_statement [165609,165724]
                expression_statement [165624,165713]
                    call_expression [165624,165712]
                        identifier: _updateRewardsAndCommit [165624,165647]
                        call_argument [165648,165669]
                            array_access [165648,165669]
                                identifier: unsignedValidators [165648,165666]
                                identifier: i [165667,165668]
                        call_argument [165671,165692]
                            identifier: currentRewardPerStake [165671,165692]
                        call_argument [165694,165711]
                            identifier: newRewardPerStake [165694,165711]
to
contract_body [118403,149751]
at 82

New cluster:
===
insert-node
---
function_definition [165739,167385]
to
contract_body [118403,149751]
at 83
------------
===
insert-node
---
if_statement [166069,167227]
to
function_body [165893,167385]
at 1
===
insert-node
---
block_statement [166311,166849]
to
if_statement [166286,167216]
at 2
===
insert-node
---
function_definition [165739,167385]
to
contract_body [118403,149751]
at 83
===
insert-node
---
visibility: private [165885,165892]
to
function_definition [165739,167385]
at 5
===
insert-node
---
call_expression [166414,166833]
to
expression_statement [166414,166834]
at 0
===
insert-node
---
if_statement [166286,167216]
to
block_statement [166120,167227]
at 2
===
insert-node
---
else: else [166850,166854]
to
if_statement [166286,167216]
at 3
===
insert-node
---
expression_statement [166414,166834]
to
block_statement [166311,166849]
at 1
===
insert-node
---
if: if [166286,166288]
to
if_statement [166286,167216]
at 0
===
insert-node
---
function: function [165739,165747]
to
function_definition [165739,167385]
at 0
===
insert-node
---
identifier: _getEligibleValidatorReward [166585,166612]
to
call_expression [166585,166814]
at 0
===
insert-node
---
if: if [166069,166071]
to
if_statement [166069,167227]
at 0
===
insert-node
---
function_body [165893,167385]
to
function_definition [165739,167385]
at 6
===
insert-node
---
block_statement [166120,167227]
to
if_statement [166069,167227]
at 2
===
insert-node
---
call_expression [166585,166814]
to
call_argument [166585,166814]
at 0
===
insert-node
---
identifier: _increaseValidatorRewardWithDelegation [166414,166452]
to
call_expression [166414,166833]
at 0
===
insert-node
---
identifier: _updateRewardsAndCommit [165748,165771]
to
function_definition [165739,167385]
at 1
===
insert-node
---
call_argument [166585,166814]
to
call_expression [166414,166833]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [167393,167533]
    function: function [167393,167401]
    identifier: _updateRewards [167402,167416]
    parameter [167417,167436]
        type_name: uint256 [167417,167424]
        identifier: validatorId [167425,167436]
    visibility: private [167438,167445]
    function_body [167446,167533]
        expression_statement [167457,167526]
            call_expression [167457,167525]
                identifier: _updateRewardsAndCommit [167457,167480]
                call_argument [167481,167492]
                    identifier: validatorId [167481,167492]
                call_argument [167494,167508]
                    identifier: rewardPerStake [167494,167508]
                call_argument [167510,167524]
                    identifier: rewardPerStake [167510,167524]
to
contract_body [118403,149751]
at 84

New cluster:
===
insert-node
---
function_definition [167541,167932]
to
contract_body [118403,149751]
at 85
------------
===
insert-node
---
identifier: _getEligibleValidatorReward [167550,167577]
to
function_definition [167541,167932]
at 1
===
insert-node
---
visibility: private [167733,167740]
to
function_definition [167541,167932]
at 6
===
insert-node
---
function_definition [167541,167932]
to
contract_body [118403,149751]
at 85
===
insert-node
---
function: function [167541,167549]
to
function_definition [167541,167932]
at 0

New cluster:
===
insert-node
---
function_definition [167940,168155]
to
contract_body [118403,149751]
at 86
------------
===
insert-node
---
function_definition [167940,168155]
to
contract_body [118403,149751]
at 86
===
insert-node
---
if_statement [168030,168148]
to
function_body [168019,168155]
at 0
===
insert-node
---
identifier: _increaseValidatorReward [167949,167973]
to
function_definition [167940,168155]
at 1
===
insert-node
---
if: if [168030,168032]
to
if_statement [168030,168148]
at 0
===
insert-node
---
function: function [167940,167948]
to
function_definition [167940,168155]
at 0
===
insert-node
---
visibility: private [168011,168018]
to
function_definition [167940,168155]
at 4
===
insert-node
---
function_body [168019,168155]
to
function_definition [167940,168155]
at 5
===
insert-node
---
block_statement [168046,168148]
to
if_statement [168030,168148]
at 2

New cluster:
===
insert-node
---
function_definition [168163,168919]
to
contract_body [118403,149751]
at 87
------------
===
insert-node
---
variable_declaration_statement [168436,168594]
to
function_body [168349,168919]
at 1
===
insert-node
---
identifier: _increaseValidatorRewardWithDelegation [168172,168210]
to
function_definition [168163,168919]
at 1
===
insert-node
---
affectation_operator: = [168387,168388]
to
variable_declaration_statement [168360,168426]
at 1
===
insert-node
---
variable_declaration_statement [168360,168426]
to
function_body [168349,168919]
at 0
===
insert-node
---
call_expression [168503,168593]
to
variable_declaration_statement [168436,168594]
at 2
===
insert-node
---
function: function [168163,168171]
to
function_definition [168163,168919]
at 0
===
insert-node
---
function_body [168349,168919]
to
function_definition [168163,168919]
at 7
===
insert-node
---
affectation_operator: = [168488,168489]
to
variable_declaration_statement [168436,168594]
at 1
===
insert-node
---
visibility: private [168341,168348]
to
function_definition [168163,168919]
at 6
===
insert-node
---
identifier: _getValidatorAndDelegationReward [168503,168535]
to
call_expression [168503,168593]
at 0
===
insert-node
---
function_definition [168163,168919]
to
contract_body [118403,149751]
at 87

New cluster:
===
insert-node
---
function_definition [168927,169779]
to
contract_body [118403,149751]
at 88
------------
===
insert-node
---
identifier: _getValidatorAndDelegationReward [168936,168968]
to
function_definition [168927,169779]
at 1
===
insert-node
---
member_expression: validatorsStake.mul(reward).div [169261,169292]
to
call_expression [169261,169312]
at 0
===
insert-node
---
function: function [168927,168935]
to
function_definition [168927,169779]
at 0
===
insert-node
---
function_definition [168927,169779]
to
contract_body [118403,149751]
at 88
===
insert-node
---
call_expression [169261,169312]
to
variable_declaration_statement [169235,169313]
at 2
===
insert-node
---
visibility: internal [169102,169110]
to
function_definition [168927,169779]
at 6
===
insert-node
---
affectation_operator: = [169259,169260]
to
variable_declaration_statement [169235,169313]
at 1
===
insert-node
---
function_body [169143,169779]
to
function_definition [168927,169779]
at 9
===
insert-node
---
variable_declaration_statement [169235,169313]
to
function_body [169143,169779]
at 1

New cluster:
===
insert-node
---
function_definition [169787,170491]
to
contract_body [118403,149751]
at 89
------------
===
insert-node
---
function_definition [169787,170491]
to
contract_body [118403,149751]
at 89
===
insert-node
---
return: return [170236,170242]
to
return_statement [170236,170484]
at 0
===
insert-node
---
visibility: private [169864,169871]
to
function_definition [169787,170491]
at 3
===
insert-node
---
function_body [169960,170491]
to
function_definition [169787,170491]
at 6
===
insert-node
---
call_expression [170256,170483]
to
return_statement [170236,170484]
at 1
===
insert-node
---
identifier: _getValidatorAndDelegationReward [170256,170288]
to
call_expression [170256,170483]
at 0
===
insert-node
---
function: function [169787,169795]
to
function_definition [169787,170491]
at 0
===
insert-node
---
variable_declaration_statement [170038,170128]
to
function_body [169960,170491]
at 1
===
insert-node
---
affectation_operator: = [170065,170066]
to
variable_declaration_statement [170038,170128]
at 1
===
insert-node
---
identifier: _evaluateValidatorAndDelegationReward [169796,169833]
to
function_definition [169787,170491]
at 1
===
insert-node
---
return_statement [170236,170484]
to
function_body [169960,170491]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [174847,174998]
    function: function [174847,174855]
    identifier: _transferToken [174856,174870]
    parameter [174871,174890]
        type_name: address [174871,174878]
        identifier: destination [174879,174890]
    parameter [174892,174906]
        type_name: uint256 [174892,174899]
        identifier: amount [174900,174906]
    visibility: private [174908,174915]
    function_body [174916,174998]
        expression_statement [174927,174991]
            call_expression [174927,174990]
                identifier: require [174927,174934]
                call_argument [174935,174970]
                    call_expression [174935,174970]
                        member_expression: token.transfer [174935,174949]
                        call_argument [174950,174961]
                            identifier: destination [174950,174961]
                        call_argument [174963,174969]
                            identifier: amount [174963,174969]
                call_argument [174972,174989]
                    string_literal [174972,174989]
                        string: "transfer failed" [174972,174989]
to
contract_body [118403,149751]
at 95

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [175006,175224]
    function: function [175006,175014]
    identifier: _transferTokenFrom [175015,175033]
    parameter [175044,175056]
        type_name: address [175044,175051]
        identifier: from [175052,175056]
    parameter [175067,175086]
        type_name: address [175067,175074]
        identifier: destination [175075,175086]
    parameter [175097,175111]
        type_name: uint256 [175097,175104]
        identifier: amount [175105,175111]
    visibility: private [175119,175126]
    function_body [175127,175224]
        expression_statement [175138,175217]
            call_expression [175138,175216]
                identifier: require [175138,175145]
                call_argument [175146,175191]
                    call_expression [175146,175191]
                        member_expression: token.transferFrom [175146,175164]
                        call_argument [175165,175169]
                            identifier: from [175165,175169]
                        call_argument [175171,175182]
                            identifier: destination [175171,175182]
                        call_argument [175184,175190]
                            identifier: amount [175184,175190]
                call_argument [175193,175215]
                    string_literal [175193,175215]
                        string: "transfer from failed" [175193,175215]
to
contract_body [118403,149751]
at 96

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [175797,176247]
    function: function [175797,175805]
    identifier: _insertSigner [175806,175819]
    parameter [175820,175837]
        type_name: address [175820,175827]
        identifier: newSigner [175828,175837]
    visibility: internal [175839,175847]
    function_body [175848,176247]
        expression_statement [175859,175883]
            call_expression [175859,175882]
                member_expression: signers.push [175859,175871]
                call_argument [175872,175881]
                    identifier: newSigner [175872,175881]
        variable_declaration_statement [175895,175931]
            variable_declaration [175895,175909]
                type_name: uint [175895,175899]
                identifier: lastIndex [175900,175909]
            affectation_operator: = [175910,175911]
            binary_expression [175912,175930]
                member_expression: signers.length [175912,175926]
                arithmetic_operator: - [175927,175928]
                number_literal: 1 [175929,175930]
        variable_declaration_statement [175941,175960]
            variable_declaration [175941,175947]
                type_name: uint [175941,175945]
                identifier: i [175946,175947]
            affectation_operator: = [175948,175949]
            identifier: lastIndex [175950,175959]
        for_statement [175970,176159]
            for: for [175970,175973]
            expression_statement [175977,175983]
                binary_expression [175977,175982]
                    identifier: i [175977,175978]
                    comparison_operator: > [175979,175980]
                    number_literal: 0 [175981,175982]
            update_expression [175984,175987]
                increment_operator: -- [175984,175986]
                identifier: i [175986,175987]
            block_statement [175989,176159]
                variable_declaration_statement [176004,176036]
                    variable_declaration [176004,176018]
                        type_name: address [176004,176011]
                        identifier: signer [176012,176018]
                    affectation_operator: = [176019,176020]
                    array_access [176021,176035]
                        identifier: signers [176021,176028]
                        binary_expression [176029,176034]
                            identifier: i [176029,176030]
                            arithmetic_operator: - [176031,176032]
                            number_literal: 1 [176033,176034]
                if_statement [176050,176114]
                    if: if [176050,176052]
                    binary_expression [176054,176072]
                        identifier: signer [176054,176060]
                        comparison_operator: < [176061,176062]
                        identifier: newSigner [176063,176072]
                    block_statement [176074,176114]
                        break_statement [176093,176099]
                            break: break [176093,176098]
                expression_statement [176128,176148]
                    assignment_expression [176128,176147]
                        array_access [176128,176138]
                            identifier: signers [176128,176135]
                            identifier: i [176136,176137]
                        affectation_operator: = [176139,176140]
                        identifier: signer [176141,176147]
        if_statement [176171,176240]
            if: if [176171,176173]
            binary_expression [176175,176189]
                identifier: i [176175,176176]
                comparison_operator: != [176177,176179]
                identifier: lastIndex [176180,176189]
            block_statement [176191,176240]
                expression_statement [176206,176229]
                    assignment_expression [176206,176228]
                        array_access [176206,176216]
                            identifier: signers [176206,176213]
                            identifier: i [176214,176215]
                        affectation_operator: = [176217,176218]
                        identifier: newSigner [176219,176228]
to
contract_body [118403,149751]
at 99

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [176255,176405]
    function: function [176255,176263]
    identifier: _updateSigner [176264,176277]
    parameter [176278,176296]
        type_name: address [176278,176285]
        identifier: prevSigner [176286,176296]
    parameter [176298,176315]
        type_name: address [176298,176305]
        identifier: newSigner [176306,176315]
    visibility: internal [176317,176325]
    function_body [176326,176405]
        expression_statement [176337,176363]
            call_expression [176337,176362]
                identifier: _removeSigner [176337,176350]
                call_argument [176351,176361]
                    identifier: prevSigner [176351,176361]
        expression_statement [176373,176398]
            call_expression [176373,176397]
                identifier: _insertSigner [176373,176386]
                call_argument [176387,176396]
                    identifier: newSigner [176387,176396]
to
contract_body [118403,149751]
at 100

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [176413,176982]
    function: function [176413,176421]
    identifier: _removeSigner [176422,176435]
    parameter [176436,176458]
        type_name: address [176436,176443]
        identifier: signerToDelete [176444,176458]
    visibility: internal [176460,176468]
    function_body [176469,176982]
        variable_declaration_statement [176480,176518]
            variable_declaration [176480,176500]
                type_name: uint256 [176480,176487]
                identifier: totalSigners [176488,176500]
            affectation_operator: = [176501,176502]
            member_expression: signers.length [176503,176517]
        variable_declaration_statement [176528,176575]
            variable_declaration [176528,176546]
                type_name: address [176528,176535]
                identifier: swapSigner [176536,176546]
            affectation_operator: = [176547,176548]
            array_access [176549,176574]
                identifier: signers [176549,176556]
                binary_expression [176557,176573]
                    identifier: totalSigners [176557,176569]
                    arithmetic_operator: - [176570,176571]
                    number_literal: 1 [176572,176573]
        expression_statement [176585,176618]
            array_access [176585,176617]
                unary_expression [176585,176599]
                    delete: delete [176585,176591]
                    identifier: signers [176592,176599]
                binary_expression [176600,176616]
                    identifier: totalSigners [176600,176612]
                    arithmetic_operator: - [176613,176614]
                    number_literal: 1 [176615,176616]
        for_statement [176706,176929]
            for: for [176706,176709]
            variable_declaration_statement [176711,176740]
                variable_declaration [176711,176720]
                    type_name: uint256 [176711,176718]
                    identifier: i [176719,176720]
                affectation_operator: = [176721,176722]
                binary_expression [176723,176739]
                    identifier: totalSigners [176723,176735]
                    arithmetic_operator: - [176736,176737]
                    number_literal: 1 [176738,176739]
            expression_statement [176741,176747]
                binary_expression [176741,176746]
                    identifier: i [176741,176742]
                    comparison_operator: > [176743,176744]
                    number_literal: 0 [176745,176746]
            update_expression [176748,176751]
                increment_operator: -- [176748,176750]
                identifier: i [176750,176751]
            block_statement [176753,176929]
                if_statement [176768,176842]
                    if: if [176768,176770]
                    binary_expression [176772,176800]
                        identifier: swapSigner [176772,176782]
                        comparison_operator: == [176783,176785]
                        identifier: signerToDelete [176786,176800]
                    block_statement [176802,176842]
                        break_statement [176821,176827]
                            break: break [176821,176826]
                expression_statement [176858,176918]
                    assignment_expression [176858,176917]
                        tuple_expression [176858,176886]
                            identifier: swapSigner [176859,176869]
                            array_access [176871,176885]
                                identifier: signers [176871,176878]
                                binary_expression [176879,176884]
                                    identifier: i [176879,176880]
                                    arithmetic_operator: - [176881,176882]
                                    number_literal: 1 [176883,176884]
                        affectation_operator: = [176887,176888]
                        tuple_expression [176889,176917]
                            array_access [176890,176904]
                                identifier: signers [176890,176897]
                                binary_expression [176898,176903]
                                    identifier: i [176898,176899]
                                    arithmetic_operator: - [176900,176901]
                                    number_literal: 1 [176902,176903]
                            identifier: swapSigner [176906,176916]
        expression_statement [176941,176975]
            assignment_expression [176941,176974]
                member_expression: signers.length [176941,176955]
                affectation_operator: = [176956,176957]
                binary_expression [176958,176974]
                    identifier: totalSigners [176958,176970]
                    arithmetic_operator: - [176971,176972]
                    number_literal: 1 [176973,176974]
to
contract_body [118403,149751]
at 101

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [21736,21748]
    type_name: bytes32 [21736,21743]
    identifier: hash [21744,21748]
to
function_definition [21716,22613]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [21750,21768]
    type_name: uint[3] [21750,21757]
    memory: memory [21758,21764]
    identifier: sig [21765,21768]
to
function_definition [21716,22613]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [21797,21801]
    pure: pure [21797,21801]
to
function_definition [21716,22613]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [21811,21828]
    returns: returns [21811,21818]
    parameter [21820,21827]
        type_name: address [21820,21827]
to
function_definition [21716,22613]
at 6

New cluster:
UPDATE from public to internal
------------
===
update-node
---
visibility: public [23715,23721]
replace public by internal
===
update-node
---
visibility: private [118593,118600]
replace private by internal
===
update-node
---
visibility: public [24575,24581]
replace public by internal
===
update-node
---
visibility: public [24968,24974]
replace public by internal
===
update-node
---
visibility: private [147956,147963]
replace private by internal

New cluster:
MOVE from function_definition [25799,25981]
------------
===
move-tree
---
function_body [26768,26920]
    expression_statement [26779,26901]
        call_expression [26779,26900]
            identifier: require [26779,26786]
            call_argument [26801,26834]
                binary_expression [26801,26834]
                    member_expression: msg.sender [26801,26811]
                    comparison_operator: == [26812,26814]
                    type_cast_expression [26815,26834]
                        primitive_type: address [26815,26822]
                        call_argument [26823,26833]
                            identifier: governance [26823,26833]
            call_argument [26849,26889]
                string_literal [26849,26889]
                    string: "Only governance contract is authorized" [26849,26889]
    expression_statement [26911,26913]
        identifier: _ [26911,26912]
to
function_definition [25799,25981]
at 4
===
move-tree
---
identifier: onlyGovernance [26751,26765]
to
modifier_definition [25715,25791]
at 1
===
move-tree
---
modifier: modifier [26742,26750]
to
modifier_definition [25715,25791]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [25836,25840]
    view: view [25836,25840]
to
function_definition [25799,25981]
at 3

New cluster:
UPDATE from public to external
------------
===
update-node
---
visibility: public [36621,36627]
replace public by external
===
update-node
---
visibility: public [141621,141627]
replace public by external
===
update-node
---
visibility: public [36389,36395]
replace public by external

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36307,36326]
    type_name: uint256 [36307,36314]
    identifier: validatorId [36315,36326]
to
function_definition [36282,36357]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [36335,36339]
    view: view [36335,36339]
to
function_definition [36282,36357]
at 4

New cluster:
MOVE from function_definition [36282,36357]
------------
===
move-tree
---
return_type_definition [37983,38000]
    returns: returns [37983,37990]
    parameter [37992,37999]
        type_name: uint256 [37992,37999]
to
function_definition [36282,36357]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36407,36426]
    type_name: uint256 [36407,36414]
    identifier: validatorId [36415,36426]
to
function_definition [36365,36451]
at 2

New cluster:
MOVE from function_definition [36365,36451]
------------
===
move-tree
---
parameter [35757,35771]
    type_name: uint256 [35757,35764]
    identifier: amount [35765,35771]
to
function_definition [36365,36451]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36493,36512]
    type_name: uint256 [36493,36500]
    identifier: validatorId [36501,36512]
to
function_definition [36459,36538]
at 2

New cluster:
MOVE from function_definition [36459,36538]
------------
===
move-tree
---
return_type_definition [37763,37780]
    returns: returns [37763,37770]
    parameter [37772,37779]
        type_name: uint256 [37772,37779]
to
function_definition [36459,36538]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36572,36591]
    type_name: uint256 [36572,36579]
    identifier: validatorId [36580,36591]
to
function_definition [36546,36622]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [36600,36604]
    view: view [36600,36604]
to
function_definition [36546,36622]
at 4

New cluster:
MOVE from function_definition [36546,36622]
------------
===
move-tree
---
return_type_definition [37704,37721]
    returns: returns [37704,37711]
    parameter [37713,37720]
        type_name: uint256 [37713,37720]
to
function_definition [36546,36622]
at 5

New cluster:
UPDATE from stake to dethroneAndStake
------------
===
update-node
---
identifier: stake [35741,35746]
replace stake by dethroneAndStake

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36666,36685]
    type_name: address [36666,36673]
    identifier: auctionUser [36674,36685]
to
function_definition [35732,35888]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36726,36745]
    type_name: uint256 [36726,36733]
    identifier: validatorId [36734,36745]
to
function_definition [35732,35888]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [36756,36777]
    type_name: uint256 [36756,36763]
    identifier: auctionAmount [36764,36777]
to
function_definition [35732,35888]
at 5

New cluster:
MOVE from function_definition [37281,37333]
------------
===
move-tree
---
visibility: public [37500,37506]
to
function_definition [37281,37333]
at 2
===
move-tree
---
function: function [37481,37489]
to
function_definition [37281,37333]
at 0
===
move-tree
---
identifier: restake [37490,37497]
to
function_definition [37281,37333]
at 1

New cluster:
UPDATE from unlockContract to unlock
------------
===
update-node
---
identifier: unlockContract [37678,37692]
replace unlockContract by unlock

New cluster:
UPDATE from lockContract to lock
------------
===
update-node
---
identifier: lockContract [37739,37751]
replace lockContract by lock

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [37566,37589]
    type_name: uint256 [37566,37573]
    identifier: delegatedAmount [37574,37589]
to
function_definition [37915,38001]
at 3

New cluster:
MOVE from return_type_definition [37307,37332]
------------
===
move-tree
---
parameter [37548,37563]
    type_name: uint256 [37548,37555]
    identifier: _reward [37556,37563]
to
return_type_definition [37307,37332]
at 1
===
move-tree
---
return_type_definition [37643,37660]
    returns: returns [37643,37650]
    parameter [37652,37659]
        type_name: uint256 [37652,37659]
to
function_definition [37915,38001]
at 6
===
move-tree
---
parameter [37574,37593]
    type_name: uint256 [37574,37581]
    identifier: _totalStake [37582,37593]
to
return_type_definition [37307,37332]
at 2
===
move-tree
---
parameter [37604,37626]
    type_name: uint256 [37604,37611]
    identifier: validatorStake [37612,37626]
to
function_definition [113242,114034]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [64673,64692]
    type_name: uint256 [64673,64680]
    identifier: validatorId [64681,64692]
to
modifier_definition [64642,64920]
at 2

New cluster:
UPDATE from _getTotalStake to getTotalStake
------------
===
update-node
---
identifier: _getTotalStake [109153,109167]
replace _getTotalStake by getTotalStake
===
update-node
---
identifier: _getTotalStake [107509,107523]
replace _getTotalStake by getTotalStake
===
update-node
---
identifier: _getTotalStake [106502,106516]
replace _getTotalStake by getTotalStake
===
update-node
---
identifier: getLiquidRewards [110489,110505]
replace getLiquidRewards by getTotalStake

New cluster:
UPDATE from internal to public
------------
===
update-node
---
visibility: internal [106173,106181]
replace internal by public
===
update-node
---
visibility: internal [106531,106539]
replace internal by public
===
update-node
---
visibility: internal [106892,106900]
replace internal by public

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [70749,70761]
    type_name: address [70749,70756]
    identifier: user [70757,70761]
to
function_definition [70723,70862]
at 2

New cluster:
MOVE from function_definition [70723,70862]
------------
===
move-tree
---
return_type_definition [37400,37417]
    returns: returns [37400,37407]
    parameter [37409,37416]
        type_name: uint256 [37409,37416]
to
function_definition [70723,70862]
at 5
===
move-tree
---
state_mutability [37395,37399]
    view: view [37395,37399]
to
function_definition [70723,70862]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [70793,70862]
    return_statement [70804,70855]
        return: return [70804,70810]
        call_expression [70811,70854]
            identifier: _calculateReward [70811,70827]
            call_argument [70828,70832]
                identifier: user [70828,70832]
            call_argument [70834,70853]
                call_expression [70834,70853]
                    identifier: getRewardPerShare [70834,70851]
to
function_definition [70723,70862]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [70906,70910]
    view: view [70906,70910]
to
function_definition [70870,71034]
at 3

New cluster:
MOVE from function_definition [70870,71034]
------------
===
move-tree
---
return_type_definition [37087,37104]
    returns: returns [37087,37094]
    parameter [37096,37103]
        type_name: uint256 [37096,37103]
to
function_definition [70870,71034]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [70929,71034]
    return_statement [70940,71027]
        return: return [70940,70946]
        call_expression [70947,71026]
            identifier: _calculateRewardPerShareWithRewards [70947,70982]
            call_argument [70983,71025]
                call_expression [70983,71025]
                    member_expression: stakeManager.delegatorsReward [70983,71012]
                    call_argument [71013,71024]
                        identifier: validatorId [71013,71024]
to
function_definition [70870,71034]
at 5

New cluster:
UPDATE from _buyVoucher to buyVoucher
------------
===
update-node
---
identifier: _buyVoucher [106118,106129]
replace _buyVoucher by buyVoucher

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [71156,71188]
    returns: returns [71156,71163]
    parameter [71164,71187]
        type_name: uint256 [71164,71171]
        identifier: amountToDeposit [71172,71187]
to
function_definition [106109,106485]
at 5

New cluster:
UPDATE from _restake to restake
------------
===
update-node
---
identifier: _restake [106881,106889]
replace _restake by restake

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [71521,71546]
    returns: returns [71521,71528]
    parameter [71529,71536]
        type_name: uint256 [71529,71536]
    parameter [71538,71545]
        type_name: uint256 [71538,71545]
to
function_definition [106872,107660]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [72508,72527]
    type_name: uint256 [72508,72515]
    identifier: claimAmount [72516,72527]
to
function_definition [72487,73102]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [72529,72556]
    type_name: uint256 [72529,72536]
    identifier: maximumSharesToBurn [72537,72556]
to
function_definition [72487,73102]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [74529,74552]
    type_name: uint256 [74529,74536]
    identifier: delegatedAmount [74537,74552]
to
function_definition [113242,114034]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [76029,76048]
    type_name: uint256 [76029,76036]
    identifier: claimAmount [76037,76048]
to
function_definition [76004,76700]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [76050,76077]
    type_name: uint256 [76050,76057]
    identifier: maximumSharesToBurn [76058,76077]
to
function_definition [76004,76700]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [76740,76759]
    type_name: uint256 [76740,76747]
    identifier: unbondNonce [76748,76759]
to
function_definition [76708,77070]
at 2

New cluster:
UPDATE from sellVoucher to _sellVoucher
------------
===
update-node
---
identifier: sellVoucher [108951,108962]
replace sellVoucher by _sellVoucher

New cluster:
UPDATE from public to private
------------
===
update-node
---
visibility: public [109013,109019]
replace public by private
===
update-node
---
visibility: public [112100,112106]
replace public by private
===
update-node
---
visibility: internal [112469,112477]
replace internal by private

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [77553,77578]
    returns: returns [77553,77560]
    parameter [77561,77568]
        type_name: uint256 [77561,77568]
    parameter [77570,77577]
        type_name: uint256 [77570,77577]
to
function_definition [108942,110382]
at 5

New cluster:
UPDATE from _claimUnstakedTokens to _unstakeClaimTokens
------------
===
update-node
---
identifier: _claimUnstakedTokens [112446,112466]
replace _claimUnstakedTokens by _unstakeClaimTokens

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [78596,78625]
    type_name: DelegatorUnbond [78596,78611]
    memory: memory [78612,78618]
    identifier: unbond [78619,78625]
to
function_definition [112437,113234]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [79531,79556]
    type_name: uint256 [79531,79538]
    identifier: accumulatedReward [79539,79556]
to
function_definition [79486,79963]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [79566,79570]
    view: view [79566,79570]
to
function_definition [79486,79963]
at 4

New cluster:
MOVE from function_definition [79486,79963]
------------
===
move-tree
---
return_type_definition [106901,106917]
    returns: returns [106901,106908]
    parameter [106909,106916]
        type_name: uint256 [106909,106916]
to
function_definition [79486,79963]
at 5

New cluster:
UPDATE from _getTotalStake to _calculateReward
------------
===
update-node
---
identifier: _getTotalStake [111385,111399]
replace _getTotalStake by _calculateReward
===
update-node
---
identifier: getLiquidRewards [112069,112085]
replace getLiquidRewards by _calculateReward

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [80011,80034]
    type_name: uint256 [80011,80018]
    identifier: _rewardPerShare [80019,80034]
to
function_definition [112060,112343]
at 3

New cluster:
MOVE from function_body [107787,108651]
------------
===
move-tree
---
expression_statement [108342,108383]
    assignment_expression [108342,108382]
        identifier: activeAmount [108342,108354]
        affectation_operator: = [108355,108356]
        call_expression [108357,108382]
            member_expression: activeAmount.add [108357,108373]
            call_argument [108374,108381]
                identifier: _amount [108374,108381]
to
function_body [107787,108651]
at 9

New cluster:
MOVE from function_definition [82315,82667]
------------
===
move-tree
---
parameter [99505,99517]
    type_name: address [99505,99512]
    identifier: from [99513,99517]
to
function_definition [82315,82667]
at 2
===
move-tree
---
parameter [99528,99538]
    type_name: address [99528,99535]
    identifier: to [99536,99538]
to
function_definition [82315,82667]
at 3
===
move-tree
---
parameter [99549,99562]
    type_name: uint256 [99549,99556]
    identifier: value [99557,99562]
to
function_definition [82315,82667]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [82418,82667]
    expression_statement [82468,82499]
        call_expression [82468,82498]
            identifier: _withdrawAndTransferReward [82468,82494]
            call_argument [82495,82497]
                identifier: to [82495,82497]
    expression_statement [82547,82580]
        call_expression [82547,82579]
            identifier: _withdrawAndTransferReward [82547,82573]
            call_argument [82574,82578]
                identifier: from [82574,82578]
    expression_statement [82627,82660]
        call_expression [82627,82659]
            member_expression: super._transfer [82627,82642]
            call_argument [82643,82647]
                identifier: from [82643,82647]
            call_argument [82649,82651]
                identifier: to [82649,82651]
            call_argument [82653,82658]
                identifier: value [82653,82658]
to
function_definition [82315,82667]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_member [121571,121594]
    type_name: uint256 [121571,121578]
    identifier: commissionRate [121579,121593]
to
struct_declaration [117381,117636]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_member [121604,121633]
    type_name: uint256 [121604,121611]
    identifier: lastCommissionUpdate [121612,121632]
to
struct_declaration [117381,117636]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_member [121643,121668]
    type_name: uint256 [121643,121650]
    identifier: delegatorsReward [121651,121667]
to
struct_declaration [117381,117636]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_member [121678,121702]
    type_name: uint256 [121678,121685]
    identifier: delegatedAmount [121686,121701]
to
struct_declaration [117381,117636]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_member [121712,121742]
    type_name: uint256 [121712,121719]
    identifier: initialRewardPerStake [121720,121741]
to
struct_declaration [117381,117636]
at 14

New cluster:
UPDATE from factory to validatorShareFactory
------------
===
update-node
---
identifier: factory [119513,119520]
replace factory by validatorShareFactory
===
update-node
---
identifier: factory [149263,149270]
replace factory by validatorShareFactory
===
update-node
---
identifier: factory [116045,116052]
replace factory by validatorShareFactory

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [127527,127553]
    type_name: IStakeManager [127527,127540]
    identifier: stakeManager [127541,127553]
to
function_definition [125554,127692]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [130878,130897]
    type_name: uint256 [130878,130885]
    identifier: validatorId [130886,130897]
to
function_definition [130848,131640]
at 2

New cluster:
MOVE from function_definition [130848,131640]
------------
===
move-tree
---
parameter [102230,102255]
    type_name: uint256 [102230,102237]
    identifier: newCommissionRate [102238,102255]
to
function_definition [130848,131640]
at 3

New cluster:
UPDATE from _assertOnlyStaker to _assertStaker
------------
===
update-node
---
identifier: _assertOnlyStaker [118773,118790]
replace _assertOnlyStaker by _assertStaker
===
update-node
---
identifier: _assertOnlyStaker [118706,118723]
replace _assertOnlyStaker by _assertStaker

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [133205,133224]
    type_name: uint256 [133205,133212]
    identifier: validatorId [133213,133224]
to
function_definition [133178,133348]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [133234,133238]
    view: view [133234,133238]
to
function_definition [133178,133348]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [133692,133714]
    type_name: address [133692,133699]
    identifier: _extensionCode [133700,133714]
to
function_definition [118971,120205]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [135658,135677]
    type_name: uint256 [135658,135665]
    identifier: validatorId [135666,135677]
to
function_definition [135633,135774]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [135686,135690]
    view: view [135686,135690]
to
function_definition [135633,135774]
at 4

New cluster:
MOVE from function_definition [135633,135774]
------------
===
move-tree
---
return_type_definition [106182,106198]
    returns: returns [106182,106189]
    parameter [106190,106197]
        type_name: uint256 [106190,106197]
to
function_definition [135633,135774]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [135709,135774]
    return_statement [135720,135767]
        return: return [135720,135726]
        member_expression: validators[validatorId].delegatedAmount [135727,135766]
to
function_definition [135633,135774]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [135808,135827]
    type_name: uint256 [135808,135815]
    identifier: validatorId [135816,135827]
to
function_definition [135782,136065]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [135836,135840]
    view: view [135836,135840]
to
function_definition [135782,136065]
at 4

New cluster:
MOVE from function_definition [135782,136065]
------------
===
move-tree
---
return_type_definition [104595,104612]
    returns: returns [104595,104602]
    parameter [104604,104611]
        type_name: uint256 [104604,104611]
to
function_definition [135782,136065]
at 5
===
move-tree
---
modifier_invocation [104585,104594]
    identifier: onlyOwner [104585,104594]
to
function_definition [139152,139522]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [135859,136065]
    variable_declaration_statement [135870,135953]
        variable_declaration_tuple [135870,135899]
            variable_declaration [135873,135898]
                type_name: uint256 [135873,135880]
                identifier: _delegatorsReward [135881,135898]
        affectation_operator: = [135900,135901]
        call_expression [135902,135952]
            identifier: _evaluateValidatorAndDelegationReward [135902,135939]
            call_argument [135940,135951]
                identifier: validatorId [135940,135951]
    return_statement [135963,136058]
        return: return [135963,135969]
        call_expression [135970,136057]
            member_expression: validators[validatorId].delegatorsReward.add(_delegatorsReward).sub [135970,136037]
            call_argument [136038,136056]
                identifier: INITIALIZED_AMOUNT [136038,136056]
to
function_definition [135782,136065]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [136098,136117]
    type_name: uint256 [136098,136105]
    identifier: validatorId [136106,136117]
to
function_definition [136073,136448]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [136126,136130]
    view: view [136126,136130]
to
function_definition [136073,136448]
at 4

New cluster:
MOVE from function_definition [168927,169779]
------------
===
move-tree
---
parameter [102988,103002]
    type_name: uint256 [102988,102995]
    identifier: reward [102996,103002]
to
function_definition [168927,169779]
at 4
===
move-tree
---
return_type_definition [103104,103121]
    returns: returns [103104,103111]
    parameter [103113,103120]
        type_name: uint256 [103113,103120]
to
function_definition [136073,136448]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [136149,136448]
    variable_declaration_statement [136160,136185]
        variable_declaration [136160,136184]
            type_name: uint256 [136160,136167]
            identifier: _validatorReward [136168,136184]
    if_statement [136195,136347]
        if: if [136195,136197]
        binary_expression [136199,136245]
            member_expression: validators[validatorId].deactivationEpoch [136199,136240]
            comparison_operator: == [136241,136243]
            number_literal: 0 [136244,136245]
        block_statement [136247,136347]
            expression_statement [136262,136336]
                assignment_expression [136262,136335]
                    tuple_expression [136262,136282]
                        identifier: _validatorReward [136263,136279]
                    affectation_operator: = [136283,136284]
                    call_expression [136285,136335]
                        identifier: _evaluateValidatorAndDelegationReward [136285,136322]
                        call_argument [136323,136334]
                            identifier: validatorId [136323,136334]
    return_statement [136357,136441]
        return: return [136357,136363]
        call_expression [136364,136440]
            member_expression: validators[validatorId].reward.add(_validatorReward).sub [136364,136420]
            call_argument [136421,136439]
                identifier: INITIALIZED_AMOUNT [136421,136439]
to
function_definition [136073,136448]
at 6

New cluster:
UPDATE from setToken to setStakingToken
------------
===
update-node
---
identifier: setToken [133363,133371]
replace setToken by setStakingToken

New cluster:
MOVE from function_definition [138169,138331]
------------
===
move-tree
---
parameter [133863,133878]
    type_name: uint256 [133863,133870]
    identifier: _blocks [133871,133878]
to
function_definition [138169,138331]
at 2
===
move-tree
---
modifier_invocation [133887,133901]
    identifier: onlyGovernance [133887,133901]
to
function_definition [138169,138331]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [139183,139206]
    type_name: uint256 [139183,139190]
    identifier: validatorIdFrom [139191,139206]
to
function_definition [139152,139522]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [139208,139229]
    type_name: uint256 [139208,139215]
    identifier: validatorIdTo [139216,139229]
to
function_definition [139152,139522]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [139248,139522]
    expression_statement [139259,139515]
        call_expression [139259,139514]
            identifier: delegatedFwd [139259,139271]
            call_argument [139286,139299]
                identifier: extensionCode [139286,139299]
            call_argument [139314,139503]
                call_expression [139314,139503]
                    member_expression: abi.encodeWithSelector [139314,139336]
                    call_argument [139355,139422]
                        member_expression: StakeManagerExtension(extensionCode).migrateValidatorsData.selector [139355,139422]
                    call_argument [139441,139456]
                        identifier: validatorIdFrom [139441,139456]
                    call_argument [139475,139488]
                        identifier: validatorIdTo [139475,139488]
to
function_definition [139152,139522]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [139553,139578]
    type_name: address[] [139553,139562]
    memory: memory [139563,139569]
    identifier: _signers [139570,139578]
to
function_definition [139530,139634]
at 2

New cluster:
MOVE from function_definition [139530,139634]
------------
===
move-tree
---
modifier_invocation [103520,103529]
    identifier: onlyOwner [103520,103529]
to
function_definition [139530,139634]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [139597,139634]
    expression_statement [139608,139627]
        assignment_expression [139608,139626]
            identifier: signers [139608,139615]
            affectation_operator: = [139616,139617]
            identifier: _signers [139618,139626]
to
function_definition [139530,139634]
at 5

New cluster:
UPDATE from updateContractAddress to updateValidatorContractAddress
------------
===
update-node
---
identifier: updateContractAddress [134432,134453]
replace updateContractAddress by updateValidatorContractAddress

New cluster:
MOVE from function_definition [141163,141552]
------------
===
move-tree
---
parameter [132380,132399]
    type_name: uint256 [132380,132387]
    identifier: validatorId [132388,132399]
to
function_definition [141163,141552]
at 2
===
move-tree
---
modifier_invocation [132408,132431]
    identifier: onlyStaker [132408,132418]
    call_argument [132419,132430]
        identifier: validatorId [132419,132430]
to
function_definition [148742,148918]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [141233,141250]
    type_name: address [141233,141240]
    identifier: tokenAddr [141241,141250]
to
function_definition [141163,141552]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [141261,141288]
    type_name: address payable [141261,141276]
    identifier: destination [141277,141288]
to
function_definition [141163,141552]
at 4

New cluster:
MOVE from function_definition [144249,144876]
------------
===
move-tree
---
parameter [122232,122251]
    type_name: uint256 [122232,122239]
    identifier: heimdallFee [122240,122251]
to
function_definition [144249,144876]
at 3
===
move-tree
---
parameter [122262,122283]
    type_name: bool [122262,122266]
    identifier: acceptDelegation [122267,122283]
to
function_definition [144249,144876]
at 6
===
move-tree
---
parameter [122294,122321]
    type_name: bytes [122294,122299]
    calldata: calldata [122300,122308]
    identifier: signerPubkey [122309,122321]
to
function_definition [144249,144876]
at 7
===
move-tree
---
parameter [122207,122221]
    type_name: uint256 [122207,122214]
    identifier: amount [122215,122221]
to
function_definition [141163,141552]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [141330,141344]
    identifier: onlyGovernance [141330,141344]
to
function_definition [141163,141552]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [141575,141594]
    type_name: address [141575,141582]
    identifier: destination [141583,141594]
to
function_definition [141560,141690]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [141596,141610]
    type_name: uint256 [141596,141603]
    identifier: amount [141604,141610]
to
function_definition [141560,141690]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [141621,141635]
    identifier: onlyGovernance [141621,141635]
to
function_definition [141560,141690]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [141835,141857]
    type_name: address [141835,141842]
    identifier: _extensionCode [141843,141857]
to
function_definition [148998,149326]
at 5

New cluster:
MOVE from function_definition [142247,142397]
------------
===
move-tree
---
parameter [120395,120414]
    type_name: uint256 [120395,120402]
    identifier: heimdallFee [120403,120414]
to
function_definition [142247,142397]
at 3
===
move-tree
---
modifier_invocation [120423,120439]
    identifier: onlyWhenUnlocked [120423,120439]
to
function_definition [142247,142397]
at 5
===
move-tree
---
parameter [120381,120393]
    type_name: address [120381,120388]
    identifier: user [120389,120393]
to
function_definition [142247,142397]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [143320,143339]
    type_name: uint256 [143320,143327]
    identifier: validatorId [143328,143339]
to
function_definition [143288,143792]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [143350,143364]
    type_name: uint256 [143350,143357]
    identifier: amount [143358,143364]
to
function_definition [143288,143792]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [143375,143397]
    type_name: bool [143375,143379]
    identifier: _acceptDelegation [143380,143397]
to
function_definition [143288,143792]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [143408,143436]
    type_name: bytes [143408,143413]
    calldata: calldata [143414,143422]
    identifier: _signerPubkey [143423,143436]
to
function_definition [143288,143792]
at 5

New cluster:
MOVE from function_definition [143288,143792]
------------
===
move-tree
---
modifier_invocation [125682,125698]
    identifier: onlyWhenUnlocked [125682,125698]
to
function_definition [143288,143792]
at 7

New cluster:
MOVE from function_definition [143800,144241]
------------
===
move-tree
---
parameter [137648,137667]
    type_name: uint256 [137648,137655]
    identifier: validatorId [137656,137667]
to
function_definition [143800,144241]
at 2
===
move-tree
---
state_mutability [137676,137680]
    view: view [137676,137680]
to
function_definition [148798,148990]
at 4
===
move-tree
---
return_type_definition [137681,137695]
    returns: returns [137681,137688]
    parameter [137690,137694]
        type_name: bool [137690,137694]
to
function_definition [159991,160295]
at 8
===
move-tree
---
function_body [137696,138247]
    variable_declaration_statement [137707,137773]
        variable_declaration [137707,137730]
            type_name: uint256 [137707,137714]
            identifier: activationEpoch [137715,137730]
        affectation_operator: = [137731,137732]
        member_expression: validators[validatorId].activationEpoch [137733,137772]
    variable_declaration_statement [137783,137853]
        variable_declaration [137783,137808]
            type_name: uint256 [137783,137790]
            identifier: deactivationEpoch [137791,137808]
        affectation_operator: = [137809,137810]
        member_expression: validators[validatorId].deactivationEpoch [137811,137852]
    variable_declaration_statement [137863,137911]
        variable_declaration [137863,137877]
            type_name: uint256 [137863,137870]
            identifier: amount [137871,137877]
        affectation_operator: = [137878,137879]
        member_expression: validators[validatorId].amount [137880,137910]
    variable_declaration_statement [137921,137968]
        variable_declaration [137921,137934]
            type_name: Status [137921,137927]
            identifier: status [137928,137934]
        affectation_operator: = [137935,137936]
        member_expression: validators[validatorId].status [137937,137967]
    variable_declaration_statement [137978,138015]
        variable_declaration [137978,137999]
            type_name: uint256 [137978,137985]
            identifier: _currentEpoch [137986,137999]
        affectation_operator: = [138000,138001]
        identifier: currentEpoch [138002,138014]
    return_statement [138027,138240]
        return: return [138027,138033]
        parenthesized_expression [138034,138239]
            binary_expression [138035,138238]
                binary_expression [138035,138198]
                    binary_expression [138035,138120]
                        binary_expression [138035,138045]
                            identifier: amount [138035,138041]
                            comparison_operator: > [138042,138043]
                            number_literal: 0 [138044,138045]
                        logical_operator: && [138046,138048]
                        parenthesized_expression [138062,138120]
                            binary_expression [138063,138119]
                                binary_expression [138063,138083]
                                    identifier: activationEpoch [138063,138078]
                                    comparison_operator: != [138079,138081]
                                    number_literal: 0 [138082,138083]
                                logical_operator: && [138084,138086]
                                binary_expression [138087,138119]
                                    identifier: activationEpoch [138087,138102]
                                    comparison_operator: <= [138103,138105]
                                    identifier: _currentEpoch [138106,138119]
                    logical_operator: && [138121,138123]
                    parenthesized_expression [138137,138198]
                        binary_expression [138138,138197]
                            binary_expression [138138,138160]
                                identifier: deactivationEpoch [138138,138155]
                                comparison_operator: == [138156,138158]
                                number_literal: 0 [138159,138160]
                            logical_operator: || [138161,138163]
                            binary_expression [138164,138197]
                                identifier: deactivationEpoch [138164,138181]
                                comparison_operator: > [138182,138183]
                                identifier: _currentEpoch [138184,138197]
                logical_operator: && [138199,138201]
                binary_expression [138215,138238]
                    identifier: status [138215,138221]
                    comparison_operator: == [138222,138224]
                    member_expression: Status.Active [138225,138238]
to
function_definition [159991,160295]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [143867,143886]
    type_name: uint256 [143867,143874]
    identifier: heimdallFee [143875,143886]
to
function_definition [143800,144241]
at 3

New cluster:
MOVE from function_definition [143800,144241]
------------
===
move-tree
---
modifier_invocation [122873,122889]
    identifier: onlyWhenUnlocked [122873,122889]
to
function_definition [143800,144241]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [144285,144304]
    type_name: address [144285,144292]
    identifier: auctionUser [144293,144304]
to
function_definition [144249,144876]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [144345,144364]
    type_name: uint256 [144345,144352]
    identifier: validatorId [144353,144364]
to
function_definition [144249,144876]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [144375,144396]
    type_name: uint256 [144375,144382]
    identifier: auctionAmount [144383,144396]
to
function_definition [144249,144876]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [145966,145993]
    identifier: onlyDelegation [145966,145980]
    call_argument [145981,145992]
        identifier: validatorId [145981,145992]
to
function_definition [128991,129311]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [148767,148786]
    type_name: uint256 [148767,148774]
    identifier: validatorId [148775,148786]
to
function_definition [148742,148918]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [149429,149456]
    identifier: onlyDelegation [149429,149443]
    call_argument [149444,149455]
        identifier: validatorId [149444,149455]
to
function_definition [134734,135109]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [151206,151227]
    type_name: uint256 [151206,151213]
    identifier: blockInterval [151214,151227]
to
function_definition [151171,154355]
at 2

New cluster:
MOVE from function_definition [151171,154355]
------------
===
move-tree
---
parameter [139844,139860]
    type_name: bytes32 [139844,139851]
    identifier: voteHash [139852,139860]
to
function_definition [151171,154355]
at 3
===
move-tree
---
parameter [139819,139833]
    type_name: uint256 [139819,139826]
    identifier: reward [139827,139833]
to
function_definition [167940,168155]
at 3
===
move-tree
---
return_type_definition [139905,139922]
    returns: returns [139905,139912]
    parameter [139914,139921]
        type_name: uint256 [139914,139921]
to
function_definition [151171,154355]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [151265,151282]
    type_name: bytes32 [151265,151272]
    identifier: stateRoot [151273,151282]
to
function_definition [151171,154355]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [151293,151309]
    type_name: address [151293,151300]
    identifier: proposer [151301,151309]
to
function_definition [151171,154355]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [151320,151346]
    type_name: uint256[3][] [151320,151332]
    calldata: calldata [151333,151341]
    identifier: sigs [151342,151346]
to
function_definition [151171,154355]
at 6

New cluster:
MOVE from function_definition [163488,165306]
------------
===
move-tree
---
parameter [138290,138311]
    type_name: uint256 [138290,138297]
    identifier: blockInterval [138298,138311]
to
function_definition [163488,165306]
at 2
===
move-tree
---
parameter [138377,138393]
    type_name: address [138377,138384]
    identifier: proposer [138385,138393]
to
function_definition [163488,165306]
at 3
===
move-tree
---
parameter [138349,138366]
    type_name: bytes32 [138349,138356]
    identifier: stateRoot [138357,138366]
to
function_definition [163488,165306]
at 5
===
move-tree
---
modifier_invocation [138436,138449]
    identifier: onlyRootChain [138436,138449]
to
function_definition [151171,154355]
at 8
===
move-tree
---
return_type_definition [138450,138467]
    returns: returns [138450,138457]
    parameter [138459,138466]
        type_name: uint256 [138459,138466]
to
function_definition [163488,165306]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [154393,154412]
    type_name: uint256 [154393,154400]
    identifier: validatorId [154401,154412]
to
function_definition [154363,154787]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [154414,154439]
    type_name: uint256 [154414,154421]
    identifier: newCommissionRate [154422,154439]
to
function_definition [154363,154787]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [154450,154473]
    identifier: onlyStaker [154450,154460]
    call_argument [154461,154472]
        identifier: validatorId [154461,154472]
to
function_definition [154363,154787]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [154829,154848]
    type_name: uint256 [154829,154836]
    identifier: validatorId [154837,154848]
to
function_definition [154795,155149]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [154857,154884]
    identifier: onlyDelegation [154857,154871]
    call_argument [154872,154883]
        identifier: validatorId [154872,154883]
to
function_definition [154795,155149]
at 4

New cluster:
MOVE from function_definition [154795,155149]
------------
===
move-tree
---
return_type_definition [114767,114784]
    returns: returns [114767,114774]
    parameter [114776,114783]
        type_name: uint256 [114776,114783]
to
function_definition [154795,155149]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [154903,155149]
    expression_statement [154914,154942]
        call_expression [154914,154941]
            identifier: _updateRewards [154914,154928]
            call_argument [154929,154940]
                identifier: validatorId [154929,154940]
    variable_declaration_statement [154954,155041]
        variable_declaration [154954,154973]
            type_name: uint256 [154954,154961]
            identifier: totalReward [154962,154973]
        affectation_operator: = [154974,154975]
        call_expression [154976,155040]
            member_expression: validators[validatorId].delegatorsReward.sub [154976,155020]
            call_argument [155021,155039]
                identifier: INITIALIZED_AMOUNT [155021,155039]
    expression_statement [155051,155113]
        assignment_expression [155051,155112]
            member_expression: validators[validatorId].delegatorsReward [155051,155091]
            affectation_operator: = [155092,155093]
            identifier: INITIALIZED_AMOUNT [155094,155112]
    return_statement [155123,155142]
        return: return [155123,155129]
        identifier: totalReward [155130,155141]
to
function_definition [154795,155149]
at 6

New cluster:
UPDATE from pubToAddress to _getAndAssertSigner
------------
===
update-node
---
identifier: pubToAddress [136413,136425]
replace pubToAddress by _getAndAssertSigner
===
update-node
---
identifier: pubToAddress [148807,148819]
replace pubToAddress by _getAndAssertSigner
===
update-node
---
identifier: pubToAddress [145119,145131]
replace pubToAddress by _getAndAssertSigner

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160023,160036]
    type_name: Status [160023,160029]
    identifier: status [160030,160036]
to
function_definition [159991,160295]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160047,160061]
    type_name: uint256 [160047,160054]
    identifier: amount [160055,160061]
to
function_definition [159991,160295]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160072,160097]
    type_name: uint256 [160072,160079]
    identifier: deactivationEpoch [160080,160097]
to
function_definition [159991,160295]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160108,160129]
    type_name: uint256 [160108,160115]
    identifier: _currentEpoch [160116,160129]
to
function_definition [159991,160295]
at 5

New cluster:
MOVE from function_definition [159991,160295]
------------
===
move-tree
---
state_mutability [148846,148850]
    pure: pure [148846,148850]
to
function_definition [159991,160295]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160336,160376]
    type_name: UnsignedValidatorsContext [160336,160361]
    memory: memory [160362,160368]
    identifier: context [160369,160376]
to
function_definition [160303,160909]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160378,160392]
    type_name: address [160378,160385]
    identifier: signer [160386,160392]
to
function_definition [160303,160909]
at 3

New cluster:
MOVE from function_definition [167541,167932]
------------
===
move-tree
---
return_type_definition [114533,114549]
    returns: returns [114533,114540]
    parameter [114541,114548]
        type_name: uint256 [114541,114548]
to
function_definition [167541,167932]
at 8
===
move-tree
---
state_mutability [114528,114532]
    view: view [114528,114532]
to
function_definition [160303,160909]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [160434,160475]
    returns: returns [160434,160441]
    parameter [160442,160474]
        type_name: UnsignedValidatorsContext [160442,160467]
        memory: memory [160468,160474]
to
function_definition [160303,160909]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [160481,160909]
    while_statement [160492,160840]
        while: while [160492,160497]
        binary_expression [160499,160603]
            array_access [160499,160593]
                binary_expression [160499,160569]
                    binary_expression [160499,160547]
                        member_expression: context.validatorIndex [160499,160521]
                        comparison_operator: < [160522,160523]
                        member_expression: context.totalValidators [160524,160547]
                    logical_operator: && [160548,160550]
                    member_expression: context.validators [160551,160569]
                member_expression: context.validatorIndex [160570,160592]
            comparison_operator: != [160594,160596]
            identifier: signer [160597,160603]
        block_statement [160605,160840]
            expression_statement [160620,160743]
                assignment_expression [160620,160742]
                    array_access [160620,160678]
                        member_expression: context.unsignedValidators [160620,160646]
                        member_expression: context.unsignedValidatorIndex [160647,160677]
                    affectation_operator: = [160679,160680]
                    array_access [160681,160742]
                        identifier: signerToValidator [160681,160698]
                        array_access [160699,160741]
                            member_expression: context.validators [160699,160717]
                            member_expression: context.validatorIndex [160718,160740]
            expression_statement [160757,160790]
                update_expression [160757,160789]
                    member_expression: context.unsignedValidatorIndex [160757,160787]
                    increment_operator: ++ [160787,160789]
            expression_statement [160804,160829]
                update_expression [160804,160828]
                    member_expression: context.validatorIndex [160804,160826]
                    increment_operator: ++ [160826,160828]
    expression_statement [160852,160877]
        update_expression [160852,160876]
            member_expression: context.validatorIndex [160852,160874]
            increment_operator: ++ [160874,160876]
    return_statement [160887,160902]
        return: return [160887,160893]
        identifier: context [160894,160901]
to
function_definition [160303,160909]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160963,160984]
    type_name: uint256 [160963,160970]
    identifier: blockInterval [160971,160984]
to
function_definition [160917,163480]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160995,161019]
    type_name: uint256 [160995,161002]
    identifier: signedStakePower [161003,161019]
to
function_definition [160917,163480]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [161030,161055]
    type_name: uint256 [161030,161037]
    identifier: currentTotalStake [161038,161055]
to
function_definition [160917,163480]
at 4

New cluster:
MOVE from function_definition [160917,163480]
------------
===
move-tree
---
return_type_definition [114641,114658]
    returns: returns [114641,114648]
    parameter [114650,114657]
        type_name: uint256 [114650,114657]
to
function_definition [160917,163480]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [163600,163624]
    type_name: uint256 [163600,163607]
    identifier: signedStakePower [163608,163624]
to
function_definition [163488,165306]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [163663,163698]
    type_name: uint256[] [163663,163672]
    memory: memory [163673,163679]
    identifier: unsignedValidators [163680,163698]
to
function_definition [163488,165306]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [163709,163740]
    type_name: uint256 [163709,163716]
    identifier: totalUnsignedValidators [163717,163740]
to
function_definition [163488,165306]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [163751,163789]
    type_name: uint256[] [163751,163760]
    memory: memory [163761,163767]
    identifier: deactivatedValidators [163768,163789]
to
function_definition [163488,165306]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [163800,163834]
    type_name: uint256 [163800,163807]
    identifier: totalDeactivatedValidators [163808,163834]
to
function_definition [163488,165306]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [165782,165801]
    type_name: uint256 [165782,165789]
    identifier: validatorId [165790,165801]
to
function_definition [165739,167385]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [165812,165841]
    type_name: uint256 [165812,165819]
    identifier: currentRewardPerStake [165820,165841]
to
function_definition [165739,167385]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [165852,165877]
    type_name: uint256 [165852,165859]
    identifier: newRewardPerStake [165860,165877]
to
function_definition [165739,167385]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [167588,167607]
    type_name: uint256 [167588,167595]
    identifier: validatorId [167596,167607]
to
function_definition [167541,167932]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [167618,167645]
    type_name: uint256 [167618,167625]
    identifier: validatorStakePower [167626,167645]
to
function_definition [167541,167932]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [167656,167685]
    type_name: uint256 [167656,167663]
    identifier: currentRewardPerStake [167664,167685]
to
function_definition [167541,167932]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [167696,167725]
    type_name: uint256 [167696,167703]
    identifier: initialRewardPerStake [167704,167725]
to
function_definition [167541,167932]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [167741,167745]
    pure: pure [167741,167745]
to
function_definition [167541,167932]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [167764,167932]
    variable_declaration_statement [167775,167846]
        variable_declaration [167775,167797]
            type_name: uint256 [167775,167782]
            identifier: eligibleReward [167783,167797]
        affectation_operator: = [167798,167799]
        binary_expression [167800,167845]
            identifier: currentRewardPerStake [167800,167821]
            arithmetic_operator: - [167822,167823]
            identifier: initialRewardPerStake [167824,167845]
    return_statement [167856,167925]
        return: return [167856,167862]
        call_expression [167863,167924]
            member_expression: eligibleReward.mul(validatorStakePower).div [167863,167906]
            call_argument [167907,167923]
                identifier: REWARD_PRECISION [167907,167923]
to
function_definition [167541,167932]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [167974,167993]
    type_name: uint256 [167974,167981]
    identifier: validatorId [167982,167993]
to
function_definition [167940,168155]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [168221,168240]
    type_name: uint256 [168221,168228]
    identifier: validatorId [168229,168240]
to
function_definition [168163,168919]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [168251,168274]
    type_name: uint256 [168251,168258]
    identifier: validatorsStake [168259,168274]
to
function_definition [168163,168919]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [168285,168308]
    type_name: uint256 [168285,168292]
    identifier: delegatedAmount [168293,168308]
to
function_definition [168163,168919]
at 4

New cluster:
MOVE from function_definition [168163,168919]
------------
===
move-tree
---
parameter [132042,132056]
    type_name: uint256 [132042,132049]
    identifier: reward [132050,132056]
to
function_definition [168163,168919]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [168979,168998]
    type_name: uint256 [168979,168986]
    identifier: validatorId [168987,168998]
to
function_definition [168927,169779]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [169009,169032]
    type_name: uint256 [169009,169016]
    identifier: validatorsStake [169017,169032]
to
function_definition [168927,169779]
at 3

New cluster:
MOVE from function_definition [168927,169779]
------------
===
move-tree
---
parameter [103753,103779]
    type_name: uint256 [103753,103760]
    identifier: combinedStakePower [103761,103779]
to
function_definition [168927,169779]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [169111,169115]
    view: view [169111,169115]
to
function_definition [168927,169779]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [169116,169142]
    returns: returns [169116,169123]
    parameter [169125,169132]
        type_name: uint256 [169125,169132]
    parameter [169134,169141]
        type_name: uint256 [169134,169141]
to
function_definition [168927,169779]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [169834,169853]
    type_name: uint256 [169834,169841]
    identifier: validatorId [169842,169853]
to
function_definition [169787,170491]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [169881,169885]
    view: view [169881,169885]
to
function_definition [169787,170491]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [169895,169954]
    returns: returns [169895,169902]
    parameter [169904,169927]
        type_name: uint256 [169904,169911]
        identifier: validatorReward [169912,169927]
    parameter [169929,169953]
        type_name: uint256 [169929,169936]
        identifier: delegatorsReward [169937,169953]
to
function_definition [169787,170491]
at 5

New cluster:
===
insert-node
---
visibility: private [174410,174417]
to
function_definition [131971,132347]
at 4
------------
===
insert-node
---
visibility: private [174410,174417]
to
function_definition [131971,132347]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [175292,175304]
    type_name: address [175292,175299]
    identifier: from [175300,175304]
to
function_definition [120971,121379]
at 3

New cluster:
===
insert-node
---
if_statement [8351,8483]
to
function_body [10206,10428]
at 4
------------
===
insert-node
---
else: else [8440,8444]
to
if_statement [8351,8483]
at 3
===
insert-node
---
binary_expression [8355,8398]
to
if_statement [8351,8483]
at 1
===
insert-node
---
block_statement [8400,8439]
to
if_statement [8351,8483]
at 2
===
insert-node
---
if: if [8351,8353]
to
if_statement [8351,8483]
at 0
===
insert-node
---
block_statement [8445,8483]
to
if_statement [8351,8483]
at 4
===
insert-node
---
return_statement [8460,8472]
to
block_statement [8445,8483]
at 0
===
insert-node
---
return: return [8460,8466]
to
return_statement [8460,8472]
at 0
===
insert-node
---
return_statement [8415,8428]
to
block_statement [8400,8439]
at 0
===
insert-node
---
if_statement [8351,8483]
to
function_body [10206,10428]
at 4
===
insert-node
---
return: return [8415,8421]
to
return_statement [8415,8428]
at 0
===
insert-node
---
logical_operator: || [8367,8369]
to
binary_expression [8355,8398]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [21845,21855]
    variable_declaration [21845,21854]
        type_name: bytes32 [21845,21852]
        identifier: r [21853,21854]
to
function_body [21834,22613]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [21865,21875]
    variable_declaration [21865,21874]
        type_name: bytes32 [21865,21872]
        identifier: s [21873,21874]
to
function_body [21834,22613]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [21885,21893]
    variable_declaration [21885,21892]
        type_name: uint8 [21885,21890]
        identifier: v [21891,21892]
to
function_body [21834,22613]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
assembly_statement [21905,22041]
    assembly: assembly [21905,21913]
    yul_assignment [21929,21944]
        yul_path [21929,21930]
            yul_identifier [21929,21930]
                identifier: r [21929,21930]
        :=: := [21931,21933]
        yul_function_call [21934,21944]
            yul_evm_builtin [21934,21939]
                mload: mload [21934,21939]
            yul_path [21940,21943]
                yul_identifier [21940,21943]
                    identifier: sig [21940,21943]
    yul_assignment [21958,21982]
        yul_path [21958,21959]
            yul_identifier [21958,21959]
                identifier: s [21958,21959]
        :=: := [21960,21962]
        yul_function_call [21963,21982]
            yul_evm_builtin [21963,21968]
                mload: mload [21963,21968]
            yul_function_call [21969,21981]
                yul_evm_builtin [21969,21972]
                    add: add [21969,21972]
                yul_path [21973,21976]
                    yul_identifier [21973,21976]
                        identifier: sig [21973,21976]
                yul_decimal_number: 32 [21978,21980]
    yul_assignment [21996,22030]
        yul_path [21996,21997]
            yul_identifier [21996,21997]
                identifier: v [21996,21997]
        :=: := [21998,22000]
        yul_function_call [22001,22030]
            yul_evm_builtin [22001,22005]
                byte: byte [22001,22005]
            yul_decimal_number: 31 [22006,22008]
            yul_function_call [22010,22029]
                yul_evm_builtin [22010,22015]
                    mload: mload [22010,22015]
                yul_function_call [22016,22028]
                    yul_evm_builtin [22016,22019]
                        add: add [22016,22019]
                    yul_path [22020,22023]
                        yul_identifier [22020,22023]
                            identifier: sig [22020,22023]
                    yul_decimal_number: 64 [22025,22027]
to
function_body [21834,22613]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [22260,22306]
    if: if [22260,22262]
    binary_expression [22264,22270]
        identifier: v [22264,22265]
        comparison_operator: < [22266,22267]
        number_literal: 27 [22268,22270]
    block_statement [22272,22306]
        expression_statement [22287,22295]
            augmented_assignment_expression [22287,22294]
                identifier: v [22287,22288]
                affectation_operator: += [22289,22291]
                number_literal: 27 [22292,22294]
to
function_body [21834,22613]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [22450,22492]
    variable_declaration [22450,22464]
        type_name: address [22450,22457]
        identifier: result [22458,22464]
    affectation_operator: = [22465,22466]
    call_expression [22467,22491]
        identifier: ecrecover [22467,22476]
        call_argument [22477,22481]
            identifier: hash [22477,22481]
        call_argument [22483,22484]
            identifier: v [22483,22484]
        call_argument [22486,22487]
            identifier: r [22486,22487]
        call_argument [22489,22490]
            identifier: s [22489,22490]
to
function_body [21834,22613]
at 7

New cluster:
MOVE from function_body [21834,22613]
------------
===
move-tree
---
expression_statement [145156,145240]
    call_expression [145156,145239]
        identifier: require [145156,145163]
        call_argument [145164,145220]
            binary_expression [145164,145220]
                array_access [145164,145215]
                    binary_expression [145164,145207]
                        binary_expression [145164,145186]
                            identifier: signer [145164,145170]
                            comparison_operator: != [145171,145173]
                            type_cast_expression [145174,145186]
                                primitive_type: address [145174,145181]
                                call_argument [145182,145185]
                                    number_literal: 0x0 [145182,145185]
                        logical_operator: && [145187,145189]
                        identifier: signerToValidator [145190,145207]
                    identifier: signer [145208,145214]
                comparison_operator: == [145216,145218]
                number_literal: 0 [145219,145220]
        call_argument [145222,145238]
            string_literal [145222,145238]
                string: "Invalid signer" [145222,145238]
to
function_body [21834,22613]
at 8
===
move-tree
---
variable_declaration_statement [145102,145146]
    variable_declaration [145102,145116]
        type_name: address [145102,145109]
        identifier: signer [145110,145116]
    affectation_operator: = [145117,145118]
    call_expression [145119,145145]
        identifier: pubToAddress [145119,145131]
        call_argument [145132,145144]
            identifier: signerPubkey [145132,145144]
to
function_body [136385,137214]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [22592,22606]
    return: return [22592,22598]
    identifier: result [22599,22605]
to
function_body [21834,22613]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [25752,25772]
    call_expression [25752,25771]
        identifier: _assertGovernance [25752,25769]
to
function_body [25741,25791]
at 0

New cluster:
MOVE from function_body [25741,25791]
------------
===
move-tree
---
expression_statement [26911,26913]
    identifier: _ [26911,26912]
to
function_body [25741,25791]
at 1

New cluster:
UPDATE from bytes to uint[3][]
------------
===
update-node
---
type_name: bytes [36364,36369]
replace bytes by uint[3][]

New cluster:
===
insert-node
---
calldata: calldata [35726,35734]
to
parameter [36364,36381]
at 1
------------
===
insert-node
---
calldata: calldata [35726,35734]
to
parameter [36364,36381]
at 1

New cluster:
===
insert-node
---
calldata: calldata [35956,35964]
to
parameter [36590,36619]
at 1
------------
===
insert-node
---
calldata: calldata [35956,35964]
to
parameter [36590,36619]
at 1

New cluster:
MOVE from function_body [64694,64920]
------------
===
move-tree
---
variable_declaration_statement [124498,124558]
    variable_declaration [124498,124515]
        type_name: address [124498,124505]
        identifier: _contract [124506,124515]
    affectation_operator: = [124516,124517]
    member_expression: validators[validatorId].contractAddress [124518,124557]
to
function_body [64694,64920]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [64733,64841]
    assignment_expression [64733,64840]
        tuple_expression [64733,64756]
            identifier: _contract [64746,64755]
        affectation_operator: = [64757,64758]
        call_expression [64759,64840]
            member_expression: IStakeManagerEventsHub(registry.getStakeManagerAddress()).validators [64759,64827]
            call_argument [64828,64839]
                identifier: validatorId [64828,64839]
to
function_body [64694,64920]
at 1

New cluster:
MOVE from function_body [64694,64920]
------------
===
move-tree
---
expression_statement [101700,101702]
    identifier: _ [101700,101701]
to
function_body [64694,64920]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [69372,69395]
    call_expression [69372,69394]
        identifier: _getOrCacheEventsHub [69372,69392]
to
function_body [101936,102192]
at 4

New cluster:
===
insert-node
---
expression_statement [71259,71327]
to
function_body [106199,106485]
at 1
------------
===
insert-node
---
assignment_expression [71259,71326]
to
expression_statement [71259,71327]
at 0
===
insert-node
---
expression_statement [71259,71327]
to
function_body [106199,106485]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [71558,71584]
    variable_declaration [71558,71570]
        type_name: address [71558,71565]
        identifier: user [71566,71570]
    affectation_operator: = [71571,71572]
    member_expression: msg.sender [71573,71583]
to
function_body [106918,107660]
at 0

New cluster:
===
insert-node
---
variable_declaration_statement [71649,71672]
to
function_body [106918,107660]
at 2
------------
===
insert-node
---
variable_declaration_statement [71649,71672]
to
function_body [106918,107660]
at 2

New cluster:
===
insert-node
---
if_statement [71763,72414]
to
function_body [106918,107660]
at 4
------------
===
insert-node
---
assignment_expression [71801,71851]
to
expression_statement [71801,71852]
at 0
===
insert-node
---
expression_statement [71801,71852]
to
block_statement [71786,72414]
at 0
===
insert-node
---
block_statement [71786,72414]
to
if_statement [71763,72414]
at 2
===
insert-node
---
if_statement [71763,72414]
to
function_body [106918,107660]
at 4
===
insert-node
---
if: if [71763,71765]
to
if_statement [71763,72414]
at 0
===
insert-node
---
identifier: amountRestaked [71801,71815]
to
assignment_expression [71801,71851]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [72576,72670]
    variable_declaration_tuple [72576,72620]
        variable_declaration [72577,72591]
            type_name: uint256 [72577,72584]
            identifier: shares [72585,72591]
        variable_declaration [72593,72619]
            type_name: uint256 [72593,72600]
            identifier: _withdrawPoolShare [72601,72619]
    affectation_operator: = [72621,72622]
    call_expression [72623,72669]
        identifier: _sellVoucher [72623,72635]
        call_argument [72636,72647]
            identifier: claimAmount [72636,72647]
        call_argument [72649,72668]
            identifier: maximumSharesToBurn [72649,72668]
to
function_body [72565,73102]
at 0

New cluster:
MOVE from function_body [72565,73102]
------------
===
move-tree
---
expression_statement [110340,110375]
    call_expression [110340,110374]
        member_expression: logger.logStakeUpdate [110340,110361]
        call_argument [110362,110373]
            identifier: validatorId [110362,110373]
to
function_body [72565,73102]
at 7
===
move-tree
---
variable_declaration_statement [110217,110252]
    variable_declaration [110217,110235]
        type_name: StakingInfo [110217,110228]
        identifier: logger [110229,110235]
    affectation_operator: = [110236,110237]
    identifier: stakingLogger [110238,110251]
to
function_body [72565,73102]
at 5
===
move-tree
---
variable_declaration_statement [109962,110014]
    variable_declaration [109962,109991]
        type_name: DelegatorUnbond [109962,109977]
        memory: memory [109978,109984]
        identifier: unbond [109985,109991]
    affectation_operator: = [109992,109993]
    array_access [109994,110013]
        identifier: unbonds [109994,110001]
        member_expression: msg.sender [110002,110012]
to
function_body [72565,73102]
at 1
===
move-tree
---
expression_statement [110024,110078]
    assignment_expression [110024,110077]
        member_expression: unbond.shares [110024,110037]
        affectation_operator: = [110038,110039]
        call_expression [110040,110077]
            member_expression: unbond.shares.add [110040,110057]
            call_argument [110058,110076]
                identifier: _withdrawPoolShare [110058,110076]
to
function_body [72565,73102]
at 2
===
move-tree
---
variable_declaration_statement [109115,109180]
    variable_declaration_tuple [109115,109150]
        variable_declaration [109116,109135]
            type_name: uint256 [109116,109123]
            identifier: totalStaked [109124,109135]
        variable_declaration [109137,109149]
            type_name: uint256 [109137,109144]
            identifier: rate [109145,109149]
    affectation_operator: = [109151,109152]
    call_expression [109153,109179]
        identifier: _getTotalStake [109153,109167]
        call_argument [109168,109178]
            member_expression: msg.sender [109168,109178]
to
function_body [111293,111930]
at 1
===
move-tree
---
expression_statement [110122,110166]
    assignment_expression [110122,110165]
        member_expression: unbond.withdrawEpoch [110122,110142]
        affectation_operator: = [110143,110144]
        call_expression [110145,110165]
            member_expression: stakeManager.epoch [110145,110163]
to
function_body [72565,73102]
at 3
===
move-tree
---
expression_statement [110262,110330]
    call_expression [110262,110329]
        member_expression: logger.logShareBurned [110262,110283]
        call_argument [110284,110295]
            identifier: validatorId [110284,110295]
        call_argument [110297,110307]
            member_expression: msg.sender [110297,110307]
        call_argument [110309,110320]
            identifier: claimAmount [110309,110320]
        call_argument [110322,110328]
            identifier: shares [110322,110328]
to
function_body [72565,73102]
at 6
===
move-tree
---
expression_statement [110176,110205]
    assignment_expression [110176,110204]
        array_access [110176,110195]
            identifier: unbonds [110176,110183]
            member_expression: msg.sender [110184,110194]
        affectation_operator: = [110196,110197]
        identifier: unbond [110198,110204]
to
function_body [72565,73102]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [74100,74133]
    call_expression [74100,74132]
        identifier: _withdrawAndTransferReward [74100,74126]
        call_argument [74127,74131]
            identifier: user [74127,74131]
to
function_body [112006,112052]
at 0

New cluster:
MOVE from function_body [74223,74463]
------------
===
move-tree
---
expression_statement [113173,113200]
    array_access [113173,113199]
        unary_expression [113173,113187]
            delete: delete [113173,113179]
            identifier: unbonds [113180,113187]
        member_expression: msg.sender [113188,113198]
to
function_body [74223,74463]
at 2
===
move-tree
---
variable_declaration_statement [112506,112558]
    variable_declaration [112506,112535]
        type_name: DelegatorUnbond [112506,112521]
        memory: memory [112522,112528]
        identifier: unbond [112529,112535]
    affectation_operator: = [112536,112537]
    array_access [112538,112557]
        identifier: unbonds [112538,112545]
        member_expression: msg.sender [112546,112556]
to
function_body [74223,74463]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [74296,74341]
    variable_declaration [74296,74310]
        type_name: uint256 [74296,74303]
        identifier: amount [74304,74310]
    affectation_operator: = [74311,74312]
    call_expression [74313,74340]
        identifier: _unstakeClaimTokens [74313,74332]
        call_argument [74333,74339]
            identifier: unbond [74333,74339]
to
function_body [74223,74463]
at 1

New cluster:
===
insert-node
---
variable_declaration_statement [75173,75245]
to
function_body [113338,114034]
at 5
------------
===
insert-node
---
affectation_operator: = [75194,75195]
to
variable_declaration_statement [75173,75245]
at 1
===
insert-node
---
type_name: uint256 [75173,75180]
to
variable_declaration [75173,75193]
at 0
===
insert-node
---
variable_declaration [75173,75193]
to
variable_declaration_statement [75173,75245]
at 0
===
insert-node
---
variable_declaration_statement [75173,75245]
to
function_body [113338,114034]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [75255,75328]
    call_expression [75255,75327]
        member_expression: stakeManager.decreaseValidatorDelegatedAmount [75255,75300]
        call_argument [75301,75312]
            identifier: validatorId [75301,75312]
        call_argument [75314,75326]
            identifier: stakeSlashed [75314,75326]
to
function_body [113338,114034]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [75338,75384]
    assignment_expression [75338,75383]
        identifier: activeAmount [75338,75350]
        affectation_operator: = [75351,75352]
        call_expression [75353,75383]
            member_expression: activeAmount.sub [75353,75369]
            call_argument [75370,75382]
                identifier: stakeSlashed [75370,75382]
to
function_body [113338,114034]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [76097,76191]
    variable_declaration_tuple [76097,76141]
        variable_declaration [76098,76112]
            type_name: uint256 [76098,76105]
            identifier: shares [76106,76112]
        variable_declaration [76114,76140]
            type_name: uint256 [76114,76121]
            identifier: _withdrawPoolShare [76122,76140]
    affectation_operator: = [76142,76143]
    call_expression [76144,76190]
        identifier: _sellVoucher [76144,76156]
        call_argument [76157,76168]
            identifier: claimAmount [76157,76168]
        call_argument [76170,76189]
            identifier: maximumSharesToBurn [76170,76189]
to
function_body [76086,76700]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [76203,76257]
    variable_declaration [76203,76222]
        type_name: uint256 [76203,76210]
        identifier: unbondNonce [76211,76222]
    affectation_operator: = [76223,76224]
    call_expression [76225,76256]
        member_expression: unbondNonces[msg.sender].add [76225,76253]
        call_argument [76254,76255]
            number_literal: 1 [76254,76255]
to
function_body [76086,76700]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [76431,76477]
    assignment_expression [76431,76476]
        array_access [76431,76467]
            array_access [76431,76454]
                identifier: unbonds_new [76431,76442]
                member_expression: msg.sender [76443,76453]
            identifier: unbondNonce [76455,76466]
        affectation_operator: = [76468,76469]
        identifier: unbond [76470,76476]
to
function_body [76086,76700]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [76487,76526]
    assignment_expression [76487,76525]
        array_access [76487,76511]
            identifier: unbondNonces [76487,76499]
            member_expression: msg.sender [76500,76510]
        affectation_operator: = [76512,76513]
        identifier: unbondNonce [76514,76525]
to
function_body [76086,76700]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [76651,76693]
    call_expression [76651,76692]
        member_expression: stakingLogger.logStakeUpdate [76651,76679]
        call_argument [76680,76691]
            identifier: validatorId [76680,76691]
to
function_body [76086,76700]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [76779,76848]
    variable_declaration [76779,76808]
        type_name: DelegatorUnbond [76779,76794]
        memory: memory [76795,76801]
        identifier: unbond [76802,76808]
    affectation_operator: = [76809,76810]
    array_access [76811,76847]
        array_access [76811,76834]
            identifier: unbonds_new [76811,76822]
            member_expression: msg.sender [76823,76833]
        identifier: unbondNonce [76835,76846]
to
function_body [76768,77070]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [76858,76903]
    variable_declaration [76858,76872]
        type_name: uint256 [76858,76865]
        identifier: amount [76866,76872]
    affectation_operator: = [76873,76874]
    call_expression [76875,76902]
        identifier: _unstakeClaimTokens [76875,76894]
        call_argument [76895,76901]
            identifier: unbond [76895,76901]
to
function_body [76768,77070]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [76913,76957]
    array_access [76913,76956]
        array_access [76913,76943]
            unary_expression [76913,76931]
                delete: delete [76913,76919]
                identifier: unbonds_new [76920,76931]
            member_expression: msg.sender [76932,76942]
        identifier: unbondNonce [76944,76955]
to
function_body [76768,77070]
at 2

New cluster:
MOVE from function_body [109020,110382]
------------
===
move-tree
---
variable_declaration_statement [111347,111406]
    variable_declaration_tuple [111347,111382]
        variable_declaration [111348,111367]
            type_name: uint256 [111348,111355]
            identifier: totalStaked [111356,111367]
        variable_declaration [111369,111381]
            type_name: uint256 [111369,111376]
            identifier: rate [111377,111381]
    affectation_operator: = [111383,111384]
    call_expression [111385,111405]
        identifier: _getTotalStake [111385,111399]
        call_argument [111400,111404]
            identifier: user [111400,111404]
to
function_body [109020,110382]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [78516,78552]
    return: return [78516,78522]
    tuple_expression [78523,78551]
        identifier: shares [78524,78530]
        identifier: _withdrawPoolShare [78532,78550]
to
function_body [109020,110382]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [79600,79641]
    variable_declaration [79600,79623]
        type_name: uint256 [79600,79607]
        identifier: _rewardPerShare [79608,79623]
    affectation_operator: = [79624,79625]
    identifier: rewardPerShare [79626,79640]
to
function_body [79589,79963]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [79933,79956]
    return: return [79933,79939]
    identifier: _rewardPerShare [79940,79955]
to
function_body [79589,79963]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [80185,80245]
    variable_declaration [80185,80215]
        type_name: uint256 [80185,80192]
        identifier: _initialRewardPerShare [80193,80215]
    affectation_operator: = [80216,80217]
    array_access [80218,80244]
        identifier: initalRewardPerShare [80218,80238]
        identifier: user [80239,80243]
to
function_body [112130,112343]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [80257,80339]
    if: if [80257,80259]
    binary_expression [80261,80302]
        identifier: _initialRewardPerShare [80261,80283]
        comparison_operator: == [80284,80286]
        identifier: _rewardPerShare [80287,80302]
    block_statement [80304,80339]
        return_statement [80319,80328]
            return: return [80319,80325]
            number_literal: 0 [80326,80327]
to
function_body [112130,112343]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [80527,80665]
    variable_declaration [80527,80550]
        type_name: uint256 [80527,80534]
        identifier: _rewardPerShare [80535,80550]
    affectation_operator: = [80551,80552]
    call_expression [80553,80664]
        identifier: _calculateRewardPerShareWithRewards [80553,80588]
        call_argument [80603,80653]
            call_expression [80603,80653]
                member_expression: stakeManager.withdrawDelegatorsReward [80603,80640]
                call_argument [80641,80652]
                    identifier: validatorId [80641,80652]
to
function_body [110454,110604]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [80759,80792]
    assignment_expression [80759,80791]
        identifier: rewardPerShare [80759,80773]
        affectation_operator: = [80774,80775]
        identifier: _rewardPerShare [80776,80791]
to
function_body [110454,110604]
at 2

New cluster:
MOVE from function_body [122890,125546]
------------
===
move-tree
---
expression_statement [124616,124698]
    assignment_expression [124616,124697]
        identifier: perceivedStake [124616,124630]
        affectation_operator: = [124631,124632]
        call_expression [124633,124697]
            member_expression: perceivedStake.add [124633,124651]
            call_argument [124652,124696]
                call_expression [124652,124696]
                    member_expression: IValidatorShare(_contract).getActiveAmount [124652,124694]
to
function_body [122890,125546]
at 9

New cluster:
MOVE from function_body [125699,127692]
------------
===
move-tree
---
expression_statement [126575,126660]
    assignment_expression [126575,126659]
        identifier: perceivedStake [126575,126589]
        affectation_operator: = [126590,126591]
        call_expression [126592,126659]
            member_expression: perceivedStake.add [126592,126610]
            call_argument [126611,126658]
                call_expression [126611,126658]
                    member_expression: IValidatorShare(contractAddr).getActiveAmount [126611,126656]
to
function_body [125699,127692]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [130946,130976]
    variable_declaration [130946,130960]
        type_name: uint256 [130946,130953]
        identifier: _epoch [130954,130960]
    affectation_operator: = [130961,130962]
    identifier: currentEpoch [130963,130975]
to
function_body [130935,131640]
at 0

New cluster:
MOVE from function_body [130935,131640]
------------
===
move-tree
---
expression_statement [102674,102770]
    call_expression [102674,102769]
        identifier: require [102674,102681]
        call_argument [102682,102721]
            binary_expression [102682,102721]
                identifier: newCommissionRate [102682,102699]
                comparison_operator: <= [102700,102702]
                identifier: MAX_COMMISION_RATE [102703,102721]
        call_argument [102723,102768]
            string_literal [102723,102768]
                string: "Commission rate should be in range of 0-100" [102723,102768]
to
function_body [130935,131640]
at 3
===
move-tree
---
variable_declaration_statement [102338,102391]
    variable_declaration [102338,102367]
        type_name: uint256 [102338,102345]
        identifier: _lastCommissionUpdate [102346,102367]
    affectation_operator: = [102368,102369]
    identifier: lastCommissionUpdate [102370,102390]
to
function_body [130935,131640]
at 1
===
move-tree
---
expression_statement [102780,102866]
    call_expression [102780,102865]
        member_expression: stakingLogger.logUpdateCommissionRate [102780,102817]
        call_argument [102818,102829]
            identifier: validatorId [102818,102829]
        call_argument [102831,102848]
            identifier: newCommissionRate [102831,102848]
        call_argument [102850,102864]
            identifier: commissionRate [102850,102864]
to
function_body [130935,131640]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [131510,131569]
    assignment_expression [131510,131568]
        member_expression: validators[validatorId].commissionRate [131510,131548]
        affectation_operator: = [131549,131550]
        identifier: newCommissionRate [131551,131568]
to
function_body [130935,131640]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [131579,131633]
    assignment_expression [131579,131632]
        member_expression: validators[validatorId].lastCommissionUpdate [131579,131623]
        affectation_operator: = [131624,131625]
        identifier: _epoch [131626,131632]
to
function_body [130935,131640]
at 6

New cluster:
MOVE from function_body [133239,133348]
------------
===
move-tree
---
expression_statement [129143,129234]
    call_expression [129143,129233]
        identifier: require [129143,129150]
        call_argument [129151,129204]
            binary_expression [129151,129204]
                member_expression: validators[validatorId].contractAddress [129151,129190]
                comparison_operator: == [129191,129193]
                member_expression: msg.sender [129194,129204]
        call_argument [129206,129232]
            string_literal [129206,129232]
                string: "Invalid contract address" [129206,129232]
to
function_body [133239,133348]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [133754,133816]
    call_expression [133754,133815]
        identifier: require [133754,133761]
        call_argument [133762,133788]
            call_expression [133762,133788]
                identifier: isContract [133762,133772]
                call_argument [133773,133787]
                    identifier: _extensionCode [133773,133787]
        call_argument [133790,133814]
            string_literal [133790,133814]
                string: "auction impl incorrect" [133790,133814]
to
function_body [119261,120205]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [133826,133857]
    assignment_expression [133826,133856]
        identifier: extensionCode [133826,133839]
        affectation_operator: = [133840,133841]
        identifier: _extensionCode [133842,133856]
to
function_body [119261,120205]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [138258,138280]
    call_expression [138258,138279]
        identifier: require [138258,138265]
        call_argument [138266,138278]
            binary_expression [138266,138278]
                identifier: _blocks [138266,138273]
                comparison_operator: != [138274,138276]
                number_literal: 0 [138277,138278]
to
function_body [138247,138331]
at 0

New cluster:
MOVE from function_body [138247,138331]
------------
===
move-tree
---
expression_statement [133980,134014]
    assignment_expression [133980,134013]
        identifier: checkPointBlockInterval [133980,134003]
        affectation_operator: = [134004,134005]
        identifier: _blocks [134006,134013]
to
function_body [138247,138331]
at 1

New cluster:
MOVE from function_body [141345,141552]
------------
===
move-tree
---
variable_declaration_statement [132501,132564]
    variable_declaration [132501,132521]
        type_name: address [132501,132508]
        identifier: contractAddr [132509,132521]
    affectation_operator: = [132522,132523]
    member_expression: validators[validatorId].contractAddress [132524,132563]
to
function_body [141345,141552]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [141429,141467]
    call_expression [141429,141466]
        identifier: require [141429,141436]
        call_argument [141437,141465]
            binary_expression [141437,141465]
                identifier: contractAddr [141437,141449]
                comparison_operator: != [141450,141452]
                type_cast_expression [141453,141465]
                    primitive_type: address [141453,141460]
                    call_argument [141461,141464]
                        number_literal: 0x0 [141461,141464]
to
function_body [141345,141552]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [141900,141936]
    call_expression [141900,141935]
        identifier: require [141900,141907]
        call_argument [141908,141934]
            call_expression [141908,141934]
                identifier: isContract [141908,141918]
                call_argument [141919,141933]
                    identifier: _extensionCode [141919,141933]
to
function_body [149156,149326]
at 0

New cluster:
===
insert-node
---
expression_statement [141946,141971]
to
function_body [149156,149326]
at 1
------------
===
insert-node
---
identifier: eventsHub [141946,141955]
to
assignment_expression [141946,141970]
at 0
===
insert-node
---
expression_statement [141946,141971]
to
function_body [149156,149326]
at 1
===
insert-node
---
affectation_operator: = [141956,141957]
to
assignment_expression [141946,141970]
at 1
===
insert-node
---
assignment_expression [141946,141970]
to
expression_statement [141946,141971]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [141981,142012]
    assignment_expression [141981,142011]
        identifier: extensionCode [141981,141994]
        affectation_operator: = [141995,141996]
        identifier: _extensionCode [141997,142011]
to
function_body [149156,149326]
at 2

New cluster:
MOVE from function_body [142327,142397]
------------
===
move-tree
---
expression_statement [129696,129741]
    call_expression [129696,129740]
        identifier: _transferAndTopUp [129696,129713]
        call_argument [129714,129718]
            identifier: user [129714,129718]
        call_argument [129720,129731]
            identifier: heimdallFee [129720,129731]
        call_argument [129733,129739]
            identifier: amount [129733,129739]
to
function_body [142327,142397]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [144494,144546]
    call_expression [144494,144545]
        identifier: require [144494,144501]
        call_argument [144502,144529]
            binary_expression [144502,144529]
                member_expression: msg.sender [144502,144512]
                comparison_operator: == [144513,144515]
                type_cast_expression [144516,144529]
                    primitive_type: address [144516,144523]
                    call_argument [144524,144528]
                        identifier: this [144524,144528]
        call_argument [144531,144544]
            string_literal [144531,144544]
                string: "not allowed" [144531,144544]
to
function_body [144483,144876]
at 0

New cluster:
MOVE from function_body [144483,144876]
------------
===
move-tree
---
expression_statement [127444,127513]
    call_expression [127444,127512]
        member_expression: logger.logConfirmAuction [127444,127468]
        call_argument [127469,127483]
            identifier: newValidatorId [127469,127483]
        call_argument [127485,127496]
            identifier: validatorId [127485,127496]
        call_argument [127498,127511]
            identifier: auctionAmount [127498,127511]
to
function_body [144483,144876]
at 4
===
move-tree
---
expression_statement [127122,127169]
    call_expression [127122,127168]
        identifier: _transferAndTopUp [127122,127139]
        call_argument [127140,127151]
            identifier: auctionUser [127140,127151]
        call_argument [127153,127164]
            identifier: heimdallFee [127153,127164]
        call_argument [127166,127167]
            number_literal: 0 [127166,127167]
to
function_body [144483,144876]
at 1

New cluster:
MOVE from block_statement [152048,153815]
------------
===
move-tree
---
variable_declaration_statement [137863,137911]
    variable_declaration [137863,137877]
        type_name: uint256 [137863,137870]
        identifier: amount [137871,137877]
    affectation_operator: = [137878,137879]
    member_expression: validators[validatorId].amount [137880,137910]
to
block_statement [152048,153815]
at 4
===
move-tree
---
variable_declaration_statement [137978,138015]
    variable_declaration [137978,137999]
        type_name: uint256 [137978,137985]
        identifier: _currentEpoch [137986,137999]
    affectation_operator: = [138000,138001]
    identifier: currentEpoch [138002,138014]
to
function_body [151395,154355]
at 0
===
move-tree
---
variable_declaration_statement [137921,137968]
    variable_declaration [137921,137934]
        type_name: Status [137921,137927]
        identifier: status [137928,137934]
    affectation_operator: = [137935,137936]
    member_expression: validators[validatorId].status [137937,137967]
to
function_body [127771,128258]
at 1

New cluster:
MOVE from function_body [129514,129814]
------------
===
move-tree
---
expression_statement [122349,122423]
    call_expression [122349,122422]
        identifier: stakeFor [122349,122357]
        call_argument [122358,122368]
            member_expression: msg.sender [122358,122368]
        call_argument [122370,122376]
            identifier: amount [122370,122376]
        call_argument [122378,122389]
            identifier: heimdallFee [122378,122389]
        call_argument [122391,122407]
            identifier: acceptDelegation [122391,122407]
        call_argument [122409,122421]
            identifier: signerPubkey [122409,122421]
to
function_body [129514,129814]
at 2

New cluster:
===
insert-node
---
expression_statement [147252,147295]
to
function_body [129896,130759]
at 5
------------
===
insert-node
---
call_expression [147252,147294]
to
expression_statement [147252,147295]
at 0
===
insert-node
---
expression_statement [147252,147295]
to
function_body [129896,130759]
at 5
===
insert-node
---
identifier: _liquidateRewards [147252,147269]
to
call_expression [147252,147294]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147349,147384]
    assignment_expression [147349,147383]
        member_expression: validators[validatorId].amount [147349,147379]
        affectation_operator: = [147380,147381]
        number_literal: 0 [147382,147383]
to
function_body [129896,130759]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147394,147431]
    assignment_expression [147394,147430]
        member_expression: validators[validatorId].jailTime [147394,147426]
        affectation_operator: = [147427,147428]
        number_literal: 0 [147429,147430]
to
function_body [129896,130759]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147441,147485]
    assignment_expression [147441,147484]
        member_expression: validators[validatorId].signer [147441,147471]
        affectation_operator: = [147472,147473]
        type_cast_expression [147474,147484]
            primitive_type: address [147474,147481]
            call_argument [147482,147483]
                number_literal: 0 [147482,147483]
to
function_body [129896,130759]
at 9

New cluster:
MOVE from function_body [146447,147452]
------------
===
move-tree
---
expression_statement [144169,144233]
    call_expression [144169,144232]
        member_expression: logger.logUnjailed [144169,144187]
        call_argument [144188,144199]
            identifier: validatorId [144188,144199]
        call_argument [144201,144231]
            member_expression: validators[validatorId].signer [144201,144231]
to
function_body [146447,147452]
at 9
===
move-tree
---
expression_statement [143404,143491]
    call_expression [143404,143490]
        identifier: require [143404,143411]
        call_argument [143412,143458]
            binary_expression [143412,143458]
                member_expression: validators[validatorId].deactivationEpoch [143412,143453]
                comparison_operator: == [143454,143456]
                number_literal: 0 [143457,143458]
        call_argument [143460,143489]
            string_literal [143460,143489]
                string: "Validator already unstaking" [143460,143489]
to
function_body [130958,131963]
at 0

New cluster:
MOVE from function_body [130958,131963]
------------
===
move-tree
---
expression_statement [131235,131287]
    assignment_expression [131235,131286]
        identifier: amount [131235,131241]
        affectation_operator: = [131242,131243]
        call_expression [131244,131286]
            member_expression: amount.add [131244,131254]
            call_argument [131255,131285]
                member_expression: validators[validatorId].reward [131255,131285]
to
function_body [130958,131963]
at 3
===
move-tree
---
expression_statement [131538,131573]
    assignment_expression [131538,131572]
        member_expression: validators[validatorId].reward [131538,131568]
        affectation_operator: = [131569,131570]
        number_literal: 0 [131571,131572]
to
block_statement [148187,148355]
at 1

New cluster:
===
insert-node
---
if_statement [148169,148355]
to
function_body [130958,131963]
at 4
------------
===
insert-node
---
if_statement [148169,148355]
to
function_body [130958,131963]
at 4
===
insert-node
---
block_statement [148187,148355]
to
if_statement [148169,148355]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [148830,148858]
    call_expression [148830,148857]
        identifier: _updateRewards [148830,148844]
        call_argument [148845,148856]
            identifier: validatorId [148845,148856]
to
function_body [148819,148918]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [149663,149869]
    if: if [149663,149665]
    binary_expression [149667,149678]
        identifier: amount [149667,149673]
        comparison_operator: >= [149674,149676]
        number_literal: 0 [149677,149678]
    block_statement [149680,149769]
        expression_statement [149695,149758]
            call_expression [149695,149757]
                identifier: increaseValidatorDelegatedAmount [149695,149727]
                call_argument [149728,149739]
                    identifier: validatorId [149728,149739]
                call_argument [149741,149756]
                    type_cast_expression [149741,149756]
                        primitive_type: uint256 [149741,149748]
                        call_argument [149749,149755]
                            identifier: amount [149749,149755]
    else: else [149770,149774]
    block_statement [149775,149869]
        expression_statement [149790,149858]
            call_expression [149790,149857]
                identifier: decreaseValidatorDelegatedAmount [149790,149822]
                call_argument [149823,149834]
                    identifier: validatorId [149823,149834]
                call_argument [149836,149856]
                    type_cast_expression [149836,149856]
                        primitive_type: uint256 [149836,149843]
                        call_argument [149844,149855]
                            binary_expression [149844,149855]
                                identifier: amount [149844,149850]
                                arithmetic_operator: * [149851,149852]
                                unary_expression [149853,149855]
                                    arithmetic_operator: - [149853,149854]
                                    number_literal: 1 [149854,149855]
to
function_body [134807,135109]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151008,151045]
    call_expression [151008,151044]
        identifier: _updateSigner [151008,151021]
        call_argument [151022,151035]
            identifier: currentSigner [151022,151035]
        call_argument [151037,151043]
            identifier: signer [151037,151043]
to
function_body [136385,137214]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [151453,151478]
    variable_declaration [151453,151477]
        type_name: uint256 [151453,151460]
        identifier: signedStakePower [151461,151477]
to
function_body [151395,154355]
at 1

New cluster:
MOVE from function_body [163868,165306]
------------
===
move-tree
---
expression_statement [141429,141533]
    call_expression [141429,141532]
        identifier: require [141429,141436]
        call_argument [141437,141508]
            call_expression [141437,141508]
                member_expression: totalStakePower >= currentValidatorSetTotalStake().mul(2).div(3).add [141437,141505]
                call_argument [141506,141507]
                    number_literal: 1 [141506,141507]
        call_argument [141510,141531]
            string_literal [141510,141531]
                string: "2/3+1 non-majority!" [141510,141531]
to
function_body [163868,165306]
at 1
===
move-tree
---
return_statement [141545,141559]
    return: return [141545,141551]
    identifier: reward [141552,141558]
to
function_body [163868,165306]
at 13
===
move-tree
---
variable_declaration_statement [139999,140015]
    variable_declaration [139999,140014]
        type_name: address [139999,140006]
        identifier: lastAdd [140007,140014]
to
function_body [151395,154355]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [151514,151564]
    variable_declaration [151514,151534]
        type_name: uint256 [151514,151521]
        identifier: totalStakers [151522,151534]
    affectation_operator: = [151535,151536]
    member_expression: validatorState.stakerCount [151537,151563]
to
function_body [151395,154355]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [151576,151621]
    variable_declaration [151576,151620]
        type_name: UnsignedValidatorsContext [151576,151601]
        memory: memory [151602,151608]
        identifier: unsignedCtx [151609,151620]
to
function_body [151395,154355]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151631,151709]
    assignment_expression [151631,151708]
        member_expression: unsignedCtx.unsignedValidators [151631,151661]
        affectation_operator: = [151662,151663]
        call_expression [151664,151708]
            new_expression [151664,151677]
                new: new [151664,151667]
                type_name: uint256[] [151668,151677]
            call_argument [151678,151707]
                binary_expression [151678,151707]
                    member_expression: signers.length [151678,151692]
                    arithmetic_operator: + [151693,151694]
                    identifier: totalStakers [151695,151707]
to
function_body [151395,154355]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151719,151752]
    assignment_expression [151719,151751]
        member_expression: unsignedCtx.validators [151719,151741]
        affectation_operator: = [151742,151743]
        identifier: signers [151744,151751]
to
function_body [151395,154355]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151762,151793]
    assignment_expression [151762,151792]
        member_expression: unsignedCtx.validatorIndex [151762,151788]
        affectation_operator: = [151789,151790]
        number_literal: 0 [151791,151792]
to
function_body [151395,154355]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151803,151848]
    assignment_expression [151803,151847]
        member_expression: unsignedCtx.totalValidators [151803,151830]
        affectation_operator: = [151831,151832]
        member_expression: signers.length [151833,151847]
to
function_body [151395,154355]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [151860,151904]
    variable_declaration [151860,151903]
        type_name: UnstakedValidatorsContext [151860,151885]
        memory: memory [151886,151892]
        identifier: unstakeCtx [151893,151903]
to
function_body [151395,154355]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [151914,151994]
    assignment_expression [151914,151993]
        member_expression: unstakeCtx.deactivatedValidators [151914,151946]
        affectation_operator: = [151947,151948]
        call_expression [151949,151993]
            new_expression [151949,151962]
                new: new [151949,151952]
                type_name: uint256[] [151953,151962]
            call_argument [151963,151992]
                binary_expression [151963,151992]
                    member_expression: signers.length [151963,151977]
                    arithmetic_operator: + [151978,151979]
                    identifier: totalStakers [151980,151992]
to
function_body [151395,154355]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [153885,153948]
    assignment_expression [153885,153947]
        identifier: unsignedCtx [153885,153896]
        affectation_operator: = [153897,153898]
        call_expression [153899,153947]
            identifier: _fillUnsignedValidators [153899,153922]
            call_argument [153923,153934]
                identifier: unsignedCtx [153923,153934]
            call_argument [153936,153946]
                type_cast_expression [153936,153946]
                    primitive_type: address [153936,153943]
                    call_argument [153944,153945]
                        number_literal: 0 [153944,153945]
to
function_body [151395,154355]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [153960,154348]
    return: return [153960,153966]
    call_expression [153980,154347]
        identifier: _increaseRewardAndAssertConsensus [153980,154013]
        call_argument [154032,154045]
            identifier: blockInterval [154032,154045]
        call_argument [154064,154072]
            identifier: proposer [154064,154072]
        call_argument [154091,154107]
            identifier: signedStakePower [154091,154107]
        call_argument [154126,154135]
            identifier: stateRoot [154126,154135]
        call_argument [154154,154184]
            member_expression: unsignedCtx.unsignedValidators [154154,154184]
        call_argument [154203,154237]
            member_expression: unsignedCtx.unsignedValidatorIndex [154203,154237]
        call_argument [154256,154288]
            member_expression: unstakeCtx.deactivatedValidators [154256,154288]
        call_argument [154307,154332]
            member_expression: unstakeCtx.validatorIndex [154307,154332]
to
function_body [151395,154355]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [154485,154513]
    call_expression [154485,154512]
        identifier: _updateRewards [154485,154499]
        call_argument [154500,154511]
            identifier: validatorId [154500,154511]
to
function_body [154474,154787]
at 0

New cluster:
===
insert-node
---
calldata: calldata [155178,155186]
to
parameter [141589,141619]
at 1
------------
===
insert-node
---
calldata: calldata [155178,155186]
to
parameter [141589,141619]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [155530,155540]
    variable_declaration [155530,155539]
        type_name: uint256 [155530,155537]
        identifier: i [155538,155539]
to
function_body [141646,143223]
at 5

New cluster:
MOVE from function_body [143299,144240]
------------
===
move-tree
---
expression_statement [130969,131048]
    call_expression [130969,131047]
        identifier: require [130969,130976]
        call_argument [130977,131023]
            binary_expression [130977,131023]
                member_expression: validators[validatorId].deactivationEpoch [130977,131018]
                comparison_operator: == [131019,131021]
                number_literal: 0 [131022,131023]
        call_argument [131025,131046]
            string_literal [131025,131046]
                string: "No use of restaking" [131025,131046]
to
function_body [143299,144240]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [157900,157948]
    variable_declaration [157900,157914]
        type_name: address [157900,157907]
        identifier: signer [157908,157914]
    affectation_operator: = [157915,157916]
    member_expression: validators[validatorId].signer [157917,157947]
to
function_body [143299,144240]
at 10

New cluster:
===
insert-node
---
expression_statement [157958,157998]
to
function_body [143299,144240]
at 11
------------
===
insert-node
---
call_expression [157958,157997]
to
expression_statement [157958,157998]
at 0
===
insert-node
---
expression_statement [157958,157998]
to
function_body [143299,144240]
at 11

New cluster:
===
insert-node
---
variable_declaration_statement [159801,159860]
to
function_body [148869,148990]
at 1
------------
===
insert-node
---
affectation_operator: = [159816,159817]
to
variable_declaration_statement [159801,159860]
at 1
===
insert-node
---
variable_declaration_statement [159801,159860]
to
function_body [148869,148990]
at 1

New cluster:
===
insert-node
---
expression_statement [159870,159952]
to
function_body [148869,148990]
at 2
------------
===
insert-node
---
call_expression [159870,159951]
to
expression_statement [159870,159952]
at 0
===
insert-node
---
expression_statement [159870,159952]
to
function_body [148869,148990]
at 2
===
insert-node
---
identifier: require [159870,159877]
to
call_expression [159870,159951]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [159962,159976]
    return: return [159962,159968]
    identifier: signer [159969,159975]
to
function_body [148869,148990]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [161551,161605]
    variable_declaration [161551,161578]
        type_name: uint256 [161551,161558]
        identifier: targetBlockInterval [161559,161578]
    affectation_operator: = [161579,161580]
    identifier: checkPointBlockInterval [161581,161604]
to
function_body [161090,163480]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [161615,161653]
    variable_declaration [161615,161632]
        type_name: uint256 [161615,161622]
        identifier: ckpReward [161623,161632]
    affectation_operator: = [161633,161634]
    identifier: CHECKPOINT_REWARD [161635,161652]
to
function_body [161090,163480]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [161663,161757]
    variable_declaration [161663,161684]
        type_name: uint256 [161663,161670]
        identifier: fullIntervals [161671,161684]
    affectation_operator: = [161685,161686]
    call_expression [161687,161756]
        member_expression: Math.min [161687,161695]
        call_argument [161696,161731]
            binary_expression [161696,161731]
                identifier: blockInterval [161696,161709]
                arithmetic_operator: / [161710,161711]
                identifier: targetBlockInterval [161712,161731]
        call_argument [161733,161755]
            identifier: maxRewardedCheckpoints [161733,161755]
to
function_body [161090,163480]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [161812,162425]
    if: if [161812,161814]
    binary_expression [161816,161871]
        binary_expression [161816,161833]
            identifier: fullIntervals [161816,161829]
            comparison_operator: > [161830,161831]
            number_literal: 0 [161832,161833]
        logical_operator: && [161834,161836]
        binary_expression [161837,161871]
            identifier: fullIntervals [161837,161850]
            comparison_operator: != [161851,161853]
            identifier: prevBlockInterval [161854,161871]
    block_statement [161873,162425]
        if_statement [161888,162352]
            if: if [161888,161890]
            binary_expression [161892,161914]
                identifier: prevBlockInterval [161892,161909]
                comparison_operator: != [161910,161912]
                number_literal: 0 [161913,161914]
            block_statement [161916,162352]
                variable_declaration_statement [162014,162089]
                    variable_declaration [162014,162027]
                        type_name: uint256 [162014,162021]
                        identifier: delta [162022,162027]
                    affectation_operator: = [162028,162029]
                    parenthesized_expression [162030,162088]
                        binary_expression [162031,162087]
                            binary_expression [162031,162064]
                                identifier: ckpReward [162031,162040]
                                arithmetic_operator: * [162041,162042]
                                identifier: checkpointRewardDelta [162043,162064]
                            arithmetic_operator: / [162065,162066]
                            identifier: CHK_REWARD_PRECISION [162067,162087]
                if_statement [162125,162337]
                    if: if [162125,162127]
                    binary_expression [162129,162162]
                        identifier: prevBlockInterval [162129,162146]
                        comparison_operator: > [162147,162148]
                        identifier: fullIntervals [162149,162162]
                    block_statement [162164,162270]
                        expression_statement [162232,162251]
                            augmented_assignment_expression [162232,162250]
                                identifier: ckpReward [162232,162241]
                                affectation_operator: += [162242,162244]
                                identifier: delta [162245,162250]
                    else: else [162271,162275]
                    block_statement [162276,162337]
                        expression_statement [162299,162318]
                            augmented_assignment_expression [162299,162317]
                                identifier: ckpReward [162299,162308]
                                affectation_operator: -= [162309,162311]
                                identifier: delta [162312,162317]
        expression_statement [162380,162414]
            assignment_expression [162380,162413]
                identifier: prevBlockInterval [162380,162397]
                affectation_operator: = [162398,162399]
                identifier: fullIntervals [162400,162413]
to
function_body [161090,163480]
at 3

New cluster:
MOVE from function_body [163868,165306]
------------
===
move-tree
---
expression_statement [139606,139635]
    assignment_expression [139606,139634]
        identifier: accountStateRoot [139606,139622]
        affectation_operator: = [139623,139624]
        identifier: stateRoot [139625,139634]
to
function_body [163868,165306]
at 7
===
move-tree
---
expression_statement [139645,139663]
    call_expression [139645,139662]
        identifier: _finalizeCommit [139645,139660]
to
function_body [163868,165306]
at 12
===
move-tree
---
expression_statement [138944,138989]
    assignment_expression [138944,138988]
        identifier: reward [138944,138950]
        affectation_operator: = [138951,138952]
        call_expression [138953,138988]
            member_expression: Math.min [138953,138961]
            call_argument [138962,138979]
                identifier: CHECKPOINT_REWARD [138962,138979]
            call_argument [138981,138987]
                identifier: reward [138981,138987]
to
block_statement [168046,168148]
at 0
===
move-tree
---
variable_declaration_statement [138851,138934]
    variable_declaration [138851,138865]
        type_name: uint256 [138851,138858]
        identifier: reward [138859,138865]
    affectation_operator: = [138866,138867]
    call_expression [138868,138933]
        member_expression: blockInterval.mul(CHECKPOINT_REWARD).div [138868,138908]
        call_argument [138909,138932]
            identifier: checkPointBlockInterval [138909,138932]
to
function_body [161090,163480]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [162464,163241]
    if: if [162464,162466]
    binary_expression [162468,162503]
        identifier: blockInterval [162468,162481]
        comparison_operator: > [162482,162483]
        identifier: targetBlockInterval [162484,162503]
    block_statement [162505,163241]
        variable_declaration_statement [162566,162633]
            variable_declaration [162566,162602]
                type_name: uint256 [162566,162573]
                identifier: _rewardDecreasePerCheckpoint [162574,162602]
            affectation_operator: = [162603,162604]
            identifier: rewardDecreasePerCheckpoint [162605,162632]
        expression_statement [162701,162861]
            assignment_expression [162701,162860]
                identifier: reward [162701,162707]
                affectation_operator: = [162708,162709]
                call_expression [162710,162860]
                    member_expression: ckpReward.mul(fullIntervals).sub [162710,162742]
                    call_argument [162743,162859]
                        call_expression [162743,162859]
                            member_expression: ckpReward.mul(((fullIntervals - 1) * fullIntervals / 2).mul(_rewardDecreasePerCheckpoint)).div [162743,162837]
                            call_argument [162838,162858]
                                identifier: CHK_REWARD_PRECISION [162838,162858]
        expression_statement [162948,163022]
            assignment_expression [162948,163021]
                identifier: blockInterval [162948,162961]
                affectation_operator: = [162962,162963]
                call_expression [162964,163021]
                    member_expression: blockInterval.sub [162964,162981]
                    call_argument [162982,163020]
                        call_expression [162982,163020]
                            member_expression: fullIntervals.mul [162982,162999]
                            call_argument [163000,163019]
                                identifier: targetBlockInterval [163000,163019]
        expression_statement [163114,163230]
            assignment_expression [163114,163229]
                identifier: ckpReward [163114,163123]
                affectation_operator: = [163124,163125]
                call_expression [163126,163229]
                    member_expression: ckpReward.sub [163126,163139]
                    call_argument [163140,163228]
                        call_expression [163140,163228]
                            member_expression: ckpReward.mul(fullIntervals).mul(_rewardDecreasePerCheckpoint).div [163140,163206]
                            call_argument [163207,163227]
                                identifier: CHK_REWARD_PRECISION [163207,163227]
to
function_body [161090,163480]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [163303,163378]
    assignment_expression [163303,163377]
        identifier: reward [163303,163309]
        affectation_operator: = [163310,163311]
        call_expression [163312,163377]
            member_expression: reward.add [163312,163322]
            call_argument [163323,163376]
                call_expression [163323,163376]
                    member_expression: blockInterval.mul(ckpReward).div [163323,163355]
                    call_argument [163356,163375]
                        identifier: targetBlockInterval [163356,163375]
to
function_body [161090,163480]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [163388,163449]
    assignment_expression [163388,163448]
        identifier: reward [163388,163394]
        affectation_operator: = [163395,163396]
        call_expression [163397,163448]
            member_expression: reward.mul(signedStakePower).div [163397,163429]
            call_argument [163430,163447]
                identifier: currentTotalStake [163430,163447]
to
function_body [161090,163480]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [163459,163473]
    return: return [163459,163465]
    identifier: reward [163466,163472]
to
function_body [161090,163480]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [163879,163929]
    variable_declaration [163879,163904]
        type_name: uint256 [163879,163886]
        identifier: currentTotalStake [163887,163904]
    affectation_operator: = [163905,163906]
    member_expression: validatorState.amount [163907,163928]
to
function_body [163868,165306]
at 0

New cluster:
MOVE from function_body [163868,165306]
------------
===
move-tree
---
expression_statement [139339,139395]
    assignment_expression [139339,139394]
        member_expression: _proposer.reward [139339,139355]
        affectation_operator: = [139356,139357]
        call_expression [139358,139394]
            member_expression: _proposer.reward.add [139358,139378]
            call_argument [139379,139393]
                identifier: _proposerBonus [139379,139393]
to
function_body [163868,165306]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [164547,164679]
    variable_declaration [164547,164572]
        type_name: uint256 [164547,164554]
        identifier: newRewardPerStake [164555,164572]
    affectation_operator: = [164573,164574]
    call_expression [164588,164678]
        member_expression: rewardPerStake.add [164588,164606]
        call_argument [164607,164677]
            call_expression [164607,164677]
                member_expression: reward.sub(_proposerBonus).mul(REWARD_PRECISION).div [164607,164659]
                call_argument [164660,164676]
                    identifier: signedStakePower [164660,164676]
to
function_body [163868,165306]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [164834,164923]
    call_expression [164834,164922]
        identifier: _updateValidatorsRewards [164834,164858]
        call_argument [164859,164877]
            identifier: unsignedValidators [164859,164877]
        call_argument [164879,164902]
            identifier: totalUnsignedValidators [164879,164902]
        call_argument [164904,164921]
            identifier: newRewardPerStake [164904,164921]
to
function_body [163868,165306]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [164992,165027]
    assignment_expression [164992,165026]
        identifier: rewardPerStake [164992,165006]
        affectation_operator: = [165007,165008]
        identifier: newRewardPerStake [165009,165026]
to
function_body [163868,165306]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [165150,165245]
    call_expression [165150,165244]
        identifier: _updateValidatorsRewards [165150,165174]
        call_argument [165175,165196]
            identifier: deactivatedValidators [165175,165196]
        call_argument [165198,165224]
            identifier: totalDeactivatedValidators [165198,165224]
        call_argument [165226,165243]
            identifier: newRewardPerStake [165226,165243]
to
function_body [163868,165306]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [165904,165982]
    variable_declaration [165904,165933]
        type_name: uint256 [165904,165911]
        identifier: initialRewardPerStake [165912,165933]
    affectation_operator: = [165934,165935]
    member_expression: validators[validatorId].initialRewardPerStake [165936,165981]
to
function_body [165893,167385]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [167239,167378]
    if: if [167239,167241]
    binary_expression [167243,167284]
        identifier: newRewardPerStake [167243,167260]
        comparison_operator: > [167261,167262]
        identifier: initialRewardPerStake [167263,167284]
    block_statement [167286,167378]
        expression_statement [167301,167367]
            assignment_expression [167301,167366]
                member_expression: validators[validatorId].initialRewardPerStake [167301,167346]
                affectation_operator: = [167347,167348]
                identifier: newRewardPerStake [167349,167366]
to
function_body [165893,167385]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [168606,168764]
    if: if [168606,168608]
    binary_expression [168610,168630]
        identifier: delegatorsReward [168610,168626]
        comparison_operator: > [168627,168628]
        number_literal: 0 [168629,168630]
    block_statement [168632,168764]
        expression_statement [168647,168753]
            assignment_expression [168647,168752]
                member_expression: validators[validatorId].delegatorsReward [168647,168687]
                affectation_operator: = [168688,168689]
                call_expression [168690,168752]
                    member_expression: validators[validatorId].delegatorsReward.add [168690,168734]
                    call_argument [168735,168751]
                        identifier: delegatorsReward [168735,168751]
to
function_body [168349,168919]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [168776,168912]
    if: if [168776,168778]
    binary_expression [168780,168799]
        identifier: validatorReward [168780,168795]
        comparison_operator: > [168796,168797]
        number_literal: 0 [168798,168799]
    block_statement [168801,168912]
        expression_statement [168816,168901]
            assignment_expression [168816,168900]
                member_expression: validators[validatorId].reward [168816,168846]
                affectation_operator: = [168847,168848]
                call_expression [168849,168900]
                    member_expression: validators[validatorId].reward.add [168849,168883]
                    call_argument [168884,168899]
                        identifier: validatorReward [168884,168899]
to
function_body [168349,168919]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [169154,169223]
    if: if [169154,169156]
    binary_expression [169158,169181]
        identifier: combinedStakePower [169158,169176]
        comparison_operator: == [169177,169179]
        number_literal: 0 [169180,169181]
    block_statement [169183,169223]
        return_statement [169198,169212]
            return: return [169198,169204]
            tuple_expression [169205,169211]
                number_literal: 0 [169206,169207]
                number_literal: 0 [169209,169210]
to
function_body [169143,169779]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [169385,169449]
    variable_declaration [169385,169407]
        type_name: uint256 [169385,169392]
        identifier: commissionRate [169393,169407]
    affectation_operator: = [169408,169409]
    member_expression: validators[validatorId].commissionRate [169410,169448]
to
function_body [169143,169779]
at 2

New cluster:
MOVE from block_statement [79679,79921]
------------
===
move-tree
---
if_statement [104352,104525]
    if: if [104352,104354]
    binary_expression [104356,104371]
        identifier: totalShares [104356,104367]
        comparison_operator: > [104368,104369]
        number_literal: 0 [104370,104371]
    block_statement [104373,104525]
        expression_statement [104388,104514]
            assignment_expression [104388,104513]
                identifier: rewardPerShare [104388,104402]
                affectation_operator: = [104403,104404]
                call_expression [104405,104513]
                    member_expression: rewardPerShare.add [104405,104423]
                    call_argument [104442,104498]
                        call_expression [104442,104498]
                            member_expression: delegatorsRewards.mul(REWARD_PRECISION).div [104442,104485]
                            call_argument [104486,104497]
                                identifier: totalShares [104486,104497]
to
block_statement [79679,79921]
at 1
===
move-tree
---
if_statement [103954,104154]
    if: if [103954,103956]
    binary_expression [103958,103976]
        identifier: commissionRate [103958,103972]
        comparison_operator: > [103973,103974]
        number_literal: 0 [103975,103976]
    block_statement [103978,104154]
        expression_statement [103993,104143]
            assignment_expression [103993,104142]
                identifier: _validatorRewards [103993,104010]
                affectation_operator: = [104011,104012]
                call_expression [104013,104142]
                    member_expression: _validatorRewards.add [104013,104034]
                    call_argument [104053,104127]
                        call_expression [104053,104127]
                            member_expression: rewards.sub(_validatorRewards).mul(commissionRate).div [104053,104107]
                            call_argument [104108,104126]
                                identifier: MAX_COMMISION_RATE [104108,104126]
to
function_body [169143,169779]
at 3
===
move-tree
---
variable_declaration_statement [104306,104342]
    variable_declaration [104306,104325]
        type_name: uint256 [104306,104313]
        identifier: totalShares [104314,104325]
    affectation_operator: = [104326,104327]
    call_expression [104328,104341]
        identifier: totalSupply [104328,104339]
to
block_statement [79679,79921]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [169664,169719]
    variable_declaration [169664,169688]
        type_name: uint256 [169664,169671]
        identifier: delegatorsReward [169672,169688]
    affectation_operator: = [169689,169690]
    call_expression [169691,169718]
        member_expression: reward.sub [169691,169701]
        call_argument [169702,169717]
            identifier: validatorReward [169702,169717]
to
function_body [169143,169779]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [169729,169772]
    return: return [169729,169735]
    tuple_expression [169736,169771]
        identifier: validatorReward [169737,169752]
        identifier: delegatorsReward [169754,169770]
to
function_body [169143,169779]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [169971,170028]
    variable_declaration [169971,169994]
        type_name: uint256 [169971,169978]
        identifier: validatorsStake [169979,169994]
    affectation_operator: = [169995,169996]
    member_expression: validators[validatorId].amount [169997,170027]
to
function_body [169960,170491]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [170138,170226]
    variable_declaration [170138,170160]
        type_name: uint256 [170138,170145]
        identifier: eligibleReward [170146,170160]
    affectation_operator: = [170161,170162]
    member_expression: rewardPerStake - validators[validatorId].initialRewardPerStake [170163,170225]
to
function_body [169960,170491]
at 2

New cluster:
MOVE from function_body [145091,146372]
------------
===
move-tree
---
variable_declaration_statement [136396,136440]
    variable_declaration [136396,136410]
        type_name: address [136396,136403]
        identifier: signer [136404,136410]
    affectation_operator: = [136411,136412]
    call_expression [136413,136439]
        identifier: pubToAddress [136413,136425]
        call_argument [136426,136438]
            identifier: signerPubkey [136426,136438]
to
function_body [145091,146372]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [172775,172797]
    call_expression [172775,172796]
        identifier: _insertSigner [172775,172788]
        call_argument [172789,172795]
            identifier: signer [172789,172795]
to
function_body [145091,146372]
at 14

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [173064,173092]
    call_expression [173064,173091]
        identifier: _updateRewards [173064,173078]
        call_argument [173079,173090]
            identifier: validatorId [173079,173090]
to
function_body [146447,147452]
at 0

New cluster:
===
insert-node
---
variable_declaration_statement [173325,173399]
to
function_body [146447,147452]
at 4
------------
===
insert-node
---
call_argument [173358,173397]
to
type_cast_expression [173351,173398]
at 1
===
insert-node
---
variable_declaration_statement [173325,173399]
to
function_body [146447,147452]
at 4
===
insert-node
---
type_cast_expression [173351,173398]
to
variable_declaration_statement [173325,173399]
at 2
===
insert-node
---
primitive_type: int256 [173351,173357]
to
type_cast_expression [173351,173398]
at 0

New cluster:
===
insert-node
---
if_statement [173490,173597]
to
function_body [146447,147452]
at 8
------------
===
insert-node
---
block_statement [173528,173597]
to
if_statement [173490,173597]
at 2
===
insert-node
---
if_statement [173490,173597]
to
function_body [146447,147452]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [174429,174501]
    variable_declaration [174429,174443]
        type_name: uint256 [174429,174436]
        identifier: reward [174437,174443]
    affectation_operator: = [174444,174445]
    call_expression [174446,174500]
        member_expression: validators[validatorId].reward.sub [174446,174480]
        call_argument [174481,174499]
            identifier: INITIALIZED_AMOUNT [174481,174499]
to
function_body [132066,132347]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [174643,174706]
    assignment_expression [174643,174705]
        member_expression: validators[validatorId].initialRewardPerStake [174643,174688]
        affectation_operator: = [174689,174690]
        identifier: rewardPerStake [174691,174705]
to
function_body [132066,132347]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [22057,22136]
    type_cast_expression [22057,22067]
        primitive_type: uint256 [22057,22064]
        call_argument [22065,22066]
            identifier: s [22065,22066]
    comparison_operator: > [22068,22069]
    number_literal: 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 [22070,22136]
to
if_statement [22053,22184]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [22322,22340]
    binary_expression [22322,22329]
        identifier: v [22322,22323]
        comparison_operator: != [22324,22326]
        number_literal: 27 [22327,22329]
    logical_operator: && [22330,22332]
    binary_expression [22333,22340]
        identifier: v [22333,22334]
        comparison_operator: != [22335,22337]
        number_literal: 28 [22338,22340]
to
if_statement [22318,22388]
at 1

New cluster:
MOVE from assignment_expression [71801,71851]
------------
===
move-tree
---
affectation_operator: = [107092,107093]
to
assignment_expression [71801,71851]
at 1
===
move-tree
---
call_expression [107094,107133]
    identifier: _buyShares [107094,107104]
    call_argument [107105,107117]
        identifier: liquidReward [107105,107117]
    call_argument [107119,107120]
        number_literal: 0 [107119,107120]
    call_argument [107122,107132]
        member_expression: msg.sender [107122,107132]
to
assignment_expression [71801,71851]
at 2
===
move-tree
---
variable_declaration [107069,107091]
    type_name: uint256 [107069,107076]
    identifier: amountRestaked [107077,107091]
to
variable_declaration_statement [71649,71672]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [71767,71784]
    identifier: liquidReward [71767,71779]
    comparison_operator: != [71780,71782]
    number_literal: 0 [71783,71784]
to
if_statement [71763,72414]
at 1

New cluster:
===
insert-node
---
tuple_expression [72441,72471]
to
return_statement [107631,107653]
at 1
------------
===
insert-node
---
identifier: liquidReward [72458,72470]
to
tuple_expression [72441,72471]
at 1
===
insert-node
---
tuple_expression [72441,72471]
to
return_statement [107631,107653]
at 1

New cluster:
MOVE from variable_declaration_statement [109115,109180]
------------
===
move-tree
---
call_expression [110489,110511]
    identifier: getLiquidRewards [110489,110505]
    call_argument [110506,110510]
        identifier: user [110506,110510]
to
variable_declaration_statement [109115,109180]
at 2

New cluster:
===
insert-node
---
assignment_expression [73766,73805]
to
expression_statement [111696,111723]
at 0
------------
===
insert-node
---
affectation_operator: = [73779,73780]
to
assignment_expression [73766,73805]
at 1
===
insert-node
---
assignment_expression [73766,73805]
to
expression_statement [111696,111723]
at 0

New cluster:
MOVE from variable_declaration_statement [75173,75245]
------------
===
move-tree
---
call_expression [113885,113933]
    member_expression: _amountToSlash.sub [113885,113903]
    call_argument [113904,113932]
        identifier: _amountToSlashWithdrawalPool [113904,113932]
to
variable_declaration_statement [75173,75245]
at 2

New cluster:
===
insert-node
---
assignment_expression [75396,75457]
to
expression_statement [113945,113995]
at 0
------------
===
insert-node
---
affectation_operator: = [75409,75410]
to
assignment_expression [75396,75457]
at 1
===
insert-node
---
assignment_expression [75396,75457]
to
expression_statement [113945,113995]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [76269,76298]
    type_name: DelegatorUnbond [76269,76284]
    memory: memory [76285,76291]
    identifier: unbond [76292,76298]
to
variable_declaration_statement [76269,76421]
at 0

New cluster:
MOVE from variable_declaration_statement [111347,111406]
------------
===
move-tree
---
call_expression [109153,109179]
    identifier: _getTotalStake [109153,109167]
    call_argument [109168,109178]
        member_expression: msg.sender [109168,109178]
to
variable_declaration_statement [111347,111406]
at 2

New cluster:
===
insert-node
---
assignment_expression [78242,78286]
to
expression_statement [109693,109725]
at 0
------------
===
insert-node
---
assignment_expression [78242,78286]
to
expression_statement [109693,109725]
at 0
===
insert-node
---
affectation_operator: = [78255,78256]
to
assignment_expression [78242,78286]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [79655,79677]
    identifier: accumulatedReward [79655,79672]
    comparison_operator: != [79673,79675]
    number_literal: 0 [79676,79677]
to
if_statement [79651,79921]
at 1

New cluster:
MOVE from variable_declaration_statement [110465,110512]
------------
===
move-tree
---
call_expression [111385,111405]
    identifier: _getTotalStake [111385,111399]
    call_argument [111400,111404]
        identifier: user [111400,111404]
to
variable_declaration_statement [110465,110512]
at 2

New cluster:
===
insert-node
---
member_expression: validators[validatorId].lastCommissionUpdate [131018,131062]
to
variable_declaration_statement [102338,102391]
at 2
------------
===
insert-node
---
member_expression: validators[validatorId].lastCommissionUpdate [131018,131062]
to
variable_declaration_statement [102338,102391]
at 2

New cluster:
MOVE from expression_statement [122115,122167]
------------
===
move-tree
---
call_expression [122123,122165]
    member_expression: token.transfer [122123,122137]
    call_argument [122138,122148]
        member_expression: msg.sender [122138,122148]
    call_argument [122150,122164]
        identifier: withdrawAmount [122150,122164]
to
expression_statement [122115,122167]
at 0

New cluster:
MOVE from variable_declaration_statement [144695,144790]
------------
===
move-tree
---
variable_declaration [127236,127258]
    type_name: uint256 [127236,127243]
    identifier: newValidatorId [127244,127258]
to
variable_declaration_statement [144695,144790]
at 0
===
move-tree
---
call_expression [127261,127429]
    identifier: _stakeFor [127261,127270]
    call_argument [127289,127300]
        identifier: auctionUser [127289,127300]
    call_argument [127319,127332]
        identifier: auctionAmount [127319,127332]
    call_argument [127351,127375]
        member_expression: auction.acceptDelegation [127351,127375]
    call_argument [127394,127414]
        member_expression: auction.signerPubkey [127394,127414]
to
expression_statement [128834,129084]
at 0

New cluster:
MOVE from call_expression [122349,122422]
------------
===
move-tree
---
call_argument [122370,122376]
    identifier: amount [122370,122376]
to
call_expression [122349,122422]
at 3
===
move-tree
---
call_argument [122391,122407]
    identifier: acceptDelegation [122391,122407]
to
call_expression [144720,144789]
at 3
===
move-tree
---
call_argument [122409,122421]
    identifier: signerPubkey [122409,122421]
to
call_expression [144720,144789]
at 4

New cluster:
===
insert-node
---
call_expression [148129,148156]
to
expression_statement [131235,131287]
at 0
------------
===
insert-node
---
call_expression [148129,148156]
to
expression_statement [131235,131287]
at 0

New cluster:
MOVE from if_statement [148169,148355]
------------
===
move-tree
---
if: if [131378,131380]
to
if_statement [148169,148355]
at 0

New cluster:
UPDATE from contractAddr to stakeRewards
------------
===
update-node
---
identifier: contractAddr [131382,131394]
replace contractAddr by stakeRewards

New cluster:
MOVE from if_statement [148169,148355]
------------
===
move-tree
---
identifier: contractAddr [131382,131394]
to
if_statement [148169,148355]
at 1
===
move-tree
---
type_cast_expression [131398,131410]
    primitive_type: address [131398,131405]
    call_argument [131406,131409]
        number_literal: 0x0 [131406,131409]
to
return_statement [22153,22173]
at 1

New cluster:
MOVE from for_statement [152006,153815]
------------
===
move-tree
---
variable_declaration_statement [141969,141983]
    variable_declaration [141969,141978]
        type_name: uint256 [141969,141976]
        identifier: i [141977,141978]
    affectation_operator: = [141979,141980]
    number_literal: 0 [141981,141982]
to
for_statement [152006,153815]
at 1

New cluster:
MOVE from for_statement [152006,153815]
------------
===
move-tree
---
expression_statement [140084,140100]
    binary_expression [140084,140099]
        identifier: i [140084,140085]
        comparison_operator: < [140086,140087]
        member_expression: sigs.length [140088,140099]
to
for_statement [152006,153815]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
update_expression [152043,152046]
    increment_operator: ++ [152043,152045]
    identifier: i [152045,152046]
to
for_statement [152006,153815]
at 3

New cluster:
===
insert-node
---
member_expression: validators[validatorId].contractAddress [157510,157549]
to
variable_declaration_statement [143747,143776]
at 2
------------
===
insert-node
---
member_expression: validators[validatorId].contractAddress [157510,157549]
to
variable_declaration_statement [143747,143776]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [159801,159815]
    type_name: address [159801,159808]
    identifier: signer [159809,159815]
to
variable_declaration_statement [159801,159860]
at 0

New cluster:
MOVE from variable_declaration_statement [159801,159860]
------------
===
move-tree
---
type_cast_expression [148941,148982]
    primitive_type: address [148941,148948]
    call_argument [148949,148981]
        type_cast_expression [148949,148981]
            primitive_type: uint160 [148949,148956]
            call_argument [148957,148980]
                type_cast_expression [148957,148980]
                    primitive_type: uint256 [148957,148964]
                    call_argument [148965,148979]
                        call_expression [148965,148979]
                            identifier: keccak256 [148965,148974]
                            call_argument [148975,148978]
                                identifier: pub [148975,148978]
to
variable_declaration_statement [159801,159860]
at 2

New cluster:
MOVE from variable_declaration_statement [164042,164138]
------------
===
move-tree
---
variable_declaration [132443,132457]
    type_name: uint256 [132443,132450]
    identifier: reward [132451,132457]
to
variable_declaration_statement [164042,164138]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [164059,164137]
    identifier: _calculateCheckpointReward [164059,164085]
    call_argument [164086,164099]
        identifier: blockInterval [164086,164099]
    call_argument [164101,164117]
        identifier: signedStakePower [164101,164117]
    call_argument [164119,164136]
        identifier: currentTotalStake [164119,164136]
to
variable_declaration_statement [164042,164138]
at 2

New cluster:
MOVE from variable_declaration_statement [164150,164225]
------------
===
move-tree
---
variable_declaration [139001,139023]
    type_name: uint256 [139001,139008]
    identifier: _proposerBonus [139009,139023]
to
variable_declaration_statement [164150,164225]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [164175,164224]
    member_expression: reward.mul(proposerBonus).div [164175,164204]
    call_argument [164205,164223]
        identifier: MAX_PROPOSER_BONUS [164205,164223]
to
variable_declaration_statement [164150,164225]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [164235,164253]
    type_name: uint256 [164235,164242]
    identifier: proposerId [164243,164253]
to
variable_declaration_statement [164235,164284]
at 0

New cluster:
MOVE from variable_declaration_statement [164235,164284]
------------
===
move-tree
---
array_access [139112,139139]
    identifier: signerToValidator [139112,139129]
    identifier: proposer [139130,139138]
to
variable_declaration_statement [164235,164284]
at 2

New cluster:
MOVE from variable_declaration_statement [164296,164349]
------------
===
move-tree
---
variable_declaration [139071,139098]
    type_name: Validator [139071,139080]
    storage: storage [139081,139088]
    identifier: _proposer [139089,139098]
to
variable_declaration_statement [164296,164349]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
array_access [164326,164348]
    identifier: validators [164326,164336]
    identifier: proposerId [164337,164347]
to
variable_declaration_statement [164296,164349]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [166073,166118]
    identifier: initialRewardPerStake [166073,166094]
    comparison_operator: < [166095,166096]
    identifier: currentRewardPerStake [166097,166118]
to
if_statement [166069,167227]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [168034,168044]
    identifier: reward [168034,168040]
    comparison_operator: > [168041,168042]
    number_literal: 0 [168043,168044]
to
if_statement [168030,168148]
at 1

New cluster:
MOVE from variable_declaration_statement [168360,168426]
------------
===
move-tree
---
variable_declaration [103541,103567]
    type_name: uint256 [103541,103548]
    identifier: combinedStakePower [103549,103567]
to
variable_declaration_statement [168360,168426]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [168389,168425]
    member_expression: delegatedAmount.add [168389,168408]
    call_argument [168409,168424]
        identifier: validatorsStake [168409,168424]
to
variable_declaration_statement [168360,168426]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_tuple [168436,168487]
    variable_declaration [168437,168460]
        type_name: uint256 [168437,168444]
        identifier: validatorReward [168445,168460]
    variable_declaration [168462,168486]
        type_name: uint256 [168462,168469]
        identifier: delegatorsReward [168470,168486]
to
variable_declaration_statement [168436,168594]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [169235,169258]
    type_name: uint256 [169235,169242]
    identifier: validatorReward [169243,169258]
to
variable_declaration_statement [169235,169313]
at 0

New cluster:
MOVE from variable_declaration_statement [170038,170128]
------------
===
move-tree
---
variable_declaration [103138,103164]
    type_name: uint256 [103138,103145]
    identifier: combinedStakePower [103146,103164]
to
variable_declaration_statement [170038,170128]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [170067,170127]
    member_expression: validatorsStake.add [170067,170086]
    call_argument [170087,170126]
        member_expression: validators[validatorId].delegatedAmount [170087,170126]
to
variable_declaration_statement [170038,170128]
at 2

New cluster:
===
insert-node
---
member_expression: validators[validatorId].contractAddress [170627,170666]
to
variable_declaration_statement [144347,144376]
at 2
------------
===
insert-node
---
member_expression: validators[validatorId].contractAddress [170627,170666]
to
variable_declaration_statement [144347,144376]
at 2

New cluster:
MOVE from variable_declaration_statement [173325,173399]
------------
===
move-tree
---
affectation_operator: = [146703,146704]
to
variable_declaration_statement [173325,173399]
at 1
===
move-tree
---
variable_declaration [146679,146702]
    type_name: int256 [146679,146685]
    identifier: delegationAmount [146686,146702]
to
variable_declaration_statement [173325,173399]
at 0

New cluster:
MOVE from if_statement [173490,173597]
------------
===
move-tree
---
binary_expression [146853,146881]
    identifier: contractAddr [146853,146865]
    comparison_operator: != [146866,146868]
    type_cast_expression [146869,146881]
        primitive_type: address [146869,146876]
        call_argument [146877,146880]
            number_literal: 0x0 [146877,146880]
to
if_statement [173490,173597]
at 1
===
move-tree
---
if: if [146849,146851]
to
if_statement [173490,173597]
at 0

New cluster:
MOVE from expression_statement [132192,132262]
------------
===
move-tree
---
call_expression [132200,132237]
    member_expression: token.transfer [132200,132214]
    call_argument [132215,132228]
        identifier: validatorUser [132215,132228]
    call_argument [132230,132236]
        identifier: reward [132230,132236]
to
expression_statement [132192,132262]
at 0

New cluster:
MOVE from expression_statement [121172,121277]
------------
===
move-tree
---
call_expression [121180,121252]
    member_expression: token.transferFrom [121180,121198]
    call_argument [121199,121209]
        member_expression: msg.sender [121199,121209]
    call_argument [121211,121224]
        type_cast_expression [121211,121224]
            primitive_type: address [121211,121218]
            call_argument [121219,121223]
                identifier: this [121219,121223]
    call_argument [121226,121251]
        call_expression [121226,121251]
            member_expression: fee.add [121226,121233]
            call_argument [121234,121250]
                identifier: additionalAmount [121234,121250]
to
expression_statement [121172,121277]
at 0

New cluster:
MOVE from return_statement [8460,8472]
------------
===
move-tree
---
boolean_literal: true [10416,10420]
to
return_statement [8460,8472]
at 1
===
move-tree
---
binary_expression [10394,10405]
    identifier: result [10394,10400]
    comparison_operator: == [10401,10403]
    number_literal: 0 [10404,10405]
to
binary_expression [8355,8398]
at 0
===
move-tree
---
boolean_literal: false [10408,10413]
to
return_statement [8415,8428]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [8370,8398]
    identifier: result [8370,8376]
    comparison_operator: == [8377,8379]
    identifier: STRING_SHORT_START [8380,8398]
to
binary_expression [8355,8398]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [64859,64882]
    binary_expression [64859,64882]
        identifier: _contract [64859,64868]
        comparison_operator: == [64869,64871]
        member_expression: msg.sender [64872,64882]
to
call_expression [64851,64900]
at 1

New cluster:
MOVE from call_expression [64851,64900]
------------
===
move-tree
---
call_argument [101673,101688]
    string_literal [101673,101688]
        string: "not validator" [101673,101688]
to
call_expression [64851,64900]
at 2

New cluster:
UPDATE from totalShares == 0                 ? precision                 : activeAmount.mul(precision).div to totalShares == 0 ? precision : stakeManager.delegatedAmount(validatorId).mul(precision).div
------------
===
update-node
---
member_expression: totalShares == 0                 ? precision                 : activeAmount.mul(precision).div [105198,105294]
replace totalShares == 0                 ? precision                 : activeAmount.mul(precision).div by totalShares == 0 ? precision : stakeManager.delegatedAmount(validatorId).mul(precision).div

New cluster:
UPDATE from _withdrawShares == 0                 ? precision                 : withdrawPool.mul(precision).div to _withdrawShares == 0 ? precision : withdrawPool.mul(precision).div
------------
===
update-node
---
member_expression: _withdrawShares == 0                 ? precision                 : withdrawPool.mul(precision).div [105841,105941]
replace _withdrawShares == 0                 ? precision                 : withdrawPool.mul(precision).div by _withdrawShares == 0 ? precision : withdrawPool.mul(precision).div

New cluster:
MOVE from assignment_expression [71259,71326]
------------
===
move-tree
---
identifier: amountToDeposit [106267,106282]
to
assignment_expression [71259,71326]
at 0

New cluster:
MOVE from assignment_expression [71259,71326]
------------
===
move-tree
---
call_expression [106285,106334]
    identifier: _buyShares [106285,106295]
    call_argument [106296,106303]
        identifier: _amount [106296,106303]
    call_argument [106305,106321]
        identifier: _minSharesToMint [106305,106321]
    call_argument [106323,106333]
        member_expression: msg.sender [106323,106333]
to
assignment_expression [71259,71326]
at 2
===
move-tree
---
affectation_operator: = [106283,106284]
to
assignment_expression [71259,71326]
at 1

New cluster:
MOVE from block_statement [71786,72414]
------------
===
move-tree
---
expression_statement [107546,107619]
    call_expression [107546,107618]
        member_expression: stakingLogger.logDelegatorRestaked [107546,107580]
        call_argument [107581,107592]
            identifier: validatorId [107581,107592]
        call_argument [107594,107604]
            member_expression: msg.sender [107594,107604]
        call_argument [107606,107617]
            identifier: totalStaked [107606,107617]
to
block_statement [71786,72414]
at 3
===
move-tree
---
variable_declaration_statement [107483,107536]
    variable_declaration_tuple [107483,107506]
        variable_declaration [107484,107503]
            type_name: uint256 [107484,107491]
            identifier: totalStaked [107492,107503]
    affectation_operator: = [107507,107508]
    call_expression [107509,107535]
        identifier: _getTotalStake [107509,107523]
        call_argument [107524,107534]
            member_expression: msg.sender [107524,107534]
to
block_statement [71786,72414]
at 2
===
move-tree
---
if_statement [107144,107471]
    if: if [107144,107146]
    binary_expression [107148,107177]
        identifier: liquidReward [107148,107160]
        comparison_operator: > [107161,107162]
        identifier: amountRestaked [107163,107177]
    block_statement [107179,107471]
        expression_statement [107236,107351]
            call_expression [107236,107350]
                identifier: require [107236,107243]
                call_argument [107244,107326]
                    call_expression [107244,107326]
                        member_expression: stakeManager.transferFunds [107244,107270]
                        call_argument [107271,107282]
                            identifier: validatorId [107271,107282]
                        call_argument [107284,107313]
                            binary_expression [107284,107313]
                                identifier: liquidReward [107284,107296]
                                arithmetic_operator: - [107297,107298]
                                identifier: amountRestaked [107299,107313]
                        call_argument [107315,107325]
                            member_expression: msg.sender [107315,107325]
                call_argument [107328,107349]
                    string_literal [107328,107349]
                        string: "Insufficent rewards" [107328,107349]
        expression_statement [107365,107460]
            call_expression [107365,107459]
                member_expression: stakingLogger.logDelegatorClaimRewards [107365,107403]
                call_argument [107404,107415]
                    identifier: validatorId [107404,107415]
                call_argument [107417,107427]
                    member_expression: msg.sender [107417,107427]
                call_argument [107429,107458]
                    binary_expression [107429,107458]
                        identifier: liquidReward [107429,107441]
                        arithmetic_operator: - [107442,107443]
                        identifier: amountRestaked [107444,107458]
to
block_statement [71786,72414]
at 1

New cluster:
MOVE from tuple_expression [72441,72471]
------------
===
move-tree
---
identifier: amountRestaked [107638,107652]
to
tuple_expression [72441,72471]
at 0

New cluster:
UPDATE from _reduceActiveStake to activeAmount
------------
===
update-node
---
identifier: _reduceActiveStake [111696,111714]
replace _reduceActiveStake by activeAmount
===
update-node
---
identifier: _reduceActiveStake [109693,109711]
replace _reduceActiveStake by activeAmount

New cluster:
MOVE from call_expression [141477,141544]
------------
===
move-tree
---
call_argument [111715,111721]
    identifier: amount [111715,111721]
to
call_expression [141477,141544]
at 3
===
move-tree
---
identifier: _reduceActiveStake [111696,111714]
to
assignment_expression [73766,73805]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [73781,73805]
    member_expression: activeAmount.sub [73781,73797]
    call_argument [73798,73804]
        identifier: amount [73798,73804]
to
assignment_expression [73766,73805]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [74423,74434]
    identifier: validatorId [74423,74434]
to
call_expression [74388,74455]
at 1

New cluster:
MOVE from call_expression [143536,143773]
------------
===
move-tree
---
call_argument [130640,130646]
    identifier: amount [130640,130646]
to
call_expression [143536,143773]
at 3
===
move-tree
---
call_argument [130628,130638]
    member_expression: msg.sender [130628,130638]
to
call_expression [74388,74455]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [74448,74454]
    identifier: amount [74448,74454]
to
call_expression [74388,74455]
at 3

New cluster:
UPDATE from activeAmount.add to delegatedAmount.add
------------
===
update-node
---
member_expression: activeAmount.add [113423,113439]
replace activeAmount.add by delegatedAmount.add

New cluster:
UPDATE from _reduceActiveStake to stakeSlashed
------------
===
update-node
---
identifier: _reduceActiveStake [113866,113884]
replace _reduceActiveStake by stakeSlashed

New cluster:
MOVE from variable_declaration [75173,75193]
------------
===
move-tree
---
identifier: _reduceActiveStake [113866,113884]
to
variable_declaration [75173,75193]
at 1

New cluster:
UPDATE from _reduceWithdrawPool to withdrawPool
------------
===
update-node
---
identifier: _reduceWithdrawPool [113945,113964]
replace _reduceWithdrawPool by withdrawPool

New cluster:
MOVE from assignment_expression [75396,75457]
------------
===
move-tree
---
identifier: _reduceWithdrawPool [113945,113964]
to
assignment_expression [75396,75457]
at 0

New cluster:
MOVE from assignment_expression [75396,75457]
------------
===
move-tree
---
call_expression [113945,113994]
    identifier: _reduceWithdrawPool [113945,113964]
    call_argument [113965,113993]
        identifier: _amountToSlashWithdrawalPool [113965,113993]
to
assignment_expression [75396,75457]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [76582,76593]
    identifier: validatorId [76582,76593]
to
call_expression [76538,76640]
at 1

New cluster:
MOVE from call_expression [76538,76640]
------------
===
move-tree
---
call_argument [121199,121209]
    member_expression: msg.sender [121199,121209]
to
call_expression [76538,76640]
at 2

New cluster:
MOVE from call_expression [76538,76640]
------------
===
move-tree
---
call_argument [109712,109723]
    identifier: claimAmount [109712,109723]
to
call_expression [76538,76640]
at 3
===
move-tree
---
identifier: _reduceActiveStake [109693,109711]
to
assignment_expression [78242,78286]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [76620,76626]
    identifier: shares [76620,76626]
to
call_expression [76538,76640]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [76628,76639]
    identifier: unbondNonce [76628,76639]
to
call_expression [76538,76640]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [77017,77028]
    identifier: validatorId [77017,77028]
to
call_expression [76967,77062]
at 1

New cluster:
MOVE from call_expression [76967,77062]
------------
===
move-tree
---
call_argument [107524,107534]
    member_expression: msg.sender [107524,107534]
to
call_expression [76967,77062]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [77042,77048]
    identifier: amount [77042,77048]
to
call_expression [76967,77062]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [77050,77061]
    identifier: unbondNonce [77050,77061]
to
call_expression [76967,77062]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [78257,78286]
    member_expression: activeAmount.sub [78257,78273]
    call_argument [78274,78285]
        identifier: claimAmount [78274,78285]
to
assignment_expression [78242,78286]
at 2

New cluster:
UPDATE from rewardPerShare.sub(initalRewardPerShare[user]).mul(shares).div to _rewardPerShare.sub(_initialRewardPerShare).mul(shares).div
------------
===
update-node
---
member_expression: rewardPerShare.sub(initalRewardPerShare[user]).mul(shares).div [112255,112317]
replace rewardPerShare.sub(initalRewardPerShare[user]).mul(shares).div by _rewardPerShare.sub(_initialRewardPerShare).mul(shares).div

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [80722,80737]
    identifier: _rewardPerShare [80722,80737]
to
call_expression [111385,111405]
at 2

New cluster:
UPDATE from rewardPerShare to _rewardPerShare
------------
===
update-node
---
identifier: rewardPerShare [110551,110565]
replace rewardPerShare by _rewardPerShare
===
update-node
---
identifier: rewardPerShare [104388,104402]
replace rewardPerShare by _rewardPerShare

New cluster:
UPDATE from > to !=
------------
===
update-node
---
comparison_operator: > [104368,104369]
replace > by !=
===
update-node
---
comparison_operator: > [109210,109211]
replace > by !=
===
update-node
---
comparison_operator: > [134173,134174]
replace > by !=
===
update-node
---
comparison_operator: > [110772,110773]
replace > by !=
===
update-node
---
comparison_operator: > [133690,133691]
replace > by !=

New cluster:
MOVE from assignment_expression [108265,108329]
------------
===
move-tree
---
call_expression [108287,108328]
    member_expression: _amount % rate.mul(shares).div [108287,108317]
    call_argument [108318,108327]
        identifier: precision [108318,108327]
to
assignment_expression [108265,108329]
at 2

New cluster:
===
insert-node
---
expression_statement [128834,129084]
to
block_statement [127082,127524]
at 0
------------
===
insert-node
---
expression_statement [128834,129084]
to
block_statement [127082,127524]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [131269,131279]
    string_literal [131269,131279]
        string: "Cooldown" [131269,131279]
to
call_expression [131075,131290]
at 2

New cluster:
UPDATE from stakingLogger.logUpdateCommissionRate to _getOrCacheEventsHub().logUpdateCommissionRate
------------
===
update-node
---
member_expression: stakingLogger.logUpdateCommissionRate [102780,102817]
replace stakingLogger.logUpdateCommissionRate by _getOrCacheEventsHub().logUpdateCommissionRate

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [141513,141522]
    identifier: tokenAddr [141513,141522]
to
call_expression [141477,141544]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [141524,141535]
    identifier: destination [141524,141535]
to
call_expression [141477,141544]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [141662,141673]
    identifier: destination [141662,141673]
to
call_expression [141647,141682]
at 1

New cluster:
MOVE from call_expression [141647,141682]
------------
===
move-tree
---
call_argument [129733,129739]
    identifier: amount [129733,129739]
to
call_expression [141647,141682]
at 2

New cluster:
MOVE from assignment_expression [141946,141970]
------------
===
move-tree
---
type_cast_expression [139184,139196]
    primitive_type: address [139184,139191]
    call_argument [139192,139195]
        number_literal: 0x0 [139192,139195]
to
assignment_expression [141946,141970]
at 2

New cluster:
MOVE from call_expression [129696,129740]
------------
===
move-tree
---
call_argument [132755,132765]
    member_expression: msg.sender [132755,132765]
to
call_expression [129696,129740]
at 2
===
move-tree
---
call_argument [132742,132753]
    identifier: validatorId [132742,132753]
to
call_expression [148129,148156]
at 1

New cluster:
MOVE from call_expression [129696,129740]
------------
===
move-tree
---
call_argument [120488,120489]
    number_literal: 0 [120488,120489]
to
call_expression [129696,129740]
at 4
===
move-tree
---
call_argument [120469,120473]
    identifier: user [120469,120473]
to
call_expression [122349,122422]
at 1
===
move-tree
---
call_argument [120475,120486]
    identifier: heimdallFee [120475,120486]
to
call_expression [144011,144222]
at 3

New cluster:
UPDATE from require to _transferToken
------------
===
update-node
---
identifier: require [130605,130612]
replace require by _transferToken
===
update-node
---
identifier: require [122115,122122]
replace require by _transferToken
===
update-node
---
identifier: require [132192,132199]
replace require by _transferToken

New cluster:
MOVE from call_expression [122123,122165]
------------
===
move-tree
---
identifier: require [122115,122122]
to
call_expression [122123,122165]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [143508,143521]
    identifier: extensionCode [143508,143521]
to
call_expression [143481,143784]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [143983,143996]
    identifier: extensionCode [143983,143996]
to
call_expression [143956,144233]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144608,144619]
    identifier: auctionUser [144608,144619]
to
call_expression [127122,127168]
at 2

New cluster:
MOVE from call_expression [144647,144682]
------------
===
move-tree
---
call_argument [113129,113140]
    identifier: validatorId [113129,113140]
to
call_expression [144647,144682]
at 1
===
move-tree
---
call_argument [113142,113152]
    member_expression: msg.sender [113142,113152]
to
call_expression [147252,147294]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144669,144681]
    identifier: currentEpoch [144669,144681]
to
call_expression [144647,144682]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144730,144741]
    identifier: auctionUser [144730,144741]
to
call_expression [144720,144789]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144743,144756]
    identifier: auctionAmount [144743,144756]
to
call_expression [144720,144789]
at 2

New cluster:
===
insert-node
---
identifier: _transferAndTopUp [146446,146463]
to
call_expression [122349,122422]
at 0
------------
===
insert-node
---
identifier: _transferAndTopUp [146446,146463]
to
call_expression [122349,122422]
at 0

New cluster:
MOVE from call_expression [147252,147294]
------------
===
move-tree
---
call_argument [144188,144199]
    identifier: validatorId [144188,144199]
to
call_expression [147252,147294]
at 1
===
move-tree
---
member_expression: logger.logUnjailed [144169,144187]
to
call_expression [157958,157997]
at 0

New cluster:
MOVE from call_expression [130605,130673]
------------
===
move-tree
---
call_argument [107594,107604]
    member_expression: msg.sender [107594,107604]
to
call_expression [130605,130673]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [147670,147676]
    identifier: amount [147670,147676]
to
call_expression [130605,130673]
at 2

New cluster:
UPDATE from amount to _updateRewards
------------
===
update-node
---
identifier: amount [131235,131241]
replace amount by _updateRewards
===
update-node
---
identifier: isValidator [140399,140410]
replace isValidator by _updateRewards

New cluster:
MOVE from call_expression [148129,148156]
------------
===
move-tree
---
identifier: amount [131235,131241]
to
call_expression [148129,148156]
at 0

New cluster:
MOVE from block_statement [148187,148355]
------------
===
move-tree
---
expression_statement [131431,131509]
    assignment_expression [131431,131508]
        identifier: amount [131431,131437]
        affectation_operator: = [131438,131439]
        call_expression [131440,131508]
            member_expression: amount.add [131440,131450]
            call_argument [131451,131507]
                call_expression [131451,131507]
                    member_expression: IValidatorShare(contractAddr).withdrawRewardsValidator [131451,131505]
to
block_statement [148187,148355]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [148886,148897]
    identifier: validatorId [148886,148897]
to
call_expression [148868,148910]
at 1

New cluster:
MOVE from call_expression [148868,148910]
------------
===
move-tree
---
call_argument [107122,107132]
    member_expression: msg.sender [107122,107132]
to
call_expression [148868,148910]
at 2

New cluster:
MOVE from block_statement [152048,153815]
------------
===
move-tree
---
variable_declaration_statement [140205,140253]
    variable_declaration [140205,140224]
        type_name: uint256 [140205,140212]
        identifier: validatorId [140213,140224]
    affectation_operator: = [140225,140226]
    array_access [140227,140252]
        identifier: signerToValidator [140227,140244]
        identifier: signer [140245,140251]
to
block_statement [152048,153815]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [152607,152654]
    variable_declaration [152607,152620]
        type_name: Status [152607,152613]
        identifier: status [152614,152620]
    affectation_operator: = [152621,152622]
    member_expression: validators[validatorId].status [152623,152653]
to
block_statement [152048,153815]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [152668,152741]
    assignment_expression [152668,152740]
        member_expression: unstakeCtx.deactivationEpoch [152668,152696]
        affectation_operator: = [152697,152698]
        member_expression: validators[validatorId].deactivationEpoch [152699,152740]
to
block_statement [152048,153815]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154552,154565]
    identifier: extensionCode [154552,154565]
to
call_expression [154525,154779]
at 1

New cluster:
===
insert-node
---
expression_statement [155750,155778]
to
block_statement [142018,143076]
at 2
------------
===
insert-node
---
expression_statement [155750,155778]
to
block_statement [142018,143076]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [155903,155972]
    variable_declaration [155903,155929]
        type_name: address [155903,155910]
        identifier: delegationContract [155911,155929]
    affectation_operator: = [155930,155931]
    member_expression: validators[validatorId].contractAddress [155932,155971]
to
block_statement [142018,143076]
at 5

New cluster:
UPDATE from uint256 to address
------------
===
update-node
---
type_name: uint256 [143747,143754]
replace uint256 by address
===
update-node
---
type_name: uint256 [144347,144354]
replace uint256 by address

New cluster:
UPDATE from contractAddr to delegationContract
------------
===
update-node
---
identifier: contractAddr [146853,146865]
replace contractAddr by delegationContract
===
update-node
---
identifier: delegationAmount [144355,144371]
replace delegationAmount by delegationContract
===
update-node
---
identifier: contractAddr [146784,146796]
replace contractAddr by delegationContract
===
update-node
---
identifier: delegationAmount [143755,143771]
replace delegationAmount by delegationContract

New cluster:
===
insert-node
---
identifier: delegationContract [157564,157582]
to
binary_expression [143790,143845]
at 0
------------
===
insert-node
---
identifier: delegationContract [157564,157582]
to
binary_expression [143790,143845]
at 0

New cluster:
MOVE from binary_expression [143790,143845]
------------
===
move-tree
---
type_cast_expression [146869,146881]
    primitive_type: address [146869,146876]
    call_argument [146877,146880]
        number_literal: 0x0 [146877,146880]
to
binary_expression [143790,143845]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [157977,157988]
    identifier: validatorId [157977,157988]
to
call_expression [157958,157997]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [157990,157996]
    identifier: signer [157990,157996]
to
call_expression [157958,157997]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159878,159932]
    binary_expression [159878,159932]
        array_access [159878,159927]
            binary_expression [159878,159919]
                binary_expression [159878,159898]
                    identifier: signer [159878,159884]
                    comparison_operator: != [159885,159887]
                    type_cast_expression [159888,159898]
                        primitive_type: address [159888,159895]
                        call_argument [159896,159897]
                            number_literal: 0 [159896,159897]
                logical_operator: && [159899,159901]
                identifier: signerToValidator [159902,159919]
            identifier: signer [159920,159926]
        comparison_operator: == [159928,159930]
        number_literal: 0 [159931,159932]
to
call_expression [159870,159951]
at 1

New cluster:
MOVE from call_expression [159870,159951]
------------
===
move-tree
---
call_argument [145222,145238]
    string_literal [145222,145238]
        string: "Invalid signer" [145222,145238]
to
call_expression [159870,159951]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [166135,166192]
    variable_declaration [166135,166158]
        type_name: uint256 [166135,166142]
        identifier: validatorsStake [166143,166158]
    affectation_operator: = [166159,166160]
    member_expression: validators[validatorId].amount [166161,166191]
to
block_statement [166120,167227]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [166206,166272]
    variable_declaration [166206,166229]
        type_name: uint256 [166206,166213]
        identifier: delegatedAmount [166214,166229]
    affectation_operator: = [166230,166231]
    member_expression: validators[validatorId].delegatedAmount [166232,166271]
to
block_statement [166120,167227]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [168536,168547]
    identifier: validatorId [168536,168547]
to
call_expression [168503,168593]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [168549,168564]
    identifier: validatorsStake [168549,168564]
to
call_expression [168503,168593]
at 2

New cluster:
MOVE from call_expression [152080,152118]
------------
===
move-tree
---
call_argument [139715,139723]
    identifier: voteHash [139715,139723]
to
call_expression [152080,152118]
at 1
===
move-tree
---
call_argument [139707,139713]
    identifier: reward [139707,139713]
to
call_expression [168503,168593]
at 3

New cluster:
MOVE from call_expression [168503,168593]
------------
===
move-tree
---
call_argument [103861,103879]
    identifier: combinedStakePower [103861,103879]
to
call_expression [168503,168593]
at 4

New cluster:
MOVE from call_expression [169261,169312]
------------
===
move-tree
---
call_argument [103653,103671]
    identifier: combinedStakePower [103653,103671]
to
call_expression [169261,169312]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [170307,170318]
    identifier: validatorId [170307,170318]
to
call_expression [170256,170483]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [170337,170352]
    identifier: validatorsStake [170337,170352]
to
call_expression [170256,170483]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [170371,170431]
    call_expression [170371,170431]
        member_expression: eligibleReward.mul(combinedStakePower).div [170371,170413]
        call_argument [170414,170430]
            identifier: REWARD_PRECISION [170414,170430]
to
call_expression [170256,170483]
at 3

New cluster:
MOVE from call_expression [170256,170483]
------------
===
move-tree
---
call_argument [103375,103393]
    identifier: combinedStakePower [103375,103393]
to
call_expression [170256,170483]
at 4

New cluster:
===
insert-node
---
identifier: delegationContract [170681,170699]
to
binary_expression [144390,144445]
at 0
------------
===
insert-node
---
identifier: delegationContract [170681,170699]
to
binary_expression [144390,144445]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
type_cast_expression [173516,173526]
    primitive_type: address [173516,173523]
    call_argument [173524,173525]
        number_literal: 0 [173524,173525]
to
binary_expression [146853,146881]
at 2

New cluster:
MOVE from block_statement [173528,173597]
------------
===
move-tree
---
expression_statement [146975,147040]
    assignment_expression [146975,147039]
        identifier: rewards [146975,146982]
        affectation_operator: = [146983,146984]
        call_expression [146985,147039]
            member_expression: rewards.add [146985,146996]
            call_argument [146997,147038]
                call_expression [146997,147038]
                    member_expression: validatorShare.withdrawRewardsValidator [146997,147036]
to
block_statement [173528,173597]
at 0

New cluster:
UPDATE from delegationAmount to _removeSigner
------------
===
update-node
---
identifier: delegationAmount [147054,147070]
replace delegationAmount by _removeSigner

New cluster:
MOVE from call_expression [144169,144232]
------------
===
move-tree
---
identifier: delegationAmount [147054,147070]
to
call_expression [144169,144232]
at 0

New cluster:
===
insert-node
---
identifier: INITIALIZED_AMOUNT [174614,174632]
to
assignment_expression [132147,132181]
at 2
------------
===
insert-node
---
identifier: INITIALIZED_AMOUNT [174614,174632]
to
assignment_expression [132147,132181]
at 2

New cluster:
MOVE from call_expression [132200,132237]
------------
===
move-tree
---
identifier: require [132192,132199]
to
call_expression [132200,132237]
at 0

New cluster:
UPDATE from require to _transferTokenFrom
------------
===
update-node
---
identifier: require [121172,121179]
replace require by _transferTokenFrom
===
update-node
---
identifier: require [131091,131098]
replace require by _transferTokenFrom

New cluster:
MOVE from call_expression [121180,121252]
------------
===
move-tree
---
identifier: require [121172,121179]
to
call_expression [121180,121252]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [175465,175469]
    identifier: from [175465,175469]
to
call_expression [121180,121252]
at 1

New cluster:
MOVE from return_statement [22357,22377]
------------
===
move-tree
---
type_cast_expression [124587,124599]
    primitive_type: address [124587,124594]
    call_argument [124595,124598]
        number_literal: 0x0 [124595,124598]
to
return_statement [22357,22377]
at 1

New cluster:
MOVE from call_argument [145164,145220]
------------
===
move-tree
---
binary_expression [145164,145186]
    identifier: signer [145164,145170]
    comparison_operator: != [145171,145173]
    type_cast_expression [145174,145186]
        primitive_type: address [145174,145181]
        call_argument [145182,145185]
            number_literal: 0x0 [145182,145185]
to
call_argument [145164,145220]
at 0

New cluster:
===
insert-node
---
identifier: user [71633,71637]
to
call_argument [106968,106978]
at 0
------------
===
insert-node
---
identifier: user [71633,71637]
to
call_argument [106968,106978]
at 0

New cluster:
===
insert-node
---
member_expression: withdrawPool.sub [75411,75427]
to
call_expression [113945,113994]
at 0
------------
===
insert-node
---
member_expression: withdrawPool.sub [75411,75427]
to
call_expression [113945,113994]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [76332,76358]
    identifier: shares [76332,76338]
    :: : [76338,76339]
    identifier: _withdrawPoolShare [76340,76358]
to
call_argument [76317,76419]
at 0

New cluster:
UPDATE from _amount % rate.mul(shares).div to rate.mul(shares).div
------------
===
update-node
---
member_expression: _amount % rate.mul(shares).div [108287,108317]
replace _amount % rate.mul(shares).div by rate.mul(shares).div

New cluster:
===
insert-node
---
member_expression: validators[validatorId].commissionRate [131460,131498]
to
call_argument [102850,102864]
at 0
------------
===
insert-node
---
member_expression: validators[validatorId].commissionRate [131460,131498]
to
call_argument [102850,102864]
at 0

New cluster:
MOVE from variable_declaration_statement [152063,152119]
------------
===
move-tree
---
variable_declaration [140125,140139]
    type_name: address [140125,140132]
    identifier: signer [140133,140139]
to
variable_declaration_statement [152063,152119]
at 0

New cluster:
MOVE from if_statement [152285,152467]
------------
===
move-tree
---
block_statement [140349,140389]
    break_statement [140368,140374]
        break: break [140368,140373]
to
if_statement [152285,152467]
at 2
===
move-tree
---
binary_expression [140330,140347]
    identifier: signer [140330,140336]
    comparison_operator: == [140337,140339]
    identifier: lastAdd [140340,140347]
to
if_statement [152135,152269]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [152158,152269]
    continue_statement [152245,152254]
        continue: continue [152245,152253]
to
if_statement [152135,152269]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [152289,152305]
    identifier: signer [152289,152295]
    comparison_operator: < [152296,152297]
    identifier: lastAdd [152298,152305]
to
if_statement [152285,152467]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [153412,153804]
    if: if [153412,153414]
    binary_expression [153416,153439]
        identifier: status [153416,153422]
        comparison_operator: == [153423,153425]
        member_expression: Status.Locked [153426,153439]
    block_statement [153441,153804]
        expression_statement [153606,153687]
            assignment_expression [153606,153686]
                array_access [153606,153672]
                    member_expression: unsignedCtx.unsignedValidators [153606,153636]
                    member_expression: unsignedCtx.unsignedValidatorIndex [153637,153671]
                affectation_operator: = [153673,153674]
                identifier: validatorId [153675,153686]
        expression_statement [153705,153742]
            update_expression [153705,153741]
                member_expression: unsignedCtx.unsignedValidatorIndex [153705,153739]
                increment_operator: ++ [153739,153741]
        expression_statement [153760,153789]
            update_expression [153760,153788]
                member_expression: unsignedCtx.validatorIndex [153760,153786]
                increment_operator: ++ [153786,153788]
to
if_statement [152757,153804]
at 4

New cluster:
MOVE from expression_statement [155750,155778]
------------
===
move-tree
---
call_expression [140399,140423]
    identifier: isValidator [140399,140410]
    call_argument [140411,140422]
        identifier: validatorId [140411,140422]
to
expression_statement [155750,155778]
at 0

New cluster:
MOVE from expression_statement [143862,143955]
------------
===
move-tree
---
call_expression [143881,143954]
    member_expression: IValidatorShare(validators[validatorId].contractAddress).unlockContract [143881,143952]
to
expression_statement [143862,143955]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [166290,166309]
    identifier: delegatedAmount [166290,166305]
    comparison_operator: > [166306,166307]
    number_literal: 0 [166308,166309]
to
if_statement [166286,167216]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [166855,167216]
    expression_statement [166874,167201]
        call_expression [166874,167200]
            identifier: _increaseValidatorReward [166874,166898]
            call_argument [166921,166932]
                identifier: validatorId [166921,166932]
            call_argument [166955,167181]
                call_expression [166955,167181]
                    identifier: _getEligibleValidatorReward [166955,166982]
                    call_argument [167009,167020]
                        identifier: validatorId [167009,167020]
                    call_argument [167047,167062]
                        identifier: validatorsStake [167047,167062]
                    call_argument [167089,167110]
                        identifier: currentRewardPerStake [167089,167110]
                    call_argument [167137,167158]
                        identifier: initialRewardPerStake [167137,167158]
to
if_statement [166286,167216]
at 4

New cluster:
MOVE from expression_statement [144462,144553]
------------
===
move-tree
---
call_expression [144481,144552]
    member_expression: IValidatorShare(validators[validatorId].contractAddress).lockContract [144481,144550]
to
expression_statement [144462,144553]
at 0

New cluster:
===
insert-node
---
member_expression: validators[validatorId].delegatedAmount [171111,171150]
to
call_argument [144889,144905]
at 0
------------
===
insert-node
---
member_expression: validators[validatorId].delegatedAmount [171111,171150]
to
call_argument [144889,144905]
at 0

New cluster:
UPDATE from IValidatorShare(_contract).getActiveAmount to validators[validatorId].delegatedAmount
------------
===
update-node
---
member_expression: IValidatorShare(_contract).getActiveAmount [124652,124694]
replace IValidatorShare(_contract).getActiveAmount by validators[validatorId].delegatedAmount
===
update-node
---
member_expression: IValidatorShare(contractAddr).getActiveAmount [126611,126656]
replace IValidatorShare(contractAddr).getActiveAmount by validators[validatorId].delegatedAmount
===
update-node
---
member_expression: validators[validatorId].reward [146735,146765]
replace validators[validatorId].reward by validators[validatorId].delegatedAmount

New cluster:
MOVE from call_argument [173358,173397]
------------
===
move-tree
---
member_expression: validators[validatorId].reward [146735,146765]
to
call_argument [173358,173397]
at 0

New cluster:
MOVE from expression_statement [146975,147040]
------------
===
move-tree
---
call_expression [146997,147038]
    member_expression: validatorShare.withdrawRewardsValidator [146997,147036]
to
expression_statement [146975,147040]
at 0

New cluster:
UPDATE from signer to result
------------
===
update-node
---
identifier: signer [145164,145170]
replace signer by result

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [72316,72320]
    identifier: user [72316,72320]
to
call_expression [107509,107535]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [72384,72388]
    identifier: user [72384,72388]
to
call_expression [107546,107618]
at 2

New cluster:
UPDATE from valPow.add to validatorStake.add
------------
===
update-node
---
member_expression: valPow.add [113687,113697]
replace valPow.add by validatorStake.add

New cluster:
MOVE from call_struct_argument [76373,76408]
------------
===
move-tree
---
call_expression [102307,102327]
    member_expression: stakeManager.epoch [102307,102325]
to
call_struct_argument [76373,76408]
at 2

New cluster:
MOVE from call_argument [124652,124696]
------------
===
move-tree
---
member_expression: IValidatorShare(_contract).getActiveAmount [124652,124694]
to
call_argument [124652,124696]
at 0

New cluster:
UPDATE from "Transfer amount failed" to "Transfer failed"
------------
===
update-node
---
string: "Transfer amount failed" [125046,125070]
replace "Transfer amount failed" by "Transfer failed"

New cluster:
MOVE from binary_expression [125845,125915]
------------
===
move-tree
---
call_expression [125874,125900]
    identifier: getValidatorId [125874,125888]
    call_argument [125889,125899]
        member_expression: msg.sender [125889,125899]
to
binary_expression [125845,125915]
at 0
===
move-tree
---
comparison_operator: == [125901,125903]
to
binary_expression [125845,125915]
at 1
===
move-tree
---
identifier: validatorId [125904,125915]
to
binary_expression [125845,125915]
at 2

New cluster:
UPDATE from "Only bidder or validator can confirm" to "Only bidder can confirm"
------------
===
update-node
---
string: "Only bidder or validator can confirm" [125930,125968]
replace "Only bidder or validator can confirm" by "Only bidder can confirm"

New cluster:
MOVE from call_argument [126611,126658]
------------
===
move-tree
---
member_expression: IValidatorShare(contractAddr).getActiveAmount [126611,126656]
to
call_argument [126611,126658]
at 0

New cluster:
===
insert-node
---
member_expression: stakeManager.dethroneAndStake [128834,128863]
to
call_expression [127261,127429]
at 0
------------
===
insert-node
---
member_expression: stakeManager.dethroneAndStake [128834,128863]
to
call_expression [127261,127429]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [128913,128924]
    identifier: heimdallFee [128913,128924]
to
call_expression [127261,127429]
at 3

New cluster:
MOVE from call_expression [127261,127429]
------------
===
move-tree
---
call_argument [127192,127203]
    identifier: validatorId [127192,127203]
to
call_expression [127261,127429]
at 4
===
move-tree
---
call_argument [127205,127218]
    identifier: _currentEpoch [127205,127218]
to
call_expression [152761,152834]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parenthesized_expression [131127,131182]
    binary_expression [131128,131181]
        call_expression [131128,131171]
            member_expression: _lastCommissionUpdate.add [131128,131153]
            call_argument [131154,131170]
                identifier: WITHDRAWAL_DELAY [131154,131170]
        comparison_operator: <= [131172,131174]
        identifier: _epoch [131175,131181]
to
binary_expression [131127,131212]
at 0

New cluster:
MOVE from binary_expression [131127,131212]
------------
===
move-tree
---
binary_expression [102527,102553]
    identifier: _lastCommissionUpdate [102527,102548]
    comparison_operator: == [102549,102551]
    number_literal: 0 [102552,102553]
to
binary_expression [131127,131212]
at 2

New cluster:
UPDATE from "Commission rate should be in range of 0-100" to "Incorrect value"
------------
===
update-node
---
string: "Commission rate should be in range of 0-100" [102723,102768]
replace "Commission rate should be in range of 0-100" by "Incorrect value"

New cluster:
===
insert-node
---
identifier: MAX_PROPOSER_BONUS [140762,140780]
to
binary_expression [135878,135901]
at 2
------------
===
insert-node
---
identifier: MAX_PROPOSER_BONUS [140762,140780]
to
binary_expression [135878,135901]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [143577,143635]
    member_expression: StakeManagerExtension(extensionCode).startAuction.selector [143577,143635]
to
call_expression [143536,143773]
at 1

New cluster:
MOVE from call_expression [143536,143773]
------------
===
move-tree
---
call_argument [101645,101656]
    identifier: validatorId [101645,101656]
to
call_expression [143536,143773]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [143709,143726]
    identifier: _acceptDelegation [143709,143726]
to
call_expression [143536,143773]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [143745,143758]
    identifier: _signerPubkey [143745,143758]
to
call_expression [143536,143773]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144052,144115]
    member_expression: StakeManagerExtension(extensionCode).confirmAuctionBid.selector [144052,144115]
to
call_expression [144011,144222]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144134,144145]
    identifier: validatorId [144134,144145]
to
call_expression [144011,144222]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [144194,144207]
    type_cast_expression [144194,144207]
        primitive_type: address [144194,144201]
        call_argument [144202,144206]
            identifier: this [144202,144206]
to
call_expression [144011,144222]
at 4

New cluster:
UPDATE from "Invalid contract address" to "not allowed"
------------
===
update-node
---
string: "Invalid contract address" [128887,128913]
replace "Invalid contract address" by "not allowed"

New cluster:
UPDATE from "Validator set Threshold exceeded!" to "no more slots"
------------
===
update-node
---
string: "Validator set Threshold exceeded!" [129581,129616]
replace "Validator set Threshold exceeded!" by "no more slots"

New cluster:
UPDATE from > to >=
------------
===
update-node
---
comparison_operator: > [129643,129644]
replace > by >=

New cluster:
UPDATE from "min deposit limit failed!" to "not enough deposit"
------------
===
update-node
---
string: "min deposit limit failed!" [129657,129684]
replace "min deposit limit failed!" by "not enough deposit"

New cluster:
UPDATE from "Validator already unstaking" to "No restaking"
------------
===
update-node
---
string: "Validator already unstaking" [143460,143489]
replace "Validator already unstaking" by "No restaking"

New cluster:
MOVE from call_expression [131091,131178]
------------
===
move-tree
---
call_argument [107417,107427]
    member_expression: msg.sender [107417,107427]
to
call_expression [131091,131178]
at 1

New cluster:
MOVE from call_expression [131091,131178]
------------
===
move-tree
---
call_argument [131130,131143]
    type_cast_expression [131130,131143]
        primitive_type: address [131130,131137]
        call_argument [131138,131142]
            identifier: this [131138,131142]
to
call_expression [131091,131178]
at 2
===
move-tree
---
call_argument [131145,131151]
    identifier: amount [131145,131151]
to
call_expression [131091,131178]
at 3

New cluster:
===
insert-node
---
identifier: INITIALIZED_AMOUNT [148325,148343]
to
assignment_expression [131538,131572]
at 2
------------
===
insert-node
---
identifier: INITIALIZED_AMOUNT [148325,148343]
to
assignment_expression [131538,131572]
at 2

New cluster:
UPDATE from "Invalid checkpoint number!" to "Not allowed"
------------
===
update-node
---
string: "Invalid checkpoint number!" [136706,136734]
replace "Invalid checkpoint number!" by "Not allowed"

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [152110,152117]
    array_access [152110,152117]
        identifier: sigs [152110,152114]
        identifier: i [152115,152116]
to
call_expression [152080,152118]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [152774,152780]
    identifier: status [152774,152780]
to
call_expression [152761,152834]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [152782,152788]
    identifier: amount [152782,152788]
to
call_expression [152761,152834]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [152790,152818]
    member_expression: unstakeCtx.deactivationEpoch [152790,152818]
to
call_expression [152761,152834]
at 3

New cluster:
MOVE from block_statement [152836,153406]
------------
===
move-tree
---
expression_statement [140464,140481]
    assignment_expression [140464,140480]
        identifier: lastAdd [140464,140471]
        affectation_operator: = [140472,140473]
        identifier: signer [140474,140480]
to
block_statement [152836,153406]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [152892,152985]
    assignment_expression [152892,152984]
        identifier: signedStakePower [152892,152908]
        affectation_operator: = [152909,152910]
        call_expression [152911,152984]
            member_expression: signedStakePower.add(validators[validatorId].delegatedAmount).add [152911,152976]
            call_argument [152977,152983]
                identifier: amount [152977,152983]
to
block_statement [152836,153406]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [153005,153391]
    if: if [153005,153007]
    binary_expression [153009,153042]
        member_expression: unstakeCtx.deactivationEpoch [153009,153037]
        comparison_operator: != [153038,153040]
        number_literal: 0 [153041,153042]
    block_statement [153044,153284]
        expression_statement [153141,153215]
            assignment_expression [153141,153214]
                array_access [153141,153200]
                    member_expression: unstakeCtx.deactivatedValidators [153141,153173]
                    member_expression: unstakeCtx.validatorIndex [153174,153199]
                affectation_operator: = [153201,153202]
                identifier: validatorId [153203,153214]
        expression_statement [153237,153265]
            update_expression [153237,153264]
                member_expression: unstakeCtx.validatorIndex [153237,153262]
                increment_operator: ++ [153262,153264]
    else: else [153285,153289]
    block_statement [153290,153391]
        expression_statement [153313,153372]
            assignment_expression [153313,153371]
                identifier: unsignedCtx [153313,153324]
                affectation_operator: = [153325,153326]
                call_expression [153327,153371]
                    identifier: _fillUnsignedValidators [153327,153350]
                    call_argument [153351,153362]
                        identifier: unsignedCtx [153351,153362]
                    call_argument [153364,153370]
                        identifier: signer [153364,153370]
to
block_statement [152836,153406]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154621,154687]
    member_expression: StakeManagerExtension(extensionCode).updateCommissionRate.selector [154621,154687]
to
call_expression [154580,154768]
at 1

New cluster:
MOVE from call_expression [154580,154768]
------------
===
move-tree
---
call_argument [149488,149499]
    identifier: validatorId [149488,149499]
to
call_expression [154580,154768]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154736,154753]
    identifier: newCommissionRate [154736,154753]
to
call_expression [154580,154768]
at 3

New cluster:
UPDATE from "Sender must be slashing manager!" to "Not slash manager"
------------
===
update-node
---
string: "Sender must be slashing manager!" [141727,141761]
replace "Sender must be slashing manager!" by "Not slash manager"

New cluster:
===
insert-node
---
identifier: delegationContract [155990,156008]
to
binary_expression [142286,142341]
at 0
------------
===
insert-node
---
identifier: delegationContract [155990,156008]
to
binary_expression [142286,142341]
at 0

New cluster:
UPDATE from "Validator is not jailed" to "Not jailed"
------------
===
update-node
---
string: "Validator is not jailed" [143367,143392]
replace "Validator is not jailed" by "Not jailed"

New cluster:
UPDATE from "No use of restaking" to "Already unstaking"
------------
===
update-node
---
string: "No use of restaking" [131025,131046]
replace "No use of restaking" by "Already unstaking"

New cluster:
UPDATE from IValidatorShare(validators[validatorId].contractAddress).unlockContract to IValidatorShare(delegationContract).unlock
------------
===
update-node
---
member_expression: IValidatorShare(validators[validatorId].contractAddress).unlockContract [143881,143952]
replace IValidatorShare(validators[validatorId].contractAddress).unlockContract by IValidatorShare(delegationContract).unlock

New cluster:
UPDATE from isValidator to _isValidator
------------
===
update-node
---
identifier: isValidator [149476,149487]
replace isValidator by _isValidator

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159158,159188]
    member_expression: validators[validatorId].status [159158,159188]
to
call_expression [149476,149500]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159207,159237]
    member_expression: validators[validatorId].amount [159207,159237]
to
call_expression [149476,149500]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159256,159297]
    member_expression: validators[validatorId].deactivationEpoch [159256,159297]
to
call_expression [149476,149500]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159316,159328]
    identifier: currentEpoch [159316,159328]
to
call_expression [149476,149500]
at 4

New cluster:
UPDATE from "not a validator" to "not validator"
------------
===
update-node
---
string: "not a validator" [149502,149519]
replace "not a validator" by "not validator"

New cluster:
UPDATE from "delegation not enabled" to "Delegation is disabled"
------------
===
update-node
---
string: "delegation not enabled" [149644,149668]
replace "delegation not enabled" by "Delegation is disabled"

New cluster:
UPDATE from "Invalid pubkey" to "not pub"
------------
===
update-node
---
string: "Invalid pubkey" [148906,148922]
replace "Invalid pubkey" by "not pub"

New cluster:
MOVE from binary_expression [138035,138198]
------------
===
move-tree
---
logical_operator: && [138046,138048]
to
binary_expression [138035,138198]
at 1
===
move-tree
---
binary_expression [138035,138045]
    identifier: amount [138035,138041]
    comparison_operator: > [138042,138043]
    number_literal: 0 [138044,138045]
to
binary_expression [138035,138198]
at 0

New cluster:
UPDATE from totalStakePower >= currentValidatorSetTotalStake().mul(2).div(3).add to signedStakePower >= currentTotalStake.mul(2).div(3).add
------------
===
update-node
---
member_expression: totalStakePower >= currentValidatorSetTotalStake().mul(2).div(3).add [141437,141505]
replace totalStakePower >= currentValidatorSetTotalStake().mul(2).div(3).add by signedStakePower >= currentTotalStake.mul(2).div(3).add

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [166330,166396]
    variable_declaration [166330,166356]
        type_name: uint256 [166330,166337]
        identifier: combinedStakePower [166338,166356]
    affectation_operator: = [166357,166358]
    call_expression [166359,166395]
        member_expression: validatorsStake.add [166359,166378]
        call_argument [166379,166394]
            identifier: delegatedAmount [166379,166394]
to
block_statement [166311,166849]
at 0

New cluster:
===
insert-node
---
member_expression: validators[validatorId].reward [168061,168091]
to
assignment_expression [138944,138988]
at 0
------------
===
insert-node
---
member_expression: validators[validatorId].reward [168061,168091]
to
assignment_expression [138944,138988]
at 0

New cluster:
UPDATE from _validatorRewards to validatorReward
------------
===
update-node
---
identifier: _validatorRewards [103993,104010]
replace _validatorRewards by validatorReward

New cluster:
UPDATE from validatorShare.withdrawRewardsValidator to IValidatorShare(delegationContract).lock
------------
===
update-node
---
member_expression: validatorShare.withdrawRewardsValidator [146997,147036]
replace validatorShare.withdrawRewardsValidator by IValidatorShare(delegationContract).lock
===
update-node
---
member_expression: IValidatorShare(validators[validatorId].contractAddress).lockContract [144481,144550]
replace IValidatorShare(validators[validatorId].contractAddress).lockContract by IValidatorShare(delegationContract).lock

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [172100,172117]
    identifier: commissionRate [172100,172114]
    :: : [172114,172115]
    number_literal: 0 [172116,172117]
to
call_argument [145517,145873]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [172132,172155]
    identifier: lastCommissionUpdate [172132,172152]
    :: : [172152,172153]
    number_literal: 0 [172154,172155]
to
call_argument [145517,145873]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [172170,172206]
    identifier: delegatorsReward [172170,172186]
    :: : [172186,172187]
    identifier: INITIALIZED_AMOUNT [172188,172206]
to
call_argument [145517,145873]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [172221,172239]
    identifier: delegatedAmount [172221,172236]
    :: : [172236,172237]
    number_literal: 0 [172238,172239]
to
call_argument [145517,145873]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_struct_argument [172254,172291]
    identifier: initialRewardPerStake [172254,172275]
    :: : [172275,172276]
    identifier: rewardPerStake [172277,172291]
to
call_argument [145517,145873]
at 12

New cluster:
UPDATE from "Not enough heimdall fee" to "fee too small"
------------
===
update-node
---
string: "Not enough heimdall fee" [121135,121160]
replace "Not enough heimdall fee" by "fee too small"

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [71846,71850]
    identifier: user [71846,71850]
to
call_expression [107094,107133]
at 3

New cluster:
UPDATE from msg.sender to msg.sender == auctionUser || NFTContract.tokenOfOwnerByIndex
------------
===
update-node
---
member_expression: msg.sender [125845,125855]
replace msg.sender by msg.sender == auctionUser || NFTContract.tokenOfOwnerByIndex

New cluster:
MOVE from call_expression [125874,125900]
------------
===
move-tree
---
member_expression: msg.sender [125845,125855]
to
call_expression [125874,125900]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [127789,127790]
    number_literal: 0 [127789,127790]
to
call_expression [125874,125900]
at 3

New cluster:
UPDATE from validators[validatorId].contractAddress == msg.sender ||             Registry(registry).getSlashingManagerAddress to validators[validatorId].contractAddress == msg.sender ||                 Registry(registry).getSlashingManagerAddress
------------
===
update-node
---
member_expression: validators[validatorId].contractAddress == msg.sender ||             Registry(registry).getSlashingManagerAddress [128742,128856]
replace validators[validatorId].contractAddress == msg.sender ||             Registry(registry).getSlashingManagerAddress by validators[validatorId].contractAddress == msg.sender ||                 Registry(registry).getSlashingManagerAddress

New cluster:
UPDATE from amount.add to amount.add(validators[validatorId].reward).sub
------------
===
update-node
---
member_expression: amount.add [131440,131450]
replace amount.add by amount.add(validators[validatorId].reward).sub

New cluster:
UPDATE from Math.min to validators[validatorId].reward.add
------------
===
update-node
---
member_expression: Math.min [138953,138961]
replace Math.min by validators[validatorId].reward.add

New cluster:
UPDATE from _validatorRewards.add to validatorReward.add
------------
===
update-node
---
member_expression: _validatorRewards.add [104013,104034]
replace _validatorRewards.add by validatorReward.add

New cluster:
===
insert-node
---
identifier: INITIALIZED_AMOUNT [171698,171716]
to
call_struct_argument [145532,145541]
at 2
------------
===
insert-node
---
identifier: INITIALIZED_AMOUNT [171698,171716]
to
call_struct_argument [145532,145541]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [72208,72212]
    identifier: user [72208,72212]
to
call_expression [107365,107459]
at 2

New cluster:
===
insert-node
---
binary_expression [145240,145263]
to
binary_expression [128028,128126]
at 0
------------
===
insert-node
---
comparison_operator: == [145247,145249]
to
binary_expression [145240,145263]
at 1
===
insert-node
---
binary_expression [145240,145263]
to
binary_expression [128028,128126]
at 0
===
insert-node
---
identifier: status [145240,145246]
to
binary_expression [145240,145263]
at 0

New cluster:
===
insert-node
---
logical_operator: || [145264,145266]
to
binary_expression [128028,128126]
at 1
------------
===
insert-node
---
logical_operator: || [145264,145266]
to
binary_expression [128028,128126]
at 1

New cluster:
===
insert-node
---
binary_expression [145267,145290]
to
binary_expression [128028,128126]
at 2
------------
===
insert-node
---
identifier: status [145267,145273]
to
binary_expression [145267,145290]
at 0
===
insert-node
---
binary_expression [145267,145290]
to
binary_expression [128028,128126]
at 2

New cluster:
===
insert-node
---
identifier: INITIALIZED_AMOUNT [148258,148276]
to
call_argument [131451,131507]
at 0
------------
===
insert-node
---
identifier: INITIALIZED_AMOUNT [148258,148276]
to
call_argument [131451,131507]
at 0

New cluster:
UPDATE from IValidatorShare(validators[validatorId].contractAddress).slash to IValidatorShare(delegationContract).slash
------------
===
update-node
---
member_expression: IValidatorShare(validators[validatorId].contractAddress).slash [142389,142451]
replace IValidatorShare(validators[validatorId].contractAddress).slash by IValidatorShare(delegationContract).slash

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [156218,156257]
    member_expression: validators[validatorId].delegatedAmount [156218,156257]
to
call_expression [142389,142553]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166475,166486]
    identifier: validatorId [166475,166486]
to
call_expression [166414,166833]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166509,166524]
    identifier: validatorsStake [166509,166524]
to
call_expression [166414,166833]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166547,166562]
    identifier: delegatedAmount [166547,166562]
to
call_expression [166414,166833]
at 3

New cluster:
UPDATE from rewardPerShare.add to _rewardPerShare.add
------------
===
update-node
---
member_expression: rewardPerShare.add [104405,104423]
replace rewardPerShare.add by _rewardPerShare.add

New cluster:
UPDATE from validators[validatorId].status == Status.Active || validators[validatorId].status to Status.Active
------------
===
update-node
---
member_expression: validators[validatorId].status == Status.Active || validators[validatorId].status [128028,128109]
replace validators[validatorId].status == Status.Active || validators[validatorId].status by Status.Active

New cluster:
MOVE from binary_expression [145267,145290]
------------
===
move-tree
---
comparison_operator: == [128110,128112]
to
binary_expression [145267,145290]
at 1
===
move-tree
---
member_expression: Status.Locked [128113,128126]
to
binary_expression [145267,145290]
at 2
===
move-tree
---
member_expression: validators[validatorId].status == Status.Active || validators[validatorId].status [128028,128109]
to
binary_expression [145240,145263]
at 2

New cluster:
===
insert-node
---
member_expression: validators[validatorId].delegatedAmount [157780,157819]
to
call_argument [144074,144090]
at 0
------------
===
insert-node
---
member_expression: validators[validatorId].delegatedAmount [157780,157819]
to
call_argument [144074,144090]
at 0

New cluster:
UPDATE from rewards.sub(_validatorRewards).mul(commissionRate).div to reward.sub(validatorReward).mul(commissionRate).div
------------
===
update-node
---
member_expression: rewards.sub(_validatorRewards).mul(commissionRate).div [104053,104107]
replace rewards.sub(_validatorRewards).mul(commissionRate).div by reward.sub(validatorReward).mul(commissionRate).div

New cluster:
UPDATE from factory.create to validatorShareFactory.create
------------
===
update-node
---
member_expression: factory.create [145756,145770]
replace factory.create by validatorShareFactory.create

New cluster:
MOVE from call_expression [166585,166814]
------------
===
move-tree
---
call_argument [140945,140956]
    identifier: validatorId [140945,140956]
to
call_expression [166585,166814]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166677,166695]
    identifier: combinedStakePower [166677,166695]
to
call_expression [166585,166814]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166722,166743]
    identifier: currentRewardPerStake [166722,166743]
to
call_expression [166585,166814]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [166770,166791]
    identifier: initialRewardPerStake [166770,166791]
to
call_expression [166585,166814]
at 4

New cluster:
===
insert-node
---
identifier: user [72069,72073]
to
call_argument [107315,107325]
at 0
------------
===
insert-node
---
identifier: user [72069,72073]
to
call_argument [107315,107325]
at 0

New cluster:
UPDATE from delegatorsRewards.mul(REWARD_PRECISION).div to accumulatedReward.mul(REWARD_PRECISION).div
------------
===
update-node
---
member_expression: delegatorsRewards.mul(REWARD_PRECISION).div [104442,104485]
replace delegatorsRewards.mul(REWARD_PRECISION).div by accumulatedReward.mul(REWARD_PRECISION).div

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [6231,6254]
    pragma: pragma [6231,6237]
    solidity_pragma_token [6238,6253]
        solidity: solidity [6238,6246]
        solidity_version_comparison_operator [6246,6248]
            bitwise_operator:  ^ [6246,6248]
        solidity_version: 0.5.0 [6248,6253]

New cluster:
===
delete-node
---
library: library [6258,6265]
===
------------
===
delete-node
---
library: library [6258,6265]
===

New cluster:
===
delete-node
---
identifier: RLPReader [6266,6275]
===
------------
===
delete-node
---
identifier: RLPReader [6266,6275]
===

New cluster:
===
delete-node
---
return_statement [10387,10421]
===
------------
===
delete-node
---
return: return [10387,10393]
===
===
delete-node
---
?: ? [10406,10407]
===
===
delete-node
---
return_statement [10387,10421]
===
===
delete-node
---
:: : [10414,10415]
===
===
delete-node
---
ternary_expression [10394,10420]
===

New cluster:
===
delete-node
---
binary_expression [145164,145220]
===
------------
===
delete-node
---
logical_operator: && [145187,145189]
===
===
delete-node
---
identifier: signerToValidator [145190,145207]
===
===
delete-node
---
comparison_operator: == [145216,145218]
===
===
delete-node
---
binary_expression [145164,145207]
===
===
delete-node
---
number_literal: 0 [145219,145220]
===
===
delete-node
---
array_access [145164,145215]
===
===
delete-node
---
binary_expression [145164,145220]
===
===
delete-node
---
identifier: signer [145208,145214]
===

New cluster:
===
delete-node
---
modifier_definition [26742,26920]
===
------------
===
delete-node
---
modifier_definition [26742,26920]
===

New cluster:
===
delete-node
---
is: is [86858,86860]
===
------------
===
delete-node
---
is: is [86858,86860]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [29541,29564]
    pragma: pragma [29541,29547]
    solidity_pragma_token [29548,29563]
        solidity: solidity [29548,29556]
        solidity_version_comparison_operator [29556,29558]
            bitwise_operator:  ^ [29556,29558]
        solidity_version: 0.5.2 [29558,29563]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [35092,35115]
    pragma: pragma [35092,35098]
    solidity_pragma_token [35099,35114]
        solidity: solidity [35099,35107]
        solidity_version_comparison_operator [35107,35109]
            bitwise_operator:  ^ [35107,35109]
        solidity_version: 0.5.2 [35109,35114]

New cluster:
===
delete-node
---
memory: memory [36370,36376]
===
------------
===
delete-node
---
memory: memory [36370,36376]
===

New cluster:
===
delete-node
---
memory: memory [36596,36602]
===
------------
===
delete-node
---
memory: memory [36596,36602]
===

New cluster:
===
delete-node
---
function_definition [37042,37105]
===
------------
===
delete-node
---
function: function [37042,37050]
===
===
delete-node
---
function_definition [37042,37105]
===
===
delete-node
---
visibility: external [37078,37086]
===
===
delete-node
---
identifier: withdrawRewardsValidator [37051,37075]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [37113,37182]
    function: function [37113,37121]
    identifier: addProposerBonus [37122,37138]
    parameter [37139,37155]
        type_name: uint256 [37139,37146]
        identifier: _rewards [37147,37155]
    parameter [37157,37173]
        type_name: uint256 [37157,37164]
        identifier: valStake [37165,37173]
    visibility: public [37175,37181]

New cluster:
===
delete-node
---
function_definition [37359,37418]
===
------------
===
delete-node
---
identifier: getActiveAmount [37368,37383]
===
===
delete-node
---
function: function [37359,37367]
===
===
delete-node
---
function_definition [37359,37418]
===
===
delete-node
---
visibility: external [37386,37394]
===

New cluster:
===
delete-node
---
identifier: _reward [37556,37563]
===
------------
===
delete-node
---
identifier: _reward [37556,37563]
===

New cluster:
===
delete-node
---
identifier: _totalStake [37582,37593]
===
------------
===
delete-node
---
identifier: _totalStake [37582,37593]
===

New cluster:
===
delete-node
---
function_definition [37481,37507]
===
------------
===
delete-node
---
function_definition [37481,37507]
===

New cluster:
===
delete-node
---
function_definition [37515,37661]
===
------------
===
delete-node
---
function_definition [37515,37661]
===
===
delete-node
---
visibility: external [37634,37642]
===
===
delete-node
---
function: function [37515,37523]
===
===
delete-node
---
identifier: updateRewards [37524,37537]
===

New cluster:
===
delete-node
---
affectation_operator: = [124516,124517]
===
------------
===
delete-node
---
affectation_operator: = [124516,124517]
===

New cluster:
===
delete-node
---
member_expression: validators[validatorId].contractAddress [124518,124557]
===
------------
===
delete-node
---
member_expression: validators[validatorId].contractAddress [124518,124557]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [58135,58158]
    pragma: pragma [58135,58141]
    solidity_pragma_token [58142,58157]
        solidity: solidity [58142,58150]
        solidity_version_comparison_operator [58150,58152]
            bitwise_operator:  ^ [58150,58152]
        solidity_version: 0.5.2 [58152,58157]

New cluster:
===
delete-node
---
identifier: ValidatorShare [100290,100304]
===
------------
===
delete-node
---
identifier: ValidatorShare [100290,100304]
===

New cluster:
===
delete-node
---
is: is [100305,100307]
===
------------
===
delete-node
---
is: is [100305,100307]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
inheritance_specifier [100325,100345]
    user_defined_type [100325,100345]
        identifier: ERC20NonTransferable [100325,100345]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [100937,100969]
    type_name: uint256 [100937,100944]
    visibility: public [100945,100951]
    identifier: validatorRewards [100952,100968]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [100975,101005]
    type_name: uint256 [100975,100982]
    visibility: public [100983,100989]
    identifier: commissionRate [100990,101004]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [101074,101110]
    type_name: uint256 [101074,101081]
    visibility: public [101082,101088]
    identifier: lastCommissionUpdate [101089,101109]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [101116,101150]
    type_name: uint256 [101116,101123]
    visibility: public [101124,101130]
    identifier: minAmount [101131,101140]
    affectation_operator: = [101141,101142]
    binary_expression [101143,101149]
        number_literal: 10 [101143,101145]
        **: ** [101145,101147]
        number_literal: 18 [101147,101149]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [101177,101205]
    type_name: uint256 [101177,101184]
    visibility: public [101185,101191]
    identifier: __totalStake [101192,101204]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [101281,101311]
    type_name: bool [101281,101285]
    visibility: public [101286,101292]
    identifier: delegation [101293,101303]
    affectation_operator: = [101304,101305]
    boolean_literal: true [101306,101310]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_variable_declaration [101410,101453]
    type_name: mapping(address => uint256) [101410,101437]
    identifier: __amountStaked [101438,101452]

New cluster:
===
delete-node
---
modifier_definition [101580,101709]
===
------------
===
delete-node
---
expression_statement [101616,101690]
===
===
delete-node
---
modifier_definition [101580,101709]
===
===
delete-node
---
call_argument [101624,101671]
===
===
delete-node
---
function_body [101605,101709]
===
===
delete-node
---
member_expression: msg.sender [101661,101671]
===
===
delete-node
---
comparison_operator: == [101658,101660]
===
===
delete-node
---
modifier: modifier [101580,101588]
===
===
delete-node
---
call_expression [101616,101689]
===
===
delete-node
---
member_expression: stakeManager.ownerOf [101624,101644]
===
===
delete-node
---
call_expression [101624,101657]
===
===
delete-node
---
identifier: onlyValidator [101589,101602]
===
===
delete-node
---
binary_expression [101624,101671]
===
===
delete-node
---
identifier: require [101616,101623]
===

New cluster:
===
delete-node
---
function_definition [102200,102957]
===
------------
===
delete-node
---
binary_expression [102455,102553]
===
===
delete-node
---
function: function [102200,102208]
===
===
delete-node
---
expression_statement [102403,102662]
===
===
delete-node
---
affectation_operator: = [102305,102306]
===
===
delete-node
---
function_body [102280,102957]
===
===
delete-node
---
function_definition [102200,102957]
===
===
delete-node
---
variable_declaration_statement [102291,102328]
===
===
delete-node
---
call_argument [102455,102553]
===
===
delete-node
---
visibility: external [102257,102265]
===
===
delete-node
---
identifier: require [102403,102410]
===
===
delete-node
---
identifier: updateCommissionRate [102209,102229]
===
===
delete-node
---
logical_operator: || [102524,102526]
===
===
delete-node
---
call_expression [102403,102661]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
modifier_invocation [102266,102279]
    identifier: onlyValidator [102266,102279]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [102291,102304]
    type_name: uint256 [102291,102298]
    identifier: epoch [102299,102304]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parenthesized_expression [102455,102523]
    binary_expression [102456,102522]
        call_expression [102456,102513]
            member_expression: _lastCommissionUpdate.add [102456,102481]
            call_argument [102482,102512]
                call_expression [102482,102512]
                    member_expression: stakeManager.withdrawalDelay [102482,102510]
        comparison_operator: <= [102514,102516]
        identifier: epoch [102517,102522]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [102610,102650]
    string_literal [102610,102650]
        string: "Commission rate update cooldown period" [102610,102650]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [102876,102911]
    assignment_expression [102876,102910]
        identifier: commissionRate [102876,102890]
        affectation_operator: = [102891,102892]
        identifier: newCommissionRate [102893,102910]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [102921,102950]
    assignment_expression [102921,102949]
        identifier: lastCommissionUpdate [102921,102941]
        affectation_operator: = [102942,102943]
        identifier: epoch [102944,102949]

New cluster:
===
delete-node
---
function_definition [102965,103438]
===
------------
===
delete-node
---
variable_declaration_statement [103138,103200]
===
===
delete-node
---
visibility: external [103067,103075]
===
===
delete-node
---
function_definition [102965,103438]
===
===
delete-node
---
function: function [102965,102973]
===
===
delete-node
---
call_expression [103335,103394]
===
===
delete-node
---
affectation_operator: = [103165,103166]
===
===
delete-node
---
identifier: _updateRewards [103335,103349]
===
===
delete-node
---
function_body [103127,103438]
===
===
delete-node
---
identifier: updateRewards [102974,102987]
===
===
delete-node
---
expression_statement [103335,103395]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103004,103032]
    type_name: uint256 [103004,103011]
    identifier: checkpointStakePower [103012,103032]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103034,103056]
    type_name: uint256 [103034,103041]
    identifier: validatorStake [103042,103056]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
modifier_invocation [103085,103094]
    identifier: onlyOwner [103085,103094]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [103167,103199]
    member_expression: validatorStake.add [103167,103185]
    call_argument [103186,103198]
        identifier: activeAmount [103186,103198]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [103248,103323]
    variable_declaration [103248,103263]
        type_name: uint256 [103248,103255]
        identifier: rewards [103256,103263]
    affectation_operator: = [103264,103265]
    call_expression [103266,103322]
        member_expression: combinedStakePower.mul(reward).div [103266,103300]
        call_argument [103301,103321]
            identifier: checkpointStakePower [103301,103321]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [103350,103357]
    identifier: rewards [103350,103357]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [103359,103373]
    identifier: validatorStake [103359,103373]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [103405,103431]
    return: return [103405,103411]
    identifier: combinedStakePower [103412,103430]

New cluster:
===
delete-node
---
function_definition [103446,103680]
===
------------
===
delete-node
---
function_definition [103446,103680]
===
===
delete-node
---
call_expression [103613,103672]
===
===
delete-node
---
identifier: addProposerBonus [103455,103471]
===
===
delete-node
---
visibility: public [103513,103519]
===
===
delete-node
---
function_body [103530,103680]
===
===
delete-node
---
expression_statement [103613,103673]
===
===
delete-node
---
identifier: _updateRewards [103613,103627]
===
===
delete-node
---
function: function [103446,103454]
===
===
delete-node
---
affectation_operator: = [103568,103569]
===
===
delete-node
---
variable_declaration_statement [103541,103603]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103472,103487]
    type_name: uint256 [103472,103479]
    identifier: rewards [103480,103487]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103489,103511]
    type_name: uint256 [103489,103496]
    identifier: validatorStake [103497,103511]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [103570,103602]
    member_expression: validatorStake.add [103570,103588]
    call_argument [103589,103601]
        identifier: activeAmount [103589,103601]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [103628,103635]
    identifier: rewards [103628,103635]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [103637,103651]
    identifier: validatorStake [103637,103651]

New cluster:
===
delete-node
---
function_definition [103688,104532]
===
------------
===
delete-node
---
function: function [103688,103696]
===
===
delete-node
---
function_body [103790,104532]
===
===
delete-node
---
identifier: _updateRewards [103697,103711]
===
===
delete-node
---
visibility: internal [103781,103789]
===
===
delete-node
---
call_expression [103829,103880]
===
===
delete-node
---
function_definition [103688,104532]
===
===
delete-node
---
affectation_operator: = [103827,103828]
===
===
delete-node
---
variable_declaration_statement [103801,103881]
===
===
delete-node
---
member_expression: validatorStake.mul(rewards).div [103829,103860]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103712,103727]
    type_name: uint256 [103712,103719]
    identifier: rewards [103720,103727]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [103729,103751]
    type_name: uint256 [103729,103736]
    identifier: validatorStake [103737,103751]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [103801,103826]
    type_name: uint256 [103801,103808]
    identifier: _validatorRewards [103809,103826]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [104166,104225]
    assignment_expression [104166,104224]
        identifier: validatorRewards [104166,104182]
        affectation_operator: = [104183,104184]
        call_expression [104185,104224]
            member_expression: validatorRewards.add [104185,104205]
            call_argument [104206,104223]
                identifier: _validatorRewards [104206,104223]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [104237,104296]
    variable_declaration [104237,104262]
        type_name: uint256 [104237,104244]
        identifier: delegatorsRewards [104245,104262]
    affectation_operator: = [104263,104264]
    call_expression [104265,104295]
        member_expression: rewards.sub [104265,104276]
        call_argument [104277,104294]
            identifier: _validatorRewards [104277,104294]

New cluster:
===
delete-node
---
function_definition [104540,104742]
===
------------
===
delete-node
---
function: function [104540,104548]
===
===
delete-node
---
identifier: withdrawRewardsValidator [104549,104573]
===
===
delete-node
---
visibility: external [104576,104584]
===
===
delete-node
---
function_definition [104540,104742]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [104613,104742]
    variable_declaration_statement [104624,104669]
        variable_declaration [104624,104649]
            type_name: uint256 [104624,104631]
            identifier: _validatorRewards [104632,104649]
        affectation_operator: = [104650,104651]
        identifier: validatorRewards [104652,104668]
    expression_statement [104679,104700]
        assignment_expression [104679,104699]
            identifier: validatorRewards [104679,104695]
            affectation_operator: = [104696,104697]
            number_literal: 0 [104698,104699]
    return_statement [104710,104735]
        return: return [104710,104716]
        identifier: _validatorRewards [104717,104734]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [105974,106101]
    function: function [105974,105982]
    identifier: buyVoucher [105983,105993]
    parameter [105994,106009]
        type_name: uint256 [105994,106001]
        identifier: _amount [106002,106009]
    parameter [106011,106035]
        type_name: uint256 [106011,106018]
        identifier: _minSharesToMint [106019,106035]
    visibility: public [106037,106043]
    function_body [106044,106101]
        expression_statement [106055,106094]
            call_expression [106055,106093]
                identifier: _buyVoucher [106055,106066]
                call_argument [106067,106074]
                    identifier: _amount [106067,106074]
                call_argument [106076,106092]
                    identifier: _minSharesToMint [106076,106092]

New cluster:
===
delete-node
---
variable_declaration_statement [106259,106335]
===
------------
===
delete-node
---
type_name: uint256 [106259,106266]
===
===
delete-node
---
variable_declaration [106259,106282]
===
===
delete-node
---
variable_declaration_statement [106259,106335]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [106809,106864]
    function: function [106809,106817]
    identifier: restake [106818,106825]
    visibility: public [106828,106834]
    function_body [106835,106864]
        expression_statement [106846,106857]
            call_expression [106846,106856]
                identifier: _restake [106846,106854]

New cluster:
===
delete-node
---
member_expression: msg.sender [106968,106978]
===
------------
===
delete-node
---
member_expression: msg.sender [106968,106978]
===

New cluster:
===
delete-node
---
member_expression: msg.sender [107315,107325]
===
------------
===
delete-node
---
member_expression: msg.sender [107315,107325]
===

New cluster:
===
delete-node
---
variable_declaration_statement [107069,107134]
===
------------
===
delete-node
---
variable_declaration_statement [107069,107134]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [108659,108791]
    function: function [108659,108667]
    identifier: _reduceActiveStake [108668,108686]
    parameter [108687,108712]
        type_name: uint256 [108687,108694]
        identifier: activeStakeReduce [108695,108712]
    visibility: private [108714,108721]
    function_body [108722,108791]
        expression_statement [108733,108784]
            assignment_expression [108733,108783]
                identifier: activeAmount [108733,108745]
                affectation_operator: = [108746,108747]
                call_expression [108748,108783]
                    member_expression: activeAmount.sub [108748,108764]
                    call_argument [108765,108782]
                        identifier: activeStakeReduce [108765,108782]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [108799,108934]
    function: function [108799,108807]
    identifier: _reduceWithdrawPool [108808,108827]
    parameter [108828,108854]
        type_name: uint256 [108828,108835]
        identifier: withdrawPoolReduce [108836,108854]
    visibility: private [108856,108863]
    function_body [108864,108934]
        expression_statement [108875,108927]
            assignment_expression [108875,108926]
                identifier: withdrawPool [108875,108887]
                affectation_operator: = [108888,108889]
                call_expression [108890,108926]
                    member_expression: withdrawPool.sub [108890,108906]
                    call_argument [108907,108925]
                        identifier: withdrawPoolReduce [108907,108925]

New cluster:
===
delete-node
---
call_expression [111696,111722]
===
------------
===
delete-node
---
call_expression [111696,111722]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [112351,112429]
    function: function [112351,112359]
    identifier: unstakeClaimTokens [112360,112378]
    visibility: public [112381,112387]
    function_body [112388,112429]
        expression_statement [112399,112422]
            call_expression [112399,112421]
                identifier: _claimUnstakedTokens [112399,112419]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [113257,113271]
    type_name: uint256 [113257,113264]
    identifier: valPow [113265,113271]

New cluster:
===
delete-node
---
expression_statement [113866,113935]
===
------------
===
delete-node
---
expression_statement [113866,113935]
===
===
delete-node
---
call_expression [113866,113934]
===
===
delete-node
---
call_argument [113885,113933]
===

New cluster:
===
delete-node
---
call_expression [109693,109724]
===
------------
===
delete-node
---
call_expression [109693,109724]
===

New cluster:
===
delete-node
---
expression_statement [113094,113163]
===
------------
===
delete-node
---
member_expression: stakingLogger.logDelegatorUnstaked [113094,113128]
===
===
delete-node
---
call_expression [113094,113162]
===
===
delete-node
---
expression_statement [113094,113163]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [113154,113161]
    identifier: _amount [113154,113161]

New cluster:
===
delete-node
---
call_expression [108275,108329]
===
------------
===
delete-node
---
member_expression: _amount.sub [108275,108286]
===
===
delete-node
---
call_argument [108287,108328]
===
===
delete-node
---
call_expression [108275,108329]
===

New cluster:
===
delete-node
---
function_definition [114492,114588]
===
------------
===
delete-node
---
function: function [114492,114500]
===
===
delete-node
---
identifier: getActiveAmount [114501,114516]
===
===
delete-node
---
function_definition [114492,114588]
===
===
delete-node
---
visibility: external [114519,114527]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [114550,114588]
    return_statement [114561,114581]
        return: return [114561,114567]
        identifier: activeAmount [114568,114580]

New cluster:
===
delete-node
---
function_definition [114596,114716]
===
------------
===
delete-node
---
identifier: unlockContract [114605,114619]
===
===
delete-node
---
visibility: external [114622,114630]
===
===
delete-node
---
function: function [114596,114604]
===
===
delete-node
---
function_definition [114596,114716]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
modifier_invocation [114631,114640]
    identifier: onlyOwner [114631,114640]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [114659,114716]
    expression_statement [114670,114679]
        call_expression [114670,114678]
            identifier: unlock [114670,114676]
    return_statement [114689,114709]
        return: return [114689,114695]
        identifier: activeAmount [114696,114708]

New cluster:
===
delete-node
---
function_definition [114724,114840]
===
------------
===
delete-node
---
identifier: lockContract [114733,114745]
===
===
delete-node
---
visibility: external [114748,114756]
===
===
delete-node
---
function: function [114724,114732]
===
===
delete-node
---
function_definition [114724,114840]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
modifier_invocation [114757,114766]
    identifier: onlyOwner [114757,114766]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [114785,114840]
    expression_statement [114796,114803]
        call_expression [114796,114802]
            identifier: lock [114796,114800]
    return_statement [114813,114833]
        return: return [114813,114819]
        identifier: activeAmount [114820,114832]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [60836,60859]
    pragma: pragma [60836,60842]
    solidity_pragma_token [60843,60858]
        solidity: solidity [60843,60851]
        solidity_version_comparison_operator [60851,60853]
            bitwise_operator:  ^ [60851,60853]
        solidity_version: 0.5.2 [60853,60858]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
contract_declaration [86316,86384]
    identifier: ProxyStorage [86325,86337]
    is: is [86338,86340]
    inheritance_specifier [86341,86348]
        user_defined_type [86341,86348]
            identifier: Ownable [86341,86348]
    contract_body [86349,86384]
        state_variable_declaration [86356,86381]
            type_name: address [86356,86363]
            visibility: internal [86364,86372]
            identifier: proxyTo [86373,86380]

New cluster:
===
delete-node
---
contract_declaration [99430,99619]
===
------------
===
delete-node
---
function_definition [99476,99616]
===
===
delete-node
---
contract_declaration [99430,99619]
===
===
delete-node
---
contract_body [99469,99619]
===
===
delete-node
---
function: function [99476,99484]
===
===
delete-node
---
visibility: internal [99570,99578]
===
===
delete-node
---
identifier: _transfer [99485,99494]
===
===
delete-node
---
identifier: ERC20NonTransferable [99439,99459]
===
===
delete-node
---
is: is [99460,99462]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [99579,99616]
    revert_statement [99590,99609]
        revert: revert [99590,99596]
        parenthesized_expression [99596,99608]
            string_literal [99597,99607]
                string: "Disabled" [99597,99607]

New cluster:
===
delete-node
---
call_expression [124652,124696]
===
------------
===
delete-node
---
call_expression [124652,124696]
===

New cluster:
===
delete-node
---
if_statement [124570,124709]
===
------------
===
delete-node
---
block_statement [124601,124709]
===
===
delete-node
---
identifier: _contract [124574,124583]
===
===
delete-node
---
if: if [124570,124572]
===
===
delete-node
---
if_statement [124570,124709]
===
===
delete-node
---
binary_expression [124574,124599]
===
===
delete-node
---
comparison_operator: != [124584,124586]
===

New cluster:
===
delete-node
---
identifier: getValidatorId [125874,125888]
===
------------
===
delete-node
---
identifier: getValidatorId [125874,125888]
===

New cluster:
===
delete-node
---
binary_expression [125845,125870]
===
------------
===
delete-node
---
binary_expression [125845,125870]
===
===
delete-node
---
comparison_operator: == [125856,125858]
===
===
delete-node
---
identifier: auctionUser [125859,125870]
===

New cluster:
===
delete-node
---
logical_operator: || [125871,125873]
===
------------
===
delete-node
---
logical_operator: || [125871,125873]
===

New cluster:
===
delete-node
---
binary_expression [125874,125915]
===
------------
===
delete-node
---
binary_expression [125874,125915]
===

New cluster:
===
delete-node
---
call_expression [126611,126658]
===
------------
===
delete-node
---
call_expression [126611,126658]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [126451,126514]
    variable_declaration [126451,126471]
        type_name: address [126451,126458]
        identifier: contractAddr [126459,126471]
    affectation_operator: = [126472,126473]
    member_expression: validators[validatorId].contractAddress [126474,126513]

New cluster:
===
delete-node
---
if_statement [126526,126671]
===
------------
===
delete-node
---
if_statement [126526,126671]
===
===
delete-node
---
if: if [126526,126528]
===
===
delete-node
---
block_statement [126560,126671]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [126530,126558]
    identifier: contractAddr [126530,126542]
    comparison_operator: != [126543,126545]
    type_cast_expression [126546,126558]
        primitive_type: address [126546,126553]
        call_argument [126554,126557]
            number_literal: 0x0 [126554,126557]

New cluster:
===
delete-node
---
identifier: _stakeFor [127261,127270]
===
------------
===
delete-node
---
identifier: _stakeFor [127261,127270]
===

New cluster:
===
delete-node
---
expression_statement [127183,127220]
===
------------
===
delete-node
---
call_expression [127183,127219]
===
===
delete-node
---
identifier: _unstake [127183,127191]
===
===
delete-node
---
expression_statement [127183,127220]
===

New cluster:
===
delete-node
---
variable_declaration_statement [127236,127430]
===
------------
===
delete-node
---
variable_declaration_statement [127236,127430]
===
===
delete-node
---
affectation_operator: = [127259,127260]
===

New cluster:
===
delete-node
---
identifier: lastCommissionUpdate [102370,102390]
===
------------
===
delete-node
---
identifier: lastCommissionUpdate [102370,102390]
===

New cluster:
===
delete-node
---
identifier: commissionRate [102850,102864]
===
------------
===
delete-node
---
identifier: commissionRate [102850,102864]
===

New cluster:
===
delete-node
---
identifier: StakeManager [118337,118349]
===
------------
===
delete-node
---
identifier: StakeManager [118337,118349]
===

New cluster:
===
delete-node
---
is: is [118350,118352]
===
------------
===
delete-node
---
is: is [118350,118352]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
using_directive [118443,118470]
    using: using [118443,118448]
    type_alias [118449,118457]
        identifier: ECVerify [118449,118457]
    for: for [118458,118461]
    type_name: bytes32 [118462,118469]

New cluster:
===
delete-node
---
function_definition [120360,120498]
===
------------
===
delete-node
---
expression_statement [120451,120491]
===
===
delete-node
---
visibility: public [120416,120422]
===
===
delete-node
---
function_body [120440,120498]
===
===
delete-node
---
function: function [120360,120368]
===
===
delete-node
---
call_expression [120451,120490]
===
===
delete-node
---
identifier: topUpForFee [120369,120380]
===
===
delete-node
---
function_definition [120360,120498]
===
===
delete-node
---
identifier: _transferAndTopUp [120451,120468]
===

New cluster:
===
delete-node
---
function_definition [122182,122430]
===
------------
===
delete-node
---
function_definition [122182,122430]
===
===
delete-node
---
function: function [122182,122190]
===
===
delete-node
---
identifier: stake [122191,122196]
===
===
delete-node
---
function_body [122338,122430]
===
===
delete-node
---
visibility: external [122329,122337]
===

New cluster:
===
delete-node
---
function_definition [132355,132782]
===
------------
===
delete-node
---
expression_statement [132724,132775]
===
===
delete-node
---
identifier: _liquidateRewards [132724,132741]
===
===
delete-node
---
function_body [132432,132782]
===
===
delete-node
---
variable_declaration_statement [132443,132491]
===
===
delete-node
---
function: function [132355,132363]
===
===
delete-node
---
affectation_operator: = [132458,132459]
===
===
delete-node
---
member_expression: validators[validatorId].reward [132460,132490]
===
===
delete-node
---
identifier: withdrawRewards [132364,132379]
===
===
delete-node
---
visibility: public [132401,132407]
===
===
delete-node
---
call_expression [132724,132774]
===
===
delete-node
---
function_definition [132355,132782]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [132574,132712]
    if: if [132574,132576]
    binary_expression [132578,132606]
        identifier: contractAddr [132578,132590]
        comparison_operator: != [132591,132593]
        type_cast_expression [132594,132606]
            primitive_type: address [132594,132601]
            call_argument [132602,132605]
                number_literal: 0x0 [132602,132605]
    block_statement [132608,132712]
        expression_statement [132623,132701]
            assignment_expression [132623,132700]
                identifier: reward [132623,132629]
                affectation_operator: = [132630,132631]
                call_expression [132632,132700]
                    member_expression: reward.add [132632,132642]
                    call_argument [132643,132699]
                        call_expression [132643,132699]
                            member_expression: IValidatorShare(contractAddr).withdrawRewardsValidator [132643,132697]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [132767,132773]
    identifier: reward [132767,132773]

New cluster:
===
delete-node
---
function_definition [133824,134021]
===
------------
===
delete-node
---
function: function [133824,133832]
===
===
delete-node
---
function_body [133902,134021]
===
===
delete-node
---
function_definition [133824,134021]
===
===
delete-node
---
identifier: updateCheckPointBlockInterval [133833,133862]
===
===
delete-node
---
visibility: public [133880,133886]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [133913,133970]
    call_expression [133913,133969]
        identifier: require [133913,133920]
        call_argument [133921,133932]
            binary_expression [133921,133932]
                identifier: _blocks [133921,133928]
                comparison_operator: > [133929,133930]
                number_literal: 0 [133931,133932]
        call_argument [133934,133968]
            string_literal [133934,133968]
                string: "Blocks interval must be non-zero" [133934,133968]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [134606,134646]
    string_literal [134606,134646]
        string: "Owner of contract must be stakeManager" [134606,134646]

New cluster:
===
delete-node
---
number_literal: 100 [135898,135901]
===
------------
===
delete-node
---
number_literal: 100 [135898,135901]
===

New cluster:
===
delete-node
---
member_expression: token.transfer [122123,122137]
===
------------
===
delete-node
---
member_expression: token.transfer [122123,122137]
===

New cluster:
===
delete-node
---
call_expression [122115,122166]
===
------------
===
delete-node
---
call_expression [122115,122166]
===
===
delete-node
---
call_argument [122123,122165]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [127833,127862]
    string_literal [127833,127862]
        string: "Wait for auction completion" [127833,127862]

New cluster:
===
delete-node
---
identifier: stakeFor [122349,122357]
===
------------
===
delete-node
---
identifier: stakeFor [122349,122357]
===

New cluster:
===
delete-node
---
call_argument [130613,130647]
===
------------
===
delete-node
---
call_argument [130613,130647]
===
===
delete-node
---
member_expression: token.transfer [130613,130627]
===
===
delete-node
---
call_expression [130613,130647]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [130649,130672]
    string_literal [130649,130672]
        string: "Transfer stake failed" [130649,130672]

New cluster:
===
delete-node
---
call_argument [131099,131152]
===
------------
===
delete-node
---
member_expression: token.transferFrom [131099,131117]
===
===
delete-node
---
call_argument [131099,131152]
===
===
delete-node
---
call_expression [131099,131152]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [131118,131128]
    member_expression: msg.sender [131118,131128]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [131154,131177]
    string_literal [131154,131177]
        string: "Transfer stake failed" [131154,131177]

New cluster:
===
delete-node
---
assignment_expression [131235,131286]
===
------------
===
delete-node
---
assignment_expression [131235,131286]
===
===
delete-node
---
affectation_operator: = [131242,131243]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [131244,131286]
    member_expression: amount.add [131244,131254]
    call_argument [131255,131285]
        member_expression: validators[validatorId].reward [131255,131285]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [131451,131507]
    member_expression: IValidatorShare(contractAddr).withdrawRewardsValidator [131451,131505]

New cluster:
===
delete-node
---
number_literal: 0 [131571,131572]
===
------------
===
delete-node
---
number_literal: 0 [131571,131572]
===

New cluster:
===
delete-node
---
if_statement [131202,131584]
===
------------
===
delete-node
---
block_statement [131220,131584]
===
===
delete-node
---
block_statement [131412,131524]
===
===
delete-node
---
if_statement [131378,131524]
===
===
delete-node
---
if: if [131202,131204]
===
===
delete-node
---
comparison_operator: != [131395,131397]
===
===
delete-node
---
identifier: stakeRewards [131206,131218]
===
===
delete-node
---
binary_expression [131382,131410]
===
===
delete-node
---
if_statement [131202,131584]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [131301,131364]
    variable_declaration [131301,131321]
        type_name: address [131301,131308]
        identifier: contractAddr [131309,131321]
    affectation_operator: = [131322,131323]
    member_expression: validators[validatorId].contractAddress [131324,131363]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [134972,135063]
    call_expression [134972,135062]
        identifier: require [134972,134979]
        call_argument [134980,135033]
            binary_expression [134980,135033]
                member_expression: validators[validatorId].contractAddress [134980,135019]
                comparison_operator: == [135020,135022]
                member_expression: msg.sender [135023,135033]
        call_argument [135035,135061]
            string_literal [135035,135061]
                string: "Invalid contract address" [135035,135061]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [136450,136534]
    call_expression [136450,136533]
        identifier: require [136450,136457]
        call_argument [136458,136514]
            binary_expression [136458,136514]
                array_access [136458,136509]
                    binary_expression [136458,136501]
                        binary_expression [136458,136480]
                            identifier: signer [136458,136464]
                            comparison_operator: != [136465,136467]
                            type_cast_expression [136468,136480]
                                primitive_type: address [136468,136475]
                                call_argument [136476,136479]
                                    number_literal: 0x0 [136476,136479]
                        logical_operator: && [136481,136483]
                        identifier: signerToValidator [136484,136501]
                    identifier: signer [136502,136508]
                comparison_operator: == [136510,136512]
                number_literal: 0 [136513,136514]
        call_argument [136516,136532]
            string_literal [136516,136532]
                string: "Invalid signer" [136516,136532]

New cluster:
===
delete-node
---
function_definition [137627,138247]
===
------------
===
delete-node
---
function_definition [137627,138247]
===
===
delete-node
---
function: function [137627,137635]
===
===
delete-node
---
visibility: public [137669,137675]
===
===
delete-node
---
identifier: isValidator [137636,137647]
===

New cluster:
===
delete-node
---
function_definition [138255,139738]
===
------------
===
delete-node
---
identifier: checkSignatures [138264,138279]
===
===
delete-node
---
function_body [138468,139738]
===
===
delete-node
---
return_statement [139673,139731]
===
===
delete-node
---
variable_declaration_statement [139001,139061]
===
===
delete-node
---
affectation_operator: = [139024,139025]
===
===
delete-node
---
affectation_operator: = [139099,139100]
===
===
delete-node
---
binary_expression [139155,139196]
===
===
delete-node
---
return: return [139673,139679]
===
===
delete-node
---
array_access [139101,139140]
===
===
delete-node
---
if_statement [139151,139406]
===
===
delete-node
---
else: else [139319,139323]
===
===
delete-node
---
function: function [138255,138263]
===
===
delete-node
---
function_definition [138255,139738]
===
===
delete-node
---
comparison_operator: != [139181,139183]
===
===
delete-node
---
if: if [139151,139153]
===
===
delete-node
---
call_expression [139680,139730]
===
===
delete-node
---
member_expression: _proposer.contractAddress [139155,139180]
===
===
delete-node
---
visibility: public [138429,138435]
===
===
delete-node
---
identifier: checkSignature [139680,139694]
===
===
delete-node
---
identifier: validators [139101,139111]
===
===
delete-node
---
variable_declaration_statement [139071,139141]
===
===
delete-node
---
block_statement [139324,139406]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [138322,138338]
    type_name: bytes32 [138322,138329]
    identifier: voteHash [138330,138338]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [138404,138421]
    type_name: bytes [138404,138409]
    memory: memory [138410,138416]
    identifier: sigs [138417,138421]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [139026,139060]
    member_expression: reward.mul(proposerBonus).div [139026,139055]
    call_argument [139056,139059]
        number_literal: 100 [139056,139059]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [139198,139318]
    expression_statement [139213,139307]
        call_expression [139213,139306]
            member_expression: IValidatorShare(_proposer.contractAddress).addProposerBonus [139213,139272]
            call_argument [139273,139287]
                identifier: _proposerBonus [139273,139287]
            call_argument [139289,139305]
                member_expression: _proposer.amount [139289,139305]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [139418,139454]
    assignment_expression [139418,139453]
        identifier: reward [139418,139424]
        affectation_operator: = [139425,139426]
        call_expression [139427,139453]
            member_expression: reward.sub [139427,139437]
            call_argument [139438,139452]
                identifier: _proposerBonus [139438,139452]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [139464,139517]
    variable_declaration [139464,139482]
        type_name: uint256 [139464,139471]
        identifier: stakePower [139472,139482]
    affectation_operator: = [139483,139484]
    call_expression [139485,139516]
        identifier: currentValidatorSetTotalStake [139485,139514]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [139695,139705]
    identifier: stakePower [139695,139705]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [139725,139729]
    identifier: sigs [139725,139729]

New cluster:
===
delete-node
---
function_definition [139746,141566]
===
------------
===
delete-node
---
identifier: checkSignature [139755,139769]
===
===
delete-node
---
binary_expression [140399,140443]
===
===
delete-node
---
function: function [139746,139754]
===
===
delete-node
---
visibility: internal [139896,139904]
===
===
delete-node
---
if_statement [140326,141261]
===
===
delete-node
---
for: for [140065,140068]
===
===
delete-node
---
affectation_operator: = [140778,140779]
===
===
delete-node
---
call_argument [140930,140957]
===
===
delete-node
---
call_expression [140930,140957]
===
===
delete-node
---
function_body [139923,141566]
===
===
delete-node
---
function_definition [139746,141566]
===
===
delete-node
---
assignment_expression [140771,140980]
===
===
delete-node
---
call_expression [140780,140980]
===
===
delete-node
---
else: else [141001,141005]
===
===
delete-node
---
identifier: valPow [140771,140777]
===
===
delete-node
---
if: if [140395,140397]
===
===
delete-node
---
if_statement [140714,141182]
===
===
delete-node
---
block_statement [140748,141000]
===
===
delete-node
---
else: else [140390,140394]
===
===
delete-node
---
for_statement [140065,141272]
===
===
delete-node
---
block_statement [140445,141261]
===
===
delete-node
---
affectation_operator: = [140140,140141]
===
===
delete-node
---
member_expression: IValidatorShare(contractAddr).updateRewards [140780,140823]
===
===
delete-node
---
logical_operator: && [140424,140426]
===
===
delete-node
---
identifier: validatorStake [140930,140944]
===
===
delete-node
---
if_statement [140395,141261]
===
===
delete-node
---
expression_statement [140771,140981]
===
===
delete-node
---
if: if [140326,140328]
===
===
delete-node
---
if: if [140714,140716]
===
===
delete-node
---
block_statement [140110,141272]
===
===
delete-node
---
variable_declaration_statement [140125,140191]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [139780,139808]
    type_name: uint256 [139780,139787]
    identifier: checkpointStakePower [139788,139808]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [139871,139888]
    type_name: bytes [139871,139876]
    memory: memory [139877,139883]
    identifier: sigs [139884,139888]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [139965,139989]
    variable_declaration [139965,139988]
        type_name: uint256 [139965,139972]
        identifier: totalStakePower [139973,139988]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [140070,140083]
    variable_declaration [140070,140078]
        type_name: uint64 [140070,140076]
        identifier: i [140077,140078]
    affectation_operator: = [140079,140080]
    number_literal: 0 [140081,140082]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
augmented_assignment_expression [140101,140108]
    identifier: i [140101,140102]
    affectation_operator: += [140103,140105]
    number_literal: 65 [140106,140108]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [140142,140190]
    member_expression: voteHash.ecrecovery [140142,140161]
    call_argument [140162,140189]
        call_expression [140162,140189]
            member_expression: BytesLib.slice [140162,140176]
            call_argument [140177,140181]
                identifier: sigs [140177,140181]
            call_argument [140183,140184]
                identifier: i [140183,140184]
            call_argument [140186,140188]
                number_literal: 65 [140186,140188]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [140427,140443]
    identifier: signer [140427,140433]
    comparison_operator: > [140434,140435]
    identifier: lastAdd [140436,140443]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [140501,140555]
    variable_declaration [140501,140528]
        type_name: Validator [140501,140510]
        storage: storage [140511,140518]
        identifier: validator [140519,140528]
    affectation_operator: = [140529,140530]
    array_access [140531,140554]
        identifier: validators [140531,140541]
        identifier: validatorId [140542,140553]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [140573,140588]
    variable_declaration [140573,140587]
        type_name: uint256 [140573,140580]
        identifier: valPow [140581,140587]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [140647,140696]
    variable_declaration [140647,140667]
        type_name: address [140647,140654]
        identifier: contractAddr [140655,140667]
    affectation_operator: = [140668,140669]
    member_expression: validator.contractAddress [140670,140695]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [140718,140746]
    identifier: contractAddr [140718,140730]
    comparison_operator: != [140731,140733]
    type_cast_expression [140734,140746]
        primitive_type: address [140734,140741]
        call_argument [140742,140745]
            number_literal: 0x0 [140742,140745]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [140850,140856]
    identifier: reward [140850,140856]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [140883,140903]
    identifier: checkpointStakePower [140883,140903]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [141006,141182]
    expression_statement [141029,141055]
        assignment_expression [141029,141054]
            identifier: valPow [141029,141035]
            affectation_operator: = [141036,141037]
            member_expression: validator.amount [141038,141054]
    expression_statement [141077,141163]
        assignment_expression [141077,141162]
            member_expression: validator.reward [141077,141093]
            affectation_operator: = [141094,141095]
            call_expression [141096,141162]
                member_expression: validator.reward.add [141096,141116]
                call_argument [141117,141161]
                    call_expression [141117,141161]
                        member_expression: valPow.mul(reward).div [141117,141139]
                        call_argument [141140,141160]
                            identifier: checkpointStakePower [141140,141160]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [141200,141246]
    assignment_expression [141200,141245]
        identifier: totalStakePower [141200,141215]
        affectation_operator: = [141216,141217]
        call_expression [141218,141245]
            member_expression: totalStakePower.add [141218,141237]
            call_argument [141238,141244]
                identifier: valPow [141238,141244]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [141284,141369]
    assignment_expression [141284,141368]
        identifier: reward [141284,141290]
        affectation_operator: = [141291,141292]
        call_expression [141293,141368]
            member_expression: CHECKPOINT_REWARD.mul(totalStakePower).div [141293,141335]
            call_argument [141336,141367]
                call_expression [141336,141367]
                    identifier: currentValidatorSetTotalStake [141336,141365]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [141379,141419]
    assignment_expression [141379,141418]
        identifier: totalRewards [141379,141391]
        affectation_operator: = [141392,141393]
        call_expression [141394,141418]
            member_expression: totalRewards.add [141394,141410]
            call_argument [141411,141417]
                identifier: reward [141411,141417]

New cluster:
===
delete-node
---
memory: memory [141595,141601]
===
------------
===
delete-node
---
memory: memory [141595,141601]
===

New cluster:
===
delete-node
---
affectation_operator: = [141885,141886]
===
------------
===
delete-node
---
affectation_operator: = [141885,141886]
===

New cluster:
===
delete-node
---
number_literal: 0 [141887,141888]
===
------------
===
delete-node
---
number_literal: 0 [141887,141888]
===

New cluster:
===
delete-node
---
affectation_operator: = [141920,141921]
===
------------
===
delete-node
---
affectation_operator: = [141920,141921]
===

New cluster:
===
delete-node
---
number_literal: 0 [141922,141923]
===
------------
===
delete-node
---
number_literal: 0 [141922,141923]
===

New cluster:
===
delete-node
---
member_expression: validators[validatorId].contractAddress [142286,142325]
===
------------
===
delete-node
---
member_expression: validators[validatorId].contractAddress [142286,142325]
===

New cluster:
===
delete-node
---
number_literal: 0 [143774,143775]
===
------------
===
delete-node
---
number_literal: 0 [143774,143775]
===

New cluster:
===
delete-node
---
member_expression: validators[validatorId].contractAddress [143790,143829]
===
------------
===
delete-node
---
member_expression: validators[validatorId].contractAddress [143790,143829]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [143833,143845]
    primitive_type: address [143833,143840]
    call_argument [143841,143844]
        number_literal: 0x0 [143841,143844]

New cluster:
===
delete-node
---
assignment_expression [143862,143954]
===
------------
===
delete-node
---
identifier: delegationAmount [143862,143878]
===
===
delete-node
---
affectation_operator: = [143879,143880]
===
===
delete-node
---
assignment_expression [143862,143954]
===

New cluster:
===
delete-node
---
identifier: delegationAmount [144074,144090]
===
------------
===
delete-node
---
identifier: delegationAmount [144074,144090]
===

New cluster:
===
delete-node
---
return_statement [148934,148983]
===
------------
===
delete-node
---
return_statement [148934,148983]
===
===
delete-node
---
return: return [148934,148940]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [137707,137773]
    variable_declaration [137707,137730]
        type_name: uint256 [137707,137714]
        identifier: activationEpoch [137715,137730]
    affectation_operator: = [137731,137732]
    member_expression: validators[validatorId].activationEpoch [137733,137772]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [137783,137853]
    variable_declaration [137783,137808]
        type_name: uint256 [137783,137790]
        identifier: deactivationEpoch [137791,137808]
    affectation_operator: = [137809,137810]
    member_expression: validators[validatorId].deactivationEpoch [137811,137852]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parenthesized_expression [138062,138120]
    binary_expression [138063,138119]
        binary_expression [138063,138083]
            identifier: activationEpoch [138063,138078]
            comparison_operator: != [138079,138081]
            number_literal: 0 [138082,138083]
        logical_operator: && [138084,138086]
        binary_expression [138087,138119]
            identifier: activationEpoch [138087,138102]
            comparison_operator: <= [138103,138105]
            identifier: _currentEpoch [138106,138119]

New cluster:
===
delete-node
---
binary_expression [138035,138120]
===
------------
===
delete-node
---
binary_expression [138035,138120]
===

New cluster:
===
delete-node
---
logical_operator: && [138121,138123]
===
------------
===
delete-node
---
logical_operator: && [138121,138123]
===

New cluster:
===
delete-node
---
affectation_operator: = [138866,138867]
===
------------
===
delete-node
---
affectation_operator: = [138866,138867]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [138868,138933]
    member_expression: blockInterval.mul(CHECKPOINT_REWARD).div [138868,138908]
    call_argument [138909,138932]
        identifier: checkPointBlockInterval [138909,138932]

New cluster:
===
delete-node
---
identifier: reward [138944,138950]
===
------------
===
delete-node
---
identifier: reward [138944,138950]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [138962,138979]
    identifier: CHECKPOINT_REWARD [138962,138979]

New cluster:
===
delete-node
---
number_literal: 0 [144374,144375]
===
------------
===
delete-node
---
number_literal: 0 [144374,144375]
===

New cluster:
===
delete-node
---
member_expression: validators[validatorId].contractAddress [144390,144429]
===
------------
===
delete-node
---
member_expression: validators[validatorId].contractAddress [144390,144429]
===

New cluster:
===
delete-node
---
assignment_expression [144462,144552]
===
------------
===
delete-node
---
identifier: delegationAmount [144462,144478]
===
===
delete-node
---
affectation_operator: = [144479,144480]
===
===
delete-node
---
assignment_expression [144462,144552]
===

New cluster:
===
delete-node
---
identifier: delegationAmount [144889,144905]
===
------------
===
delete-node
---
identifier: delegationAmount [144889,144905]
===

New cluster:
===
delete-node
---
number_literal: 0 [145540,145541]
===
------------
===
delete-node
---
number_literal: 0 [145540,145541]
===

New cluster:
===
delete-node
---
variable_declaration_statement [146679,146707]
===
------------
===
delete-node
---
number_literal: 0 [146705,146706]
===
===
delete-node
---
variable_declaration_statement [146679,146707]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [146717,146732]
    type_name: uint256 [146717,146724]
    identifier: rewards [146725,146732]

New cluster:
===
delete-node
---
variable_declaration_statement [146717,146766]
===
------------
===
delete-node
---
variable_declaration_statement [146717,146766]
===
===
delete-node
---
affectation_operator: = [146733,146734]
===

New cluster:
===
delete-node
---
assignment_expression [146975,147039]
===
------------
===
delete-node
---
affectation_operator: = [146983,146984]
===
===
delete-node
---
assignment_expression [146975,147039]
===
===
delete-node
---
member_expression: rewards.add [146985,146996]
===
===
delete-node
---
call_argument [146997,147038]
===
===
delete-node
---
identifier: rewards [146975,146982]
===
===
delete-node
---
call_expression [146985,147039]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [146898,146961]
    variable_declaration [146898,146928]
        type_name: IValidatorShare [146898,146913]
        identifier: validatorShare [146914,146928]
    affectation_operator: = [146929,146930]
    call_expression [146931,146960]
        identifier: IValidatorShare [146931,146946]
        call_argument [146947,146959]
            identifier: contractAddr [146947,146959]

New cluster:
===
delete-node
---
if_statement [146849,147122]
===
------------
===
delete-node
---
expression_statement [147054,147111]
===
===
delete-node
---
if_statement [146849,147122]
===
===
delete-node
---
assignment_expression [147054,147110]
===
===
delete-node
---
block_statement [146883,147122]
===
===
delete-node
---
affectation_operator: = [147071,147072]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [147073,147110]
    primitive_type: int256 [147073,147079]
    call_argument [147080,147109]
        call_expression [147080,147109]
            member_expression: validatorShare.lockContract [147080,147107]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [147176,147183]
    identifier: rewards [147176,147183]

New cluster:
===
delete-node
---
visibility: private [132058,132065]
===
------------
===
delete-node
---
visibility: private [132058,132065]
===

New cluster:
===
delete-node
---
number_literal: 0 [132180,132181]
===
------------
===
delete-node
---
number_literal: 0 [132180,132181]
===

New cluster:
===
delete-node
---
member_expression: token.transfer [132200,132214]
===
------------
===
delete-node
---
member_expression: token.transfer [132200,132214]
===

New cluster:
===
delete-node
---
call_expression [132192,132261]
===
------------
===
delete-node
---
call_argument [132200,132237]
===
===
delete-node
---
call_expression [132192,132261]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [132239,132260]
    string_literal [132239,132260]
        string: "Insufficent rewards" [132239,132260]

New cluster:
===
delete-node
---
member_expression: token.transferFrom [121180,121198]
===
------------
===
delete-node
---
member_expression: token.transferFrom [121180,121198]
===

New cluster:
===
delete-node
---
call_expression [121172,121276]
===
------------
===
delete-node
---
call_argument [121180,121252]
===
===
delete-node
---
call_expression [121172,121276]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [121254,121275]
    string_literal [121254,121275]
        string: "Fee transfer failed" [121254,121275]

