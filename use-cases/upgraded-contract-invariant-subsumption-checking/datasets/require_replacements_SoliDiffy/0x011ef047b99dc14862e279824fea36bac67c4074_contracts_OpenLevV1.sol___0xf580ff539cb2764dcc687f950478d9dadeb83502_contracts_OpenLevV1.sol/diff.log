New cluster:
Unknown cluster type
------------
===
insert-tree
---
import_directive [381,409]
    import: import [381,387]
    string: "./OpenLevV1Lib.sol" [388,408]
to
source_file [0,32147]
at 12

New cluster:
===
insert-node
---
identifier: OpenLevV1 [655,664]
to
contract_declaration [493,32145]
at 0
------------
===
insert-node
---
identifier: OpenLevV1 [655,664]
to
contract_declaration [493,32145]
at 0

New cluster:
===
insert-node
---
is: is [665,667]
to
contract_declaration [493,32145]
at 1
------------
===
insert-node
---
is: is [665,667]
to
contract_declaration [493,32145]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
using_directive [783,815]
    using: using [783,788]
    type_alias [789,803]
        identifier: TransferHelper [789,803]
    for: for [804,807]
    type_name: IERC20 [808,814]
to
contract_body [595,32145]
at 1

New cluster:
===
insert-node
---
function_definition [2702,3150]
to
contract_body [595,32145]
at 6
------------
===
insert-node
---
call_expression [2926,3055]
to
expression_statement [2926,3056]
at 0
===
insert-node
---
function_body [2880,3150]
to
function_definition [2702,3150]
at 9
===
insert-node
---
member_expression: OpenLevV1Lib.addMarket [2926,2948]
to
call_expression [2926,3055]
at 0
===
insert-node
---
visibility: external [2845,2853]
to
function_definition [2702,3150]
at 6
===
insert-node
---
function_definition [2702,3150]
to
contract_body [595,32145]
at 6
===
insert-node
---
function: function [2702,2710]
to
function_definition [2702,3150]
at 0
===
insert-node
---
identifier: addMarket [2711,2720]
to
function_definition [2702,3150]
at 1
===
insert-node
---
expression_statement [2926,3056]
to
function_body [2880,3150]
at 1

New cluster:
===
insert-node
---
function_definition [18547,19585]
to
contract_body [595,32145]
at 11
------------
===
insert-node
---
member_expression: Types.MarketVars [19153,19169]
to
call_expression [19153,19578]
at 0
===
insert-node
---
:: : [19143,19144]
to
ternary_expression [18689,19578]
at 3
===
insert-node
---
ternary_expression [18689,19578]
to
return_statement [18682,19579]
at 1
===
insert-node
---
function: function [18547,18555]
to
function_definition [18547,19585]
at 0
===
insert-node
---
call_argument [18834,18855]
to
call_expression [18717,19142]
at 4
===
insert-node
---
function_body [18672,19585]
to
function_definition [18547,19585]
at 8
===
insert-node
---
call_expression [18717,19142]
to
ternary_expression [18689,19578]
at 2
===
insert-node
---
call_argument [19270,19291]
to
call_expression [19153,19578]
at 4
===
insert-node
---
function_definition [18547,19585]
to
contract_body [595,32145]
at 11
===
insert-node
---
visibility: internal [18624,18632]
to
function_definition [18547,19585]
at 5
===
insert-node
---
return: return [18682,18688]
to
return_statement [18682,19579]
at 0
===
insert-node
---
return_statement [18682,19579]
to
function_body [18672,19585]
at 0
===
insert-node
---
call_argument [18799,18820]
to
call_expression [18717,19142]
at 3
===
insert-node
---
?: ? [18707,18708]
to
ternary_expression [18689,19578]
at 1
===
insert-node
---
identifier: toMarketVar [18556,18567]
to
function_definition [18547,19585]
at 1
===
insert-node
---
member_expression: Types.MarketVars [18717,18733]
to
call_expression [18717,19142]
at 0
===
insert-node
---
call_argument [19235,19256]
to
call_expression [19153,19578]
at 3
===
insert-node
---
call_expression [19153,19578]
to
ternary_expression [18689,19578]
at 4

New cluster:
===
insert-node
---
function_definition [20235,21145]
to
contract_body [595,32145]
at 12
------------
===
insert-node
---
call_expression [20911,21138]
to
assignment_expression [20877,21138]
at 2
===
insert-node
---
expression_statement [20877,21139]
to
function_body [20432,21145]
at 6
===
insert-node
---
assignment_expression [20706,20866]
to
expression_statement [20706,20867]
at 0
===
insert-node
---
identifier: amount [20706,20712]
to
assignment_expression [20706,20866]
at 0
===
insert-node
---
affectation_operator: = [20901,20902]
to
assignment_expression [20877,21138]
at 1
===
insert-node
---
call_expression [20715,20866]
to
assignment_expression [20706,20866]
at 2
===
insert-node
---
visibility: external [20326,20334]
to
function_definition [20235,21145]
at 6
===
insert-node
---
expression_statement [20706,20867]
to
function_body [20432,21145]
at 5
===
insert-node
---
member_expression: OpenLevV1Lib.shareToAmount [20715,20741]
to
call_expression [20715,20866]
at 0
===
insert-node
---
function_definition [20235,21145]
to
contract_body [595,32145]
at 12
===
insert-node
---
identifier: marginRatio [20244,20255]
to
function_definition [20235,21145]
at 1
===
insert-node
---
call_argument [20812,20856]
to
call_expression [20715,20866]
at 3
===
insert-node
---
function_body [20432,21145]
to
function_definition [20235,21145]
at 11
===
insert-node
---
member_expression: OpenLevV1Lib.marginRatio [20911,20935]
to
call_expression [20911,21138]
at 0
===
insert-node
---
assignment_expression [20877,21138]
to
expression_statement [20877,21139]
at 0
===
insert-node
---
function: function [20235,20243]
to
function_definition [20235,21145]
at 0
===
insert-node
---
affectation_operator: = [20713,20714]
to
assignment_expression [20706,20866]
at 1

New cluster:
===
insert-node
---
function_definition [21727,21916]
to
contract_body [595,32145]
at 17
------------
===
insert-node
---
identifier: updatePrice [21736,21747]
to
function_definition [21727,21916]
at 1
===
insert-node
---
expression_statement [21815,21910]
to
function_body [21805,21916]
at 0
===
insert-node
---
function_definition [21727,21916]
to
contract_body [595,32145]
at 17
===
insert-node
---
call_expression [21815,21909]
to
expression_statement [21815,21910]
at 0
===
insert-node
---
member_expression: OpenLevV1Lib.updatePrice [21815,21839]
to
call_expression [21815,21909]
at 0
===
insert-node
---
visibility: external [21787,21795]
to
function_definition [21727,21916]
at 4
===
insert-node
---
function_body [21805,21916]
to
function_definition [21727,21916]
at 6
===
insert-node
---
function: function [21727,21735]
to
function_definition [21727,21916]
at 0
===
insert-node
---
call_argument [21850,21867]
to
call_expression [21815,21909]
at 2

New cluster:
===
insert-node
---
function_definition [22115,22464]
to
contract_body [595,32145]
at 19
------------
===
insert-node
---
return_statement [22348,22458]
to
function_body [22281,22464]
at 1
===
insert-node
---
return: return [22348,22354]
to
return_statement [22348,22458]
at 0
===
insert-node
---
visibility: internal [22239,22247]
to
function_definition [22115,22464]
at 8
===
insert-node
---
function_definition [22115,22464]
to
contract_body [595,32145]
at 19
===
insert-node
---
identifier: reduceInsurance [22124,22139]
to
function_definition [22115,22464]
at 1
===
insert-node
---
function: function [22115,22123]
to
function_definition [22115,22464]
at 0
===
insert-node
---
member_expression: OpenLevV1Lib.reduceInsurance [22355,22383]
to
call_expression [22355,22457]
at 0
===
insert-node
---
call_expression [22355,22457]
to
return_statement [22348,22458]
at 1
===
insert-node
---
function_body [22281,22464]
to
function_definition [22115,22464]
at 10

New cluster:
===
insert-node
---
function_definition [22470,22826]
to
contract_body [595,32145]
at 20
------------
===
insert-node
---
function_definition [22470,22826]
to
contract_body [595,32145]
at 20
===
insert-node
---
call_expression [22688,22819]
to
return_statement [22681,22820]
at 1
===
insert-node
---
function: function [22470,22478]
to
function_definition [22470,22826]
at 0
===
insert-node
---
visibility: internal [22590,22598]
to
function_definition [22470,22826]
at 8
===
insert-node
---
function_body [22614,22826]
to
function_definition [22470,22826]
at 10
===
insert-node
---
return_statement [22681,22820]
to
function_body [22614,22826]
at 1
===
insert-node
---
member_expression: OpenLevV1Lib.feeAndInsurance [22688,22716]
to
call_expression [22688,22819]
at 0
===
insert-node
---
identifier: feesAndInsurance [22479,22495]
to
function_definition [22470,22826]
at 1
===
insert-node
---
return: return [22681,22687]
to
return_statement [22681,22820]
at 0

New cluster:
===
insert-node
---
function_definition [23924,24097]
to
contract_body [595,32145]
at 30
------------
===
insert-node
---
function_definition [23924,24097]
to
contract_body [595,32145]
at 30
===
insert-node
---
identifier: transferIn [23933,23943]
to
function_definition [23924,24097]
at 1
===
insert-node
---
visibility: internal [23985,23993]
to
function_definition [23924,24097]
at 5
===
insert-node
---
function_body [24009,24097]
to
function_definition [23924,24097]
at 7
===
insert-node
---
call_expression [24026,24090]
to
return_statement [24019,24091]
at 1
===
insert-node
---
function: function [23924,23932]
to
function_definition [23924,24097]
at 0
===
insert-node
---
return_statement [24019,24091]
to
function_body [24009,24097]
at 0
===
insert-node
---
member_expression: OpenLevV1Lib.transferIn [24026,24049]
to
call_expression [24026,24090]
at 0
===
insert-node
---
return: return [24019,24025]
to
return_statement [24019,24091]
at 0

New cluster:
===
insert-node
---
function_definition [24168,24321]
to
contract_body [595,32145]
at 31
------------
===
insert-node
---
visibility: internal [24230,24238]
to
function_definition [24168,24321]
at 5
===
insert-node
---
function: function [24168,24176]
to
function_definition [24168,24321]
at 0
===
insert-node
---
identifier: doTransferOut [24177,24190]
to
function_definition [24168,24321]
at 1
===
insert-node
---
function_definition [24168,24321]
to
contract_body [595,32145]
at 31
===
insert-node
---
function_body [24239,24321]
to
function_definition [24168,24321]
at 6

New cluster:
===
insert-node
---
function_definition [25259,25536]
to
contract_body [595,32145]
at 37
------------
===
insert-node
---
identifier: setAddressConfig [25268,25284]
to
function_definition [25259,25536]
at 1
===
insert-node
---
call_expression [25383,25462]
to
expression_statement [25383,25463]
at 0
===
insert-node
---
function_definition [25259,25536]
to
contract_body [595,32145]
at 37
===
insert-node
---
function: function [25259,25267]
to
function_definition [25259,25536]
at 0
===
insert-node
---
member_expression: OpenLevV1Lib.setAddressConfigInternal [25383,25420]
to
call_expression [25383,25462]
at 0
===
insert-node
---
function_body [25373,25536]
to
function_definition [25259,25536]
at 7
===
insert-node
---
expression_statement [25383,25463]
to
function_body [25373,25536]
at 0
===
insert-node
---
visibility: external [25343,25351]
to
function_definition [25259,25536]
at 4

New cluster:
===
insert-node
---
function_definition [26039,26309]
to
contract_body [595,32145]
at 40
------------
===
insert-node
---
identifier: moveInsurance [26048,26061]
to
function_definition [26039,26309]
at 1
===
insert-node
---
visibility: external [26121,26129]
to
function_definition [26039,26309]
at 6
===
insert-node
---
function_body [26166,26309]
to
function_definition [26039,26309]
at 10
===
insert-node
---
function: function [26039,26047]
to
function_definition [26039,26309]
at 0
===
insert-node
---
function_definition [26039,26309]
to
contract_body [595,32145]
at 40

New cluster:
===
insert-node
---
function_definition [26440,26597]
to
contract_body [595,32145]
at 43
------------
===
insert-node
---
function: function [26440,26448]
to
function_definition [26440,26597]
at 0
===
insert-node
---
visibility: external [26516,26524]
to
function_definition [26440,26597]
at 6
===
insert-node
---
identifier: setTaxRate [26449,26459]
to
function_definition [26440,26597]
at 1
===
insert-node
---
function_definition [26440,26597]
to
contract_body [595,32145]
at 43

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [26682,26814]
    function: function [26682,26690]
    identifier: updateLegacy [26691,26703]
    parameter [26704,26729]
        type_name: address[] [26704,26713]
        calldata: calldata [26714,26722]
        identifier: tokens [26723,26729]
    visibility: external [26731,26739]
    modifier_invocation [26740,26751]
        identifier: onlyAdmin [26740,26749]
    function_body [26752,26814]
        expression_statement [26762,26808]
            call_expression [26762,26807]
                member_expression: OpenLevV1Lib.updateLegacy [26762,26787]
                call_argument [26788,26794]
                    identifier: tokens [26788,26794]
                call_argument [26796,26806]
                    identifier: totalHelds [26796,26806]
to
contract_body [595,32145]
at 44

New cluster:
MOVE from function_definition [2702,3150]
------------
===
move-tree
---
override_specifier [1538,1546]
    override: override [1538,1546]
to
function_definition [2702,3150]
at 7
===
move-tree
---
return_type_definition [1547,1563]
    returns: returns [1547,1554]
    parameter [1556,1562]
        type_name: uint16 [1556,1562]
to
function_definition [2702,3150]
at 8
===
move-tree
---
parameter [1414,1434]
    type_name: LPoolInterface [1414,1428]
    identifier: pool0 [1429,1434]
to
function_definition [2702,3150]
at 2
===
move-tree
---
parameter [1474,1492]
    type_name: uint16 [1474,1480]
    identifier: marginLimit [1481,1492]
to
function_definition [2702,3150]
at 4
===
move-tree
---
parameter [1502,1522]
    type_name: bytes [1502,1507]
    memory: memory [1508,1514]
    identifier: dexData [1515,1522]
to
function_definition [2702,3150]
at 5
===
move-tree
---
parameter [1444,1464]
    type_name: LPoolInterface [1444,1458]
    identifier: pool1 [1459,1464]
to
function_definition [2702,3150]
at 3

New cluster:
MOVE from block_statement [4158,4618]
------------
===
move-tree
---
expression_statement [3285,3364]
    call_expression [3285,3363]
        identifier: verifyTrade [3285,3296]
        call_argument [3297,3301]
            identifier: vars [3297,3301]
        call_argument [3303,3311]
            identifier: marketId [3303,3311]
        call_argument [3313,3322]
            identifier: longToken [3313,3322]
        call_argument [3324,3336]
            identifier: depositToken [3324,3336]
        call_argument [3338,3345]
            identifier: deposit [3338,3345]
        call_argument [3347,3353]
            identifier: borrow [3347,3353]
        call_argument [3355,3362]
            identifier: dexData [3355,3362]
to
block_statement [4158,4618]
at 1
===
move-tree
---
variable_declaration_statement [3206,3276]
    variable_declaration [3206,3234]
        type_name: Types.MarketVars [3206,3222]
        memory: memory [3223,3229]
        identifier: vars [3230,3234]
    affectation_operator: = [3235,3236]
    call_expression [3237,3275]
        identifier: toMarketVar [3237,3248]
        call_argument [3249,3257]
            identifier: marketId [3249,3257]
        call_argument [3259,3268]
            identifier: longToken [3259,3268]
        call_argument [3270,3274]
            boolean_literal: true [3270,3274]
to
function_body [3142,6044]
at 4
===
move-tree
---
expression_statement [5752,5792]
    assignment_expression [5752,5791]
        member_expression: trade.held [5752,5762]
        affectation_operator: = [5763,5764]
        call_expression [5765,5791]
            member_expression: trade.held.add [5765,5779]
            call_argument [5780,5790]
                member_expression: tv.newHeld [5780,5790]
to
function_body [3142,6044]
at 8
===
move-tree
---
expression_statement [3373,3450]
    call_expression [3373,3449]
        member_expression: (ControllerInterface(addressConfig.controller)).marginTradeAllowed [3373,3439]
        call_argument [3440,3448]
            identifier: marketId [3440,3448]
to
block_statement [4158,4618]
at 2
===
move-tree
---
if_statement [3459,3589]
    if: if [3459,3461]
    call_expression [3463,3485]
        member_expression: dexData.isUniV2Class [3463,3483]
    block_statement [3487,3589]
        expression_statement [3501,3579]
            call_expression [3501,3578]
                identifier: updatePriceInternal [3501,3520]
                call_argument [3521,3543]
                    type_cast_expression [3521,3543]
                        primitive_type: address [3521,3528]
                        call_argument [3529,3542]
                            member_expression: vars.buyToken [3529,3542]
                call_argument [3545,3568]
                    type_cast_expression [3545,3568]
                        primitive_type: address [3545,3552]
                        call_argument [3553,3567]
                            member_expression: vars.sellToken [3553,3567]
                call_argument [3570,3577]
                    identifier: dexData [3570,3577]
to
block_statement [4158,4618]
at 3
===
move-tree
---
expression_statement [5046,5089]
    assignment_expression [5046,5088]
        member_expression: trade.lastBlockNum [5046,5064]
        affectation_operator: = [5065,5066]
        type_cast_expression [5067,5088]
            primitive_type: uint128 [5067,5074]
            call_argument [5075,5087]
                member_expression: block.number [5075,5087]
to
function_body [3142,6044]
at 14

New cluster:
MOVE from block_statement [12132,12251]
------------
===
move-tree
---
expression_statement [6483,6526]
    assignment_expression [6483,6525]
        member_expression: trade.lastBlockNum [6483,6501]
        affectation_operator: = [6502,6503]
        type_cast_expression [6504,6525]
            primitive_type: uint128 [6504,6511]
            call_argument [6512,6524]
                member_expression: block.number [6512,6524]
to
block_statement [12132,12251]
at 1
===
move-tree
---
expression_statement [6810,6883]
    assignment_expression [6810,6882]
        member_expression: closeTradeVars.isPartialClose [6810,6839]
        affectation_operator: = [6840,6841]
        ternary_expression [6842,6882]
            binary_expression [6842,6867]
                identifier: closeAmount [6842,6853]
                comparison_operator: != [6854,6856]
                member_expression: trade.held [6857,6867]
            ?: ? [6868,6869]
            boolean_literal: true [6870,6874]
            :: : [6875,6876]
            boolean_literal: false [6877,6882]
to
function_body [6219,9879]
at 11
===
move-tree
---
expression_statement [6735,6801]
    assignment_expression [6735,6800]
        member_expression: closeTradeVars.closeRatio [6735,6760]
        affectation_operator: = [6761,6762]
        call_expression [6763,6800]
            member_expression: closeAmount.mul(1e18).div [6763,6788]
            call_argument [6789,6799]
                member_expression: trade.held [6789,6799]
to
function_body [6219,9879]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [13469,13481]
    type_name: uint [13469,13473]
    identifier: maxSell [13474,13481]
to
function_definition [9886,14807]
at 6

New cluster:
MOVE from function_body [10051,14807]
------------
===
move-tree
---
expression_statement [11047,11119]
    assignment_expression [11047,11118]
        member_expression: liquidateVars.borrowed [11047,11069]
        affectation_operator: = [11070,11071]
        call_expression [11072,11118]
            member_expression: marketVars.buyPool.borrowBalanceCurrent [11072,11111]
            call_argument [11112,11117]
                identifier: owner [11112,11117]
to
function_body [10051,14807]
at 16
===
move-tree
---
expression_statement [10881,10917]
    assignment_expression [10881,10916]
        member_expression: liquidateVars.longToken [10881,10904]
        affectation_operator: = [10905,10906]
        identifier: longToken [10907,10916]
to
function_body [10051,14807]
at 16
===
move-tree
---
expression_statement [10781,10829]
    assignment_expression [10781,10828]
        member_expression: liquidateVars.dexDetail [10781,10804]
        affectation_operator: = [10805,10806]
        call_expression [10807,10828]
            member_expression: dexData.toDexDetail [10807,10826]
to
function_body [10051,14807]
at 16
===
move-tree
---
expression_statement [10838,10872]
    assignment_expression [10838,10871]
        member_expression: liquidateVars.marketId [10838,10860]
        affectation_operator: = [10861,10862]
        identifier: marketId [10863,10871]
to
function_body [10051,14807]
at 16

New cluster:
MOVE from function_definition [18547,19585]
------------
===
move-tree
---
parameter [21847,21856]
    type_name: bool [21847,21851]
    identifier: open [21852,21856]
to
function_definition [18547,19585]
at 3
===
move-tree
---
parameter [21814,21829]
    type_name: uint16 [21814,21820]
    identifier: marketId [21821,21829]
to
function_definition [24564,25011]
at 2
===
move-tree
---
parameter [21831,21845]
    type_name: bool [21831,21835]
    identifier: longToken [21836,21845]
to
function_definition [18547,19585]
at 2
===
move-tree
---
return_type_definition [21872,21905]
    returns: returns [21872,21879]
    parameter [21881,21904]
        type_name: Types.MarketVars [21881,21897]
        memory: memory [21898,21904]
to
function_definition [18547,19585]
at 7
===
move-tree
---
state_mutability [21867,21871]
    view: view [21867,21871]
to
function_definition [18547,19585]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [18595,18622]
    type_name: Types.Market [18595,18607]
    storage: storage [18608,18615]
    identifier: market [18616,18622]
to
function_definition [18547,19585]
at 4

New cluster:
MOVE from function_definition [20235,21145]
------------
===
move-tree
---
return_type_definition [14951,15009]
    returns: returns [14951,14958]
    parameter [14960,14972]
        type_name: uint [14960,14964]
        identifier: current [14965,14972]
    parameter [14974,14983]
        type_name: uint [14974,14978]
        identifier: cAvg [14979,14983]
    parameter [14985,14994]
        type_name: uint [14985,14989]
        identifier: hAvg [14990,14994]
    parameter [14996,15008]
        type_name: uint32 [14996,15002]
        identifier: limit [15003,15008]
to
function_definition [20235,21145]
at 10
===
move-tree
---
parameter [14834,14847]
    type_name: address [14834,14841]
    identifier: owner [14842,14847]
to
function_definition [20235,21145]
at 2
===
move-tree
---
parameter [14866,14880]
    type_name: bool [14866,14870]
    identifier: longToken [14871,14880]
to
function_definition [20235,21145]
at 4
===
move-tree
---
state_mutability [14946,14950]
    view: view [14946,14950]
to
function_definition [20235,21145]
at 9
===
move-tree
---
override_specifier [14913,14921]
    override: override [14913,14921]
to
function_definition [20235,21145]
at 7
===
move-tree
---
parameter [14849,14864]
    type_name: uint16 [14849,14855]
    identifier: marketId [14856,14864]
to
function_definition [20235,21145]
at 3
===
move-tree
---
parameter [14882,14902]
    type_name: bytes [14882,14887]
    memory: memory [14888,14894]
    identifier: dexData [14895,14902]
to
function_definition [20235,21145]
at 5
===
move-tree
---
modifier_invocation [14922,14945]
    identifier: onlySupportDex [14922,14936]
    call_argument [14937,14944]
        identifier: dexData [14937,14944]
to
function_definition [20235,21145]
at 8

New cluster:
MOVE from function_definition [21727,21916]
------------
===
move-tree
---
parameter [17479,17499]
    type_name: bytes [17479,17484]
    memory: memory [17485,17491]
    identifier: dexData [17492,17499]
to
function_definition [21727,21916]
at 3
===
move-tree
---
parameter [17462,17477]
    type_name: uint16 [17462,17468]
    identifier: marketId [17469,17477]
to
function_definition [21727,21916]
at 2
===
move-tree
---
override_specifier [17510,17518]
    override: override [17510,17518]
to
function_definition [21727,21916]
at 5

New cluster:
MOVE from function_definition [22115,22464]
------------
===
move-tree
---
parameter [20945,20959]
    type_name: bool [20945,20949]
    identifier: longToken [20950,20959]
to
function_definition [22115,22464]
at 5
===
move-tree
---
parameter [20891,20910]
    type_name: uint [20891,20895]
    identifier: totalRepayment [20896,20910]
to
function_definition [22115,22464]
at 2
===
move-tree
---
parameter [20912,20926]
    type_name: uint [20912,20916]
    identifier: remaining [20917,20926]
to
function_definition [22115,22464]
at 3
===
move-tree
---
parameter [20928,20943]
    type_name: uint16 [20928,20934]
    identifier: marketId [20935,20943]
to
function_definition [22115,22464]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [22210,22223]
    type_name: address [22210,22217]
    identifier: token [22218,22223]
to
function_definition [22115,22464]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [22225,22237]
    type_name: uint [22225,22229]
    identifier: reserve [22230,22237]
to
function_definition [22115,22464]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [22248,22280]
    returns: returns [22248,22255]
    parameter [22257,22279]
        type_name: uint [22257,22261]
        identifier: maxCanRepayAmount [22262,22279]
to
function_definition [22115,22464]
at 9

New cluster:
MOVE from function_definition [22470,22826]
------------
===
move-tree
---
return_type_definition [22945,22959]
    returns: returns [22945,22952]
    parameter [22954,22958]
        type_name: uint [22954,22958]
to
function_definition [22470,22826]
at 9
===
move-tree
---
parameter [22888,22902]
    type_name: uint [22888,22892]
    identifier: tradeSize [22893,22902]
to
function_definition [22470,22826]
at 3
===
move-tree
---
parameter [22904,22917]
    type_name: address [22904,22911]
    identifier: token [22912,22917]
to
function_definition [22470,22826]
at 4
===
move-tree
---
parameter [22919,22934]
    type_name: uint16 [22919,22925]
    identifier: marketId [22926,22934]
to
function_definition [22470,22826]
at 5
===
move-tree
---
parameter [22872,22886]
    type_name: address [22872,22879]
    identifier: trader [22880,22886]
to
function_definition [22470,22826]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [22560,22574]
    type_name: uint [22560,22564]
    identifier: totalHeld [22565,22574]
to
function_definition [22470,22826]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [22576,22588]
    type_name: uint [22576,22580]
    identifier: reserve [22581,22588]
to
function_definition [22470,22826]
at 7

New cluster:
MOVE from function_definition [23924,24097]
------------
===
move-tree
---
parameter [25283,25295]
    type_name: IERC20 [25283,25289]
    identifier: token [25290,25295]
to
function_definition [23924,24097]
at 3
===
move-tree
---
return_type_definition [25319,25333]
    returns: returns [25319,25326]
    parameter [25328,25332]
        type_name: uint [25328,25332]
to
function_definition [23924,24097]
at 6
===
move-tree
---
parameter [25297,25308]
    type_name: uint [25297,25301]
    identifier: amount [25302,25308]
to
function_definition [23924,24097]
at 4
===
move-tree
---
parameter [25269,25281]
    type_name: address [25269,25276]
    identifier: from [25277,25281]
to
function_definition [23924,24097]
at 2

New cluster:
MOVE from function_definition [24168,24321]
------------
===
move-tree
---
parameter [25837,25848]
    type_name: uint [25837,25841]
    identifier: amount [25842,25848]
to
function_definition [24168,24321]
at 4
===
move-tree
---
parameter [25811,25821]
    type_name: address [25811,25818]
    identifier: to [25819,25821]
to
function_definition [24168,24321]
at 2
===
move-tree
---
parameter [25823,25835]
    type_name: IERC20 [25823,25829]
    identifier: token [25830,25835]
to
function_definition [24168,24321]
at 3

New cluster:
MOVE from function_definition [25259,25536]
------------
===
move-tree
---
parameter [28262,28280]
    type_name: address [28262,28269]
    identifier: controller [28270,28280]
to
function_definition [25259,25536]
at 2
===
move-tree
---
modifier_invocation [28346,28357]
    identifier: onlyAdmin [28346,28355]
to
function_definition [25259,25536]
at 6
===
move-tree
---
parameter [28290,28326]
    type_name: DexAggregatorInterface [28290,28312]
    identifier: dexAggregator [28313,28326]
to
function_definition [25259,25536]
at 3
===
move-tree
---
override_specifier [28337,28345]
    override: override [28337,28345]
to
function_definition [25259,25536]
at 5

New cluster:
MOVE from function_definition [26039,26309]
------------
===
move-tree
---
parameter [29255,29266]
    type_name: uint [29255,29259]
    identifier: amount [29260,29266]
to
function_definition [26039,26309]
at 5
===
move-tree
---
override_specifier [29277,29285]
    override: override [29277,29285]
to
function_definition [26039,26309]
at 7
===
move-tree
---
modifier_invocation [29286,29300]
    identifier: nonReentrant [29286,29298]
to
function_definition [26039,26309]
at 8
===
move-tree
---
parameter [29243,29253]
    type_name: address [29243,29250]
    identifier: to [29251,29253]
to
function_definition [26039,26309]
at 4
===
move-tree
---
modifier_invocation [29301,29312]
    identifier: onlyAdmin [29301,29310]
to
function_definition [26039,26309]
at 9
===
move-tree
---
parameter [29209,29224]
    type_name: uint16 [29209,29215]
    identifier: marketId [29216,29224]
to
function_definition [26039,26309]
at 2
===
move-tree
---
parameter [29226,29241]
    type_name: uint8 [29226,29231]
    identifier: poolIndex [29232,29241]
to
function_definition [26039,26309]
at 3

New cluster:
MOVE from function_definition [26440,26597]
------------
===
move-tree
---
parameter [29877,29892]
    type_name: uint16 [29877,29883]
    identifier: marketId [29884,29892]
to
function_definition [26440,26597]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [26477,26490]
    type_name: address [26477,26484]
    identifier: token [26485,26490]
to
function_definition [26440,26597]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [26492,26502]
    type_name: uint [26492,26496]
    identifier: index [26497,26502]
to
function_definition [26440,26597]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [26504,26514]
    type_name: uint24 [26504,26510]
    identifier: tax [26511,26514]
to
function_definition [26440,26597]
at 5

New cluster:
MOVE from function_definition [26440,26597]
------------
===
move-tree
---
override_specifier [18545,18553]
    override: override [18545,18553]
to
function_definition [26440,26597]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [26534,26545]
    identifier: onlyAdmin [26534,26543]
to
function_definition [26440,26597]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [26545,26597]
    expression_statement [26555,26591]
        assignment_expression [26555,26590]
            array_access [26555,26584]
                array_access [26555,26577]
                    array_access [26555,26570]
                        identifier: taxes [26555,26560]
                        identifier: marketId [26561,26569]
                    identifier: token [26571,26576]
                identifier: index [26578,26583]
            affectation_operator: = [26585,26586]
            identifier: tax [26587,26590]
to
function_definition [26440,26597]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [1712,1726]
    identifier: depositTokens [1712,1725]
to
function_body [956,1380]
at 0

New cluster:
MOVE from function_body [2880,3150]
------------
===
move-tree
---
expression_statement [2559,2571]
    update_expression [2559,2570]
        identifier: numPairs [2559,2567]
        increment_operator: ++ [2568,2570]
to
function_body [2880,3150]
at 3
===
move-tree
---
variable_declaration_statement [2274,2301]
    variable_declaration [2274,2289]
        type_name: uint16 [2274,2280]
        identifier: marketId [2281,2289]
    affectation_operator: = [2290,2291]
    identifier: numPairs [2292,2300]
to
function_body [2880,3150]
at 0
===
move-tree
---
return_statement [2848,2864]
    return: return [2848,2854]
    identifier: marketId [2855,2863]
to
function_body [2880,3150]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [3065,3098]
    call_expression [3065,3097]
        identifier: require [3065,3072]
        call_argument [3073,3089]
            binary_expression [3073,3089]
                identifier: numPairs [3073,3081]
                comparison_operator: < [3082,3083]
                number_literal: 65535 [3084,3089]
        call_argument [3091,3096]
            string_literal [3091,3096]
                string: "TMP" [3091,3096]
to
function_body [2880,3150]
at 2

New cluster:
===
insert-node
---
block_statement [4158,4618]
to
function_body [3142,6044]
at 5
------------
===
insert-node
---
block_statement [4158,4618]
to
function_body [3142,6044]
at 5

New cluster:
===
insert-node
---
expression_statement [4628,4678]
to
function_body [3142,6044]
at 6
------------
===
insert-node
---
expression_statement [4628,4678]
to
function_body [3142,6044]
at 6
===
insert-node
---
array_access [4643,4677]
to
assignment_expression [4628,4677]
at 2
===
insert-node
---
assignment_expression [4628,4677]
to
expression_statement [4628,4678]
at 0
===
insert-node
---
member_expression: tv.totalHeld [4628,4640]
to
assignment_expression [4628,4677]
at 0
===
insert-node
---
affectation_operator: = [4641,4642]
to
assignment_expression [4628,4677]
at 1
===
insert-node
---
identifier: totalHelds [4643,4653]
to
array_access [4643,4677]
at 0

New cluster:
===
insert-node
---
expression_statement [4687,4764]
to
function_body [3142,6044]
at 7
------------
===
insert-node
---
expression_statement [4687,4764]
to
function_body [3142,6044]
at 7
===
insert-node
---
member_expression: tv.depositErc20 [4687,4702]
to
assignment_expression [4687,4763]
at 0
===
insert-node
---
ternary_expression [4705,4763]
to
assignment_expression [4687,4763]
at 2
===
insert-node
---
affectation_operator: = [4703,4704]
to
assignment_expression [4687,4763]
at 1
===
insert-node
---
?: ? [4731,4732]
to
ternary_expression [4705,4763]
at 1
===
insert-node
---
assignment_expression [4687,4763]
to
expression_statement [4687,4764]
at 0
===
insert-node
---
:: : [4747,4748]
to
ternary_expression [4705,4763]
at 3

New cluster:
MOVE from function_body [3142,6044]
------------
===
move-tree
---
expression_statement [4646,4750]
    assignment_expression [4646,4749]
        member_expression: tv.fees [4646,4653]
        affectation_operator: = [4654,4655]
        call_expression [4656,4749]
            identifier: feesAndInsurance [4656,4672]
            call_argument [4673,4683]
                member_expression: msg.sender [4673,4683]
            call_argument [4685,4712]
                call_expression [4685,4712]
                    member_expression: deposit.add [4685,4696]
                    call_argument [4697,4711]
                        member_expression: tv.borrowValue [4697,4711]
            call_argument [4714,4738]
                type_cast_expression [4714,4738]
                    primitive_type: address [4714,4721]
                    call_argument [4722,4737]
                        member_expression: tv.depositErc20 [4722,4737]
            call_argument [4740,4748]
                identifier: marketId [4740,4748]
to
function_body [3142,6044]
at 12
===
move-tree
---
expression_statement [4763,4806]
    assignment_expression [4763,4805]
        member_expression: tv.depositAfterFees [4763,4782]
        affectation_operator: = [4783,4784]
        call_expression [4785,4805]
            member_expression: deposit.sub [4785,4796]
            call_argument [4797,4804]
                member_expression: tv.fees [4797,4804]
to
function_body [3142,6044]
at 13
===
move-tree
---
expression_statement [4854,4943]
    call_expression [4854,4942]
        identifier: require [4854,4861]
        call_argument [4862,4934]
            binary_expression [4862,4934]
                call_expression [4862,4915]
                    member_expression: borrow == 0 || deposit.mul(10000).div [4862,4899]
                    call_argument [4900,4914]
                        member_expression: tv.borrowValue [4900,4914]
                comparison_operator: > [4916,4917]
                member_expression: vars.marginLimit [4918,4934]
        call_argument [4936,4941]
            string_literal [4936,4941]
                string: "MAM" [4936,4941]
to
function_body [3142,6044]
at 11
===
move-tree
---
if_statement [4240,4516]
    if: if [4240,4242]
    binary_expression [4244,4254]
        identifier: borrow [4244,4250]
        comparison_operator: > [4251,4252]
        number_literal: 0 [4253,4254]
    block_statement [4256,4516]
        variable_declaration_statement [4274,4412]
            variable_declaration_tuple [4274,4314]
                variable_declaration [4275,4292]
                    type_name: uint [4275,4279]
                    identifier: currentPrice [4280,4292]
                variable_declaration [4294,4313]
                    type_name: uint8 [4294,4299]
                    identifier: priceDecimals [4300,4313]
            affectation_operator: = [4315,4316]
            call_expression [4317,4411]
                member_expression: addressConfig.dexAggregator.getPrice [4317,4353]
                call_argument [4354,4377]
                    type_cast_expression [4354,4377]
                        primitive_type: address [4354,4361]
                        call_argument [4362,4376]
                            member_expression: vars.sellToken [4362,4376]
                call_argument [4379,4401]
                    type_cast_expression [4379,4401]
                        primitive_type: address [4379,4386]
                        call_argument [4387,4400]
                            member_expression: vars.buyToken [4387,4400]
                call_argument [4403,4410]
                    identifier: dexData [4403,4410]
        expression_statement [4429,4502]
            assignment_expression [4429,4501]
                member_expression: tv.borrowValue [4429,4443]
                affectation_operator: = [4444,4445]
                call_expression [4446,4501]
                    member_expression: borrow.mul(currentPrice).div [4446,4474]
                    call_argument [4475,4500]
                        binary_expression [4475,4500]
                            number_literal: 10 [4475,4477]
                            **: ** [4478,4480]
                            type_cast_expression [4481,4500]
                                primitive_type: uint [4481,4485]
                                call_argument [4486,4499]
                                    identifier: priceDecimals [4486,4499]
to
block_statement [4900,5520]
at 1
===
move-tree
---
expression_statement [4574,4633]
    assignment_expression [4574,4632]
        identifier: deposit [4574,4581]
        affectation_operator: = [4582,4583]
        call_expression [4584,4632]
            identifier: transferIn [4584,4594]
            call_argument [4595,4605]
                member_expression: msg.sender [4595,4605]
            call_argument [4607,4622]
                member_expression: tv.depositErc20 [4607,4622]
            call_argument [4624,4631]
                identifier: deposit [4624,4631]
to
function_body [3142,6044]
at 8
===
move-tree
---
expression_statement [4529,4561]
    assignment_expression [4529,4560]
        member_expression: tv.depositErc20 [4529,4544]
        affectation_operator: = [4545,4546]
        member_expression: vars.buyToken [4547,4560]
to
block_statement [5454,5510]
at 0

New cluster:
===
insert-node
---
variable_declaration_statement [4861,4875]
to
function_body [3142,6044]
at 9
------------
===
insert-node
---
variable_declaration_statement [4861,4875]
to
function_body [3142,6044]
at 9

New cluster:
===
insert-node
---
if_statement [4884,5520]
to
function_body [3142,6044]
at 10
------------
===
insert-node
---
block_statement [4914,5146]
to
block_statement [4900,5520]
at 0
===
insert-node
---
if_statement [4884,5520]
to
function_body [3142,6044]
at 10
===
insert-node
---
block_statement [4900,5520]
to
if_statement [4884,5520]
at 2
===
insert-node
---
variable_declaration_statement [4932,4987]
to
block_statement [4914,5146]
at 0
===
insert-node
---
if: if [4884,4886]
to
if_statement [4884,5520]
at 0

New cluster:
===
insert-node
---
if_statement [6039,6749]
to
function_body [3142,6044]
at 15
------------
===
insert-node
---
block_statement [6101,6356]
to
if_statement [6084,6356]
at 2
===
insert-node
---
if_statement [6084,6356]
to
block_statement [6070,6428]
at 0
===
insert-node
---
if: if [6039,6041]
to
if_statement [6039,6749]
at 0
===
insert-node
---
if: if [6084,6086]
to
if_statement [6084,6356]
at 0
===
insert-node
---
if_statement [6039,6749]
to
function_body [3142,6044]
at 15
===
insert-node
---
else: else [6428,6432]
to
if_statement [6039,6749]
at 3
===
insert-node
---
block_statement [6070,6428]
to
if_statement [6039,6749]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [6842,6930]
    assignment_expression [6842,6929]
        member_expression: tv.newHeld [6842,6852]
        affectation_operator: = [6853,6854]
        call_expression [6855,6929]
            member_expression: OpenLevV1Lib.amountToShare [6855,6881]
            call_argument [6882,6892]
                member_expression: tv.newHeld [6882,6892]
            call_argument [6894,6906]
                member_expression: tv.totalHeld [6894,6906]
            call_argument [6908,6928]
                member_expression: vars.reserveBuyToken [6908,6928]
to
function_body [3142,6044]
at 18

New cluster:
===
insert-node
---
expression_statement [7152,7240]
to
function_body [3142,6044]
at 26
------------
===
insert-node
---
expression_statement [7152,7240]
to
function_body [3142,6044]
at 26
===
insert-node
---
array_access [7152,7186]
to
assignment_expression [7152,7239]
at 0
===
insert-node
---
affectation_operator: = [7187,7188]
to
assignment_expression [7152,7239]
at 1
===
insert-node
---
identifier: totalHelds [7152,7162]
to
array_access [7152,7186]
at 0
===
insert-node
---
assignment_expression [7152,7239]
to
expression_statement [7152,7240]
at 0

New cluster:
UPDATE from closeAmount to closeHeld
------------
===
update-node
---
identifier: closeAmount [6108,6119]
replace closeAmount by closeHeld
===
update-node
---
identifier: closeAmount [6842,6853]
replace closeAmount by closeHeld

New cluster:
===
insert-node
---
expression_statement [8505,8646]
to
function_body [6219,9879]
at 3
------------
===
insert-node
---
call_argument [8513,8637]
to
call_expression [8505,8645]
at 1
===
insert-node
---
logical_operator: && [8567,8569]
to
binary_expression [8513,8637]
at 1
===
insert-node
---
identifier: require [8505,8512]
to
call_expression [8505,8645]
at 0
===
insert-node
---
expression_statement [8505,8646]
to
function_body [6219,9879]
at 3
===
insert-node
---
call_expression [8505,8645]
to
expression_statement [8505,8646]
at 0
===
insert-node
---
binary_expression [8513,8637]
to
call_argument [8513,8637]
at 0

New cluster:
===
insert-node
---
expression_statement [8655,8731]
to
function_body [6219,9879]
at 4
------------
===
insert-node
---
member_expression: (ControllerInterface(addressConfig.controller)).closeTradeAllowed [8655,8720]
to
call_expression [8655,8730]
at 0
===
insert-node
---
expression_statement [8655,8731]
to
function_body [6219,9879]
at 4
===
insert-node
---
call_expression [8655,8730]
to
expression_statement [8655,8731]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [8749,8878]
    variable_declaration [8749,8765]
        type_name: uint [8749,8753]
        identifier: closeAmount [8754,8765]
    affectation_operator: = [8766,8767]
    call_expression [8768,8877]
        member_expression: OpenLevV1Lib.shareToAmount [8768,8794]
        call_argument [8795,8804]
            identifier: closeHeld [8795,8804]
        call_argument [8806,8847]
            array_access [8806,8847]
                identifier: totalHelds [8806,8816]
                type_cast_expression [8817,8846]
                    primitive_type: address [8817,8824]
                    call_argument [8825,8845]
                        member_expression: marketVars.sellToken [8825,8845]
        call_argument [8849,8876]
            member_expression: marketVars.reserveSellToken [8849,8876]
to
function_body [6219,9879]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [9435,9563]
    assignment_expression [9435,9562]
        member_expression: closeTradeVars.repayAmount [9435,9461]
        affectation_operator: = [9462,9463]
        call_expression [9464,9562]
            member_expression: Utils.toAmountBeforeTax [9464,9487]
            call_argument [9488,9511]
                member_expression: closeTradeVars.borrowed [9488,9511]
            call_argument [9513,9561]
                array_access [9513,9561]
                    array_access [9513,9558]
                        array_access [9513,9528]
                            identifier: taxes [9513,9518]
                            identifier: marketId [9519,9527]
                        type_cast_expression [9529,9557]
                            primitive_type: address [9529,9536]
                            call_argument [9537,9556]
                                member_expression: marketVars.buyToken [9537,9556]
                    number_literal: 0 [9559,9560]
to
function_body [6219,9879]
at 16

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [11808,11904]
    variable_declaration [11808,11820]
        type_name: uint [11808,11812]
        identifier: repayed [11813,11820]
    affectation_operator: = [11821,11822]
    call_expression [11823,11903]
        member_expression: closeTradeVars.borrowed.sub [11823,11850]
        call_argument [11851,11902]
            call_expression [11851,11902]
                member_expression: marketVars.buyPool.borrowBalanceCurrent [11851,11890]
                call_argument [11891,11901]
                    member_expression: msg.sender [11891,11901]
to
function_body [6219,9879]
at 20

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [11913,12005]
    call_expression [11913,12004]
        identifier: require [11913,11920]
        call_argument [11921,11996]
            call_expression [11921,11996]
                member_expression: repayed >= closeTradeVars.borrowed.mul(closeTradeVars.closeRatio).div [11921,11990]
                call_argument [11991,11995]
                    number_literal: 1e18 [11991,11995]
        call_argument [11998,12003]
            string_literal [11998,12003]
                string: "IRP" [11998,12003]
to
function_body [6219,9879]
at 21

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [12261,12362]
    assignment_expression [12261,12361]
        array_access [12261,12302]
            identifier: totalHelds [12261,12271]
            type_cast_expression [12272,12301]
                primitive_type: address [12272,12279]
                call_argument [12280,12300]
                    member_expression: marketVars.sellToken [12280,12300]
        affectation_operator: = [12303,12304]
        call_expression [12305,12361]
            member_expression: totalHelds[address(marketVars.sellToken)].sub [12305,12350]
            call_argument [12351,12360]
                identifier: closeHeld [12351,12360]
to
function_body [6219,9879]
at 23

New cluster:
UPDATE from minOrMaxAmount to minBuy
------------
===
update-node
---
identifier: minOrMaxAmount [9958,9972]
replace minOrMaxAmount by minBuy

New cluster:
===
insert-node
---
variable_declaration_statement [14057,14187]
to
function_body [10051,14807]
at 4
------------
===
insert-node
---
member_expression: OpenLevV1Lib.shareToAmount [14076,14102]
to
call_expression [14076,14186]
at 0
===
insert-node
---
call_expression [14076,14186]
to
variable_declaration_statement [14057,14187]
at 2
===
insert-node
---
affectation_operator: = [14074,14075]
to
variable_declaration_statement [14057,14187]
at 1
===
insert-node
---
variable_declaration_statement [14057,14187]
to
function_body [10051,14807]
at 4

New cluster:
===
insert-node
---
expression_statement [15124,15247]
to
function_body [10051,14807]
at 16
------------
===
insert-node
---
call_expression [15149,15246]
to
assignment_expression [15124,15246]
at 2
===
insert-node
---
expression_statement [15124,15247]
to
function_body [10051,14807]
at 16
===
insert-node
---
assignment_expression [15124,15246]
to
expression_statement [15124,15247]
at 0
===
insert-node
---
member_expression: Utils.toAmountBeforeTax [15149,15172]
to
call_expression [15149,15246]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [15345,15361]
    variable_declaration [15345,15360]
        type_name: bool [15345,15349]
        identifier: buySuccess [15350,15360]
to
function_body [10051,14807]
at 19

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [15370,15398]
    variable_declaration [15370,15397]
        type_name: bytes [15370,15375]
        memory: memory [15376,15382]
        identifier: sellAmountData [15383,15397]
to
function_body [10051,14807]
at 20

New cluster:
===
insert-node
---
if_statement [15407,16059]
to
function_body [10051,14807]
at 21
------------
===
insert-node
---
call_expression [15468,15525]
to
assignment_expression [15458,15525]
at 2
===
insert-node
---
member_expression: Utils.minOf [15468,15479]
to
call_expression [15468,15525]
at 0
===
insert-node
---
affectation_operator: = [15466,15467]
to
assignment_expression [15458,15525]
at 1
===
insert-node
---
call_argument [15489,15524]
to
call_expression [15468,15525]
at 2
===
insert-node
---
identifier: maxSell [15458,15465]
to
assignment_expression [15458,15525]
at 0
===
insert-node
---
block_statement [15444,16059]
to
if_statement [15407,16059]
at 2
===
insert-node
---
if_statement [15407,16059]
to
function_body [10051,14807]
at 21
===
insert-node
---
assignment_expression [15458,15525]
to
expression_statement [15458,15526]
at 0
===
insert-node
---
expression_statement [15458,15526]
to
block_statement [15444,16059]
at 0

New cluster:
===
insert-node
---
if_statement [16069,17893]
to
function_body [10051,14807]
at 22
------------
===
insert-node
---
yul_identifier [16193,16207]
to
yul_path [16193,16207]
at 0
===
insert-node
---
:=: := [16180,16182]
to
yul_assignment [16175,16215]
at 1
===
insert-node
---
yul_function_call [16189,16214]
to
yul_function_call [16183,16215]
at 1
===
insert-node
---
yul_hex_number: 0x20 [16209,16213]
to
yul_function_call [16189,16214]
at 2
===
insert-node
---
assembly_statement [16144,16233]
to
block_statement [16099,16296]
at 1
===
insert-node
---
block_statement [16099,16296]
to
block_statement [16085,16702]
at 0
===
insert-node
---
expression_statement [16250,16282]
to
block_statement [16099,16296]
at 2
===
insert-node
---
assembly: assembly [16144,16152]
to
assembly_statement [16144,16233]
at 0
===
insert-node
---
if_statement [16069,17893]
to
function_body [10051,14807]
at 22
===
insert-node
---
identifier: temp [16277,16281]
to
assignment_expression [16250,16281]
at 2
===
insert-node
---
yul_assignment [16175,16215]
to
assembly_statement [16144,16233]
at 1
===
insert-node
---
yul_function_call [16183,16215]
to
yul_assignment [16175,16215]
at 2
===
insert-node
---
yul_path [16193,16207]
to
yul_function_call [16189,16214]
at 1
===
insert-node
---
assignment_expression [16250,16281]
to
expression_statement [16250,16282]
at 0
===
insert-node
---
affectation_operator: = [16275,16276]
to
assignment_expression [16250,16281]
at 1
===
insert-node
---
if: if [16069,16071]
to
if_statement [16069,17893]
at 0
===
insert-node
---
block_statement [16085,16702]
to
if_statement [16069,17893]
at 2

New cluster:
===
insert-node
---
expression_statement [18090,18192]
to
function_body [10051,14807]
at 26
------------
===
insert-node
---
assignment_expression [18090,18191]
to
expression_statement [18090,18192]
at 0
===
insert-node
---
call_expression [18134,18191]
to
assignment_expression [18090,18191]
at 2
===
insert-node
---
affectation_operator: = [18132,18133]
to
assignment_expression [18090,18191]
at 1
===
insert-node
---
member_expression: totalHelds[address(marketVars.sellToken)].sub [18134,18179]
to
call_expression [18134,18191]
at 0
===
insert-node
---
expression_statement [18090,18192]
to
function_body [10051,14807]
at 26

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [20442,20462]
    variable_declaration [20442,20461]
        type_name: address [20442,20449]
        identifier: tokenToLong [20450,20461]
to
function_body [20432,21145]
at 0

New cluster:
MOVE from function_body [20432,21145]
------------
===
move-tree
---
variable_declaration_statement [17529,17576]
    variable_declaration [17529,17555]
        type_name: Types.Market [17529,17541]
        memory: memory [17542,17548]
        identifier: market [17549,17555]
    affectation_operator: = [17556,17557]
    array_access [17558,17575]
        identifier: markets [17558,17565]
        identifier: marketId [17566,17574]
to
function_body [20432,21145]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [20527,20583]
    assignment_expression [20527,20582]
        identifier: tokenToLong [20527,20538]
        affectation_operator: = [20539,20540]
        ternary_expression [20541,20582]
            identifier: longToken [20541,20550]
            ?: ? [20551,20552]
            member_expression: market.token1 [20553,20566]
            :: : [20567,20568]
            member_expression: market.token0 [20569,20582]
to
function_body [20432,21145]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [20592,20619]
    assignment_expression [20592,20618]
        identifier: limit [20592,20597]
        affectation_operator: = [20598,20599]
        member_expression: market.marginLimit [20600,20618]
to
function_body [20432,21145]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [20637,20697]
    variable_declaration [20637,20648]
        type_name: uint [20637,20641]
        identifier: amount [20642,20648]
    affectation_operator: = [20649,20650]
    member_expression: activeTrades[owner][marketId][longToken].held [20651,20696]
to
function_body [20432,21145]
at 4

New cluster:
MOVE from function_body [22281,22464]
------------
===
move-tree
---
variable_declaration_statement [21044,21092]
    variable_declaration [21044,21071]
        type_name: Types.Market [21044,21056]
        storage: storage [21057,21064]
        identifier: market [21065,21071]
    affectation_operator: = [21072,21073]
    array_access [21074,21091]
        identifier: markets [21074,21081]
        identifier: marketId [21082,21090]
to
function_body [22281,22464]
at 0

New cluster:
MOVE from function_body [22614,22826]
------------
===
move-tree
---
variable_declaration_statement [22970,23018]
    variable_declaration [22970,22997]
        type_name: Types.Market [22970,22982]
        storage: storage [22983,22990]
        identifier: market [22991,22997]
    affectation_operator: = [22998,22999]
    array_access [23000,23017]
        identifier: markets [23000,23007]
        identifier: marketId [23008,23016]
to
function_body [22614,22826]
at 0

New cluster:
===
insert-node
---
if_statement [22986,23272]
to
function_body [24210,24558]
at 0
------------
===
insert-node
---
if_statement [22986,23272]
to
function_body [24210,24558]
at 0
===
insert-node
---
expression_statement [23178,23262]
to
block_statement [23005,23272]
at 2
===
insert-node
---
assignment_expression [23178,23261]
to
expression_statement [23178,23262]
at 0
===
insert-node
---
if: if [22986,22988]
to
if_statement [22986,23272]
at 0
===
insert-node
---
block_statement [23005,23272]
to
if_statement [22986,23272]
at 2

New cluster:
MOVE from return_type_definition [24683,24697]
------------
===
move-tree
---
parameter [25076,25091]
    type_name: uint [25076,25080]
    identifier: sellAmount [25081,25091]
to
return_type_definition [24683,24697]
at 1

New cluster:
===
insert-node
---
if_statement [23455,23804]
to
function_body [24697,25011]
at 0
------------
===
insert-node
---
if: if [23455,23457]
to
if_statement [23455,23804]
at 0
===
insert-node
---
affectation_operator: = [23660,23661]
to
assignment_expression [23649,23793]
at 1
===
insert-node
---
assignment_expression [23649,23793]
to
expression_statement [23649,23794]
at 0
===
insert-node
---
identifier: sellAmount [23649,23659]
to
assignment_expression [23649,23793]
at 0
===
insert-node
---
block_statement [23473,23804]
to
if_statement [23455,23804]
at 2
===
insert-node
---
expression_statement [23649,23794]
to
block_statement [23473,23804]
at 2
===
insert-node
---
if_statement [23455,23804]
to
function_body [24697,25011]
at 0

New cluster:
MOVE from function_body [24239,24321]
------------
===
move-tree
---
expression_statement [26036,26067]
    call_expression [26036,26066]
        member_expression: token.safeTransfer [26036,26054]
        call_argument [26055,26057]
            identifier: to [26055,26057]
        call_argument [26059,26065]
            identifier: amount [26059,26065]
to
function_body [24239,24321]
at 0

New cluster:
MOVE from function_body [27981,28229]
------------
===
move-tree
---
emit_statement [27348,27577]
    identifier: NewCalculateConfig [27353,27371]
    call_argument [27372,27387]
        identifier: defaultFeesRate [27372,27387]
    call_argument [27389,27403]
        identifier: insuranceRatio [27389,27403]
    call_argument [27405,27423]
        identifier: defaultMarginLimit [27405,27423]
    call_argument [27425,27443]
        identifier: priceDiffientRatio [27425,27443]
    call_argument [27445,27464]
        identifier: updatePriceDiscount [27445,27464]
    call_argument [27478,27490]
        identifier: feesDiscount [27478,27490]
    call_argument [27492,27513]
        identifier: feesDiscountThreshold [27492,27513]
    call_argument [27515,27527]
        identifier: penaltyRatio [27515,27527]
    call_argument [27529,27561]
        identifier: maxLiquidationPriceDiffientRatio [27529,27561]
    call_argument [27563,27575]
        identifier: twapDuration [27563,27575]
to
function_body [27981,28229]
at 1

New cluster:
MOVE from function_body [25373,25536]
------------
===
move-tree
---
emit_statement [28557,28615]
    identifier: NewAddressConfig [28562,28578]
    call_argument [28579,28589]
        identifier: controller [28579,28589]
    call_argument [28591,28613]
        type_cast_expression [28591,28613]
            primitive_type: address [28591,28598]
            call_argument [28599,28612]
                identifier: dexAggregator [28599,28612]
to
function_body [25373,25536]
at 1

New cluster:
===
insert-node
---
expression_statement [25710,25815]
to
function_body [28785,29180]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.setMarketConfigInternal [25710,25746]
to
call_expression [25710,25814]
at 0
===
insert-node
---
call_expression [25710,25814]
to
expression_statement [25710,25815]
at 0
===
insert-node
---
expression_statement [25710,25815]
to
function_body [28785,29180]
at 0
===
insert-node
---
call_argument [25747,25755]
to
call_expression [25710,25814]
at 1

New cluster:
MOVE from function_body [26166,26309]
------------
===
move-tree
---
variable_declaration_statement [28875,28923]
    variable_declaration [28875,28902]
        type_name: Types.Market [28875,28887]
        storage: storage [28888,28895]
        identifier: market [28896,28902]
    affectation_operator: = [28903,28904]
    array_access [28905,28922]
        identifier: markets [28905,28912]
        identifier: marketId [28913,28921]
to
function_body [26166,26309]
at 0

New cluster:
MOVE from function_body [26166,26309]
------------
===
move-tree
---
expression_statement [29640,29689]
    call_expression [29640,29688]
        member_expression: (IERC20(market.token1)).safeTransfer [29640,29676]
        call_argument [29677,29679]
            identifier: to [29677,29679]
        call_argument [29681,29687]
            identifier: amount [29681,29687]
to
function_body [26166,26309]
at 1

New cluster:
MOVE from block_statement [4158,4618]
------------
===
move-tree
---
variable_declaration_statement [30567,30640]
    variable_declaration [30567,30591]
        type_name: Types.Trade [30567,30578]
        memory: memory [30579,30585]
        identifier: trade [30586,30591]
    affectation_operator: = [30592,30593]
    array_access [30594,30639]
        array_access [30594,30628]
            array_access [30594,30618]
                identifier: activeTrades [30594,30606]
                member_expression: msg.sender [30607,30617]
            identifier: marketId [30619,30627]
        identifier: longToken [30629,30638]
to
block_statement [4158,4618]
at 0

New cluster:
MOVE from variable_declaration_statement [4861,4875]
------------
===
move-tree
---
variable_declaration [16041,16054]
    type_name: uint [16041,16045]
    identifier: borrowed [16046,16054]
to
variable_declaration_statement [4861,4875]
at 0

New cluster:
MOVE from if_statement [4884,5520]
------------
===
move-tree
---
binary_expression [4244,4254]
    identifier: borrow [4244,4250]
    comparison_operator: > [4251,4252]
    number_literal: 0 [4253,4254]
to
if_statement [4884,5520]
at 1

New cluster:
MOVE from if_statement [6039,6749]
------------
===
move-tree
---
binary_expression [5575,5600]
    identifier: depositToken [5575,5587]
    comparison_operator: == [5588,5590]
    identifier: longToken [5591,5600]
to
if_statement [6039,6749]
at 1

New cluster:
MOVE from if_statement [6039,6749]
------------
===
move-tree
---
block_statement [5306,5561]
    expression_statement [5320,5429]
        assignment_expression [5320,5428]
            member_expression: tv.newHeld [5320,5330]
            affectation_operator: = [5331,5332]
            call_expression [5333,5428]
                identifier: flashSell [5333,5342]
                call_argument [5343,5365]
                    type_cast_expression [5343,5365]
                        primitive_type: address [5343,5350]
                        call_argument [5351,5364]
                            member_expression: vars.buyToken [5351,5364]
                call_argument [5367,5390]
                    type_cast_expression [5367,5390]
                        primitive_type: address [5367,5374]
                        call_argument [5375,5389]
                            member_expression: vars.sellToken [5375,5389]
                call_argument [5392,5404]
                    member_expression: tv.tradeSize [5392,5404]
                call_argument [5406,5418]
                    identifier: minBuyAmount [5406,5418]
                call_argument [5420,5427]
                    identifier: dexData [5420,5427]
    expression_statement [5442,5551]
        assignment_expression [5442,5550]
            member_expression: tv.token0Price [5442,5456]
            affectation_operator: = [5457,5458]
            call_expression [5459,5550]
                member_expression: longToken ? tv.newHeld.mul(1e18).div(tv.tradeSize) : tv.tradeSize.mul(1e18).div [5459,5538]
                call_argument [5539,5549]
                    member_expression: tv.newHeld [5539,5549]
to
if_statement [6039,6749]
at 4

New cluster:
===
insert-node
---
else: else [12128,12132]
to
if_statement [9107,9250]
at 3
------------
===
insert-node
---
else: else [12128,12132]
to
if_statement [9107,9250]
at 3

New cluster:
===
insert-node
---
block_statement [12132,12251]
to
if_statement [9107,9250]
at 4
------------
===
insert-node
---
block_statement [12132,12251]
to
if_statement [9107,9250]
at 4

New cluster:
MOVE from emit_statement [9602,9873]
------------
===
move-tree
---
call_argument [18033,18041]
    identifier: marketId [18033,18041]
to
emit_statement [9602,9873]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [12799,12808]
    identifier: closeHeld [12799,12808]
to
emit_statement [9602,9873]
at 6

New cluster:
===
insert-node
---
call_expression [13907,14047]
to
expression_statement [10392,10493]
at 0
------------
===
insert-node
---
call_expression [13907,14047]
to
expression_statement [10392,10493]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [14057,14073]
    type_name: uint [14057,14061]
    identifier: closeAmount [14062,14073]
to
variable_declaration_statement [14057,14187]
at 0

New cluster:
MOVE from if_statement [16069,17893]
------------
===
move-tree
---
block_statement [12821,14244]
    expression_statement [12835,12896]
        assignment_expression [12835,12895]
            member_expression: liquidateVars.sellAmount [12835,12859]
            affectation_operator: = [12860,12861]
            member_expression: liquidateVars.remainHeldAfterFees [12862,12895]
    expression_statement [12909,13061]
        assignment_expression [12909,13060]
            member_expression: liquidateVars.receiveAmount [12909,12936]
            affectation_operator: = [12937,12938]
            call_expression [12939,13060]
                identifier: flashSell [12939,12948]
                call_argument [12949,12977]
                    type_cast_expression [12949,12977]
                        primitive_type: address [12949,12956]
                        call_argument [12957,12976]
                            member_expression: marketVars.buyToken [12957,12976]
                call_argument [12979,13008]
                    type_cast_expression [12979,13008]
                        primitive_type: address [12979,12986]
                        call_argument [12987,13007]
                            member_expression: marketVars.sellToken [12987,13007]
                call_argument [13010,13034]
                    member_expression: liquidateVars.sellAmount [13010,13034]
                call_argument [13036,13050]
                    identifier: minOrMaxAmount [13036,13050]
                call_argument [13052,13059]
                    identifier: dexData [13052,13059]
    if_statement [13099,14234]
        if: if [13099,13101]
        binary_expression [13103,13155]
            member_expression: liquidateVars.receiveAmount [13103,13130]
            comparison_operator: > [13131,13132]
            member_expression: liquidateVars.borrowed [13133,13155]
        block_statement [13157,13873]
            expression_statement [13175,13243]
                call_expression [13175,13242]
                    member_expression: marketVars.buyPool.repayBorrowBehalf [13175,13211]
                    call_argument [13212,13217]
                        identifier: owner [13212,13217]
                    call_argument [13219,13241]
                        member_expression: liquidateVars.borrowed [13219,13241]
            if_statement [13301,13859]
                if: if [13301,13303]
                binary_expression [13305,13336]
                    identifier: longToken [13305,13314]
                    comparison_operator: == [13315,13317]
                    member_expression: trade.depositToken [13318,13336]
                block_statement [13338,13638]
                    expression_statement [13360,13527]
                        assignment_expression [13360,13526]
                            member_expression: liquidateVars.depositReturn [13360,13387]
                            affectation_operator: = [13388,13389]
                            call_expression [13390,13526]
                                identifier: flashSell [13390,13399]
                                call_argument [13400,13429]
                                    type_cast_expression [13400,13429]
                                        primitive_type: address [13400,13407]
                                        call_argument [13408,13428]
                                            member_expression: marketVars.sellToken [13408,13428]
                                call_argument [13431,13459]
                                    type_cast_expression [13431,13459]
                                        primitive_type: address [13431,13438]
                                        call_argument [13439,13458]
                                            member_expression: marketVars.buyToken [13439,13458]
                                call_argument [13461,13513]
                                    binary_expression [13461,13513]
                                        member_expression: liquidateVars.receiveAmount [13461,13488]
                                        arithmetic_operator: - [13489,13490]
                                        member_expression: liquidateVars.borrowed [13491,13513]
                                call_argument [13515,13516]
                                    number_literal: 0 [13515,13516]
                                call_argument [13518,13525]
                                    identifier: dexData [13518,13525]
                    expression_statement [13548,13620]
                        call_expression [13548,13619]
                            identifier: doTransferOut [13548,13561]
                            call_argument [13562,13567]
                                identifier: owner [13562,13567]
                            call_argument [13569,13589]
                                member_expression: marketVars.sellToken [13569,13589]
                            call_argument [13591,13618]
                                member_expression: liquidateVars.depositReturn [13591,13618]
                else: else [13639,13643]
                block_statement [13644,13859]
                    expression_statement [13666,13749]
                        assignment_expression [13666,13748]
                            member_expression: liquidateVars.depositReturn [13666,13693]
                            affectation_operator: = [13694,13695]
                            binary_expression [13696,13748]
                                member_expression: liquidateVars.receiveAmount [13696,13723]
                                arithmetic_operator: - [13724,13725]
                                member_expression: liquidateVars.borrowed [13726,13748]
                    expression_statement [13770,13841]
                        call_expression [13770,13840]
                            identifier: doTransferOut [13770,13783]
                            call_argument [13784,13789]
                                identifier: owner [13784,13789]
                            call_argument [13791,13810]
                                member_expression: marketVars.buyToken [13791,13810]
                            call_argument [13812,13839]
                                member_expression: liquidateVars.depositReturn [13812,13839]
        else: else [13874,13878]
        block_statement [13879,14234]
            variable_declaration_statement [13897,14039]
                variable_declaration [13897,13918]
                    type_name: uint [13897,13901]
                    identifier: finalRepayAmount [13902,13918]
                affectation_operator: = [13919,13920]
                call_expression [13921,14038]
                    identifier: reduceInsurance [13921,13936]
                    call_argument [13937,13959]
                        member_expression: liquidateVars.borrowed [13937,13959]
                    call_argument [13961,13988]
                        member_expression: liquidateVars.receiveAmount [13961,13988]
                    call_argument [13990,14012]
                        member_expression: liquidateVars.marketId [13990,14012]
                    call_argument [14014,14037]
                        member_expression: liquidateVars.longToken [14014,14037]
            expression_statement [14056,14135]
                assignment_expression [14056,14134]
                    member_expression: liquidateVars.outstandingAmount [14056,14087]
                    affectation_operator: = [14088,14089]
                    call_expression [14090,14134]
                        member_expression: liquidateVars.borrowed.sub [14090,14116]
                        call_argument [14117,14133]
                            identifier: finalRepayAmount [14117,14133]
            expression_statement [14152,14220]
                call_expression [14152,14219]
                    member_expression: marketVars.buyPool.repayBorrowEndByOpenLev [14152,14194]
                    call_argument [14195,14200]
                        identifier: owner [14195,14200]
                    call_argument [14202,14218]
                        identifier: finalRepayAmount [14202,14218]
to
if_statement [16069,17893]
at 4
===
move-tree
---
if: if [12181,12183]
to
if_statement [15407,16059]
at 0
===
move-tree
---
else: else [12816,12820]
to
if_statement [16069,17893]
at 3

New cluster:
MOVE from if_statement [15407,16059]
------------
===
move-tree
---
binary_expression [11652,11683]
    identifier: longToken [11652,11661]
    comparison_operator: == [11662,11664]
    member_expression: trade.depositToken [11665,11683]
to
if_statement [15407,16059]
at 1

New cluster:
UPDATE from require to buySuccess
------------
===
update-node
---
identifier: require [12407,12414]
replace require by buySuccess

New cluster:
MOVE from if_statement [16069,17893]
------------
===
move-tree
---
identifier: require [12407,12414]
to
if_statement [16069,17893]
at 1

New cluster:
MOVE from call_expression [18255,18346]
------------
===
move-tree
---
call_argument [18308,18321]
    member_expression: market.token1 [18308,18321]
to
call_expression [18255,18346]
at 3

New cluster:
===
insert-node
---
identifier: buyAmount [22966,22975]
to
parameter [24205,24209]
at 1
------------
===
insert-node
---
identifier: buyAmount [22966,22975]
to
parameter [24205,24209]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [22990,23004]
    identifier: sellAmount [22990,23000]
    comparison_operator: > [23001,23002]
    number_literal: 0 [23003,23004]
to
if_statement [22986,23272]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [23459,23472]
    identifier: buyAmount [23459,23468]
    comparison_operator: > [23469,23470]
    number_literal: 0 [23471,23472]
to
if_statement [23455,23804]
at 1

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.setCalculateConfigInternal [2070,2109]
to
call_expression [1301,1373]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.setCalculateConfigInternal [2070,2109]
to
call_expression [1301,1373]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [2156,2171]
    identifier: calculateConfig [2156,2171]
to
call_expression [1301,1373]
at 12

New cluster:
MOVE from call_expression [2926,3055]
------------
===
move-tree
---
call_argument [2439,2444]
    identifier: pool1 [2439,2444]
to
call_expression [2926,3055]
at 2
===
move-tree
---
call_argument [2432,2437]
    identifier: pool0 [2432,2437]
to
call_expression [2926,3055]
at 1
===
move-tree
---
call_argument [2544,2548]
    identifier: dexs [2544,2548]
to
call_expression [25710,25814]
at 4
===
move-tree
---
call_argument [2462,2473]
    identifier: marginLimit [2462,2473]
to
call_expression [2926,3055]
at 3

New cluster:
MOVE from call_expression [2926,3055]
------------
===
move-tree
---
call_argument [6465,6472]
    identifier: dexData [6465,6472]
to
call_expression [2926,3055]
at 4
===
move-tree
---
call_argument [6452,6463]
    identifier: closeAmount [6452,6463]
to
call_expression [10523,10630]
at 3

New cluster:
MOVE from call_expression [2926,3055]
------------
===
move-tree
---
call_argument [6361,6369]
    identifier: marketId [6361,6369]
to
call_expression [2926,3055]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [2995,3002]
    identifier: markets [2995,3002]
to
call_expression [2926,3055]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [3004,3019]
    identifier: calculateConfig [3004,3019]
to
call_expression [2926,3055]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [3021,3034]
    identifier: addressConfig [3021,3034]
to
call_expression [2926,3055]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [3036,3047]
    identifier: supportDexs [3036,3047]
to
call_expression [2926,3055]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [3049,3054]
    identifier: taxes [3049,3054]
to
call_expression [2926,3055]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [4130,4147]
    array_access [4130,4147]
        identifier: markets [4130,4137]
        identifier: marketId [4138,4146]
to
call_expression [3237,3275]
at 4

New cluster:
MOVE from block_statement [6070,6428]
------------
===
move-tree
---
expression_statement [5616,5665]
    assignment_expression [5616,5664]
        member_expression: tv.newHeld [5616,5626]
        affectation_operator: = [5627,5628]
        call_expression [5629,5664]
            member_expression: tv.newHeld.add [5629,5643]
            call_argument [5644,5663]
                member_expression: tv.depositAfterFees [5644,5663]
to
block_statement [6070,6428]
at 1

New cluster:
===
insert-node
---
expression_statement [6446,6495]
to
block_statement [5306,5561]
at 0
------------
===
insert-node
---
member_expression: tv.tradeSize [6446,6458]
to
assignment_expression [6446,6494]
at 0
===
insert-node
---
assignment_expression [6446,6494]
to
expression_statement [6446,6495]
at 0
===
insert-node
---
affectation_operator: = [6459,6460]
to
assignment_expression [6446,6494]
at 1
===
insert-node
---
expression_statement [6446,6495]
to
block_statement [5306,5561]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [7189,7239]
    member_expression: totalHelds[address(vars.buyToken)].add [7189,7227]
    call_argument [7228,7238]
        member_expression: tv.newHeld [7228,7238]
to
assignment_expression [7152,7239]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [8410,8427]
    array_access [8410,8427]
        identifier: markets [8410,8417]
        identifier: marketId [8418,8426]
to
call_expression [6349,6388]
at 3

New cluster:
UPDATE from verifyCloseOrLiquidateBefore to require
------------
===
update-node
---
identifier: verifyCloseOrLiquidateBefore [10392,10420]
replace verifyCloseOrLiquidateBefore by require
===
update-node
---
identifier: verifyCloseBefore [6415,6432]
replace verifyCloseBefore by require

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [8464,8487]
    binary_expression [8464,8487]
        identifier: closeHeld [8464,8473]
        comparison_operator: <= [8474,8476]
        member_expression: trade.held [8477,8487]
to
call_expression [6415,6473]
at 1

New cluster:
MOVE from call_expression [6415,6473]
------------
===
move-tree
---
call_argument [31280,31285]
    string_literal [31280,31285]
        string: "CBH" [31280,31285]
to
call_expression [6415,6473]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [8639,8644]
    string_literal [8639,8644]
        string: "HI0" [8639,8644]
to
call_expression [8505,8645]
at 2

New cluster:
MOVE from call_expression [8655,8730]
------------
===
move-tree
---
call_argument [10588,10596]
    identifier: marketId [10588,10596]
to
call_expression [8655,8730]
at 1

New cluster:
MOVE from assignment_expression [6810,6882]
------------
===
move-tree
---
binary_expression [6842,6867]
    identifier: closeAmount [6842,6853]
    comparison_operator: != [6854,6856]
    member_expression: trade.held [6857,6867]
to
assignment_expression [6810,6882]
at 2

New cluster:
UPDATE from closeTradeVars.repayAmount to closeTradeVars.borrowed
------------
===
update-node
---
member_expression: closeTradeVars.repayAmount [7105,7131]
replace closeTradeVars.repayAmount by closeTradeVars.borrowed

New cluster:
UPDATE from closeTradeVars.depositToken to trade.depositToken
------------
===
update-node
---
member_expression: closeTradeVars.depositToken [9682,9709]
replace closeTradeVars.depositToken by trade.depositToken
===
update-node
---
member_expression: closeTradeVars.depositToken [7765,7792]
replace closeTradeVars.depositToken by trade.depositToken

New cluster:
===
insert-node
---
identifier: longToken [10112,10121]
to
binary_expression [7765,7820]
at 2
------------
===
insert-node
---
identifier: longToken [10112,10121]
to
binary_expression [7765,7820]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [10137,10210]
    assignment_expression [10137,10209]
        identifier: minOrMaxAmount [10137,10151]
        affectation_operator: = [10152,10153]
        call_expression [10154,10209]
            member_expression: Utils.maxOf [10154,10165]
            call_argument [10166,10192]
                member_expression: closeTradeVars.repayAmount [10166,10192]
            call_argument [10194,10208]
                identifier: minOrMaxAmount [10194,10208]
to
block_statement [7822,8460]
at 0

New cluster:
===
insert-node
---
variable_declaration_statement [10869,10929]
to
block_statement [8466,9098]
at 0
------------
===
insert-node
---
variable_declaration_statement [10869,10929]
to
block_statement [8466,9098]
at 0
===
insert-node
---
affectation_operator: = [10882,10883]
to
variable_declaration_statement [10869,10929]
at 1

New cluster:
===
insert-node
---
expression_statement [10942,11024]
to
block_statement [8466,9098]
at 1
------------
===
insert-node
---
affectation_operator: = [10957,10958]
to
assignment_expression [10942,11023]
at 1
===
insert-node
---
member_expression: Utils.minOf [10959,10970]
to
call_expression [10959,11023]
at 0
===
insert-node
---
identifier: minOrMaxAmount [10942,10956]
to
assignment_expression [10942,11023]
at 0
===
insert-node
---
call_expression [10959,11023]
to
assignment_expression [10942,11023]
at 2
===
insert-node
---
assignment_expression [10942,11023]
to
expression_statement [10942,11024]
at 0
===
insert-node
---
expression_statement [10942,11024]
to
block_statement [8466,9098]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [11211,11300]
    assignment_expression [11211,11299]
        member_expression: closeTradeVars.receiveAmount [11211,11239]
        affectation_operator: = [11240,11241]
        call_expression [11242,11299]
            member_expression: marketVars.buyToken.balanceOf(address(this)).sub [11242,11290]
            call_argument [11291,11298]
                identifier: balance [11291,11298]
to
block_statement [8466,9098]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [11603,11697]
    call_expression [11603,11696]
        identifier: require [11603,11610]
        call_argument [11611,11688]
            binary_expression [11611,11688]
                call_expression [11611,11656]
                    member_expression: marketVars.sellToken.balanceOf [11611,11641]
                    call_argument [11642,11655]
                        type_cast_expression [11642,11655]
                            primitive_type: address [11642,11649]
                            call_argument [11650,11654]
                                identifier: this [11650,11654]
                comparison_operator: >= [11657,11659]
                member_expression: closeTradeVars.depositReturn [11660,11688]
        call_argument [11690,11695]
            string_literal [11690,11695]
                string: "ISB" [11690,11695]
to
block_statement [8466,9098]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [12146,12185]
    assignment_expression [12146,12184]
        member_expression: trade.held [12146,12156]
        affectation_operator: = [12157,12158]
        call_expression [12159,12184]
            member_expression: trade.held.sub [12159,12173]
            call_argument [12174,12183]
                identifier: closeHeld [12174,12183]
to
block_statement [12132,12251]
at 0

New cluster:
===
insert-node
---
identifier: longToken [12768,12777]
to
call_argument [9656,9680]
at 0
------------
===
insert-node
---
identifier: longToken [12768,12777]
to
call_argument [9656,9680]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [13714,13731]
    array_access [13714,13731]
        identifier: markets [13714,13721]
        identifier: marketId [13722,13730]
to
call_expression [10175,10214]
at 4

New cluster:
MOVE from call_expression [13907,14047]
------------
===
move-tree
---
identifier: verifyCloseOrLiquidateBefore [10392,10420]
to
call_expression [13907,14047]
at 0
===
move-tree
---
call_argument [10421,10431]
    member_expression: trade.held [10421,10431]
to
call_expression [14076,14186]
at 1

New cluster:
MOVE from call_expression [13907,14047]
------------
===
move-tree
---
call_argument [30500,30548]
    call_expression [30500,30548]
        identifier: isInSupportDex [30500,30514]
        call_argument [30515,30524]
            member_expression: vars.dexs [30515,30524]
        call_argument [30526,30547]
            call_expression [30526,30547]
                member_expression: dexData.toDexDetail [30526,30545]
to
call_expression [13907,14047]
at 1

New cluster:
MOVE from call_expression [13907,14047]
------------
===
move-tree
---
call_argument [31448,31453]
    string_literal [31448,31453]
        string: "HI0" [31448,31453]
to
call_expression [13907,14047]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [14115,14156]
    array_access [14115,14156]
        identifier: totalHelds [14115,14125]
        type_cast_expression [14126,14155]
            primitive_type: address [14126,14133]
            call_argument [14134,14154]
                member_expression: marketVars.sellToken [14134,14154]
to
call_expression [14076,14186]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [14158,14185]
    member_expression: marketVars.reserveSellToken [14158,14185]
to
call_expression [14076,14186]
at 3

New cluster:
MOVE from call_expression [10523,10630]
------------
===
move-tree
---
call_argument [3303,3311]
    identifier: marketId [3303,3311]
to
call_expression [10523,10630]
at 1

New cluster:
UPDATE from liquidateVars.remainHeldAfterFees to liquidateVars.remainAmountAfterFees
------------
===
update-node
---
member_expression: liquidateVars.remainHeldAfterFees [12862,12895]
replace liquidateVars.remainHeldAfterFees by liquidateVars.remainAmountAfterFees
===
update-node
---
member_expression: liquidateVars.isSellAllHeld [12186,12213]
replace liquidateVars.isSellAllHeld by liquidateVars.remainAmountAfterFees
===
update-node
---
member_expression: liquidateVars.remainHeldAfterFees [11471,11504]
replace liquidateVars.remainHeldAfterFees by liquidateVars.remainAmountAfterFees

New cluster:
UPDATE from liquidateVars.isSellAllHeld to liquidateVars.borrowed
------------
===
update-node
---
member_expression: liquidateVars.isSellAllHeld [11925,11952]
replace liquidateVars.isSellAllHeld by liquidateVars.borrowed
===
update-node
---
member_expression: marketVars.buyToken [11976,11995]
replace marketVars.buyToken by liquidateVars.borrowed

New cluster:
MOVE from assignment_expression [15124,15246]
------------
===
move-tree
---
member_expression: liquidateVars.isSellAllHeld [11925,11952]
to
assignment_expression [15124,15246]
at 0
===
move-tree
---
affectation_operator: = [11953,11954]
to
assignment_expression [15124,15246]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [15539,15619]
    call_expression [15539,15618]
        member_expression: marketVars.sellToken.safeApprove [15539,15571]
        call_argument [15572,15608]
            type_cast_expression [15572,15608]
                primitive_type: address [15572,15579]
                call_argument [15580,15607]
                    member_expression: addressConfig.dexAggregator [15580,15607]
        call_argument [15610,15617]
            identifier: maxSell [15610,15617]
to
block_statement [15444,16059]
at 1

New cluster:
MOVE from block_statement [16085,16702]
------------
===
move-tree
---
expression_statement [12733,12805]
    call_expression [12733,12804]
        identifier: doTransferOut [12733,12746]
        call_argument [12747,12752]
            identifier: owner [12747,12752]
        call_argument [12754,12774]
            member_expression: marketVars.sellToken [12754,12774]
        call_argument [12776,12803]
            member_expression: liquidateVars.depositReturn [12776,12803]
to
block_statement [16085,16702]
at 4
===
move-tree
---
expression_statement [12229,12394]
    assignment_expression [12229,12393]
        member_expression: liquidateVars.sellAmount [12229,12253]
        affectation_operator: = [12254,12255]
        call_expression [12256,12393]
            identifier: flashBuy [12256,12264]
            call_argument [12265,12293]
                type_cast_expression [12265,12293]
                    primitive_type: address [12265,12272]
                    call_argument [12273,12292]
                        member_expression: marketVars.buyToken [12273,12292]
            call_argument [12295,12324]
                type_cast_expression [12295,12324]
                    primitive_type: address [12295,12302]
                    call_argument [12303,12323]
                        member_expression: marketVars.sellToken [12303,12323]
            call_argument [12326,12348]
                member_expression: liquidateVars.borrowed [12326,12348]
            call_argument [12350,12383]
                member_expression: liquidateVars.remainHeldAfterFees [12350,12383]
            call_argument [12385,12392]
                identifier: dexData [12385,12392]
to
block_statement [15444,16059]
at 2
===
move-tree
---
expression_statement [12626,12720]
    assignment_expression [12626,12719]
        member_expression: liquidateVars.depositReturn [12626,12653]
        affectation_operator: = [12654,12655]
        call_expression [12656,12719]
            member_expression: liquidateVars.remainHeldAfterFees.sub [12656,12693]
            call_argument [12694,12718]
                member_expression: liquidateVars.sellAmount [12694,12718]
to
block_statement [16085,16702]
at 3
===
move-tree
---
expression_statement [12479,12532]
    assignment_expression [12479,12531]
        member_expression: liquidateVars.receiveAmount [12479,12506]
        affectation_operator: = [12507,12508]
        member_expression: liquidateVars.borrowed [12509,12531]
to
block_statement [16085,16702]
at 1
===
move-tree
---
expression_statement [12545,12613]
    call_expression [12545,12612]
        member_expression: marketVars.buyPool.repayBorrowBehalf [12545,12581]
        call_argument [12582,12587]
            identifier: owner [12582,12587]
        call_argument [12589,12611]
            member_expression: liquidateVars.borrowed [12589,12611]
to
block_statement [16085,16702]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
array_access [18090,18131]
    identifier: totalHelds [18090,18100]
    type_cast_expression [18101,18130]
        primitive_type: address [18101,18108]
        call_argument [18109,18129]
            member_expression: marketVars.sellToken [18109,18129]
to
assignment_expression [18090,18191]
at 0

New cluster:
===
insert-node
---
identifier: marketId [18226,18234]
to
call_argument [14465,14487]
at 0
------------
===
insert-node
---
identifier: marketId [18226,18234]
to
call_argument [14465,14487]
at 0

New cluster:
UPDATE from liquidateVars.depositDecrease to trade.deposited
------------
===
update-node
---
member_expression: liquidateVars.depositDecrease [14589,14618]
replace liquidateVars.depositDecrease by trade.deposited

New cluster:
MOVE from ternary_expression [18689,19578]
------------
===
move-tree
---
binary_expression [22014,22031]
    identifier: open [22014,22018]
    comparison_operator: == [22019,22021]
    identifier: longToken [22022,22031]
to
ternary_expression [18689,19578]
at 0

New cluster:
MOVE from assignment_expression [20877,21138]
------------
===
move-tree
---
tuple_expression [15366,15389]
    identifier: current [15367,15374]
    identifier: cAvg [15376,15380]
    identifier: hAvg [15382,15386]
to
assignment_expression [20877,21138]
at 0

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.shouldUpdatePriceInternal [21450,21488]
to
call_expression [18255,18346]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.shouldUpdatePriceInternal [21450,21488]
to
call_expression [18255,18346]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [21489,21516]
    member_expression: addressConfig.dexAggregator [21489,21516]
to
call_expression [18255,18346]
at 1

New cluster:
MOVE from call_expression [18255,18346]
------------
===
move-tree
---
call_argument [18836,18864]
    member_expression: calculateConfig.twapDuration [18836,18864]
to
call_expression [18255,18346]
at 2

New cluster:
MOVE from call_expression [22355,22457]
------------
===
move-tree
---
call_argument [15073,15082]
    identifier: longToken [15073,15082]
to
call_expression [22355,22457]
at 3
===
move-tree
---
call_argument [15063,15071]
    identifier: marketId [15063,15071]
to
call_expression [21815,21909]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [21869,21882]
    identifier: addressConfig [21869,21882]
to
call_expression [21815,21909]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [21884,21899]
    identifier: calculateConfig [21884,21899]
to
call_expression [21815,21909]
at 4

New cluster:
MOVE from call_expression [21815,21909]
------------
===
move-tree
---
call_argument [2687,2694]
    identifier: dexData [2687,2694]
to
call_expression [21815,21909]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22384,22398]
    identifier: totalRepayment [22384,22398]
to
call_expression [22355,22457]
at 1

New cluster:
MOVE from call_expression [22355,22457]
------------
===
move-tree
---
call_argument [21134,21143]
    identifier: remaining [21134,21143]
to
call_expression [22355,22457]
at 2

New cluster:
MOVE from call_expression [22355,22457]
------------
===
move-tree
---
call_argument [25417,25422]
    identifier: token [25417,25422]
to
call_expression [22355,22457]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22429,22436]
    identifier: reserve [22429,22436]
to
call_expression [22355,22457]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22438,22444]
    identifier: market [22438,22444]
to
call_expression [22355,22457]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22446,22456]
    identifier: totalHelds [22446,22456]
to
call_expression [22355,22457]
at 7

New cluster:
MOVE from call_expression [22688,22819]
------------
===
move-tree
---
call_argument [23312,23318]
    identifier: trader [23312,23318]
to
call_expression [22688,22819]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22725,22734]
    identifier: tradeSize [22725,22734]
to
call_expression [22688,22819]
at 2

New cluster:
MOVE from call_expression [22688,22819]
------------
===
move-tree
---
call_argument [25881,25886]
    identifier: token [25881,25886]
to
call_expression [22688,22819]
at 3

New cluster:
MOVE from call_expression [22688,22819]
------------
===
move-tree
---
call_argument [23774,23792]
    member_expression: addressConfig.xOLE [23774,23792]
to
call_expression [22688,22819]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22763,22772]
    identifier: totalHeld [22763,22772]
to
call_expression [22688,22819]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22774,22781]
    identifier: reserve [22774,22781]
to
call_expression [22688,22819]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22783,22789]
    identifier: market [22783,22789]
to
call_expression [22688,22819]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22791,22801]
    identifier: totalHelds [22791,22801]
to
call_expression [22688,22819]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [22803,22818]
    identifier: calculateConfig [22803,22818]
to
call_expression [22688,22819]
at 9

New cluster:
MOVE from block_statement [23005,23272]
------------
===
move-tree
---
variable_declaration_statement [24220,24287]
    variable_declaration [24220,24256]
        type_name: DexAggregatorInterface [24220,24242]
        identifier: dexAggregator [24243,24256]
    affectation_operator: = [24257,24258]
    member_expression: addressConfig.dexAggregator [24259,24286]
to
block_statement [23005,23272]
at 0
===
move-tree
---
expression_statement [24362,24428]
    call_expression [24362,24427]
        member_expression: IERC20(sellToken).safeApprove [24362,24391]
        call_argument [24392,24414]
            type_cast_expression [24392,24414]
                primitive_type: address [24392,24399]
                call_argument [24400,24413]
                    identifier: dexAggregator [24400,24413]
        call_argument [24416,24426]
            identifier: sellAmount [24416,24426]
to
block_statement [23005,23272]
at 1

New cluster:
MOVE from block_statement [23473,23804]
------------
===
move-tree
---
expression_statement [24849,24918]
    call_expression [24849,24917]
        member_expression: IERC20(sellToken).safeApprove [24849,24878]
        call_argument [24879,24901]
            type_cast_expression [24879,24901]
                primitive_type: address [24879,24886]
                call_argument [24887,24900]
                    identifier: dexAggregator [24887,24900]
        call_argument [24903,24916]
            identifier: maxSellAmount [24903,24916]
to
block_statement [23473,23804]
at 1
===
move-tree
---
variable_declaration_statement [24707,24774]
    variable_declaration [24707,24743]
        type_name: DexAggregatorInterface [24707,24729]
        identifier: dexAggregator [24730,24743]
    affectation_operator: = [24744,24745]
    member_expression: addressConfig.dexAggregator [24746,24773]
to
block_statement [23473,23804]
at 0

New cluster:
MOVE from call_expression [24026,24090]
------------
===
move-tree
---
call_argument [25565,25569]
    identifier: from [25565,25569]
to
call_expression [24026,24090]
at 1
===
move-tree
---
call_argument [25586,25592]
    identifier: amount [25586,25592]
to
call_expression [24026,24090]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [24056,24061]
    identifier: token [24056,24061]
to
call_expression [24026,24090]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [24063,24081]
    member_expression: addressConfig.wETH [24063,24081]
to
call_expression [24026,24090]
at 3

New cluster:
UPDATE from token.safeTransfer to OpenLevV1Lib.doTransferOut
------------
===
update-node
---
member_expression: token.safeTransfer [26036,26054]
replace token.safeTransfer by OpenLevV1Lib.doTransferOut

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [24280,24285]
    identifier: token [24280,24285]
to
call_expression [26036,26066]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [24287,24305]
    member_expression: addressConfig.wETH [24287,24305]
to
call_expression [26036,26066]
at 3

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.setCalculateConfigInternal [24759,24798]
to
call_expression [27991,28222]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.setCalculateConfigInternal [24759,24798]
to
call_expression [27991,28222]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [25004,25019]
    identifier: calculateConfig [25004,25019]
to
call_expression [27991,28222]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [25421,25431]
    identifier: controller [25421,25431]
to
call_expression [25383,25462]
at 1

New cluster:
MOVE from call_expression [25383,25462]
------------
===
move-tree
---
call_argument [24334,24347]
    identifier: dexAggregator [24334,24347]
to
call_expression [25383,25462]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [25448,25461]
    identifier: addressConfig [25448,25461]
to
call_expression [25383,25462]
at 3

New cluster:
MOVE from call_argument [25747,25755]
------------
===
move-tree
---
identifier: require [28795,28802]
to
call_argument [25747,25755]
at 0
===
move-tree
---
call_argument [28803,28857]
    binary_expression [28803,28857]
        member_expression: feesRate < 10000 && marginLimit > 0 && dexs.length [28803,28853]
        comparison_operator: > [28854,28855]
        number_literal: 0 [28856,28857]
to
call_expression [25710,25814]
at 2

New cluster:
MOVE from call_expression [25710,25814]
------------
===
move-tree
---
call_argument [19741,19759]
    identifier: priceDiffientRatio [19741,19759]
to
call_expression [25710,25814]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [25796,25813]
    array_access [25796,25813]
        identifier: markets [25796,25803]
        identifier: marketId [25804,25812]
to
call_expression [25710,25814]
at 5

New cluster:
UPDATE from (IERC20(market.token1)).safeTransfer to OpenLevV1Lib.moveInsurance
------------
===
update-node
---
member_expression: (IERC20(market.token1)).safeTransfer [29640,29676]
replace (IERC20(market.token1)).safeTransfer by OpenLevV1Lib.moveInsurance

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [26260,26266]
    identifier: market [26260,26266]
to
call_expression [29640,29688]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [26268,26277]
    identifier: poolIndex [26268,26277]
to
call_expression [29640,29688]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [26291,26301]
    identifier: totalHelds [26291,26301]
to
call_expression [29640,29688]
at 5

New cluster:
UPDATE from trade to t
------------
===
update-node
---
identifier: trade [30586,30591]
replace trade by t

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.verifyTrade [4254,4278]
to
call_expression [3285,3363]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.verifyTrade [4254,4278]
to
call_expression [3285,3363]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [4336,4349]
    identifier: addressConfig [4336,4349]
to
call_expression [3285,3363]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [4351,4352]
    identifier: t [4351,4352]
to
call_expression [3285,3363]
at 9

New cluster:
MOVE from array_access [4643,4677]
------------
===
move-tree
---
type_cast_expression [30099,30121]
    primitive_type: address [30099,30106]
    call_argument [30107,30120]
        member_expression: vars.buyToken [30107,30120]
to
array_access [4643,4677]
at 1
===
move-tree
---
binary_expression [30071,30096]
    identifier: depositToken [30071,30083]
    comparison_operator: == [30084,30086]
    identifier: longToken [30087,30096]
to
ternary_expression [4705,4763]
at 0

New cluster:
UPDATE from tv.depositErc20 to vars.buyToken
------------
===
update-node
---
member_expression: tv.depositErc20 [3786,3801]
replace tv.depositErc20 by vars.buyToken

New cluster:
MOVE from ternary_expression [4705,4763]
------------
===
move-tree
---
member_expression: vars.sellToken [3804,3818]
to
ternary_expression [4705,4763]
at 4
===
move-tree
---
member_expression: tv.depositErc20 [3786,3801]
to
ternary_expression [4705,4763]
at 2

New cluster:
MOVE from block_statement [4914,5146]
------------
===
move-tree
---
expression_statement [5189,5236]
    call_expression [5189,5235]
        member_expression: vars.sellPool.borrowBehalf [5189,5215]
        call_argument [5216,5226]
            member_expression: msg.sender [5216,5226]
        call_argument [5228,5234]
            identifier: borrow [5228,5234]
to
block_statement [4914,5146]
at 1

New cluster:
MOVE from block_statement [4914,5146]
------------
===
move-tree
---
expression_statement [4069,4116]
    assignment_expression [4069,4115]
        member_expression: tv.tradeSize [4069,4081]
        affectation_operator: = [4082,4083]
        call_expression [4084,4115]
            member_expression: tv.depositAfterFees.add [4084,4107]
            call_argument [4108,4114]
                identifier: borrow [4108,4114]
to
block_statement [4914,5146]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [5164,5189]
    identifier: depositToken [5164,5176]
    comparison_operator: == [5177,5179]
    identifier: longToken [5180,5189]
to
if_statement [4240,4516]
at 1

New cluster:
===
insert-node
---
else: else [5450,5454]
to
if_statement [4240,4516]
at 3
------------
===
insert-node
---
else: else [5450,5454]
to
if_statement [4240,4516]
at 3

New cluster:
===
insert-node
---
block_statement [5454,5510]
to
if_statement [4240,4516]
at 4
------------
===
insert-node
---
block_statement [5454,5510]
to
if_statement [4240,4516]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [5797,5833]
    array_access [5797,5833]
        identifier: totalHelds [5797,5807]
        type_cast_expression [5808,5832]
            primitive_type: address [5808,5815]
            call_argument [5816,5831]
                member_expression: tv.depositErc20 [5816,5831]
to
call_expression [4656,4749]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [5848,5920]
    ternary_expression [5848,5920]
        binary_expression [5848,5873]
            identifier: depositToken [5848,5860]
            comparison_operator: == [5861,5863]
            identifier: longToken [5864,5873]
        ?: ? [5874,5875]
        member_expression: vars.reserveBuyToken [5876,5896]
        :: : [5897,5898]
        member_expression: vars.reserveSellToken [5899,5920]
to
call_expression [4656,4749]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [6088,6100]
    identifier: borrowed [6088,6096]
    comparison_operator: > [6097,6098]
    number_literal: 0 [6099,6100]
to
if_statement [6084,6356]
at 1

New cluster:
MOVE from array_access [7152,7186]
------------
===
move-tree
---
type_cast_expression [20224,20246]
    primitive_type: address [20224,20231]
    call_argument [20232,20245]
        member_expression: vars.buyToken [20232,20245]
to
array_access [7152,7186]
at 1

New cluster:
MOVE from call_expression [6914,7011]
------------
===
move-tree
---
call_argument [10187,10195]
    identifier: marketId [10187,10195]
to
call_expression [6914,7011]
at 4

New cluster:
===
insert-node
---
call_argument [9045,9086]
to
call_expression [6914,7011]
at 5
------------
===
insert-node
---
array_access [9045,9086]
to
call_argument [9045,9086]
at 0
===
insert-node
---
type_cast_expression [9056,9085]
to
array_access [9045,9086]
at 1
===
insert-node
---
identifier: totalHelds [9045,9055]
to
array_access [9045,9086]
at 0
===
insert-node
---
call_argument [9045,9086]
to
call_expression [6914,7011]
at 5
===
insert-node
---
primitive_type: address [9056,9063]
to
type_cast_expression [9056,9085]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [9088,9115]
    member_expression: marketVars.reserveSellToken [9088,9115]
to
call_expression [6914,7011]
at 6

New cluster:
UPDATE from closeAmount.mul(1e18).div to closeHeld.mul(1e18).div
------------
===
update-node
---
member_expression: closeAmount.mul(1e18).div [6763,6788]
replace closeAmount.mul(1e18).div by closeHeld.mul(1e18).div

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [10869,10881]
    type_name: uint [10869,10873]
    identifier: balance [10874,10881]
to
variable_declaration_statement [10869,10929]
at 0

New cluster:
MOVE from variable_declaration_statement [10869,10929]
------------
===
move-tree
---
call_expression [25542,25593]
    member_expression: token.safeTransferFrom [25542,25564]
    call_argument [25565,25569]
        identifier: from [25565,25569]
    call_argument [25571,25584]
        type_cast_expression [25571,25584]
            primitive_type: address [25571,25578]
            call_argument [25579,25583]
                identifier: this [25579,25583]
    call_argument [25586,25592]
        identifier: amount [25586,25592]
to
variable_declaration_statement [10869,10929]
at 2

New cluster:
===
insert-node
---
binary_expression [13915,14039]
to
call_argument [30500,30548]
at 0
------------
===
insert-node
---
comparison_operator: != [13953,13955]
to
binary_expression [13915,13968]
at 1
===
insert-node
---
binary_expression [13915,13968]
to
binary_expression [13915,14039]
at 0
===
insert-node
---
member_expression: trade.held != 0 && trade.lastBlockNum [13915,13952]
to
binary_expression [13915,13968]
at 0
===
insert-node
---
logical_operator: && [13969,13971]
to
binary_expression [13915,14039]
at 1
===
insert-node
---
binary_expression [13915,14039]
to
call_argument [30500,30548]
at 0

New cluster:
MOVE from call_expression [10947,11037]
------------
===
move-tree
---
call_argument [7464,7475]
    identifier: closeAmount [7464,7475]
to
call_expression [10947,11037]
at 2

New cluster:
MOVE from call_expression [10947,11037]
------------
===
move-tree
---
call_argument [3249,3257]
    identifier: marketId [3249,3257]
to
call_expression [10947,11037]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [14570,14611]
    array_access [14570,14611]
        identifier: totalHelds [14570,14580]
        type_cast_expression [14581,14610]
            primitive_type: address [14581,14588]
            call_argument [14589,14609]
                member_expression: marketVars.sellToken [14589,14609]
to
call_expression [10947,11037]
at 6

New cluster:
UPDATE from trade.held.mul(calculateConfig.penaltyRatio).div to closeAmount.mul(calculateConfig.penaltyRatio).div
------------
===
update-node
---
member_expression: trade.held.mul(calculateConfig.penaltyRatio).div [11271,11319]
replace trade.held.mul(calculateConfig.penaltyRatio).div by closeAmount.mul(calculateConfig.penaltyRatio).div

New cluster:
UPDATE from trade.held.sub(liquidateVars.fees).sub to closeAmount.sub(liquidateVars.fees).sub
------------
===
update-node
---
member_expression: trade.held.sub(liquidateVars.fees).sub [11507,11545]
replace trade.held.sub(liquidateVars.fees).sub by closeAmount.sub(liquidateVars.fees).sub

New cluster:
MOVE from call_expression [15149,15246]
------------
===
move-tree
---
call_argument [11976,11995]
    member_expression: marketVars.buyToken [11976,11995]
to
call_expression [15149,15246]
at 1

New cluster:
MOVE from call_expression [15149,15246]
------------
===
move-tree
---
call_argument [11998,12027]
    type_cast_expression [11998,12027]
        primitive_type: address [11998,12005]
        call_argument [12006,12026]
            member_expression: marketVars.sellToken [12006,12026]
to
call_expression [15149,15246]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [16117,16127]
    variable_declaration [16117,16126]
        type_name: uint [16117,16121]
        identifier: temp [16122,16126]
to
block_statement [16099,16296]
at 0

New cluster:
MOVE from call_expression [18134,18191]
------------
===
move-tree
---
call_argument [10971,10981]
    member_expression: trade.held [10971,10981]
to
call_expression [18134,18191]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18747,18759]
    member_expression: market.pool1 [18747,18759]
to
call_expression [18717,19142]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18773,18785]
    member_expression: market.pool0 [18773,18785]
to
call_expression [18717,19142]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18869,18915]
    call_expression [18869,18915]
        member_expression: IERC20(market.token1).balanceOf [18869,18900]
        call_argument [18901,18914]
            type_cast_expression [18901,18914]
                primitive_type: address [18901,18908]
                call_argument [18909,18913]
                    identifier: this [18909,18913]
to
call_expression [18717,19142]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18929,18975]
    call_expression [18929,18975]
        member_expression: IERC20(market.token0).balanceOf [18929,18960]
        call_argument [18961,18974]
            type_cast_expression [18961,18974]
                primitive_type: address [18961,18968]
                call_argument [18969,18973]
                    identifier: this [18969,18973]
to
call_expression [18717,19142]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [18989,19010]
    member_expression: market.pool1Insurance [18989,19010]
to
call_expression [18717,19142]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19024,19045]
    member_expression: market.pool0Insurance [19024,19045]
to
call_expression [18717,19142]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19059,19077]
    member_expression: market.marginLimit [19059,19077]
to
call_expression [18717,19142]
at 9

New cluster:
MOVE from call_expression [18717,19142]
------------
===
move-tree
---
call_argument [17631,17656]
    member_expression: market.priceDiffientRatio [17631,17656]
to
call_expression [18717,19142]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19130,19141]
    member_expression: market.dexs [19130,19141]
to
call_expression [18717,19142]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19183,19195]
    member_expression: market.pool0 [19183,19195]
to
call_expression [19153,19578]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19209,19221]
    member_expression: market.pool1 [19209,19221]
to
call_expression [19153,19578]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19305,19351]
    call_expression [19305,19351]
        member_expression: IERC20(market.token0).balanceOf [19305,19336]
        call_argument [19337,19350]
            type_cast_expression [19337,19350]
                primitive_type: address [19337,19344]
                call_argument [19345,19349]
                    identifier: this [19345,19349]
to
call_expression [19153,19578]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19365,19411]
    call_expression [19365,19411]
        member_expression: IERC20(market.token1).balanceOf [19365,19396]
        call_argument [19397,19410]
            type_cast_expression [19397,19410]
                primitive_type: address [19397,19404]
                call_argument [19405,19409]
                    identifier: this [19405,19409]
to
call_expression [19153,19578]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19425,19446]
    member_expression: market.pool0Insurance [19425,19446]
to
call_expression [19153,19578]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19460,19481]
    member_expression: market.pool1Insurance [19460,19481]
to
call_expression [19153,19578]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19495,19513]
    member_expression: market.marginLimit [19495,19513]
to
call_expression [19153,19578]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19527,19552]
    member_expression: market.priceDiffientRatio [19527,19552]
to
call_expression [19153,19578]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [19566,19577]
    member_expression: market.dexs [19566,19577]
to
call_expression [19153,19578]
at 11

New cluster:
MOVE from call_expression [20715,20866]
------------
===
move-tree
---
call_argument [29623,29629]
    identifier: amount [29623,29629]
to
call_expression [20715,20866]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [20775,20798]
    array_access [20775,20798]
        identifier: totalHelds [20775,20785]
        identifier: tokenToLong [20786,20797]
to
call_expression [20715,20866]
at 2

New cluster:
MOVE from call_expression [20911,21138]
------------
===
move-tree
---
call_argument [20081,20086]
    identifier: owner [20081,20086]
to
call_expression [20911,21138]
at 1
===
move-tree
---
call_argument [20319,20326]
    identifier: dexData [20319,20326]
to
call_expression [20911,21138]
at 6

New cluster:
MOVE from call_expression [20911,21138]
------------
===
move-tree
---
call_argument [29464,29470]
    identifier: amount [29464,29470]
to
call_expression [20911,21138]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [20988,20999]
    identifier: tokenToLong [20988,20999]
to
call_expression [20911,21138]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [21013,21054]
    ternary_expression [21013,21054]
        identifier: longToken [21013,21022]
        ?: ? [21023,21024]
        member_expression: market.token0 [21025,21038]
        :: : [21039,21040]
        member_expression: market.token1 [21041,21054]
to
call_expression [20911,21138]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [21068,21107]
    ternary_expression [21068,21107]
        identifier: longToken [21068,21077]
        ?: ? [21078,21079]
        member_expression: market.pool0 [21080,21092]
        :: : [21093,21094]
        member_expression: market.pool1 [21095,21107]
to
call_expression [20911,21138]
at 5

New cluster:
MOVE from call_argument [21850,21867]
------------
===
move-tree
---
array_access [2399,2416]
    identifier: markets [2399,2406]
    identifier: marketId [2407,2415]
to
call_argument [21850,21867]
at 0

New cluster:
UPDATE from require to feesRate
------------
===
update-node
---
identifier: require [28795,28802]
replace require by feesRate

New cluster:
===
insert-node
---
identifier: marginLimit [25757,25768]
to
call_argument [28803,28857]
at 0
------------
===
insert-node
---
identifier: marginLimit [25757,25768]
to
call_argument [28803,28857]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [4932,4944]
    type_name: uint [4932,4936]
    identifier: balance [4937,4944]
to
variable_declaration_statement [4932,4987]
at 0

New cluster:
MOVE from variable_declaration_statement [4932,4987]
------------
===
move-tree
---
affectation_operator: = [3912,3913]
to
variable_declaration_statement [4932,4987]
at 1
===
move-tree
---
call_expression [3914,3999]
    identifier: feesAndInsurance [3914,3930]
    call_argument [3931,3941]
        member_expression: msg.sender [3931,3941]
    call_argument [3943,3962]
        call_expression [3943,3962]
            member_expression: deposit.add [3943,3954]
            call_argument [3955,3961]
                identifier: borrow [3955,3961]
    call_argument [3964,3988]
        type_cast_expression [3964,3988]
            primitive_type: address [3964,3971]
            call_argument [3972,3987]
                member_expression: tv.depositErc20 [3972,3987]
    call_argument [3990,3998]
        identifier: marketId [3990,3998]
to
variable_declaration_statement [4932,4987]
at 2

New cluster:
MOVE from block_statement [6101,6356]
------------
===
move-tree
---
expression_statement [15366,15534]
    assignment_expression [15366,15533]
        tuple_expression [15366,15389]
            identifier: current [15367,15374]
            identifier: cAvg [15376,15380]
            identifier: hAvg [15382,15386]
        affectation_operator: = [15390,15391]
        call_expression [15392,15533]
            identifier: marginRatioInternal [15392,15411]
            call_argument [15412,15427]
                member_expression: ratioVars.owner [15412,15427]
            call_argument [15429,15443]
                member_expression: ratioVars.held [15429,15443]
            call_argument [15445,15468]
                type_cast_expression [15445,15468]
                    primitive_type: address [15445,15452]
                    call_argument [15453,15467]
                        member_expression: vars.sellToken [15453,15467]
            call_argument [15470,15492]
                type_cast_expression [15470,15492]
                    primitive_type: address [15470,15477]
                    call_argument [15478,15491]
                        member_expression: vars.buyToken [15478,15491]
            call_argument [15494,15506]
                member_expression: vars.buyPool [15494,15506]
            call_argument [15508,15513]
                boolean_literal: false [15508,15513]
            call_argument [15515,15532]
                member_expression: ratioVars.dexData [15515,15532]
to
block_statement [6101,6356]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [6241,6342]
    assignment_expression [6241,6341]
        member_expression: tv.token0Price [6241,6255]
        affectation_operator: = [6256,6257]
        call_expression [6258,6341]
            member_expression: longToken ? tv.newHeld.mul(1e18).div(borrowed) : borrowed.mul(1e18).div [6258,6329]
            call_argument [6330,6340]
                member_expression: tv.newHeld [6330,6340]
to
block_statement [6101,6356]
at 1

New cluster:
MOVE from assignment_expression [6446,6494]
------------
===
move-tree
---
call_expression [16911,16976]
    member_expression: marketValue.sub(borrowed).mul(ratioVars.multiplier).div [16911,16966]
    call_argument [16967,16975]
        identifier: borrowed [16967,16975]
to
assignment_expression [6446,6494]
at 2

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.isPositionHealthy [7258,7288]
to
call_expression [5826,5888]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.isPositionHealthy [7258,7288]
to
call_expression [5826,5888]
at 0

New cluster:
===
insert-node
---
call_argument [7356,7470]
to
call_expression [5826,5888]
at 4
------------
===
insert-node
---
call_expression [7356,7470]
to
call_argument [7356,7470]
at 0
===
insert-node
---
call_argument [7356,7470]
to
call_expression [5826,5888]
at 4
===
insert-node
---
call_argument [7395,7429]
to
call_expression [7356,7470]
at 2
===
insert-node
---
identifier: totalHelds [7395,7405]
to
array_access [7395,7429]
at 0
===
insert-node
---
member_expression: OpenLevV1Lib.shareToAmount [7356,7382]
to
call_expression [7356,7470]
at 0
===
insert-node
---
array_access [7395,7429]
to
call_argument [7395,7429]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [8513,8566]
    member_expression: trade.held != 0 && trade.lastBlockNum [8513,8550]
    comparison_operator: != [8551,8553]
    member_expression: block.number [8554,8566]
to
binary_expression [8513,8637]
at 0

New cluster:
MOVE from binary_expression [8513,8637]
------------
===
move-tree
---
call_expression [10392,10492]
    identifier: verifyCloseOrLiquidateBefore [10392,10420]
    call_argument [10421,10431]
        member_expression: trade.held [10421,10431]
    call_argument [10433,10451]
        member_expression: trade.lastBlockNum [10433,10451]
    call_argument [10453,10468]
        member_expression: marketVars.dexs [10453,10468]
    call_argument [10470,10491]
        call_expression [10470,10491]
            member_expression: dexData.toDexDetail [10470,10489]
to
binary_expression [8513,8637]
at 2

New cluster:
UPDATE from token.safeTransferFrom to marketVars.buyToken.balanceOf
------------
===
update-node
---
member_expression: token.safeTransferFrom [25542,25564]
replace token.safeTransferFrom by marketVars.buyToken.balanceOf

New cluster:
===
insert-node
---
identifier: longToken [12107,12116]
to
array_access [9157,9239]
at 1
------------
===
insert-node
---
identifier: longToken [12107,12116]
to
array_access [9157,9239]
at 1

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [12606,12638]
to
call_expression [9493,9582]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [12606,12638]
to
call_expression [9493,9582]
at 0

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [13784,13816]
to
call_expression [10266,10355]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [13784,13816]
to
call_expression [10266,10355]
at 0

New cluster:
MOVE from binary_expression [13915,14039]
------------
===
move-tree
---
call_expression [30500,30548]
    identifier: isInSupportDex [30500,30514]
    call_argument [30515,30524]
        member_expression: vars.dexs [30515,30524]
    call_argument [30526,30547]
        call_expression [30526,30547]
            member_expression: dexData.toDexDetail [30526,30545]
to
binary_expression [13915,14039]
at 2

New cluster:
UPDATE from liquidateVars.marketId to marketVars.reserveSellToken
------------
===
update-node
---
member_expression: liquidateVars.marketId [11014,11036]
replace liquidateVars.marketId by marketVars.reserveSellToken

New cluster:
===
insert-node
---
array_access [15197,15245]
to
call_argument [11998,12027]
at 0
------------
===
insert-node
---
array_access [15197,15245]
to
call_argument [11998,12027]
at 0
===
insert-node
---
array_access [15197,15242]
to
array_access [15197,15245]
at 0
===
insert-node
---
number_literal: 0 [15243,15244]
to
array_access [15197,15245]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
tuple_expression [15632,15660]
    identifier: buySuccess [15633,15643]
    identifier: sellAmountData [15645,15659]
to
assignment_expression [12229,12393]
at 0

New cluster:
===
insert-node
---
call_expression [15663,16048]
to
assignment_expression [12229,12393]
at 3
------------
===
insert-node
---
member_expression: address(addressConfig.dexAggregator).call [15663,15704]
to
call_expression [15663,16048]
at 0
===
insert-node
---
call_argument [15722,16034]
to
call_expression [15663,16048]
at 1
===
insert-node
---
call_expression [15663,16048]
to
assignment_expression [12229,12393]
at 3

New cluster:
===
insert-node
---
call_expression [16340,16416]
to
assignment_expression [12479,12531]
at 2
------------
===
insert-node
---
call_expression [16340,16416]
to
assignment_expression [12479,12531]
at 2
===
insert-node
---
member_expression: marketVars.buyToken.balanceOf(address(this)).sub [16340,16388]
to
call_expression [16340,16416]
at 0
===
insert-node
---
call_argument [16389,16415]
to
call_expression [16340,16416]
at 1

New cluster:
UPDATE from > to >=
------------
===
update-node
---
comparison_operator: > [13131,13132]
replace > by >=

New cluster:
===
insert-node
---
expression_statement [17089,17137]
to
block_statement [13157,13873]
at 0
------------
===
insert-node
---
call_expression [17089,17136]
to
expression_statement [17089,17137]
at 0
===
insert-node
---
expression_statement [17089,17137]
to
block_statement [13157,13873]
at 0
===
insert-node
---
call_argument [17098,17129]
to
call_expression [17089,17136]
at 1
===
insert-node
---
identifier: require [17089,17096]
to
call_expression [17089,17136]
at 0

New cluster:
MOVE from block_statement [13157,13873]
------------
===
move-tree
---
expression_statement [13666,13749]
    assignment_expression [13666,13748]
        member_expression: liquidateVars.depositReturn [13666,13693]
        affectation_operator: = [13694,13695]
        binary_expression [13696,13748]
            member_expression: liquidateVars.receiveAmount [13696,13723]
            arithmetic_operator: - [13724,13725]
            member_expression: liquidateVars.borrowed [13726,13748]
to
block_statement [13157,13873]
at 2
===
move-tree
---
expression_statement [13770,13841]
    call_expression [13770,13840]
        identifier: doTransferOut [13770,13783]
        call_argument [13784,13789]
            identifier: owner [13784,13789]
        call_argument [13791,13810]
            member_expression: marketVars.buyToken [13791,13810]
        call_argument [13812,13839]
            member_expression: liquidateVars.depositReturn [13812,13839]
to
block_statement [13157,13873]
at 3

New cluster:
===
insert-node
---
expression_statement [17451,17660]
to
block_statement [13879,14234]
at 0
------------
===
insert-node
---
expression_statement [17451,17660]
to
block_statement [13879,14234]
at 0
===
insert-node
---
assignment_expression [17451,17659]
to
expression_statement [17451,17660]
at 0
===
insert-node
---
member_expression: liquidateVars.finalRepayAmount [17451,17481]
to
assignment_expression [17451,17659]
at 0

New cluster:
MOVE from call_argument [18799,18820]
------------
===
move-tree
---
call_expression [22104,22125]
    identifier: IERC20 [22104,22110]
    call_argument [22111,22124]
        member_expression: market.token1 [22111,22124]
to
call_argument [18799,18820]
at 0

New cluster:
MOVE from call_argument [18834,18855]
------------
===
move-tree
---
call_expression [22426,22447]
    identifier: IERC20 [22426,22432]
    call_argument [22433,22446]
        member_expression: market.token0 [22433,22446]
to
call_argument [18834,18855]
at 0

New cluster:
MOVE from call_argument [19235,19256]
------------
===
move-tree
---
call_expression [22257,22278]
    identifier: IERC20 [22257,22263]
    call_argument [22264,22277]
        member_expression: market.token0 [22264,22277]
to
call_argument [19235,19256]
at 0

New cluster:
MOVE from call_argument [19270,19291]
------------
===
move-tree
---
call_expression [22579,22600]
    identifier: IERC20 [22579,22585]
    call_argument [22586,22599]
        member_expression: market.token1 [22586,22599]
to
call_argument [19270,19291]
at 0

New cluster:
MOVE from call_argument [20812,20856]
------------
===
move-tree
---
call_expression [25697,25727]
    member_expression: token.balanceOf [25697,25712]
    call_argument [25713,25726]
        type_cast_expression [25713,25726]
            primitive_type: address [25713,25720]
            call_argument [25721,25725]
                identifier: this [25721,25725]
to
call_argument [20812,20856]
at 0

New cluster:
MOVE from assignment_expression [23178,23261]
------------
===
move-tree
---
identifier: buyAmount [24442,24451]
to
assignment_expression [23178,23261]
at 0

New cluster:
MOVE from assignment_expression [23178,23261]
------------
===
move-tree
---
affectation_operator: = [24452,24453]
to
assignment_expression [23178,23261]
at 1
===
move-tree
---
call_expression [24454,24525]
    member_expression: dexAggregator.sell [24454,24472]
    call_argument [24473,24481]
        identifier: buyToken [24473,24481]
    call_argument [24483,24492]
        identifier: sellToken [24483,24492]
    call_argument [24494,24504]
        identifier: sellAmount [24494,24504]
    call_argument [24506,24518]
        identifier: minBuyAmount [24506,24518]
    call_argument [24520,24524]
        identifier: data [24520,24524]
to
assignment_expression [23178,23261]
at 2

New cluster:
MOVE from assignment_expression [23649,23793]
------------
===
move-tree
---
call_expression [24934,25004]
    member_expression: dexAggregator.buy [24934,24951]
    call_argument [24952,24960]
        identifier: buyToken [24952,24960]
    call_argument [24962,24971]
        identifier: sellToken [24962,24971]
    call_argument [24973,24982]
        identifier: buyAmount [24973,24982]
    call_argument [24984,24997]
        identifier: maxSellAmount [24984,24997]
    call_argument [24999,25003]
        identifier: data [24999,25003]
to
assignment_expression [23649,23793]
at 2

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.isSupportDex [26884,26909]
to
call_expression [32088,32117]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.isSupportDex [26884,26909]
to
call_expression [32088,32117]
at 0

New cluster:
===
insert-node
---
call_argument [26910,26921]
to
call_expression [32088,32117]
at 1
------------
===
insert-node
---
call_argument [26910,26921]
to
call_expression [32088,32117]
at 1

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [4503,4535]
to
call_expression [3501,3578]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.updatePriceInternal [4503,4535]
to
call_expression [3501,3578]
at 0

New cluster:
UPDATE from msg.sender to vars.sellToken.balanceOf
------------
===
update-node
---
member_expression: msg.sender [3931,3941]
replace msg.sender by vars.sellToken.balanceOf

New cluster:
MOVE from call_expression [3914,3999]
------------
===
move-tree
---
member_expression: msg.sender [3931,3941]
to
call_expression [3914,3999]
at 0

New cluster:
MOVE from call_expression [3914,3999]
------------
===
move-tree
---
call_argument [25381,25394]
    type_cast_expression [25381,25394]
        primitive_type: address [25381,25388]
        call_argument [25389,25393]
            identifier: this [25389,25393]
to
call_expression [3914,3999]
at 1

New cluster:
===
insert-node
---
identifier: borrowed [5068,5076]
to
assignment_expression [4069,4115]
at 0
------------
===
insert-node
---
identifier: borrowed [5068,5076]
to
assignment_expression [4069,4115]
at 0

New cluster:
UPDATE from marketValue.sub(borrowed).mul(ratioVars.multiplier).div to tv.depositAfterFees.add
------------
===
update-node
---
member_expression: marketValue.sub(borrowed).mul(ratioVars.multiplier).div [16911,16966]
replace marketValue.sub(borrowed).mul(ratioVars.multiplier).div by tv.depositAfterFees.add

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.isInSupportDex [8570,8597]
to
call_expression [10392,10492]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.isInSupportDex [8570,8597]
to
call_expression [10392,10492]
at 0

New cluster:
MOVE from call_expression [10959,11023]
------------
===
move-tree
---
call_argument [8606,8641]
    member_expression: closeTradeVars.closeAmountAfterFees [8606,8641]
to
call_expression [10959,11023]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11008,11022]
    identifier: minOrMaxAmount [11008,11022]
to
call_expression [10959,11023]
at 2

New cluster:
MOVE from call_expression [8508,8651]
------------
===
move-tree
---
call_argument [3990,3998]
    identifier: marketId [3990,3998]
to
call_expression [8508,8651]
at 1

New cluster:
MOVE from call_expression [8508,8651]
------------
===
move-tree
---
call_argument [13036,13050]
    identifier: minOrMaxAmount [13036,13050]
to
call_expression [8508,8651]
at 5

New cluster:
===
insert-node
---
identifier: marketId [12097,12105]
to
array_access [9157,9213]
at 1
------------
===
insert-node
---
identifier: marketId [12097,12105]
to
array_access [9157,9213]
at 1

New cluster:
UPDATE from trade.lastBlockNum to block.number
------------
===
update-node
---
member_expression: trade.lastBlockNum [10433,10451]
replace trade.lastBlockNum by block.number

New cluster:
MOVE from binary_expression [13915,13968]
------------
===
move-tree
---
member_expression: trade.lastBlockNum [10433,10451]
to
binary_expression [13915,13968]
at 2

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.isInSupportDex [13972,13999]
to
call_expression [30500,30548]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.isInSupportDex [13972,13999]
to
call_expression [30500,30548]
at 0

New cluster:
===
insert-node
---
member_expression: OpenLevV1Lib.isPositionHealthy [14324,14354]
to
call_expression [10649,10713]
at 0
------------
===
insert-node
---
member_expression: OpenLevV1Lib.isPositionHealthy [14324,14354]
to
call_expression [10649,10713]
at 0

New cluster:
MOVE from call_expression [10649,10713]
------------
===
move-tree
---
call_argument [9711,9722]
    identifier: closeAmount [9711,9722]
to
call_expression [10649,10713]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [15480,15487]
    identifier: maxSell [15480,15487]
to
call_expression [15468,15525]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_path [16175,16179]
    yul_identifier [16175,16179]
        identifier: temp [16175,16179]
to
yul_assignment [16175,16215]
at 0

New cluster:
MOVE from assignment_expression [16250,16281]
------------
===
move-tree
---
member_expression: liquidateVars.sellAmount [12433,12457]
to
assignment_expression [16250,16281]
at 0
===
move-tree
---
identifier: minOrMaxAmount [12415,12429]
to
yul_identifier [16193,16207]
at 0

New cluster:
UPDATE from liquidateVars.remainHeldAfterFees.sub to liquidateVars.remainAmountAfterFees.sub
------------
===
update-node
---
member_expression: liquidateVars.remainHeldAfterFees.sub [12656,12693]
replace liquidateVars.remainHeldAfterFees.sub by liquidateVars.remainAmountAfterFees.sub

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [16925,16931]
    identifier: minBuy [16925,16931]
to
call_expression [12939,13060]
at 4

New cluster:
UPDATE from token.balanceOf to IERC20(tokenToLong).balanceOf
------------
===
update-node
---
member_expression: token.balanceOf [25697,25712]
replace token.balanceOf by IERC20(tokenToLong).balanceOf

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [23701,23729]
    array_access [23701,23729]
        array_access [23701,23726]
            array_access [23701,23716]
                identifier: taxes [23701,23706]
                identifier: marketId [23707,23715]
            identifier: buyToken [23717,23725]
        number_literal: 2 [23727,23728]
to
call_expression [24934,25004]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [23731,23760]
    array_access [23731,23760]
        array_access [23731,23757]
            array_access [23731,23746]
                identifier: taxes [23731,23736]
                identifier: marketId [23737,23745]
            identifier: sellToken [23747,23756]
        number_literal: 1 [23758,23759]
to
call_expression [24934,25004]
at 4

New cluster:
UPDATE from isSupportDex to supportDexs
------------
===
update-node
---
identifier: isSupportDex [32088,32100]
replace isSupportDex by supportDexs

New cluster:
MOVE from call_argument [26910,26921]
------------
===
move-tree
---
identifier: isSupportDex [32088,32100]
to
call_argument [26910,26921]
at 0

New cluster:
UPDATE from tv.depositAfterFees.add to vars.sellToken.balanceOf(address(this)).sub
------------
===
update-node
---
member_expression: tv.depositAfterFees.add [4084,4107]
replace tv.depositAfterFees.add by vars.sellToken.balanceOf(address(this)).sub

New cluster:
UPDATE from tv.depositErc20 to tv.borrowValue
------------
===
update-node
---
member_expression: tv.depositErc20 [4529,4544]
replace tv.depositErc20 by tv.borrowValue

New cluster:
===
insert-node
---
identifier: borrow [5489,5495]
to
assignment_expression [4529,4560]
at 2
------------
===
insert-node
---
identifier: borrow [5489,5495]
to
assignment_expression [4529,4560]
at 2

New cluster:
===
insert-node
---
member_expression: tv.newHeld [6119,6129]
to
assignment_expression [15366,15533]
at 0
------------
===
insert-node
---
member_expression: tv.newHeld [6119,6129]
to
assignment_expression [15366,15533]
at 0

New cluster:
MOVE from call_expression [15392,15533]
------------
===
move-tree
---
call_argument [15445,15468]
    type_cast_expression [15445,15468]
        primitive_type: address [15445,15452]
        call_argument [15453,15467]
            member_expression: vars.sellToken [15453,15467]
to
call_expression [15392,15533]
at 4

New cluster:
MOVE from call_expression [7356,7470]
------------
===
move-tree
---
call_argument [5862,5872]
    member_expression: trade.held [5862,5872]
to
call_expression [7356,7470]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [7431,7469]
    call_expression [7431,7469]
        member_expression: vars.buyToken.balanceOf [7431,7454]
        call_argument [7455,7468]
            type_cast_expression [7455,7468]
                primitive_type: address [7455,7462]
                call_argument [7463,7467]
                    identifier: this [7463,7467]
to
call_expression [7356,7470]
at 3

New cluster:
MOVE from type_cast_expression [9056,9085]
------------
===
move-tree
---
call_argument [6987,7010]
    member_expression: closeTradeVars.marketId [6987,7010]
to
type_cast_expression [9056,9085]
at 1

New cluster:
UPDATE from 'LON' to "ISR"
------------
===
update-node
---
string: 'LON' [8081,8086]
replace 'LON' by "ISR"
===
update-node
---
string: 'BLM' [8718,8723]
replace 'BLM' by "ISR"

New cluster:
===
insert-node
---
member_expression: closeTradeVars.receiveAmount [11321,11349]
to
binary_expression [8673,8716]
at 0
------------
===
insert-node
---
member_expression: closeTradeVars.receiveAmount [11321,11349]
to
binary_expression [8673,8716]
at 0

New cluster:
UPDATE from closeTradeVars.sellAmount to closeTradeVars.repayAmount
------------
===
update-node
---
member_expression: closeTradeVars.sellAmount [8691,8716]
replace closeTradeVars.sellAmount by closeTradeVars.repayAmount

New cluster:
UPDATE from vars.dexs to marketVars.dexs
------------
===
update-node
---
member_expression: vars.dexs [30515,30524]
replace vars.dexs by marketVars.dexs

New cluster:
Unknown cluster type
------------
===
insert-tree
---
array_access [15197,15212]
    identifier: taxes [15197,15202]
    identifier: marketId [15203,15211]
to
array_access [15197,15242]
at 0

New cluster:
MOVE from array_access [15197,15242]
------------
===
move-tree
---
type_cast_expression [11998,12027]
    primitive_type: address [11998,12005]
    call_argument [12006,12026]
        member_expression: marketVars.sellToken [12006,12026]
to
array_access [15197,15242]
at 1

New cluster:
MOVE from call_argument [15489,15524]
------------
===
move-tree
---
member_expression: liquidateVars.isSellAllHeld [12186,12213]
to
call_argument [15489,15524]
at 0

New cluster:
MOVE from call_argument [15722,16034]
------------
===
move-tree
---
call_expression [12256,12393]
    identifier: flashBuy [12256,12264]
    call_argument [12265,12293]
        type_cast_expression [12265,12293]
            primitive_type: address [12265,12272]
            call_argument [12273,12292]
                member_expression: marketVars.buyToken [12273,12292]
    call_argument [12295,12324]
        type_cast_expression [12295,12324]
            primitive_type: address [12295,12302]
            call_argument [12303,12323]
                member_expression: marketVars.sellToken [12303,12323]
    call_argument [12326,12348]
        member_expression: liquidateVars.borrowed [12326,12348]
    call_argument [12350,12383]
        member_expression: liquidateVars.remainHeldAfterFees [12350,12383]
    call_argument [12385,12392]
        identifier: dexData [12385,12392]
to
call_argument [15722,16034]
at 0

New cluster:
MOVE from call_expression [12256,12393]
------------
===
move-tree
---
call_argument [12326,12348]
    member_expression: liquidateVars.borrowed [12326,12348]
to
call_expression [12256,12393]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_evm_builtin [16183,16188]
    mload: mload [16183,16188]
to
yul_function_call [16183,16215]
at 0

New cluster:
UPDATE from liquidateVars.borrowed to marketVars.reserveBuyToken
------------
===
update-node
---
member_expression: liquidateVars.borrowed [12509,12531]
replace liquidateVars.borrowed by marketVars.reserveBuyToken

New cluster:
MOVE from call_argument [16389,16415]
------------
===
move-tree
---
member_expression: liquidateVars.borrowed [12509,12531]
to
call_argument [16389,16415]
at 0

New cluster:
MOVE from call_expression [17089,17136]
------------
===
move-tree
---
call_argument [13408,13428]
    member_expression: marketVars.sellToken [13408,13428]
to
call_expression [17089,17136]
at 2

New cluster:
===
insert-node
---
call_expression [17269,17324]
to
assignment_expression [13666,13748]
at 2
------------
===
insert-node
---
call_expression [17269,17324]
to
assignment_expression [13666,13748]
at 2
===
insert-node
---
call_argument [17301,17323]
to
call_expression [17269,17324]
at 1

New cluster:
MOVE from assignment_expression [17451,17659]
------------
===
move-tree
---
call_expression [13921,14038]
    identifier: reduceInsurance [13921,13936]
    call_argument [13937,13959]
        member_expression: liquidateVars.borrowed [13937,13959]
    call_argument [13961,13988]
        member_expression: liquidateVars.receiveAmount [13961,13988]
    call_argument [13990,14012]
        member_expression: liquidateVars.marketId [13990,14012]
    call_argument [14014,14037]
        member_expression: liquidateVars.longToken [14014,14037]
to
assignment_expression [17451,17659]
at 2
===
move-tree
---
affectation_operator: = [13919,13920]
to
assignment_expression [17451,17659]
at 1

New cluster:
UPDATE from borrow to balance
------------
===
update-node
---
identifier: borrow [4108,4114]
replace borrow by balance

New cluster:
UPDATE from marginRatioInternal to flashSell
------------
===
update-node
---
identifier: marginRatioInternal [15392,15411]
replace marginRatioInternal by flashSell

New cluster:
MOVE from call_expression [15392,15533]
------------
===
move-tree
---
call_argument [17163,17171]
    identifier: borrowed [17163,17171]
to
call_expression [15392,15533]
at 5

New cluster:
MOVE from call_expression [15392,15533]
------------
===
move-tree
---
call_argument [13518,13525]
    identifier: dexData [13518,13525]
to
call_expression [15392,15533]
at 8
===
move-tree
---
call_argument [13431,13459]
    type_cast_expression [13431,13459]
        primitive_type: address [13431,13438]
        call_argument [13439,13458]
            member_expression: marketVars.buyToken [13439,13458]
to
call_expression [13921,14038]
at 5

New cluster:
UPDATE from closeTradeVars.marketId to marketVars.sellToken
------------
===
update-node
---
member_expression: closeTradeVars.marketId [6987,7010]
replace closeTradeVars.marketId by marketVars.sellToken

New cluster:
===
insert-node
---
member_expression: abi.encodeWithSelector [15722,15744]
to
call_expression [12256,12393]
at 0
------------
===
insert-node
---
member_expression: abi.encodeWithSelector [15722,15744]
to
call_expression [12256,12393]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [15745,15785]
    member_expression: addressConfig.dexAggregator.buy.selector [15745,15785]
to
call_expression [12256,12393]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [15848,15910]
    array_access [15848,15910]
        array_access [15848,15907]
            array_access [15848,15877]
                identifier: taxes [15848,15853]
                member_expression: liquidateVars.marketId [15854,15876]
            type_cast_expression [15878,15906]
                primitive_type: address [15878,15885]
                call_argument [15886,15905]
                    member_expression: marketVars.buyToken [15886,15905]
        number_literal: 2 [15908,15909]
to
call_expression [12256,12393]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [16017,16024]
    identifier: maxSell [16017,16024]
to
call_expression [12256,12393]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_evm_builtin [16189,16192]
    add: add [16189,16192]
to
yul_function_call [16189,16214]
at 0

New cluster:
MOVE from call_argument [17098,17129]
------------
===
move-tree
---
binary_expression [13305,13336]
    identifier: longToken [13305,13314]
    comparison_operator: == [13315,13317]
    member_expression: trade.depositToken [13318,13336]
to
call_argument [17098,17129]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
string_literal [17131,17135]
    string: "PH" [17131,17135]
to
call_argument [13408,13428]
at 0

New cluster:
UPDATE from liquidateVars.receiveAmount to liquidateVars.receiveAmount.sub
------------
===
update-node
---
member_expression: liquidateVars.receiveAmount [13696,13723]
replace liquidateVars.receiveAmount by liquidateVars.receiveAmount.sub

New cluster:
MOVE from call_argument [17301,17323]
------------
===
move-tree
---
member_expression: liquidateVars.borrowed [13726,13748]
to
call_argument [17301,17323]
at 0
===
move-tree
---
member_expression: liquidateVars.receiveAmount [13696,13723]
to
call_expression [17269,17324]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [17632,17658]
    member_expression: marketVars.reserveBuyToken [17632,17658]
to
call_expression [13921,14038]
at 6

New cluster:
===
insert-node
---
member_expression: liquidateVars.finalRepayAmount [17837,17867]
to
call_argument [14202,14218]
at 0
------------
===
insert-node
---
member_expression: liquidateVars.finalRepayAmount [17837,17867]
to
call_argument [14202,14218]
at 0

New cluster:
===
insert-node
---
identifier: minBuyAmount [6201,6213]
to
call_argument [15508,15513]
at 0
------------
===
insert-node
---
identifier: minBuyAmount [6201,6213]
to
call_argument [15508,15513]
at 0

New cluster:
MOVE from array_access [7395,7429]
------------
===
move-tree
---
type_cast_expression [20127,20149]
    primitive_type: address [20127,20134]
    call_argument [20135,20148]
        member_expression: vars.buyToken [20135,20148]
to
array_access [7395,7429]
at 1

New cluster:
UPDATE from marketVars.sellToken to marketVars.buyToken
------------
===
update-node
---
member_expression: marketVars.sellToken [12006,12026]
replace marketVars.sellToken by marketVars.buyToken

New cluster:
===
insert-node
---
array_access [15928,15991]
to
call_argument [12350,12383]
at 0
------------
===
insert-node
---
identifier: taxes [15928,15933]
to
array_access [15928,15957]
at 0
===
insert-node
---
array_access [15928,15988]
to
array_access [15928,15991]
at 0
===
insert-node
---
number_literal: 1 [15989,15990]
to
array_access [15928,15991]
at 1
===
insert-node
---
array_access [15928,15957]
to
array_access [15928,15988]
at 0
===
insert-node
---
array_access [15928,15991]
to
call_argument [12350,12383]
at 0

New cluster:
UPDATE from == to !=
------------
===
update-node
---
comparison_operator: == [13315,13317]
replace == by !=

New cluster:
===
insert-node
---
member_expression: liquidateVars.finalRepayAmount [17738,17768]
to
call_argument [14117,14133]
at 0
------------
===
insert-node
---
member_expression: liquidateVars.finalRepayAmount [17738,17768]
to
call_argument [14117,14133]
at 0

New cluster:
UPDATE from minOrMaxAmount to sellAmountData
------------
===
update-node
---
identifier: minOrMaxAmount [12415,12429]
replace minOrMaxAmount by sellAmountData

New cluster:
Unknown cluster type
------------
===
insert-tree
---
type_cast_expression [15958,15987]
    primitive_type: address [15958,15965]
    call_argument [15966,15986]
        member_expression: marketVars.sellToken [15966,15986]
to
array_access [15928,15988]
at 1

New cluster:
UPDATE from liquidateVars.remainHeldAfterFees to liquidateVars.marketId
------------
===
update-node
---
member_expression: liquidateVars.remainHeldAfterFees [12350,12383]
replace liquidateVars.remainHeldAfterFees by liquidateVars.marketId

New cluster:
MOVE from array_access [15928,15957]
------------
===
move-tree
---
member_expression: liquidateVars.remainHeldAfterFees [12350,12383]
to
array_access [15928,15957]
at 1

New cluster:
Unknown cluster type
------------
===
delete-tree
---
import_directive [96,151]
    import: import [96,102]
    string: "@openzeppelin/contracts/token/ERC20/ERC20.sol" [103,150]

New cluster:
===
delete-node
---
identifier: OpenLevV1 [502,511]
===
------------
===
delete-node
---
identifier: OpenLevV1 [502,511]
===

New cluster:
===
delete-node
---
is: is [512,514]
===
------------
===
delete-node
---
is: is [512,514]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
using_directive [630,657]
    using: using [630,635]
    type_alias [636,645]
        identifier: SafeERC20 [636,645]
    for: for [646,649]
    type_name: IERC20 [650,656]

New cluster:
===
delete-node
---
identifier: setCalculateConfigInternal [1301,1327]
===
------------
===
delete-node
---
identifier: setCalculateConfigInternal [1301,1327]
===

New cluster:
===
delete-node
---
function_definition [1386,2870]
===
------------
===
delete-node
---
if_statement [2609,2839]
===
===
delete-node
---
affectation_operator: = [2417,2418]
===
===
delete-node
---
block_statement [2637,2706]
===
===
delete-node
---
function: function [1386,1394]
===
===
delete-node
---
function_definition [1386,2870]
===
===
delete-node
---
call_expression [2651,2695]
===
===
delete-node
---
call_expression [2419,2549]
===
===
delete-node
---
visibility: external [1529,1537]
===
===
delete-node
---
assignment_expression [2399,2549]
===
===
delete-node
---
identifier: updatePriceInternal [2651,2670]
===
===
delete-node
---
if: if [2609,2611]
===
===
delete-node
---
member_expression: Types.Market [2419,2431]
===
===
delete-node
---
expression_statement [2399,2550]
===
===
delete-node
---
identifier: addMarket [1395,1404]
===
===
delete-node
---
function_body [1564,2870]
===
===
delete-node
---
else: else [2707,2711]
===
===
delete-node
---
expression_statement [2651,2696]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [1574,1602]
    variable_declaration [1574,1583]
        type_name: uint8 [1574,1579]
        identifier: dex [1580,1583]
    affectation_operator: = [1584,1585]
    call_expression [1586,1601]
        member_expression: dexData.toDex [1586,1599]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [1611,1659]
    variable_declaration [1611,1640]
        type_name: CalculateConfig [1611,1626]
        memory: memory [1627,1633]
        identifier: config [1634,1640]
    affectation_operator: = [1641,1642]
    identifier: calculateConfig [1643,1658]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [1668,1702]
    call_expression [1668,1701]
        identifier: require [1668,1675]
        call_argument [1676,1693]
            call_expression [1676,1693]
                identifier: isSupportDex [1676,1688]
                call_argument [1689,1692]
                    identifier: dex [1689,1692]
        call_argument [1695,1700]
            string_literal [1695,1700]
                string: "UDX" [1695,1700]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [1711,1775]
    call_expression [1711,1774]
        identifier: require [1711,1718]
        call_argument [1719,1766]
            binary_expression [1719,1766]
                member_expression: msg.sender [1719,1729]
                comparison_operator: == [1730,1732]
                type_cast_expression [1733,1766]
                    primitive_type: address [1733,1740]
                    call_argument [1741,1765]
                        member_expression: addressConfig.controller [1741,1765]
        call_argument [1768,1773]
            string_literal [1768,1773]
                string: "NCN" [1768,1773]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [1784,1865]
    call_expression [1784,1864]
        identifier: require [1784,1791]
        call_argument [1792,1856]
            binary_expression [1792,1856]
                binary_expression [1792,1832]
                    identifier: marginLimit [1792,1803]
                    comparison_operator: >= [1804,1806]
                    member_expression: config.defaultMarginLimit [1807,1832]
                logical_operator: && [1833,1835]
                binary_expression [1836,1856]
                    identifier: marginLimit [1836,1847]
                    comparison_operator: < [1848,1849]
                    number_literal: 100000 [1850,1856]
        call_argument [1858,1863]
            string_literal [1858,1863]
                string: "MLI" [1858,1863]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [1874,1910]
    variable_declaration [1874,1888]
        type_name: address [1874,1881]
        identifier: token0 [1882,1888]
    affectation_operator: = [1889,1890]
    call_expression [1891,1909]
        member_expression: pool0.underlying [1891,1907]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [1919,1955]
    variable_declaration [1919,1933]
        type_name: address [1919,1926]
        identifier: token1 [1927,1933]
    affectation_operator: = [1934,1935]
    call_expression [1936,1954]
        member_expression: pool1.underlying [1936,1952]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2008,2054]
    call_expression [2008,2053]
        member_expression: IERC20(token0).safeApprove [2008,2034]
        call_argument [2035,2049]
            type_cast_expression [2035,2049]
                primitive_type: address [2035,2042]
                call_argument [2043,2048]
                    identifier: pool0 [2043,2048]
        call_argument [2051,2052]
            number_literal: 0 [2051,2052]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2063,2120]
    call_expression [2063,2119]
        member_expression: IERC20(token0).safeApprove [2063,2089]
        call_argument [2090,2104]
            type_cast_expression [2090,2104]
                primitive_type: address [2090,2097]
                call_argument [2098,2103]
                    identifier: pool0 [2098,2103]
        call_argument [2106,2118]
            type_cast_expression [2106,2118]
                primitive_type: uint256 [2106,2113]
                call_argument [2114,2117]
                    unary_expression [2114,2117]
                        arithmetic_operator: - [2114,2115]
                        number_literal: 1 [2116,2117]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2129,2175]
    call_expression [2129,2174]
        member_expression: IERC20(token1).safeApprove [2129,2155]
        call_argument [2156,2170]
            type_cast_expression [2156,2170]
                primitive_type: address [2156,2163]
                call_argument [2164,2169]
                    identifier: pool1 [2164,2169]
        call_argument [2172,2173]
            number_literal: 0 [2172,2173]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2184,2241]
    call_expression [2184,2240]
        member_expression: IERC20(token1).safeApprove [2184,2210]
        call_argument [2211,2225]
            type_cast_expression [2211,2225]
                primitive_type: address [2211,2218]
                call_argument [2219,2224]
                    identifier: pool1 [2219,2224]
        call_argument [2227,2239]
            type_cast_expression [2227,2239]
                primitive_type: uint256 [2227,2234]
                call_argument [2235,2238]
                    unary_expression [2235,2238]
                        arithmetic_operator: - [2235,2236]
                        number_literal: 1 [2237,2238]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [2310,2349]
    variable_declaration [2310,2330]
        type_name: uint32[] [2310,2318]
        memory: memory [2319,2325]
        identifier: dexs [2326,2330]
    affectation_operator: = [2331,2332]
    call_expression [2333,2348]
        new_expression [2333,2345]
            new: new [2333,2336]
            type_name: uint32[] [2337,2345]
        call_argument [2346,2347]
            number_literal: 1 [2346,2347]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [2358,2390]
    assignment_expression [2358,2389]
        array_access [2358,2365]
            identifier: dexs [2358,2362]
            number_literal: 0 [2363,2364]
        affectation_operator: = [2366,2367]
        call_expression [2368,2389]
            member_expression: dexData.toDexDetail [2368,2387]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2446,2452]
    identifier: token0 [2446,2452]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2454,2460]
    identifier: token1 [2454,2460]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2475,2497]
    member_expression: config.defaultFeesRate [2475,2497]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2499,2524]
    member_expression: config.priceDiffientRatio [2499,2524]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2526,2536]
    type_cast_expression [2526,2536]
        primitive_type: address [2526,2533]
        call_argument [2534,2535]
            number_literal: 0 [2534,2535]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2538,2539]
    number_literal: 0 [2538,2539]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2541,2542]
    number_literal: 0 [2541,2542]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_expression [2613,2635]
    member_expression: dexData.isUniV2Class [2613,2633]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2671,2677]
    identifier: token0 [2671,2677]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [2679,2685]
    identifier: token1 [2679,2685]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [2712,2839]
    if: if [2712,2714]
    binary_expression [2716,2740]
        identifier: dex [2716,2719]
        comparison_operator: == [2720,2722]
        member_expression: DexData.DEX_UNIV3 [2723,2740]
    block_statement [2742,2839]
        expression_statement [2756,2829]
            call_expression [2756,2828]
                member_expression: addressConfig.dexAggregator.updateV3Observation [2756,2803]
                call_argument [2804,2810]
                    identifier: token0 [2804,2810]
                call_argument [2812,2818]
                    identifier: token1 [2812,2818]
                call_argument [2820,2827]
                    identifier: dexData [2820,2827]

New cluster:
===
delete-node
---
identifier: verifyTrade [3285,3296]
===
------------
===
delete-node
---
identifier: verifyTrade [3285,3296]
===

New cluster:
===
delete-node
---
identifier: updatePriceInternal [3501,3520]
===
------------
===
delete-node
---
identifier: updatePriceInternal [3501,3520]
===

New cluster:
===
delete-node
---
identifier: feesAndInsurance [3914,3930]
===
------------
===
delete-node
---
identifier: feesAndInsurance [3914,3930]
===

New cluster:
===
delete-node
---
call_argument [3931,3941]
===
------------
===
delete-node
---
call_argument [3931,3941]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3943,3962]
    call_expression [3943,3962]
        member_expression: deposit.add [3943,3954]
        call_argument [3955,3961]
            identifier: borrow [3955,3961]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [3964,3988]
    type_cast_expression [3964,3988]
        primitive_type: address [3964,3971]
        call_argument [3972,3987]
            member_expression: tv.depositErc20 [3972,3987]

New cluster:
===
delete-node
---
member_expression: tv.tradeSize [4069,4081]
===
------------
===
delete-node
---
member_expression: tv.tradeSize [4069,4081]
===

New cluster:
===
delete-node
---
member_expression: vars.buyToken [4547,4560]
===
------------
===
delete-node
---
member_expression: vars.buyToken [4547,4560]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [15412,15427]
    member_expression: ratioVars.owner [15412,15427]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [15429,15443]
    member_expression: ratioVars.held [15429,15443]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [15494,15506]
    member_expression: vars.buyPool [15494,15506]

New cluster:
===
delete-node
---
boolean_literal: false [15508,15513]
===
------------
===
delete-node
---
boolean_literal: false [15508,15513]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [15515,15532]
    member_expression: ratioVars.dexData [15515,15532]

New cluster:
===
delete-node
---
if_statement [3741,4953]
===
------------
===
delete-node
---
block_statement [4226,4953]
===
===
delete-node
---
expression_statement [3904,4000]
===
===
delete-node
---
assignment_expression [3786,3818]
===
===
delete-node
---
assignment_expression [3904,3999]
===
===
delete-node
---
if_statement [3741,4953]
===
===
delete-node
---
block_statement [3772,4220]
===
===
delete-node
---
if: if [3741,3743]
===
===
delete-node
---
else: else [4221,4225]
===
===
delete-node
---
affectation_operator: = [3802,3803]
===
===
delete-node
---
member_expression: tv.fees [3904,3911]
===
===
delete-node
---
expression_statement [3786,3819]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [3745,3770]
    identifier: depositToken [3745,3757]
    comparison_operator: != [3758,3760]
    identifier: longToken [3761,3770]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [3832,3891]
    assignment_expression [3832,3890]
        identifier: deposit [3832,3839]
        affectation_operator: = [3840,3841]
        call_expression [3842,3890]
            identifier: transferIn [3842,3852]
            call_argument [3853,3863]
                member_expression: msg.sender [3853,3863]
            call_argument [3865,3880]
                member_expression: tv.depositErc20 [3865,3880]
            call_argument [3882,3889]
                identifier: deposit [3882,3889]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [4013,4056]
    assignment_expression [4013,4055]
        member_expression: tv.depositAfterFees [4013,4032]
        affectation_operator: = [4033,4034]
        call_expression [4035,4055]
            member_expression: deposit.sub [4035,4046]
            call_argument [4047,4054]
                member_expression: tv.fees [4047,4054]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [4129,4210]
    call_expression [4129,4209]
        identifier: require [4129,4136]
        call_argument [4137,4201]
            binary_expression [4137,4201]
                call_expression [4137,4182]
                    member_expression: borrow == 0 || deposit.mul(10000).div [4137,4174]
                    call_argument [4175,4181]
                        identifier: borrow [4175,4181]
                comparison_operator: > [4183,4184]
                member_expression: vars.marginLimit [4185,4201]
        call_argument [4203,4208]
            string_literal [4203,4208]
                string: "MAM" [4203,4208]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [4819,4841]
    assignment_expression [4819,4840]
        member_expression: tv.tradeSize [4819,4831]
        affectation_operator: = [4832,4833]
        identifier: borrow [4834,4840]

New cluster:
===
delete-node
---
if_statement [5159,5246]
===
------------
===
delete-node
---
if_statement [5159,5246]
===
===
delete-node
---
if: if [5159,5161]
===
===
delete-node
---
block_statement [5175,5246]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [5163,5173]
    identifier: borrow [5163,5169]
    comparison_operator: > [5170,5171]
    number_literal: 0 [5172,5173]

New cluster:
===
delete-node
---
if_statement [5284,5561]
===
------------
===
delete-node
---
if: if [5284,5286]
===
===
delete-node
---
if_statement [5284,5561]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [5288,5304]
    member_expression: tv.tradeSize [5288,5300]
    comparison_operator: > [5301,5302]
    number_literal: 0 [5303,5304]

New cluster:
===
delete-node
---
if_statement [5571,5675]
===
------------
===
delete-node
---
block_statement [5602,5675]
===
===
delete-node
---
if: if [5571,5573]
===
===
delete-node
---
if_statement [5571,5675]
===

New cluster:
===
delete-node
---
identifier: isPositionHealthy [5826,5843]
===
------------
===
delete-node
---
identifier: isPositionHealthy [5826,5843]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [6433,6438]
    identifier: trade [6433,6438]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [6440,6450]
    identifier: marketVars [6440,6450]

New cluster:
===
delete-node
---
call_argument [10433,10451]
===
------------
===
delete-node
---
call_argument [10433,10451]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6587,6622]
    assignment_expression [6587,6621]
        member_expression: closeTradeVars.marketId [6587,6610]
        affectation_operator: = [6611,6612]
        identifier: marketId [6613,6621]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6631,6668]
    assignment_expression [6631,6667]
        member_expression: closeTradeVars.longToken [6631,6655]
        affectation_operator: = [6656,6657]
        identifier: longToken [6658,6667]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [6677,6726]
    assignment_expression [6677,6725]
        member_expression: closeTradeVars.depositToken [6677,6704]
        affectation_operator: = [6705,6706]
        member_expression: trade.depositToken [6707,6725]

New cluster:
===
delete-node
---
ternary_expression [6842,6882]
===
------------
===
delete-node
---
?: ? [6868,6869]
===
===
delete-node
---
boolean_literal: true [6870,6874]
===
===
delete-node
---
ternary_expression [6842,6882]
===
===
delete-node
---
:: : [6875,6876]
===
===
delete-node
---
boolean_literal: false [6877,6882]
===

New cluster:
===
delete-node
---
expression_statement [7436,7477]
===
------------
===
delete-node
---
affectation_operator: = [7447,7448]
===
===
delete-node
---
call_expression [7449,7476]
===
===
delete-node
---
member_expression: trade.held [7436,7446]
===
===
delete-node
---
member_expression: trade.held.sub [7449,7463]
===
===
delete-node
---
assignment_expression [7436,7476]
===
===
delete-node
---
expression_statement [7436,7477]
===

New cluster:
===
delete-node
---
member_expression: closeTradeVars.longToken [7796,7820]
===
------------
===
delete-node
---
member_expression: closeTradeVars.longToken [7796,7820]
===

New cluster:
===
delete-node
---
identifier: minOrMaxAmount [8673,8687]
===
------------
===
delete-node
---
identifier: minOrMaxAmount [8673,8687]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [8738,8796]
    assignment_expression [8738,8795]
        member_expression: closeTradeVars.receiveAmount [8738,8766]
        affectation_operator: = [8767,8768]
        member_expression: closeTradeVars.repayAmount [8769,8795]

New cluster:
===
delete-node
---
member_expression: closeTradeVars.marketId [9189,9212]
===
------------
===
delete-node
---
member_expression: closeTradeVars.marketId [9189,9212]
===

New cluster:
===
delete-node
---
member_expression: closeTradeVars.longToken [9214,9238]
===
------------
===
delete-node
---
member_expression: closeTradeVars.longToken [9214,9238]
===

New cluster:
===
delete-node
---
identifier: updatePriceInternal [9493,9512]
===
------------
===
delete-node
---
identifier: updatePriceInternal [9493,9512]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [9631,9654]
    member_expression: closeTradeVars.marketId [9631,9654]

New cluster:
===
delete-node
---
member_expression: closeTradeVars.longToken [9656,9680]
===
------------
===
delete-node
---
member_expression: closeTradeVars.longToken [9656,9680]
===

New cluster:
===
delete-node
---
identifier: updatePriceInternal [10266,10285]
===
------------
===
delete-node
---
identifier: updatePriceInternal [10266,10285]
===

New cluster:
===
delete-node
---
identifier: isInSupportDex [30500,30514]
===
------------
===
delete-node
---
identifier: isInSupportDex [30500,30514]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10610,10620]
    member_expression: trade.held [10610,10620]

New cluster:
===
delete-node
---
identifier: isPositionHealthy [10649,10666]
===
------------
===
delete-node
---
identifier: isPositionHealthy [10649,10666]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [10681,10691]
    member_expression: trade.held [10681,10691]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [11128,11163]
    assignment_expression [11128,11162]
        member_expression: liquidateVars.isSellAllHeld [11128,11155]
        affectation_operator: = [11156,11157]
        boolean_literal: true [11158,11162]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [11172,11220]
    assignment_expression [11172,11219]
        member_expression: liquidateVars.depositDecrease [11172,11201]
        affectation_operator: = [11202,11203]
        member_expression: trade.deposited [11204,11219]

New cluster:
===
delete-node
---
member_expression: liquidateVars.sellAmount [12229,12253]
===
------------
===
delete-node
---
member_expression: liquidateVars.sellAmount [12229,12253]
===

New cluster:
===
delete-node
---
identifier: flashBuy [12256,12264]
===
------------
===
delete-node
---
identifier: flashBuy [12256,12264]
===

New cluster:
===
delete-node
---
member_expression: marketVars.sellToken [13408,13428]
===
------------
===
delete-node
---
member_expression: marketVars.sellToken [13408,13428]
===

New cluster:
===
delete-node
---
binary_expression [13696,13748]
===
------------
===
delete-node
---
arithmetic_operator: - [13724,13725]
===
===
delete-node
---
binary_expression [13696,13748]
===

New cluster:
===
delete-node
---
if_statement [13301,13859]
===
------------
===
delete-node
---
if: if [13301,13303]
===
===
delete-node
---
member_expression: liquidateVars.depositReturn [13360,13387]
===
===
delete-node
---
block_statement [13644,13859]
===
===
delete-node
---
call_argument [13400,13429]
===
===
delete-node
---
type_cast_expression [13400,13429]
===
===
delete-node
---
call_expression [13390,13526]
===
===
delete-node
---
else: else [13639,13643]
===
===
delete-node
---
expression_statement [13360,13527]
===
===
delete-node
---
identifier: flashSell [13390,13399]
===
===
delete-node
---
primitive_type: address [13400,13407]
===
===
delete-node
---
block_statement [13338,13638]
===
===
delete-node
---
if_statement [13301,13859]
===
===
delete-node
---
assignment_expression [13360,13526]
===
===
delete-node
---
affectation_operator: = [13388,13389]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [13461,13513]
    binary_expression [13461,13513]
        member_expression: liquidateVars.receiveAmount [13461,13488]
        arithmetic_operator: - [13489,13490]
        member_expression: liquidateVars.borrowed [13491,13513]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [13515,13516]
    number_literal: 0 [13515,13516]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [13548,13620]
    call_expression [13548,13619]
        identifier: doTransferOut [13548,13561]
        call_argument [13562,13567]
            identifier: owner [13562,13567]
        call_argument [13569,13589]
            member_expression: marketVars.sellToken [13569,13589]
        call_argument [13591,13618]
            member_expression: liquidateVars.depositReturn [13591,13618]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [13897,13918]
    type_name: uint [13897,13901]
    identifier: finalRepayAmount [13902,13918]

New cluster:
===
delete-node
---
variable_declaration_statement [13897,14039]
===
------------
===
delete-node
---
variable_declaration_statement [13897,14039]
===

New cluster:
===
delete-node
---
identifier: finalRepayAmount [14117,14133]
===
------------
===
delete-node
---
identifier: finalRepayAmount [14117,14133]
===

New cluster:
===
delete-node
---
identifier: finalRepayAmount [14202,14218]
===
------------
===
delete-node
---
identifier: finalRepayAmount [14202,14218]
===

New cluster:
===
delete-node
---
if_statement [11648,12137]
===
------------
===
delete-node
---
type_cast_expression [11968,11996]
===
===
delete-node
---
?: ? [12098,12099]
===
===
delete-node
---
binary_expression [11955,12097]
===
===
delete-node
---
member_expression: liquidateVars.borrowed [12075,12097]
===
===
delete-node
---
else: else [11902,11906]
===
===
delete-node
---
assignment_expression [11925,12112]
===
===
delete-node
---
:: : [12106,12107]
===
===
delete-node
---
call_expression [11955,12072]
===
===
delete-node
---
primitive_type: address [11968,11975]
===
===
delete-node
---
expression_statement [11925,12113]
===
===
delete-node
---
if: if [11648,11650]
===
===
delete-node
---
boolean_literal: true [12108,12112]
===
===
delete-node
---
block_statement [11685,12137]
===
===
delete-node
---
if_statement [11770,12127]
===
===
delete-node
---
ternary_expression [11955,12112]
===
===
delete-node
---
boolean_literal: false [12100,12105]
===
===
delete-node
---
comparison_operator: > [12073,12074]
===
===
delete-node
---
identifier: calBuyAmount [11955,11967]
===
===
delete-node
---
if_statement [11648,12137]
===
===
delete-node
---
call_argument [11968,11996]
===
===
delete-node
---
if: if [11770,11772]
===
===
delete-node
---
block_statement [11907,12127]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [11774,11810]
    call_expression [11774,11789]
        member_expression: dexData.toDex [11774,11787]
    comparison_operator: == [11790,11792]
    member_expression: DexData.DEX_UNIV3 [11793,11810]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [11812,11901]
    expression_statement [11830,11887]
        assignment_expression [11830,11886]
            member_expression: liquidateVars.isSellAllHeld [11830,11857]
            affectation_operator: = [11858,11859]
            call_expression [11860,11886]
                member_expression: dexData.toUniV3QuoteFlag [11860,11884]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [12029,12062]
    member_expression: liquidateVars.remainHeldAfterFees [12029,12062]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [12064,12071]
    identifier: dexData [12064,12071]

New cluster:
===
delete-node
---
if_statement [12181,14244]
===
------------
===
delete-node
---
block_statement [12215,12815]
===
===
delete-node
---
unary_expression [12185,12213]
===
===
delete-node
---
if_statement [12181,14244]
===
===
delete-node
---
call_argument [12415,12457]
===
===
delete-node
---
call_expression [12407,12465]
===
===
delete-node
---
!: ! [12185,12186]
===
===
delete-node
---
expression_statement [12407,12466]
===
===
delete-node
---
binary_expression [12415,12457]
===
===
delete-node
---
comparison_operator: >= [12430,12432]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [12459,12464]
    string_literal [12459,12464]
        string: 'BLM' [12459,12464]

New cluster:
===
delete-node
---
member_expression: liquidateVars.marketId [14465,14487]
===
------------
===
delete-node
---
member_expression: liquidateVars.marketId [14465,14487]
===

New cluster:
===
delete-node
---
function_definition [14813,15540]
===
------------
===
delete-node
---
function_body [15010,15540]
===
===
delete-node
---
call_expression [15051,15090]
===
===
delete-node
---
identifier: marginRatio [14822,14833]
===
===
delete-node
---
visibility: external [14904,14912]
===
===
delete-node
---
function: function [14813,14821]
===
===
delete-node
---
function_definition [14813,15540]
===
===
delete-node
---
affectation_operator: = [15049,15050]
===
===
delete-node
---
variable_declaration_statement [15020,15091]
===
===
delete-node
---
identifier: toMarketVar [15051,15062]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [15020,15048]
    type_name: Types.MarketVars [15020,15036]
    memory: memory [15037,15043]
    identifier: vars [15044,15048]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [15084,15089]
    boolean_literal: false [15084,15089]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [15100,15168]
    variable_declaration [15100,15124]
        type_name: Types.Trade [15100,15111]
        memory: memory [15112,15118]
        identifier: trade [15119,15124]
    affectation_operator: = [15125,15126]
    array_access [15127,15167]
        array_access [15127,15156]
            array_access [15127,15146]
                identifier: activeTrades [15127,15139]
                identifier: owner [15140,15145]
            identifier: marketId [15147,15155]
        identifier: longToken [15157,15166]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [15177,15216]
    variable_declaration [15177,15215]
        type_name: Types.MarginRatioVars [15177,15198]
        memory: memory [15199,15205]
        identifier: ratioVars [15206,15215]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15225,15253]
    assignment_expression [15225,15252]
        member_expression: ratioVars.held [15225,15239]
        affectation_operator: = [15240,15241]
        member_expression: trade.held [15242,15252]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15262,15290]
    assignment_expression [15262,15289]
        member_expression: ratioVars.dexData [15262,15279]
        affectation_operator: = [15280,15281]
        identifier: dexData [15282,15289]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15299,15323]
    assignment_expression [15299,15322]
        member_expression: ratioVars.owner [15299,15314]
        affectation_operator: = [15315,15316]
        identifier: owner [15317,15322]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15332,15357]
    assignment_expression [15332,15356]
        identifier: limit [15332,15337]
        affectation_operator: = [15338,15339]
        member_expression: vars.marginLimit [15340,15356]

New cluster:
===
delete-node
---
function_definition [15546,17435]
===
------------
===
delete-node
---
function_definition [15546,17435]
===
===
delete-node
---
call_expression [17107,17172]
===
===
delete-node
---
number_literal: 0 [17175,17176]
===
===
delete-node
---
ternary_expression [17081,17176]
===
===
delete-node
---
?: ? [16909,16910]
===
===
delete-node
---
affectation_operator: = [17079,17080]
===
===
delete-node
---
:: : [17173,17174]
===
===
delete-node
---
identifier: marginRatioInternal [15555,15574]
===
===
delete-node
---
function: function [15546,15554]
===
===
delete-node
---
visibility: internal [15705,15713]
===
===
delete-node
---
:: : [16977,16978]
===
===
delete-node
---
affectation_operator: = [16883,16884]
===
===
delete-node
---
affectation_operator: = [16055,16056]
===
===
delete-node
---
?: ? [17105,17106]
===
===
delete-node
---
function_body [15762,17435]
===
===
delete-node
---
ternary_expression [16885,16980]
===
===
delete-node
---
variable_declaration_statement [17069,17177]
===
===
delete-node
---
variable_declaration_statement [16041,16165]
===
===
delete-node
---
number_literal: 0 [16979,16980]
===
===
delete-node
---
variable_declaration_statement [16870,16981]
===
===
delete-node
---
member_expression: marketValue.sub(borrowed).mul(ratioVars.multiplier).div [17107,17162]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15575,15588]
    type_name: address [15575,15582]
    identifier: owner [15583,15588]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15590,15599]
    type_name: uint [15590,15594]
    identifier: held [15595,15599]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15601,15618]
    type_name: address [15601,15608]
    identifier: heldToken [15609,15618]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15620,15637]
    type_name: address [15620,15627]
    identifier: sellToken [15628,15637]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15639,15664]
    type_name: LPoolInterface [15639,15653]
    identifier: borrowPool [15654,15664]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15666,15677]
    type_name: bool [15666,15670]
    identifier: isOpen [15671,15677]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [15679,15699]
    type_name: bytes [15679,15684]
    memory: memory [15685,15691]
    identifier: dexData [15692,15699]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [15714,15718]
    view: view [15714,15718]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [15719,15757]
    returns: returns [15719,15726]
    parameter [15728,15732]
        type_name: uint [15728,15732]
    parameter [15734,15738]
        type_name: uint [15734,15738]
    parameter [15740,15744]
        type_name: uint [15740,15744]
    parameter [15746,15750]
        type_name: uint [15746,15750]
    parameter [15752,15756]
        type_name: uint [15752,15756]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [15772,15811]
    variable_declaration [15772,15810]
        type_name: Types.MarginRatioVars [15772,15793]
        memory: memory [15794,15800]
        identifier: ratioVars [15801,15810]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15820,15842]
    assignment_expression [15820,15841]
        member_expression: ratioVars.held [15820,15834]
        affectation_operator: = [15835,15836]
        identifier: held [15837,15841]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15851,15879]
    assignment_expression [15851,15878]
        member_expression: ratioVars.dexData [15851,15868]
        affectation_operator: = [15869,15870]
        identifier: dexData [15871,15878]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15888,15920]
    assignment_expression [15888,15919]
        member_expression: ratioVars.heldToken [15888,15907]
        affectation_operator: = [15908,15909]
        identifier: heldToken [15910,15919]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15929,15961]
    assignment_expression [15929,15960]
        member_expression: ratioVars.sellToken [15929,15948]
        affectation_operator: = [15949,15950]
        identifier: sellToken [15951,15960]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [15970,15994]
    assignment_expression [15970,15993]
        member_expression: ratioVars.owner [15970,15985]
        affectation_operator: = [15986,15987]
        identifier: owner [15988,15993]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [16003,16032]
    assignment_expression [16003,16031]
        member_expression: ratioVars.multiplier [16003,16023]
        affectation_operator: = [16024,16025]
        number_literal: 10000 [16026,16031]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
ternary_expression [16057,16164]
    identifier: isOpen [16057,16063]
    ?: ? [16064,16065]
    call_expression [16066,16113]
        member_expression: borrowPool.borrowBalanceStored [16066,16096]
        call_argument [16097,16112]
            member_expression: ratioVars.owner [16097,16112]
    :: : [16114,16115]
    call_expression [16116,16164]
        member_expression: borrowPool.borrowBalanceCurrent [16116,16147]
        call_argument [16148,16163]
            member_expression: ratioVars.owner [16148,16163]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [16174,16335]
    if: if [16174,16176]
    binary_expression [16178,16191]
        identifier: borrowed [16178,16186]
        comparison_operator: == [16187,16189]
        number_literal: 0 [16190,16191]
    block_statement [16193,16335]
        return_statement [16207,16325]
            return: return [16207,16213]
            tuple_expression [16214,16324]
                member_expression: ratioVars.multiplier [16215,16235]
                member_expression: ratioVars.multiplier [16237,16257]
                member_expression: ratioVars.multiplier [16259,16279]
                member_expression: ratioVars.multiplier [16281,16301]
                member_expression: ratioVars.multiplier [16303,16323]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [16344,16573]
    variable_declaration_tuple [16344,16424]
        variable_declaration [16345,16355]
            type_name: uint [16345,16349]
            identifier: price [16350,16355]
        variable_declaration [16357,16371]
            type_name: uint [16357,16361]
            identifier: cAvgPrice [16362,16371]
        variable_declaration [16373,16387]
            type_name: uint [16373,16377]
            identifier: hAvgPrice [16378,16387]
        variable_declaration [16389,16403]
            type_name: uint8 [16389,16394]
            identifier: decimals [16395,16403]
        variable_declaration [16404,16423]
            type_name: uint [16404,16408]
            identifier: lastUpdateTime [16409,16423]
    affectation_operator: = [16425,16426]
    call_expression [16427,16572]
        member_expression: addressConfig.dexAggregator.getPriceCAvgPriceHAvgPrice [16427,16481]
        call_argument [16482,16501]
            member_expression: ratioVars.heldToken [16482,16501]
        call_argument [16503,16522]
            member_expression: ratioVars.sellToken [16503,16522]
        call_argument [16524,16552]
            member_expression: calculateConfig.twapDuration [16524,16552]
        call_argument [16554,16571]
            member_expression: ratioVars.dexData [16554,16571]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [16609,16727]
    if: if [16609,16611]
    binary_expression [16613,16679]
        member_expression: block.timestamp [16613,16628]
        comparison_operator: > [16629,16630]
        call_expression [16631,16679]
            member_expression: lastUpdateTime.add [16631,16649]
            call_argument [16650,16678]
                member_expression: calculateConfig.twapDuration [16650,16678]
    block_statement [16681,16727]
        expression_statement [16695,16717]
            assignment_expression [16695,16716]
                identifier: hAvgPrice [16695,16704]
                affectation_operator: = [16705,16706]
                identifier: cAvgPrice [16707,16716]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [16790,16861]
    variable_declaration [16790,16806]
        type_name: uint [16790,16794]
        identifier: marketValue [16795,16806]
    affectation_operator: = [16807,16808]
    call_expression [16809,16860]
        member_expression: ratioVars.held.mul(price).div [16809,16838]
        call_argument [16839,16859]
            binary_expression [16839,16859]
                number_literal: 10 [16839,16841]
                **: ** [16842,16844]
                type_cast_expression [16845,16859]
                    primitive_type: uint [16845,16849]
                    call_argument [16850,16858]
                        identifier: decimals [16850,16858]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [16870,16882]
    type_name: uint [16870,16874]
    identifier: current [16875,16882]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [16885,16908]
    identifier: marketValue [16885,16896]
    comparison_operator: >= [16897,16899]
    identifier: borrowed [16900,16908]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [16990,17060]
    assignment_expression [16990,17059]
        identifier: marketValue [16990,17001]
        affectation_operator: = [17002,17003]
        call_expression [17004,17059]
            member_expression: ratioVars.held.mul(cAvgPrice).div [17004,17037]
            call_argument [17038,17058]
                binary_expression [17038,17058]
                    number_literal: 10 [17038,17040]
                    **: ** [17041,17043]
                    type_cast_expression [17044,17058]
                        primitive_type: uint [17044,17048]
                        call_argument [17049,17057]
                            identifier: decimals [17049,17057]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [17069,17078]
    type_name: uint [17069,17073]
    identifier: cAvg [17074,17078]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [17081,17104]
    identifier: marketValue [17081,17092]
    comparison_operator: >= [17093,17095]
    identifier: borrowed [17096,17104]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [17186,17256]
    assignment_expression [17186,17255]
        identifier: marketValue [17186,17197]
        affectation_operator: = [17198,17199]
        call_expression [17200,17255]
            member_expression: ratioVars.held.mul(hAvgPrice).div [17200,17233]
            call_argument [17234,17254]
                binary_expression [17234,17254]
                    number_literal: 10 [17234,17236]
                    **: ** [17237,17239]
                    type_cast_expression [17240,17254]
                        primitive_type: uint [17240,17244]
                        call_argument [17245,17253]
                            identifier: decimals [17245,17253]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [17265,17373]
    variable_declaration [17265,17274]
        type_name: uint [17265,17269]
        identifier: hAvg [17270,17274]
    affectation_operator: = [17275,17276]
    ternary_expression [17277,17372]
        binary_expression [17277,17300]
            identifier: marketValue [17277,17288]
            comparison_operator: >= [17289,17291]
            identifier: borrowed [17292,17300]
        ?: ? [17301,17302]
        call_expression [17303,17368]
            member_expression: marketValue.sub(borrowed).mul(ratioVars.multiplier).div [17303,17358]
            call_argument [17359,17367]
                identifier: borrowed [17359,17367]
        :: : [17369,17370]
        number_literal: 0 [17371,17372]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [17382,17429]
    return: return [17382,17388]
    tuple_expression [17389,17428]
        identifier: current [17390,17397]
        identifier: cAvg [17399,17403]
        identifier: hAvg [17405,17409]
        identifier: price [17411,17416]
        identifier: cAvgPrice [17418,17427]

New cluster:
===
delete-node
---
function_definition [17441,18073]
===
------------
===
delete-node
---
if_statement [17930,18057]
===
===
delete-node
---
function: function [17441,17449]
===
===
delete-node
---
visibility: external [17501,17509]
===
===
delete-node
---
identifier: updatePrice [17450,17461]
===
===
delete-node
---
block_statement [17948,18057]
===
===
delete-node
---
function_body [17519,18073]
===
===
delete-node
---
variable_declaration_statement [17585,17697]
===
===
delete-node
---
block_statement [17812,18067]
===
===
delete-node
---
identifier: updateResult [17798,17810]
===
===
delete-node
---
identifier: shouldUpdatePriceInternal [17605,17630]
===
===
delete-node
---
if: if [17930,17932]
===
===
delete-node
---
if_statement [17794,18067]
===
===
delete-node
---
call_expression [17605,17696]
===
===
delete-node
---
expression_statement [17966,18043]
===
===
delete-node
---
member_expression: (ControllerInterface(addressConfig.controller)).updatePriceAllowed [17966,18032]
===
===
delete-node
---
identifier: shouldUpdate [17934,17946]
===
===
delete-node
---
call_expression [17966,18042]
===
===
delete-node
---
affectation_operator: = [17603,17604]
===
===
delete-node
---
function_definition [17441,18073]
===
===
delete-node
---
if: if [17794,17796]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [17585,17602]
    type_name: bool [17585,17589]
    identifier: shouldUpdate [17590,17602]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [17658,17671]
    member_expression: market.token1 [17658,17671]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [17673,17686]
    member_expression: market.token0 [17673,17686]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [17688,17695]
    identifier: dexData [17688,17695]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [17706,17785]
    variable_declaration [17706,17723]
        type_name: bool [17706,17710]
        identifier: updateResult [17711,17723]
    affectation_operator: = [17724,17725]
    call_expression [17726,17784]
        identifier: updatePriceInternal [17726,17745]
        call_argument [17746,17759]
            member_expression: market.token0 [17746,17759]
        call_argument [17761,17774]
            member_expression: market.token1 [17761,17774]
        call_argument [17776,17783]
            identifier: dexData [17776,17783]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [17849,17892]
    assignment_expression [17849,17891]
        member_expression: markets[marketId].priceUpdater [17849,17879]
        affectation_operator: = [17880,17881]
        member_expression: tx.origin [17882,17891]

New cluster:
===
delete-node
---
identifier: shouldUpdatePriceInternal [18255,18280]
===
------------
===
delete-node
---
identifier: shouldUpdatePriceInternal [18255,18280]
===

New cluster:
===
delete-node
---
function_definition [18506,18645]
===
------------
===
delete-node
---
function_definition [18506,18645]
===
===
delete-node
---
identifier: getCalculateConfig [18515,18533]
===
===
delete-node
---
visibility: external [18536,18544]
===
===
delete-node
---
function: function [18506,18514]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [18554,18558]
    view: view [18554,18558]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [18559,18606]
    returns: returns [18559,18566]
    parameter [18568,18605]
        type_name: OpenLevStorage.CalculateConfig [18568,18598]
        memory: memory [18599,18605]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [18606,18645]
    return_statement [18616,18639]
        return: return [18616,18622]
        identifier: calculateConfig [18623,18638]

New cluster:
===
delete-node
---
function_definition [18651,18881]
===
------------
===
delete-node
---
function: function [18651,18659]
===
===
delete-node
---
function_definition [18651,18881]
===
===
delete-node
---
return_statement [18767,18875]
===
===
delete-node
---
visibility: internal [18734,18742]
===
===
delete-node
---
function_body [18757,18881]
===
===
delete-node
---
identifier: updatePriceInternal [18660,18679]
===
===
delete-node
---
call_expression [18774,18874]
===
===
delete-node
---
member_expression: addressConfig.dexAggregator.updatePriceOracle [18774,18819]
===
===
delete-node
---
return: return [18767,18773]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18680,18694]
    type_name: address [18680,18687]
    identifier: token0 [18688,18694]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18696,18710]
    type_name: address [18696,18703]
    identifier: token1 [18704,18710]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18712,18732]
    type_name: bytes [18712,18717]
    memory: memory [18718,18724]
    identifier: dexData [18725,18732]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [18743,18757]
    returns: returns [18743,18750]
    parameter [18752,18756]
        type_name: bool [18752,18756]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [18820,18826]
    identifier: token0 [18820,18826]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [18828,18834]
    identifier: token1 [18828,18834]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [18866,18873]
    identifier: dexData [18866,18873]

New cluster:
===
delete-node
---
function_definition [18887,19827]
===
------------
===
delete-node
---
identifier: differencePriceRatio [19708,19728]
===
===
delete-node
---
if_statement [19647,19799]
===
===
delete-node
---
call_expression [19733,19760]
===
===
delete-node
---
binary_expression [19651,19761]
===
===
delete-node
---
comparison_operator: <= [19729,19731]
===
===
delete-node
---
if: if [19647,19649]
===
===
delete-node
---
identifier: shouldUpdatePriceInternal [18896,18921]
===
===
delete-node
---
parenthesized_expression [19732,19761]
===
===
delete-node
---
member_expression: one.sub [19733,19740]
===
===
delete-node
---
binary_expression [19708,19761]
===
===
delete-node
---
function: function [18887,18895]
===
===
delete-node
---
logical_operator: || [19705,19707]
===
===
delete-node
---
function_definition [18887,19827]
===
===
delete-node
---
visibility: internal [19003,19011]
===
===
delete-node
---
function_body [19031,19827]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18922,18947]
    type_name: uint16 [18922,18928]
    identifier: priceDiffientRatio [18929,18947]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18949,18963]
    type_name: address [18949,18956]
    identifier: token0 [18957,18963]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18965,18979]
    type_name: address [18965,18972]
    identifier: token1 [18973,18979]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [18981,19001]
    type_name: bytes [18981,18986]
    memory: memory [18987,18993]
    identifier: dexData [18994,19001]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [19012,19016]
    view: view [19012,19016]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [19017,19031]
    returns: returns [19017,19024]
    parameter [19026,19030]
        type_name: bool [19026,19030]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [19041,19107]
    if: if [19041,19043]
    unary_expression [19045,19068]
        !: ! [19045,19046]
        call_expression [19046,19068]
            member_expression: dexData.isUniV2Class [19046,19066]
    block_statement [19070,19107]
        return_statement [19084,19097]
            return: return [19084,19090]
            boolean_literal: false [19091,19096]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [19116,19285]
    variable_declaration_tuple [19116,19172]
        variable_declaration [19119,19133]
            type_name: uint [19119,19123]
            identifier: cAvgPrice [19124,19133]
        variable_declaration [19135,19149]
            type_name: uint [19135,19139]
            identifier: hAvgPrice [19140,19149]
        variable_declaration [19152,19171]
            type_name: uint [19152,19156]
            identifier: lastUpdateTime [19157,19171]
    affectation_operator: = [19173,19174]
    call_expression [19175,19284]
        member_expression: addressConfig.dexAggregator.getPriceCAvgPriceHAvgPrice [19175,19229]
        call_argument [19230,19236]
            identifier: token0 [19230,19236]
        call_argument [19238,19244]
            identifier: token1 [19238,19244]
        call_argument [19246,19274]
            member_expression: calculateConfig.twapDuration [19246,19274]
        call_argument [19276,19283]
            identifier: dexData [19276,19283]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [19294,19403]
    if: if [19294,19296]
    binary_expression [19298,19364]
        member_expression: block.timestamp [19298,19313]
        comparison_operator: < [19314,19315]
        call_expression [19316,19364]
            member_expression: lastUpdateTime.add [19316,19334]
            call_argument [19335,19363]
                member_expression: calculateConfig.twapDuration [19335,19363]
    block_statement [19366,19403]
        return_statement [19380,19393]
            return: return [19380,19386]
            boolean_literal: false [19387,19392]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [19442,19516]
    if: if [19442,19444]
    binary_expression [19446,19478]
        binary_expression [19446,19460]
            identifier: cAvgPrice [19446,19455]
            comparison_operator: == [19456,19458]
            number_literal: 0 [19459,19460]
        logical_operator: || [19461,19463]
        binary_expression [19464,19478]
            identifier: hAvgPrice [19464,19473]
            comparison_operator: == [19474,19476]
            number_literal: 0 [19477,19478]
    block_statement [19480,19516]
        return_statement [19494,19506]
            return: return [19494,19500]
            boolean_literal: true [19501,19505]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [19552,19567]
    variable_declaration [19552,19560]
        type_name: uint [19552,19556]
        identifier: one [19557,19560]
    affectation_operator: = [19561,19562]
    number_literal: 100 [19563,19566]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [19576,19638]
    variable_declaration [19576,19601]
        type_name: uint [19576,19580]
        identifier: differencePriceRatio [19581,19601]
    affectation_operator: = [19602,19603]
    call_expression [19604,19637]
        member_expression: cAvgPrice.mul(one).div [19604,19626]
        call_argument [19627,19636]
            identifier: hAvgPrice [19627,19636]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [19651,19704]
    identifier: differencePriceRatio [19651,19671]
    comparison_operator: >= [19672,19674]
    parenthesized_expression [19675,19704]
        call_expression [19676,19703]
            member_expression: one.add [19676,19683]
            call_argument [19684,19702]
                identifier: priceDiffientRatio [19684,19702]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [19763,19799]
    return_statement [19777,19789]
        return: return [19777,19783]
        boolean_literal: true [19784,19788]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [19808,19821]
    return: return [19808,19814]
    boolean_literal: false [19815,19820]

New cluster:
===
delete-node
---
function_definition [19833,20860]
===
------------
===
delete-node
---
function: function [19833,19841]
===
===
delete-node
---
call_argument [20118,20175]
===
===
delete-node
---
:: : [20150,20151]
===
===
delete-node
---
function_body [19984,20860]
===
===
delete-node
---
identifier: marginRatioInternal [20061,20080]
===
===
delete-node
---
?: ? [20125,20126]
===
===
delete-node
---
function_definition [19833,20860]
===
===
delete-node
---
visibility: internal [19951,19959]
===
===
delete-node
---
identifier: isOpen [20118,20124]
===
===
delete-node
---
identifier: isOpen [20189,20195]
===
===
delete-node
---
call_expression [20061,20327]
===
===
delete-node
---
identifier: isPositionHealthy [19842,19859]
===
===
delete-node
---
call_argument [20189,20246]
===
===
delete-node
---
variable_declaration_statement [19994,20328]
===
===
delete-node
---
?: ? [20196,20197]
===
===
delete-node
---
affectation_operator: = [20059,20060]
===
===
delete-node
---
ternary_expression [20189,20246]
===
===
delete-node
---
:: : [20222,20223]
===
===
delete-node
---
ternary_expression [20118,20175]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [19860,19873]
    type_name: address [19860,19867]
    identifier: owner [19868,19873]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [19875,19886]
    type_name: bool [19875,19879]
    identifier: isOpen [19880,19886]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [19888,19897]
    type_name: uint [19888,19892]
    identifier: held [19893,19897]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [19899,19927]
    type_name: Types.MarketVars [19899,19915]
    memory: memory [19916,19922]
    identifier: vars [19923,19927]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [19929,19949]
    type_name: bytes [19929,19934]
    memory: memory [19935,19941]
    identifier: dexData [19942,19949]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [19960,19964]
    view: view [19960,19964]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [19965,19979]
    returns: returns [19965,19972]
    parameter [19974,19978]
        type_name: bool [19974,19978]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_tuple [19994,20058]
    variable_declaration [19995,20007]
        type_name: uint [19995,19999]
        identifier: current [20000,20007]
    variable_declaration [20009,20018]
        type_name: uint [20009,20013]
        identifier: cAvg [20014,20018]
    variable_declaration [20020,20029]
        type_name: uint [20020,20024]
        identifier: hAvg [20025,20029]
    variable_declaration [20031,20041]
        type_name: uint [20031,20035]
        identifier: price [20036,20041]
    variable_declaration [20043,20057]
        type_name: uint [20043,20047]
        identifier: cAvgPrice [20048,20057]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [20100,20104]
    identifier: held [20100,20104]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [20152,20175]
    primitive_type: address [20152,20159]
    call_argument [20160,20174]
        member_expression: vars.sellToken [20160,20174]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [20198,20221]
    primitive_type: address [20198,20205]
    call_argument [20206,20220]
        member_expression: vars.sellToken [20206,20220]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [20260,20297]
    ternary_expression [20260,20297]
        identifier: isOpen [20260,20266]
        ?: ? [20267,20268]
        member_expression: vars.sellPool [20269,20282]
        :: : [20283,20284]
        member_expression: vars.buyPool [20285,20297]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [20311,20317]
    identifier: isOpen [20311,20317]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [20337,20854]
    if: if [20337,20339]
    identifier: isOpen [20341,20347]
    block_statement [20349,20464]
        return_statement [20363,20454]
            return: return [20363,20369]
            binary_expression [20370,20453]
                binary_expression [20370,20425]
                    binary_expression [20370,20397]
                        identifier: current [20370,20377]
                        comparison_operator: >= [20378,20380]
                        member_expression: vars.marginLimit [20381,20397]
                    logical_operator: && [20398,20400]
                    binary_expression [20401,20425]
                        identifier: cAvg [20401,20405]
                        comparison_operator: >= [20406,20408]
                        member_expression: vars.marginLimit [20409,20425]
                logical_operator: && [20426,20428]
                binary_expression [20429,20453]
                    identifier: hAvg [20429,20433]
                    comparison_operator: >= [20434,20436]
                    member_expression: vars.marginLimit [20437,20453]
    else: else [20465,20469]
    block_statement [20470,20854]
        if_statement [20516,20740]
            if: if [20516,20518]
            binary_expression [20520,20537]
                identifier: price [20520,20525]
                comparison_operator: < [20526,20527]
                identifier: cAvgPrice [20528,20537]
            block_statement [20539,20740]
                variable_declaration_statement [20557,20615]
                    variable_declaration [20557,20582]
                        type_name: uint [20557,20561]
                        identifier: differencePriceRatio [20562,20582]
                    affectation_operator: = [20583,20584]
                    call_expression [20585,20614]
                        member_expression: cAvgPrice.mul(100).div [20585,20607]
                        call_argument [20608,20613]
                            identifier: price [20608,20613]
                expression_statement [20632,20726]
                    call_expression [20632,20725]
                        identifier: require [20632,20639]
                        call_argument [20640,20717]
                            binary_expression [20640,20717]
                                binary_expression [20640,20666]
                                    identifier: differencePriceRatio [20640,20660]
                                    arithmetic_operator: - [20661,20662]
                                    number_literal: 100 [20663,20666]
                                comparison_operator: < [20667,20668]
                                member_expression: calculateConfig.maxLiquidationPriceDiffientRatio [20669,20717]
                        call_argument [20719,20724]
                            string_literal [20719,20724]
                                string: 'MPT' [20719,20724]
        return_statement [20753,20844]
            return: return [20753,20759]
            binary_expression [20760,20843]
                binary_expression [20760,20815]
                    binary_expression [20760,20787]
                        identifier: current [20760,20767]
                        comparison_operator: >= [20768,20770]
                        member_expression: vars.marginLimit [20771,20787]
                    logical_operator: || [20788,20790]
                    binary_expression [20791,20815]
                        identifier: cAvg [20791,20795]
                        comparison_operator: >= [20796,20798]
                        member_expression: vars.marginLimit [20799,20815]
                logical_operator: || [20816,20818]
                binary_expression [20819,20843]
                    identifier: hAvg [20819,20823]
                    comparison_operator: >= [20824,20826]
                    member_expression: vars.marginLimit [20827,20843]

New cluster:
===
delete-node
---
function_definition [20866,21787]
===
------------
===
delete-node
---
function_body [20985,21787]
===
===
delete-node
---
identifier: reduceInsurance [20875,20890]
===
===
delete-node
---
function: function [20866,20874]
===
===
delete-node
---
affectation_operator: = [21113,21114]
===
===
delete-node
---
function_definition [20866,21787]
===
===
delete-node
---
member_expression: totalRepayment.sub [21115,21133]
===
===
delete-node
---
call_expression [21115,21144]
===
===
delete-node
---
visibility: internal [20961,20969]
===
===
delete-node
---
variable_declaration_statement [21101,21145]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [20970,20984]
    returns: returns [20970,20977]
    parameter [20979,20983]
        type_name: uint [20979,20983]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [20995,21035]
    variable_declaration [20995,21017]
        type_name: uint [20995,20999]
        identifier: maxCanRepayAmount [21000,21017]
    affectation_operator: = [21018,21019]
    identifier: totalRepayment [21020,21034]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [21101,21112]
    type_name: uint [21101,21105]
    identifier: needed [21106,21112]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [21154,21747]
    if: if [21154,21156]
    identifier: longToken [21158,21167]
    block_statement [21169,21455]
        if_statement [21183,21445]
            if: if [21183,21185]
            binary_expression [21187,21218]
                member_expression: market.pool0Insurance [21187,21208]
                comparison_operator: >= [21209,21211]
                identifier: needed [21212,21218]
            block_statement [21220,21307]
                expression_statement [21238,21293]
                    assignment_expression [21238,21292]
                        member_expression: market.pool0Insurance [21238,21259]
                        affectation_operator: = [21260,21261]
                        binary_expression [21262,21292]
                            member_expression: market.pool0Insurance [21262,21283]
                            arithmetic_operator: - [21284,21285]
                            identifier: needed [21286,21292]
            else: else [21308,21312]
            block_statement [21313,21445]
                expression_statement [21331,21388]
                    assignment_expression [21331,21387]
                        identifier: maxCanRepayAmount [21331,21348]
                        affectation_operator: = [21349,21350]
                        call_expression [21351,21387]
                            member_expression: market.pool0Insurance.add [21351,21376]
                            call_argument [21377,21386]
                                identifier: remaining [21377,21386]
                expression_statement [21405,21431]
                    assignment_expression [21405,21430]
                        member_expression: market.pool0Insurance [21405,21426]
                        affectation_operator: = [21427,21428]
                        number_literal: 0 [21429,21430]
    else: else [21456,21460]
    block_statement [21461,21747]
        if_statement [21475,21737]
            if: if [21475,21477]
            binary_expression [21479,21510]
                member_expression: market.pool1Insurance [21479,21500]
                comparison_operator: >= [21501,21503]
                identifier: needed [21504,21510]
            block_statement [21512,21599]
                expression_statement [21530,21585]
                    assignment_expression [21530,21584]
                        member_expression: market.pool1Insurance [21530,21551]
                        affectation_operator: = [21552,21553]
                        binary_expression [21554,21584]
                            member_expression: market.pool1Insurance [21554,21575]
                            arithmetic_operator: - [21576,21577]
                            identifier: needed [21578,21584]
            else: else [21600,21604]
            block_statement [21605,21737]
                expression_statement [21623,21680]
                    assignment_expression [21623,21679]
                        identifier: maxCanRepayAmount [21623,21640]
                        affectation_operator: = [21641,21642]
                        call_expression [21643,21679]
                            member_expression: market.pool1Insurance.add [21643,21668]
                            call_argument [21669,21678]
                                identifier: remaining [21669,21678]
                expression_statement [21697,21723]
                    assignment_expression [21697,21722]
                        member_expression: market.pool1Insurance [21697,21718]
                        affectation_operator: = [21719,21720]
                        number_literal: 0 [21721,21722]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [21756,21781]
    return: return [21756,21762]
    identifier: maxCanRepayAmount [21763,21780]

New cluster:
===
delete-node
---
function_definition [21793,22839]
===
------------
===
delete-node
---
function_body [21906,22839]
===
===
delete-node
---
if_statement [22010,22671]
===
===
delete-node
---
block_statement [22033,22349]
===
===
delete-node
---
member_expression: vars.sellToken [22240,22254]
===
===
delete-node
---
member_expression: vars.buyToken [22088,22101]
===
===
delete-node
---
affectation_operator: = [22577,22578]
===
===
delete-node
---
assignment_expression [22088,22125]
===
===
delete-node
---
block_statement [22355,22671]
===
===
delete-node
---
assignment_expression [22410,22447]
===
===
delete-node
---
function_definition [21793,22839]
===
===
delete-node
---
assignment_expression [22240,22278]
===
===
delete-node
---
expression_statement [22088,22126]
===
===
delete-node
---
if: if [22010,22012]
===
===
delete-node
---
expression_statement [22240,22279]
===
===
delete-node
---
member_expression: vars.sellToken [22562,22576]
===
===
delete-node
---
function: function [21793,21801]
===
===
delete-node
---
visibility: internal [21858,21866]
===
===
delete-node
---
affectation_operator: = [22255,22256]
===
===
delete-node
---
affectation_operator: = [22424,22425]
===
===
delete-node
---
else: else [22350,22354]
===
===
delete-node
---
affectation_operator: = [22102,22103]
===
===
delete-node
---
identifier: toMarketVar [21802,21813]
===
===
delete-node
---
expression_statement [22410,22448]
===
===
delete-node
---
assignment_expression [22562,22600]
===
===
delete-node
---
expression_statement [22562,22601]
===
===
delete-node
---
member_expression: vars.buyToken [22410,22423]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [21916,21945]
    variable_declaration [21916,21944]
        type_name: Types.MarketVars [21916,21932]
        memory: memory [21933,21939]
        identifier: vars [21940,21944]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [21954,22001]
    variable_declaration [21954,21980]
        type_name: Types.Market [21954,21966]
        memory: memory [21967,21973]
        identifier: market [21974,21980]
    affectation_operator: = [21981,21982]
    array_access [21983,22000]
        identifier: markets [21983,21990]
        identifier: marketId [21991,21999]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22047,22075]
    assignment_expression [22047,22074]
        member_expression: vars.buyPool [22047,22059]
        affectation_operator: = [22060,22061]
        member_expression: market.pool1 [22062,22074]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22139,22185]
    assignment_expression [22139,22184]
        member_expression: vars.buyPoolInsurance [22139,22160]
        affectation_operator: = [22161,22162]
        member_expression: market.pool1Insurance [22163,22184]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22198,22227]
    assignment_expression [22198,22226]
        member_expression: vars.sellPool [22198,22211]
        affectation_operator: = [22212,22213]
        member_expression: market.pool0 [22214,22226]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22292,22339]
    assignment_expression [22292,22338]
        member_expression: vars.sellPoolInsurance [22292,22314]
        affectation_operator: = [22315,22316]
        member_expression: market.pool0Insurance [22317,22338]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22369,22397]
    assignment_expression [22369,22396]
        member_expression: vars.buyPool [22369,22381]
        affectation_operator: = [22382,22383]
        member_expression: market.pool0 [22384,22396]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22461,22507]
    assignment_expression [22461,22506]
        member_expression: vars.buyPoolInsurance [22461,22482]
        affectation_operator: = [22483,22484]
        member_expression: market.pool0Insurance [22485,22506]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22520,22549]
    assignment_expression [22520,22548]
        member_expression: vars.sellPool [22520,22533]
        affectation_operator: = [22534,22535]
        member_expression: market.pool1 [22536,22548]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22614,22661]
    assignment_expression [22614,22660]
        member_expression: vars.sellPoolInsurance [22614,22636]
        affectation_operator: = [22637,22638]
        member_expression: market.pool1Insurance [22639,22660]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22680,22718]
    assignment_expression [22680,22717]
        member_expression: vars.marginLimit [22680,22696]
        affectation_operator: = [22697,22698]
        member_expression: market.marginLimit [22699,22717]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22727,22751]
    assignment_expression [22727,22750]
        member_expression: vars.dexs [22727,22736]
        affectation_operator: = [22737,22738]
        member_expression: market.dexs [22739,22750]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [22760,22812]
    assignment_expression [22760,22811]
        member_expression: vars.priceDiffientRatio [22760,22783]
        affectation_operator: = [22784,22785]
        member_expression: market.priceDiffientRatio [22786,22811]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [22821,22833]
    return: return [22821,22827]
    identifier: vars [22828,22832]

New cluster:
===
delete-node
---
function_definition [22846,24070]
===
------------
===
delete-node
---
member_expression: IERC20(token).safeTransfer [23747,23773]
===
===
delete-node
---
binary_expression [23268,23350]
===
===
delete-node
---
if_statement [23264,23449]
===
===
delete-node
---
member_expression: XOLEInterface(addressConfig.xOLE).balanceOf [23268,23311]
===
===
delete-node
---
expression_statement [23747,23821]
===
===
delete-node
---
member_expression: config.feesDiscountThreshold [23322,23350]
===
===
delete-node
---
function_body [22960,24070]
===
===
delete-node
---
function: function [22846,22854]
===
===
delete-node
---
function_definition [22846,24070]
===
===
delete-node
---
identifier: feesAndInsurance [22855,22871]
===
===
delete-node
---
visibility: internal [22936,22944]
===
===
delete-node
---
if: if [23264,23266]
===
===
delete-node
---
comparison_operator: > [23320,23321]
===
===
delete-node
---
call_expression [23747,23820]
===
===
delete-node
---
call_expression [23268,23319]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [23027,23088]
    variable_declaration [23027,23043]
        type_name: uint [23027,23031]
        identifier: defaultFees [23032,23043]
    affectation_operator: = [23044,23045]
    call_expression [23046,23087]
        member_expression: tradeSize.mul(market.feesRate).div [23046,23080]
        call_argument [23081,23086]
            number_literal: 10000 [23081,23086]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [23097,23124]
    variable_declaration [23097,23109]
        type_name: uint [23097,23101]
        identifier: newFees [23102,23109]
    affectation_operator: = [23110,23111]
    identifier: defaultFees [23112,23123]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [23133,23181]
    variable_declaration [23133,23162]
        type_name: CalculateConfig [23133,23148]
        memory: memory [23149,23155]
        identifier: config [23156,23162]
    affectation_operator: = [23163,23164]
    identifier: calculateConfig [23165,23180]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [23352,23449]
    expression_statement [23366,23439]
        assignment_expression [23366,23438]
            identifier: newFees [23366,23373]
            affectation_operator: = [23374,23375]
            call_expression [23376,23438]
                member_expression: defaultFees.sub [23376,23391]
                call_argument [23392,23437]
                    call_expression [23392,23437]
                        member_expression: defaultFees.mul(config.feesDiscount).div [23392,23432]
                        call_argument [23433,23436]
                            number_literal: 100 [23433,23436]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [23529,23664]
    if: if [23529,23531]
    binary_expression [23533,23562]
        member_expression: market.priceUpdater [23533,23552]
        comparison_operator: == [23553,23555]
        identifier: trader [23556,23562]
    block_statement [23564,23664]
        expression_statement [23578,23654]
            assignment_expression [23578,23653]
                identifier: newFees [23578,23585]
                affectation_operator: = [23586,23587]
                call_expression [23588,23653]
                    member_expression: newFees.sub [23588,23599]
                    call_argument [23600,23652]
                        call_expression [23600,23652]
                            member_expression: defaultFees.mul(config.updatePriceDiscount).div [23600,23647]
                            call_argument [23648,23651]
                                number_literal: 100 [23648,23651]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [23673,23737]
    variable_declaration [23673,23690]
        type_name: uint [23673,23677]
        identifier: newInsurance [23678,23690]
    affectation_operator: = [23691,23692]
    call_expression [23693,23736]
        member_expression: newFees.mul(config.insuranceRatio).div [23693,23731]
        call_argument [23732,23735]
            number_literal: 100 [23732,23735]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [23794,23819]
    call_expression [23794,23819]
        member_expression: newFees.sub [23794,23805]
        call_argument [23806,23818]
            identifier: newInsurance [23806,23818]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [23830,24040]
    if: if [23830,23832]
    binary_expression [23834,23856]
        identifier: token [23834,23839]
        comparison_operator: == [23840,23842]
        member_expression: market.token1 [23843,23856]
    block_statement [23858,23946]
        expression_statement [23872,23936]
            assignment_expression [23872,23935]
                member_expression: market.pool1Insurance [23872,23893]
                affectation_operator: = [23894,23895]
                call_expression [23896,23935]
                    member_expression: market.pool1Insurance.add [23896,23921]
                    call_argument [23922,23934]
                        identifier: newInsurance [23922,23934]
    else: else [23947,23951]
    block_statement [23952,24040]
        expression_statement [23966,24030]
            assignment_expression [23966,24029]
                member_expression: market.pool0Insurance [23966,23987]
                affectation_operator: = [23988,23989]
                call_expression [23990,24029]
                    member_expression: market.pool0Insurance.add [23990,24015]
                    call_argument [24016,24028]
                        identifier: newInsurance [24016,24028]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [24049,24064]
    return: return [24049,24055]
    identifier: newFees [24056,24063]

New cluster:
===
delete-node
---
expression_statement [24296,24353]
===
------------
===
delete-node
---
type_cast_expression [24326,24348]
===
===
delete-node
---
primitive_type: address [24326,24333]
===
===
delete-node
---
expression_statement [24296,24353]
===
===
delete-node
---
member_expression: IERC20(sellToken).safeApprove [24296,24325]
===
===
delete-node
---
call_expression [24296,24352]
===
===
delete-node
---
call_argument [24326,24348]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [24350,24351]
    number_literal: 0 [24350,24351]

New cluster:
===
delete-node
---
variable_declaration_statement [24437,24526]
===
------------
===
delete-node
---
variable_declaration [24437,24451]
===
===
delete-node
---
type_name: uint [24437,24441]
===
===
delete-node
---
variable_declaration_statement [24437,24526]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [24535,24552]
    return: return [24535,24541]
    identifier: buyAmount [24542,24551]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [24692,24696]
    type_name: uint [24692,24696]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [24783,24840]
    call_expression [24783,24839]
        member_expression: IERC20(sellToken).safeApprove [24783,24812]
        call_argument [24813,24835]
            type_cast_expression [24813,24835]
                primitive_type: address [24813,24820]
                call_argument [24821,24834]
                    identifier: dexAggregator [24821,24834]
        call_argument [24837,24838]
            number_literal: 0 [24837,24838]

New cluster:
===
delete-node
---
return_statement [24927,25005]
===
------------
===
delete-node
---
return: return [24927,24933]
===
===
delete-node
---
return_statement [24927,25005]
===

New cluster:
===
delete-node
---
function_definition [25017,25243]
===
------------
===
delete-node
---
identifier: calBuyAmount [25026,25038]
===
===
delete-node
---
function: function [25017,25025]
===
===
delete-node
---
visibility: internal [25112,25120]
===
===
delete-node
---
function_definition [25017,25243]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [25039,25055]
    type_name: address [25039,25046]
    identifier: buyToken [25047,25055]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [25057,25074]
    type_name: address [25057,25064]
    identifier: sellToken [25065,25074]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [25093,25110]
    type_name: bytes [25093,25098]
    memory: memory [25099,25105]
    identifier: data [25106,25110]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [25121,25125]
    view: view [25121,25125]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [25126,25140]
    returns: returns [25126,25133]
    parameter [25135,25139]
        type_name: uint [25135,25139]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [25140,25243]
    return_statement [25150,25237]
        return: return [25150,25156]
        call_expression [25157,25236]
            member_expression: addressConfig.dexAggregator.calBuyAmount [25157,25197]
            call_argument [25198,25206]
                identifier: buyToken [25198,25206]
            call_argument [25208,25217]
                identifier: sellToken [25208,25217]
            call_argument [25219,25229]
                identifier: sellAmount [25219,25229]
            call_argument [25231,25235]
                identifier: data [25231,25235]

New cluster:
===
delete-node
---
function_definition [25249,25782]
===
------------
===
delete-node
---
variable_declaration_statement [25344,25396]
===
===
delete-node
---
block_statement [25528,25604]
===
===
delete-node
---
affectation_operator: = [25363,25364]
===
===
delete-node
---
if_statement [25405,25604]
===
===
delete-node
---
variable_declaration_statement [25677,25728]
===
===
delete-node
---
identifier: transferIn [25258,25268]
===
===
delete-node
---
binary_expression [25409,25445]
===
===
delete-node
---
function: function [25249,25257]
===
===
delete-node
---
comparison_operator: == [25424,25426]
===
===
delete-node
---
else: else [25523,25527]
===
===
delete-node
---
function_definition [25249,25782]
===
===
delete-node
---
affectation_operator: = [25695,25696]
===
===
delete-node
---
expression_statement [25542,25594]
===
===
delete-node
---
call_expression [25365,25395]
===
===
delete-node
---
member_expression: addressConfig.wETH [25427,25445]
===
===
delete-node
---
if: if [25405,25407]
===
===
delete-node
---
primitive_type: address [25409,25416]
===
===
delete-node
---
function_body [25334,25782]
===
===
delete-node
---
member_expression: token.balanceOf [25365,25380]
===
===
delete-node
---
type_cast_expression [25409,25423]
===
===
delete-node
---
visibility: internal [25310,25318]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [25344,25362]
    type_name: uint [25344,25348]
    identifier: balanceBefore [25349,25362]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [25447,25522]
    expression_statement [25461,25512]
        call_expression [25461,25511]
            struct_expression [25461,25509]
                member_expression: IWETH(address(token)).deposit [25461,25490]
                struct_field_assignment [25491,25508]
                    identifier: value [25491,25496]
                    :: : [25497,25498]
                    member_expression: msg.value [25499,25508]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [25677,25694]
    type_name: uint [25677,25681]
    identifier: balanceAfter [25682,25694]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [25737,25776]
    return: return [25737,25743]
    call_expression [25744,25775]
        member_expression: balanceAfter.sub [25744,25760]
        call_argument [25761,25774]
            identifier: balanceBefore [25761,25774]

New cluster:
===
delete-node
---
function_definition [25788,26083]
===
------------
===
delete-node
---
primitive_type: address [25873,25880]
===
===
delete-node
---
function: function [25788,25796]
===
===
delete-node
---
binary_expression [25873,25909]
===
===
delete-node
---
visibility: internal [25850,25858]
===
===
delete-node
---
comparison_operator: == [25888,25890]
===
===
delete-node
---
type_cast_expression [25873,25887]
===
===
delete-node
---
member_expression: addressConfig.wETH [25891,25909]
===
===
delete-node
---
function_definition [25788,26083]
===
===
delete-node
---
else: else [26017,26021]
===
===
delete-node
---
if: if [25869,25871]
===
===
delete-node
---
if_statement [25869,26077]
===
===
delete-node
---
function_body [25859,26083]
===
===
delete-node
---
identifier: doTransferOut [25797,25810]
===
===
delete-node
---
block_statement [26022,26077]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [25911,26016]
    expression_statement [25925,25964]
        call_expression [25925,25963]
            member_expression: IWETH(address(token)).withdraw [25925,25955]
            call_argument [25956,25962]
                identifier: amount [25956,25962]
    expression_statement [25977,26006]
        call_expression [25977,26005]
            member_expression: payable(to).transfer [25977,25997]
            call_argument [25998,26004]
                identifier: amount [25998,26004]

New cluster:
===
delete-node
---
function_definition [26119,27583]
===
------------
===
delete-node
---
visibility: internal [26489,26497]
===
===
delete-node
---
identifier: setCalculateConfigInternal [26128,26154]
===
===
delete-node
---
function_body [26498,27583]
===
===
delete-node
---
function_definition [26119,27583]
===
===
delete-node
---
function: function [26119,26127]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26155,26177]
    type_name: uint16 [26155,26161]
    identifier: defaultFeesRate [26162,26177]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26187,26207]
    type_name: uint8 [26187,26192]
    identifier: insuranceRatio [26193,26207]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26217,26242]
    type_name: uint16 [26217,26223]
    identifier: defaultMarginLimit [26224,26242]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26252,26277]
    type_name: uint16 [26252,26258]
    identifier: priceDiffientRatio [26259,26277]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26287,26313]
    type_name: uint16 [26287,26293]
    identifier: updatePriceDiscount [26294,26313]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26323,26342]
    type_name: uint16 [26323,26329]
    identifier: feesDiscount [26330,26342]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26352,26381]
    type_name: uint128 [26352,26359]
    identifier: feesDiscountThreshold [26360,26381]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26391,26410]
    type_name: uint16 [26391,26397]
    identifier: penaltyRatio [26398,26410]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26420,26458]
    type_name: uint8 [26420,26425]
    identifier: maxLiquidationPriceDiffientRatio [26426,26458]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [26468,26487]
    type_name: uint16 [26468,26474]
    identifier: twapDuration [26475,26487]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26508,26703]
    call_expression [26508,26702]
        identifier: require [26508,26515]
        call_argument [26516,26694]
            binary_expression [26516,26694]
                binary_expression [26516,26674]
                    binary_expression [26516,26650]
                        binary_expression [26516,26619]
                            binary_expression [26516,26589]
                                binary_expression [26516,26563]
                                    binary_expression [26516,26539]
                                        identifier: defaultFeesRate [26516,26531]
                                        comparison_operator: < [26532,26533]
                                        number_literal: 10000 [26534,26539]
                                    logical_operator: && [26540,26542]
                                    binary_expression [26543,26563]
                                        identifier: insuranceRatio [26543,26557]
                                        comparison_operator: < [26558,26559]
                                        number_literal: 100 [26560,26563]
                                logical_operator: && [26564,26566]
                                binary_expression [26567,26589]
                                    identifier: defaultMarginLimit [26567,26585]
                                    comparison_operator: > [26586,26587]
                                    number_literal: 0 [26588,26589]
                            logical_operator: && [26590,26592]
                            binary_expression [26593,26619]
                                identifier: updatePriceDiscount [26593,26612]
                                comparison_operator: <= [26613,26615]
                                number_literal: 100 [26616,26619]
                        logical_operator: && [26628,26630]
                        binary_expression [26631,26650]
                            identifier: feesDiscount [26631,26643]
                            comparison_operator: <= [26644,26646]
                            number_literal: 100 [26647,26650]
                    logical_operator: && [26651,26653]
                    binary_expression [26654,26674]
                        identifier: penaltyRatio [26654,26666]
                        comparison_operator: < [26667,26668]
                        number_literal: 10000 [26669,26674]
                logical_operator: && [26675,26677]
                binary_expression [26678,26694]
                    identifier: twapDuration [26678,26690]
                    comparison_operator: > [26691,26692]
                    number_literal: 0 [26693,26694]
        call_argument [26696,26701]
            string_literal [26696,26701]
                string: 'PRI' [26696,26701]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26712,26762]
    assignment_expression [26712,26761]
        member_expression: calculateConfig.defaultFeesRate [26712,26743]
        affectation_operator: = [26744,26745]
        identifier: defaultFeesRate [26746,26761]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26771,26819]
    assignment_expression [26771,26818]
        member_expression: calculateConfig.insuranceRatio [26771,26801]
        affectation_operator: = [26802,26803]
        identifier: insuranceRatio [26804,26818]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26828,26884]
    assignment_expression [26828,26883]
        member_expression: calculateConfig.defaultMarginLimit [26828,26862]
        affectation_operator: = [26863,26864]
        identifier: defaultMarginLimit [26865,26883]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26893,26949]
    assignment_expression [26893,26948]
        member_expression: calculateConfig.priceDiffientRatio [26893,26927]
        affectation_operator: = [26928,26929]
        identifier: priceDiffientRatio [26930,26948]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [26958,27016]
    assignment_expression [26958,27015]
        member_expression: calculateConfig.updatePriceDiscount [26958,26993]
        affectation_operator: = [26994,26995]
        identifier: updatePriceDiscount [26996,27015]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [27025,27069]
    assignment_expression [27025,27068]
        member_expression: calculateConfig.feesDiscount [27025,27053]
        affectation_operator: = [27054,27055]
        identifier: feesDiscount [27056,27068]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [27078,27140]
    assignment_expression [27078,27139]
        member_expression: calculateConfig.feesDiscountThreshold [27078,27115]
        affectation_operator: = [27116,27117]
        identifier: feesDiscountThreshold [27118,27139]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [27149,27193]
    assignment_expression [27149,27192]
        member_expression: calculateConfig.penaltyRatio [27149,27177]
        affectation_operator: = [27178,27179]
        identifier: penaltyRatio [27180,27192]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [27202,27286]
    assignment_expression [27202,27285]
        member_expression: calculateConfig.maxLiquidationPriceDiffientRatio [27202,27250]
        affectation_operator: = [27251,27252]
        identifier: maxLiquidationPriceDiffientRatio [27253,27285]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [27295,27339]
    assignment_expression [27295,27338]
        member_expression: calculateConfig.twapDuration [27295,27323]
        affectation_operator: = [27324,27325]
        identifier: twapDuration [27326,27338]

New cluster:
===
delete-node
---
identifier: setCalculateConfigInternal [27991,28017]
===
------------
===
delete-node
---
identifier: setCalculateConfigInternal [27991,28017]
===

New cluster:
===
delete-node
---
function_definition [28236,28621]
===
------------
===
delete-node
---
visibility: external [28328,28336]
===
===
delete-node
---
function_definition [28236,28621]
===
===
delete-node
---
function: function [28236,28244]
===
===
delete-node
---
identifier: setAddressConfig [28245,28261]
===
===
delete-node
---
function_body [28357,28621]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [28367,28448]
    call_expression [28367,28447]
        identifier: require [28367,28374]
        call_argument [28375,28439]
            binary_expression [28375,28439]
                binary_expression [28375,28399]
                    identifier: controller [28375,28385]
                    comparison_operator: != [28386,28388]
                    type_cast_expression [28389,28399]
                        primitive_type: address [28389,28396]
                        call_argument [28397,28398]
                            number_literal: 0 [28397,28398]
                logical_operator: && [28400,28402]
                binary_expression [28403,28439]
                    type_cast_expression [28403,28425]
                        primitive_type: address [28403,28410]
                        call_argument [28411,28424]
                            identifier: dexAggregator [28411,28424]
                    comparison_operator: != [28426,28428]
                    type_cast_expression [28429,28439]
                        primitive_type: address [28429,28436]
                        call_argument [28437,28438]
                            number_literal: 0 [28437,28438]
        call_argument [28441,28446]
            string_literal [28441,28446]
                string: 'CD0' [28441,28446]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [28457,28495]
    assignment_expression [28457,28494]
        member_expression: addressConfig.controller [28457,28481]
        affectation_operator: = [28482,28483]
        identifier: controller [28484,28494]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [28504,28548]
    assignment_expression [28504,28547]
        member_expression: addressConfig.dexAggregator [28504,28531]
        affectation_operator: = [28532,28533]
        identifier: dexAggregator [28534,28547]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [28803,28857]
    member_expression: feesRate < 10000 && marginLimit > 0 && dexs.length [28803,28853]
    comparison_operator: > [28854,28855]
    number_literal: 0 [28856,28857]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [28859,28864]
    string_literal [28859,28864]
        string: 'PRI' [28859,28864]

New cluster:
===
delete-node
---
expression_statement [28795,28866]
===
------------
===
delete-node
---
call_expression [28795,28865]
===
===
delete-node
---
expression_statement [28795,28866]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [28932,28959]
    assignment_expression [28932,28958]
        member_expression: market.feesRate [28932,28947]
        affectation_operator: = [28948,28949]
        identifier: feesRate [28950,28958]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [28968,29001]
    assignment_expression [28968,29000]
        member_expression: market.marginLimit [28968,28986]
        affectation_operator: = [28987,28988]
        identifier: marginLimit [28989,29000]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [29010,29029]
    assignment_expression [29010,29028]
        member_expression: market.dexs [29010,29021]
        affectation_operator: = [29022,29023]
        identifier: dexs [29024,29028]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [29038,29085]
    assignment_expression [29038,29084]
        member_expression: market.priceDiffientRatio [29038,29063]
        affectation_operator: = [29064,29065]
        identifier: priceDiffientRatio [29066,29084]

New cluster:
===
delete-node
---
function_definition [29186,29695]
===
------------
===
delete-node
---
function_definition [29186,29695]
===
===
delete-node
---
if_statement [29380,29564]
===
===
delete-node
---
assignment_expression [29573,29630]
===
===
delete-node
---
member_expression: market.pool1Insurance [29573,29594]
===
===
delete-node
---
assignment_expression [29414,29471]
===
===
delete-node
---
member_expression: market.pool1Insurance.sub [29597,29622]
===
===
delete-node
---
call_expression [29597,29630]
===
===
delete-node
---
affectation_operator: = [29436,29437]
===
===
delete-node
---
visibility: external [29268,29276]
===
===
delete-node
---
if: if [29380,29382]
===
===
delete-node
---
call_expression [29438,29471]
===
===
delete-node
---
function: function [29186,29194]
===
===
delete-node
---
expression_statement [29573,29631]
===
===
delete-node
---
function_body [29313,29695]
===
===
delete-node
---
affectation_operator: = [29595,29596]
===
===
delete-node
---
expression_statement [29414,29472]
===
===
delete-node
---
block_statement [29400,29564]
===
===
delete-node
---
member_expression: market.pool0Insurance [29414,29435]
===
===
delete-node
---
member_expression: market.pool0Insurance.sub [29438,29463]
===
===
delete-node
---
identifier: moveInsurance [29195,29208]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [29323,29371]
    variable_declaration [29323,29350]
        type_name: Types.Market [29323,29335]
        storage: storage [29336,29343]
        identifier: market [29344,29350]
    affectation_operator: = [29351,29352]
    array_access [29353,29370]
        identifier: markets [29353,29360]
        identifier: marketId [29361,29369]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [29384,29398]
    identifier: poolIndex [29384,29393]
    comparison_operator: == [29394,29396]
    number_literal: 0 [29397,29398]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [29485,29534]
    call_expression [29485,29533]
        member_expression: (IERC20(market.token0)).safeTransfer [29485,29521]
        call_argument [29522,29524]
            identifier: to [29522,29524]
        call_argument [29526,29532]
            identifier: amount [29526,29532]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [29547,29554]
    return: return [29547,29553]

New cluster:
===
delete-node
---
function_definition [29826,30988]
===
------------
===
delete-node
---
identifier: verifyTrade [29835,29846]
===
===
delete-node
---
variable_declaration_statement [30044,30148]
===
===
delete-node
---
function_body [29992,30988]
===
===
delete-node
---
visibility: internal [29978,29986]
===
===
delete-node
---
affectation_operator: = [30069,30070]
===
===
delete-node
---
identifier: require [30492,30499]
===
===
delete-node
---
:: : [30122,30123]
===
===
delete-node
---
?: ? [30097,30098]
===
===
delete-node
---
function_definition [29826,30988]
===
===
delete-node
---
expression_statement [30492,30557]
===
===
delete-node
---
ternary_expression [30071,30147]
===
===
delete-node
---
call_expression [30492,30556]
===
===
delete-node
---
function: function [29826,29834]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29847,29875]
    type_name: Types.MarketVars [29847,29863]
    memory: memory [29864,29870]
    identifier: vars [29871,29875]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29894,29908]
    type_name: bool [29894,29898]
    identifier: longToken [29899,29908]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29910,29927]
    type_name: bool [29910,29914]
    identifier: depositToken [29915,29927]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29929,29941]
    type_name: uint [29929,29933]
    identifier: deposit [29934,29941]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29943,29954]
    type_name: uint [29943,29947]
    identifier: borrow [29948,29954]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [29956,29976]
    type_name: bytes [29956,29961]
    memory: memory [29962,29968]
    identifier: dexData [29969,29976]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [29987,29991]
    view: view [29987,29991]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [30044,30068]
    type_name: address [30044,30051]
    identifier: depositTokenAddr [30052,30068]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [30124,30147]
    primitive_type: address [30124,30131]
    call_argument [30132,30146]
        member_expression: vars.sellToken [30132,30146]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [30214,30265]
    variable_declaration [30214,30227]
        type_name: uint [30214,30218]
        identifier: decimals [30219,30227]
    affectation_operator: = [30228,30229]
    call_expression [30230,30264]
        member_expression: ERC20(depositTokenAddr).decimals [30230,30262]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [30274,30336]
    variable_declaration [30274,30293]
        type_name: uint [30274,30278]
        identifier: minimalDeposit [30279,30293]
    affectation_operator: = [30294,30295]
    ternary_expression [30296,30335]
        binary_expression [30296,30308]
            identifier: decimals [30296,30304]
            comparison_operator: > [30305,30306]
            number_literal: 4 [30307,30308]
        ?: ? [30309,30310]
        binary_expression [30311,30331]
            number_literal: 10 [30311,30313]
            **: ** [30314,30316]
            parenthesized_expression [30317,30331]
                binary_expression [30318,30330]
                    identifier: decimals [30318,30326]
                    arithmetic_operator: - [30327,30328]
                    number_literal: 4 [30329,30330]
        :: : [30332,30333]
        number_literal: 1 [30334,30335]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [30345,30427]
    variable_declaration [30345,30363]
        type_name: uint [30345,30349]
        identifier: actualDeposit [30350,30363]
    affectation_operator: = [30364,30365]
    ternary_expression [30366,30426]
        binary_expression [30366,30404]
            identifier: depositTokenAddr [30366,30382]
            comparison_operator: == [30383,30385]
            member_expression: addressConfig.wETH [30386,30404]
        ?: ? [30405,30406]
        member_expression: msg.value [30407,30416]
        :: : [30417,30418]
        identifier: deposit [30419,30426]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [30436,30483]
    call_expression [30436,30482]
        identifier: require [30436,30443]
        call_argument [30444,30474]
            binary_expression [30444,30474]
                identifier: actualDeposit [30444,30457]
                comparison_operator: > [30458,30459]
                identifier: minimalDeposit [30460,30474]
        call_argument [30476,30481]
            string_literal [30476,30481]
                string: "DTS" [30476,30481]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [30550,30555]
    string_literal [30550,30555]
        string: "DNS" [30550,30555]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [30670,30982]
    if: if [30670,30672]
    binary_expression [30674,30697]
        member_expression: trade.lastBlockNum [30674,30692]
        comparison_operator: == [30693,30695]
        number_literal: 0 [30696,30697]
    block_statement [30699,30770]
        expression_statement [30713,30740]
            call_expression [30713,30739]
                identifier: require [30713,30720]
                call_argument [30721,30731]
                    binary_expression [30721,30731]
                        identifier: borrow [30721,30727]
                        comparison_operator: > [30728,30729]
                        number_literal: 0 [30730,30731]
                call_argument [30733,30738]
                    string_literal [30733,30738]
                        string: "BB0" [30733,30738]
        return_statement [30753,30760]
            return: return [30753,30759]
    else: else [30771,30775]
    block_statement [30776,30982]
        expression_statement [30848,30899]
            call_expression [30848,30898]
                identifier: require [30848,30855]
                call_argument [30856,30890]
                    binary_expression [30856,30890]
                        identifier: depositToken [30856,30868]
                        comparison_operator: == [30869,30871]
                        member_expression: trade.depositToken [30872,30890]
                call_argument [30892,30897]
                    string_literal [30892,30897]
                        string: "DTS" [30892,30897]
        expression_statement [30912,30972]
            call_expression [30912,30971]
                identifier: require [30912,30919]
                call_argument [30920,30963]
                    binary_expression [30920,30963]
                        member_expression: trade.lastBlockNum [30920,30938]
                        comparison_operator: != [30939,30941]
                        type_cast_expression [30942,30963]
                            primitive_type: uint128 [30942,30949]
                            call_argument [30950,30962]
                                member_expression: block.number [30950,30962]
                call_argument [30965,30970]
                    string_literal [30965,30970]
                        string: "SBK" [30965,30970]

New cluster:
===
delete-node
---
function_definition [30994,31293]
===
------------
===
delete-node
---
identifier: verifyCloseBefore [31003,31020]
===
===
delete-node
---
function: function [30994,31002]
===
===
delete-node
---
function_body [31131,31293]
===
===
delete-node
---
function_definition [30994,31293]
===
===
delete-node
---
identifier: require [31245,31252]
===
===
delete-node
---
call_expression [31245,31286]
===
===
delete-node
---
visibility: internal [31117,31125]
===
===
delete-node
---
expression_statement [31245,31287]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31021,31045]
    type_name: Types.Trade [31021,31032]
    memory: memory [31033,31039]
    identifier: trade [31040,31045]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31047,31075]
    type_name: Types.MarketVars [31047,31063]
    memory: memory [31064,31070]
    identifier: vars [31071,31075]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31077,31093]
    type_name: uint [31077,31081]
    identifier: closeAmount [31082,31093]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31095,31115]
    type_name: bytes [31095,31100]
    memory: memory [31101,31107]
    identifier: dexData [31108,31115]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [31126,31130]
    view: view [31126,31130]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [31141,31236]
    call_expression [31141,31235]
        identifier: verifyCloseOrLiquidateBefore [31141,31169]
        call_argument [31170,31180]
            member_expression: trade.held [31170,31180]
        call_argument [31182,31200]
            member_expression: trade.lastBlockNum [31182,31200]
        call_argument [31202,31211]
            member_expression: vars.dexs [31202,31211]
        call_argument [31213,31234]
            call_expression [31213,31234]
                member_expression: dexData.toDexDetail [31213,31232]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [31253,31278]
    binary_expression [31253,31278]
        identifier: closeAmount [31253,31264]
        comparison_operator: <= [31265,31267]
        member_expression: trade.held [31268,31278]

New cluster:
===
delete-node
---
function_definition [31300,31569]
===
------------
===
delete-node
---
function_body [31419,31569]
===
===
delete-node
---
function: function [31300,31308]
===
===
delete-node
---
function_definition [31300,31569]
===
===
delete-node
---
expression_statement [31429,31455]
===
===
delete-node
---
visibility: internal [31405,31413]
===
===
delete-node
---
call_expression [31429,31454]
===
===
delete-node
---
identifier: verifyCloseOrLiquidateBefore [31309,31337]
===
===
delete-node
---
identifier: require [31429,31436]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31338,31347]
    type_name: uint [31338,31342]
    identifier: held [31343,31347]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31349,31369]
    type_name: uint [31349,31353]
    identifier: lastBlockNumber [31354,31369]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31371,31391]
    type_name: uint32[] [31371,31379]
    memory: memory [31380,31386]
    identifier: dexs [31387,31391]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [31393,31403]
    type_name: uint32 [31393,31399]
    identifier: dex [31400,31403]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
state_mutability [31414,31418]
    view: view [31414,31418]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [31437,31446]
    binary_expression [31437,31446]
        identifier: held [31437,31441]
        comparison_operator: != [31442,31444]
        number_literal: 0 [31445,31446]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [31464,31512]
    call_expression [31464,31511]
        identifier: require [31464,31471]
        call_argument [31472,31503]
            binary_expression [31472,31503]
                identifier: lastBlockNumber [31472,31487]
                comparison_operator: != [31488,31490]
                member_expression: block.number [31491,31503]
        call_argument [31505,31510]
            string_literal [31505,31510]
                string: "SBK" [31505,31510]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [31521,31563]
    call_expression [31521,31562]
        identifier: require [31521,31528]
        call_argument [31529,31554]
            call_expression [31529,31554]
                identifier: isInSupportDex [31529,31543]
                call_argument [31544,31548]
                    identifier: dexs [31544,31548]
                call_argument [31550,31553]
                    identifier: dex [31550,31553]
        call_argument [31556,31561]
            string_literal [31556,31561]
                string: "DNS" [31556,31561]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [31576,31677]
    function: function [31576,31584]
    identifier: isSupportDex [31585,31597]
    parameter [31598,31607]
        type_name: uint8 [31598,31603]
        identifier: dex [31604,31607]
    visibility: internal [31609,31617]
    state_mutability [31618,31622]
        view: view [31618,31622]
    return_type_definition [31623,31637]
        returns: returns [31623,31630]
        parameter [31632,31636]
            type_name: bool [31632,31636]
    function_body [31637,31677]
        return_statement [31647,31671]
            return: return [31647,31653]
            array_access [31654,31670]
                identifier: supportDexs [31654,31665]
                identifier: dex [31666,31669]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [31683,32019]
    function: function [31683,31691]
    identifier: isInSupportDex [31692,31706]
    parameter [31707,31727]
        type_name: uint32[] [31707,31715]
        memory: memory [31716,31722]
        identifier: dexs [31723,31727]
    parameter [31729,31739]
        type_name: uint32 [31729,31735]
        identifier: dex [31736,31739]
    visibility: internal [31741,31749]
    state_mutability [31750,31754]
        pure: pure [31750,31754]
    return_type_definition [31755,31779]
        returns: returns [31755,31762]
        parameter [31764,31778]
            type_name: bool [31764,31768]
            identifier: supported [31769,31778]
    function_body [31779,32019]
        for_statement [31789,32013]
            for: for [31789,31792]
            variable_declaration_statement [31794,31805]
                variable_declaration [31794,31800]
                    type_name: uint [31794,31798]
                    identifier: i [31799,31800]
                affectation_operator: = [31801,31802]
                number_literal: 0 [31803,31804]
            expression_statement [31806,31822]
                binary_expression [31806,31821]
                    identifier: i [31806,31807]
                    comparison_operator: < [31808,31809]
                    member_expression: dexs.length [31810,31821]
            update_expression [31823,31826]
                identifier: i [31823,31824]
                increment_operator: ++ [31824,31826]
            block_statement [31828,32013]
                if_statement [31842,31898]
                    if: if [31842,31844]
                    binary_expression [31846,31858]
                        array_access [31846,31853]
                            identifier: dexs [31846,31850]
                            identifier: i [31851,31852]
                        comparison_operator: == [31854,31856]
                        number_literal: 0 [31857,31858]
                    block_statement [31860,31898]
                        break_statement [31878,31884]
                            break: break [31878,31883]
                if_statement [31911,32003]
                    if: if [31911,31913]
                    binary_expression [31915,31929]
                        array_access [31915,31922]
                            identifier: dexs [31915,31919]
                            identifier: i [31920,31921]
                        comparison_operator: == [31923,31925]
                        identifier: dex [31926,31929]
                    block_statement [31931,32003]
                        expression_statement [31949,31966]
                            assignment_expression [31949,31965]
                                identifier: supported [31949,31958]
                                affectation_operator: = [31959,31960]
                                boolean_literal: true [31961,31965]
                        break_statement [31983,31989]
                            break: break [31983,31988]

