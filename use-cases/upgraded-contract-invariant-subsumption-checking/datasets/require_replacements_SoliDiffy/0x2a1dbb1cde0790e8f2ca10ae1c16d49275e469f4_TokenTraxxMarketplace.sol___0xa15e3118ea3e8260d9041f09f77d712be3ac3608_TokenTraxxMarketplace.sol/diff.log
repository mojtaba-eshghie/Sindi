New cluster:
MOVE from source_file [0,132524]
------------
===
move-tree
---
interface_declaration [14489,17237]
    interface: interface [14489,14498]
    identifier: IERC20 [14499,14505]
    contract_body [14506,17237]
        function_definition [14587,14642]
            function: function [14587,14595]
            identifier: totalSupply [14596,14607]
            visibility: external [14610,14618]
            state_mutability [14619,14623]
                view: view [14619,14623]
            return_type_definition [14624,14641]
                returns: returns [14624,14631]
                parameter [14633,14640]
                    type_name: uint256 [14633,14640]
        function_definition [14730,14798]
            function: function [14730,14738]
            identifier: balanceOf [14739,14748]
            parameter [14749,14764]
                type_name: address [14749,14756]
                identifier: account [14757,14764]
            visibility: external [14766,14774]
            state_mutability [14775,14779]
                view: view [14775,14779]
            return_type_definition [14780,14797]
                returns: returns [14780,14787]
                parameter [14789,14796]
                    type_name: uint256 [14789,14796]
        function_definition [15027,15122]
            function: function [15027,15035]
            identifier: transfer [15036,15044]
            parameter [15045,15062]
                type_name: address [15045,15052]
                identifier: recipient [15053,15062]
            parameter [15064,15078]
                type_name: uint256 [15064,15071]
                identifier: amount [15072,15078]
            visibility: external [15089,15097]
            return_type_definition [15107,15121]
                returns: returns [15107,15114]
                parameter [15116,15120]
                    type_name: bool [15116,15120]
        function_definition [15406,15516]
            function: function [15406,15414]
            identifier: allowance [15415,15424]
            parameter [15425,15438]
                type_name: address [15425,15432]
                identifier: owner [15433,15438]
            parameter [15440,15455]
                type_name: address [15440,15447]
                identifier: spender [15448,15455]
            visibility: external [15466,15474]
            state_mutability [15484,15488]
                view: view [15484,15488]
            return_type_definition [15498,15515]
                returns: returns [15498,15505]
                parameter [15507,15514]
                    type_name: uint256 [15507,15514]
        function_definition [16185,16259]
            function: function [16185,16193]
            identifier: approve [16194,16201]
            parameter [16202,16217]
                type_name: address [16202,16209]
                identifier: spender [16210,16217]
            parameter [16219,16233]
                type_name: uint256 [16219,16226]
                identifier: amount [16227,16233]
            visibility: external [16235,16243]
            return_type_definition [16244,16258]
                returns: returns [16244,16251]
                parameter [16253,16257]
                    type_name: bool [16253,16257]
        function_definition [16577,16708]
            function: function [16577,16585]
            identifier: transferFrom [16586,16598]
            parameter [16609,16623]
                type_name: address [16609,16616]
                identifier: sender [16617,16623]
            parameter [16634,16651]
                type_name: address [16634,16641]
                identifier: recipient [16642,16651]
            parameter [16662,16676]
                type_name: uint256 [16662,16669]
                identifier: amount [16670,16676]
            visibility: external [16684,16692]
            return_type_definition [16693,16707]
                returns: returns [16693,16700]
                parameter [16702,16706]
                    type_name: bool [16702,16706]
        event_definition [16885,16957]
            identifier: Transfer [16891,16899]
            event_paramater [16900,16920]
                type_name: address [16900,16907]
                indexed: indexed [16908,16915]
                identifier: from [16916,16920]
            event_paramater [16922,16940]
                type_name: address [16922,16929]
                indexed: indexed [16930,16937]
                identifier: to [16938,16940]
            event_paramater [16942,16955]
                type_name: uint256 [16942,16949]
                identifier: value [16950,16955]
        event_definition [17122,17234]
            identifier: Approval [17128,17136]
            event_paramater [17147,17168]
                type_name: address [17147,17154]
                indexed: indexed [17155,17162]
                identifier: owner [17163,17168]
            event_paramater [17179,17202]
                type_name: address [17179,17186]
                indexed: indexed [17187,17194]
                identifier: spender [17195,17202]
            event_paramater [17213,17226]
                type_name: uint256 [17213,17220]
                identifier: value [17221,17226]
to
source_file [0,132524]
at 36
===
move-tree
---
contract_declaration [72075,75034]
    abstract: abstract [72075,72083]
    identifier: AccessControlEnumerableUpgradeable [72093,72127]
    is: is [72128,72130]
    inheritance_specifier [72136,72149]
        user_defined_type [72136,72149]
            identifier: Initializable [72136,72149]
    inheritance_specifier [72156,72191]
        user_defined_type [72156,72191]
            identifier: IAccessControlEnumerableUpgradeable [72156,72191]
    inheritance_specifier [72198,72222]
        user_defined_type [72198,72222]
            identifier: AccessControlUpgradeable [72198,72222]
    contract_body [72224,75034]
        function_definition [72231,72301]
            function: function [72231,72239]
            identifier: __AccessControlEnumerable_init [72240,72270]
            visibility: internal [72273,72281]
            modifier_invocation [72282,72298]
                identifier: onlyInitializing [72282,72298]
            function_body [72299,72301]
        function_definition [72309,72412]
            function: function [72309,72317]
            identifier: __AccessControlEnumerable_init_unchained [72318,72358]
            visibility: internal [72370,72378]
            modifier_invocation [72388,72404]
                identifier: onlyInitializing [72388,72404]
            function_body [72410,72412]
        using_directive [72420,72491]
            using: using [72420,72425]
            type_alias [72426,72450]
                identifier: EnumerableSetUpgradeable [72426,72450]
            for: for [72451,72454]
            type_name: EnumerableSetUpgradeable.AddressSet [72455,72490]
        state_variable_declaration [72499,72585]
            type_name: mapping(bytes32 => EnumerableSetUpgradeable.AddressSet) [72499,72554]
            visibility: private [72564,72571]
            identifier: _roleMembers [72572,72584]
        function_definition [72657,72971]
            function: function [72657,72665]
            identifier: supportsInterface [72666,72683]
            parameter [72684,72702]
                type_name: bytes4 [72684,72690]
                identifier: interfaceId [72691,72702]
            visibility: public [72713,72719]
            state_mutability [72729,72733]
                view: view [72729,72733]
            virtual: virtual [72743,72750]
            override_specifier [72760,72768]
                override: override [72760,72768]
            return_type_definition [72778,72792]
                returns: returns [72778,72785]
                parameter [72787,72791]
                    type_name: bool [72787,72791]
            function_body [72798,72971]
                return_statement [72809,72964]
                    return: return [72809,72815]
                    binary_expression [72829,72963]
                        member_expression: interfaceId ==             type(IAccessControlEnumerableUpgradeable).interfaceId [72829,72910]
                        logical_operator: || [72911,72913]
                        call_expression [72927,72963]
                            member_expression: super.supportsInterface [72927,72950]
                            call_argument [72951,72962]
                                identifier: interfaceId [72951,72962]
        function_definition [73570,73773]
            function: function [73570,73578]
            identifier: getRoleMember [73579,73592]
            parameter [73593,73605]
                type_name: bytes32 [73593,73600]
                identifier: role [73601,73605]
            parameter [73607,73620]
                type_name: uint256 [73607,73614]
                identifier: index [73615,73620]
            visibility: public [73631,73637]
            state_mutability [73647,73651]
                view: view [73647,73651]
            virtual: virtual [73661,73668]
            override_specifier [73678,73686]
                override: override [73678,73686]
            return_type_definition [73696,73713]
                returns: returns [73696,73703]
                parameter [73705,73712]
                    type_name: address [73705,73712]
            function_body [73719,73773]
                return_statement [73730,73766]
                    return: return [73730,73736]
                    call_expression [73737,73765]
                        member_expression: _roleMembers[role].at [73737,73758]
                        call_argument [73759,73764]
                            identifier: index [73759,73764]
        function_definition [73947,74139]
            function: function [73947,73955]
            identifier: getRoleMemberCount [73956,73974]
            parameter [73975,73987]
                type_name: bytes32 [73975,73982]
                identifier: role [73983,73987]
            visibility: public [73998,74004]
            state_mutability [74014,74018]
                view: view [74014,74018]
            virtual: virtual [74028,74035]
            override_specifier [74045,74053]
                override: override [74045,74053]
            return_type_definition [74063,74080]
                returns: returns [74063,74070]
                parameter [74072,74079]
                    type_name: uint256 [74072,74079]
            function_body [74086,74139]
                return_statement [74097,74132]
                    return: return [74097,74103]
                    call_expression [74104,74131]
                        member_expression: _roleMembers[role].length [74104,74129]
        function_definition [74232,74433]
            function: function [74232,74240]
            identifier: _grantRole [74241,74251]
            parameter [74252,74264]
                type_name: bytes32 [74252,74259]
                identifier: role [74260,74264]
            parameter [74266,74281]
                type_name: address [74266,74273]
                identifier: account [74274,74281]
            visibility: internal [74292,74300]
            virtual: virtual [74310,74317]
            override_specifier [74327,74335]
                override: override [74327,74335]
            function_body [74341,74433]
                expression_statement [74352,74384]
                    call_expression [74352,74383]
                        member_expression: super._grantRole [74352,74368]
                        call_argument [74369,74373]
                            identifier: role [74369,74373]
                        call_argument [74375,74382]
                            identifier: account [74375,74382]
                expression_statement [74394,74426]
                    call_expression [74394,74425]
                        member_expression: _roleMembers[role].add [74394,74416]
                        call_argument [74417,74424]
                            identifier: account [74417,74424]
        function_definition [74527,74733]
            function: function [74527,74535]
            identifier: _revokeRole [74536,74547]
            parameter [74548,74560]
                type_name: bytes32 [74548,74555]
                identifier: role [74556,74560]
            parameter [74562,74577]
                type_name: address [74562,74569]
                identifier: account [74570,74577]
            visibility: internal [74588,74596]
            virtual: virtual [74606,74613]
            override_specifier [74623,74631]
                override: override [74623,74631]
            function_body [74637,74733]
                expression_statement [74648,74681]
                    call_expression [74648,74680]
                        member_expression: super._revokeRole [74648,74665]
                        call_argument [74666,74670]
                            identifier: role [74666,74670]
                        call_argument [74672,74679]
                            identifier: account [74672,74679]
                expression_statement [74691,74726]
                    call_expression [74691,74725]
                        member_expression: _roleMembers[role].remove [74691,74716]
                        call_argument [74717,74724]
                            identifier: account [74717,74724]
        state_variable_declaration [75005,75031]
            type_name: uint256[49] [75005,75016]
            visibility: private [75017,75024]
            identifier: __gap [75025,75030]
to
source_file [0,132524]
at 33
===
move-tree
---
interface_declaration [48147,48615]
    interface: interface [48147,48156]
    identifier: IERC165Upgradeable [48157,48175]
    contract_body [48176,48615]
        function_definition [48536,48612]
            function: function [48536,48544]
            identifier: supportsInterface [48545,48562]
            parameter [48563,48581]
                type_name: bytes4 [48563,48569]
                identifier: interfaceId [48570,48581]
            visibility: external [48583,48591]
            state_mutability [48592,48596]
                view: view [48592,48596]
            return_type_definition [48597,48611]
                returns: returns [48597,48604]
                parameter [48606,48610]
                    type_name: bool [48606,48610]
to
source_file [0,132524]
at 15
===
move-tree
---
interface_declaration [80990,82463]
    interface: interface [80990,80999]
    identifier: IERC1155Custom [81000,81014]
    contract_body [81015,82463]
        function_definition [81022,81138]
            function: function [81022,81030]
            identifier: maxQuantityToPurchaseLimit [81031,81057]
            visibility: external [81069,81077]
            state_mutability [81087,81091]
                view: view [81087,81091]
            return_type_definition [81101,81137]
                returns: returns [81101,81108]
                parameter [81110,81136]
                    type_name: uint256 [81110,81117]
                    identifier: maxQuantityAllowed [81118,81136]
        struct_declaration [81146,81320]
            struct: struct [81146,81152]
            identifier: WhitelistParams [81153,81168]
            struct_member [81180,81199]
                type_name: bytes32 [81180,81187]
                identifier: merkleRoot [81188,81198]
            struct_member [81209,81225]
                type_name: uint256 [81209,81216]
                identifier: endTime [81217,81224]
            struct_member [81295,81313]
                type_name: uint256 [81295,81302]
                identifier: startTime [81303,81312]
        struct_declaration [81328,81806]
            struct: struct [81328,81334]
            identifier: Collection [81335,81345]
            struct_member [81357,81370]
                type_name: string [81357,81363]
                identifier: title [81364,81369]
            struct_member [81380,81399]
                type_name: string [81380,81386]
                identifier: description [81387,81398]
            struct_member [81409,81426]
                type_name: string [81409,81415]
                identifier: thumbnail [81416,81425]
            struct_member [81436,81451]
                type_name: string [81436,81442]
                identifier: bgImage [81443,81450]
            struct_member [81461,81476]
                type_name: string [81461,81467]
                identifier: bgColor [81468,81475]
            struct_member [81486,81505]
                type_name: uint256[] [81486,81495]
                identifier: tokenIds [81496,81504]
            struct_member [81515,81529]
                type_name: address [81515,81522]
                identifier: owner [81523,81528]
            struct_member [81539,81557]
                type_name: uint256 [81539,81546]
                identifier: createdAt [81547,81556]
            struct_member [81567,81585]
                type_name: uint256 [81567,81574]
                identifier: updatedAt [81575,81584]
            struct_member [81595,81620]
                type_name: int256 [81595,81601]
                identifier: userPurchaseLimit [81602,81619]
            struct_member [81630,81658]
                type_name: int256 [81630,81636]
                identifier: allowedPurchaseLimit [81637,81657]
            struct_member [81668,81693]
                type_name: uint256 [81668,81675]
                identifier: primarySoldCount [81676,81692]
            struct_member [81703,81737]
                type_name: WhitelistParams[] [81703,81720]
                identifier: whitelistParams [81721,81736]
        function_definition [81814,81877]
            function: function [81814,81822]
            identifier: getFirstOwner [81823,81836]
            parameter [81837,81848]
                type_name: uint256 [81837,81844]
                identifier: _id [81845,81848]
            visibility: external [81850,81858]
            return_type_definition [81859,81876]
                returns: returns [81859,81866]
                parameter [81868,81875]
                    type_name: address [81868,81875]
        function_definition [81885,81980]
            function: function [81885,81893]
            identifier: getCollectionData [81894,81911]
            parameter [81912,81923]
                type_name: uint256 [81912,81919]
                identifier: _id [81920,81923]
            visibility: external [81934,81942]
            return_type_definition [81952,81979]
                returns: returns [81952,81959]
                parameter [81961,81978]
                    type_name: Collection [81961,81971]
                    memory: memory [81972,81978]
        function_definition [81988,82056]
            function: function [81988,81996]
            identifier: getNFTCollectionId [81997,82015]
            parameter [82016,82027]
                type_name: uint256 [82016,82023]
                identifier: _id [82024,82027]
            visibility: external [82029,82037]
            return_type_definition [82038,82055]
                returns: returns [82038,82045]
                parameter [82047,82054]
                    type_name: uint256 [82047,82054]
        function_definition [82161,82320]
            function: function [82161,82169]
            identifier: updateCollectionAfterPrimarySale [82170,82202]
            parameter [82213,82228]
                type_name: address [82213,82220]
                identifier: account [82221,82228]
            parameter [82239,82260]
                type_name: uint256 [82239,82246]
                identifier: _collectionId [82247,82260]
            parameter [82271,82288]
                type_name: uint256 [82271,82278]
                identifier: _quantity [82279,82288]
            visibility: external [82296,82304]
            return_type_definition [82305,82319]
                returns: returns [82305,82312]
                parameter [82314,82318]
                    type_name: bool [82314,82318]
        function_definition [82328,82460]
            function: function [82328,82336]
            identifier: getPrimarySaleUserCount [82337,82360]
            parameter [82361,82376]
                type_name: address [82361,82368]
                identifier: account [82369,82376]
            parameter [82378,82399]
                type_name: uint256 [82378,82385]
                identifier: _collectionId [82386,82399]
            visibility: external [82410,82418]
            state_mutability [82428,82432]
                view: view [82428,82432]
            return_type_definition [82442,82459]
                returns: returns [82442,82449]
                parameter [82451,82458]
                    type_name: uint256 [82451,82458]
to
source_file [0,132524]
at 50
===
move-tree
---
contract_declaration [44763,45466]
    abstract: abstract [44763,44771]
    identifier: ContextUpgradeable [44781,44799]
    is: is [44800,44802]
    inheritance_specifier [44803,44816]
        user_defined_type [44803,44816]
            identifier: Initializable [44803,44816]
    contract_body [44817,45466]
        function_definition [44824,44878]
            function: function [44824,44832]
            identifier: __Context_init [44833,44847]
            visibility: internal [44850,44858]
            modifier_invocation [44859,44875]
                identifier: onlyInitializing [44859,44875]
            function_body [44876,44878]
        function_definition [44886,44950]
            function: function [44886,44894]
            identifier: __Context_init_unchained [44895,44919]
            visibility: internal [44922,44930]
            modifier_invocation [44931,44947]
                identifier: onlyInitializing [44931,44947]
            function_body [44948,44950]
        function_definition [44958,45056]
            function: function [44958,44966]
            identifier: _msgSender [44967,44977]
            visibility: internal [44980,44988]
            state_mutability [44989,44993]
                view: view [44989,44993]
            virtual: virtual [44994,45001]
            return_type_definition [45002,45019]
                returns: returns [45002,45009]
                parameter [45011,45018]
                    type_name: address [45011,45018]
            function_body [45020,45056]
                return_statement [45031,45049]
                    return: return [45031,45037]
                    member_expression: msg.sender [45038,45048]
        function_definition [45064,45165]
            function: function [45064,45072]
            identifier: _msgData [45073,45081]
            visibility: internal [45084,45092]
            state_mutability [45093,45097]
                view: view [45093,45097]
            virtual: virtual [45098,45105]
            return_type_definition [45106,45130]
                returns: returns [45106,45113]
                parameter [45115,45129]
                    type_name: bytes [45115,45120]
                    calldata: calldata [45121,45129]
            function_body [45131,45165]
                return_statement [45142,45158]
                    return: return [45142,45148]
                    member_expression: msg.data [45149,45157]
        state_variable_declaration [45437,45463]
            type_name: uint256[50] [45437,45448]
            visibility: private [45449,45456]
            identifier: __gap [45457,45462]
to
source_file [0,132524]
at 12
===
move-tree
---
interface_declaration [13558,14258]
    interface: interface [13558,13567]
    identifier: IERC721Receiver [13568,13583]
    contract_body [13584,14258]
        function_definition [14090,14255]
            function: function [14090,14098]
            identifier: onERC721Received [14099,14115]
            parameter [14126,14142]
                type_name: address [14126,14133]
                identifier: operator [14134,14142]
            parameter [14153,14165]
                type_name: address [14153,14160]
                identifier: from [14161,14165]
            parameter [14176,14191]
                type_name: uint256 [14176,14183]
                identifier: tokenId [14184,14191]
            parameter [14202,14221]
                type_name: bytes [14202,14207]
                calldata: calldata [14208,14216]
                identifier: data [14217,14221]
            visibility: external [14229,14237]
            return_type_definition [14238,14254]
                returns: returns [14238,14245]
                parameter [14247,14253]
                    type_name: bytes4 [14247,14253]
to
source_file [0,132524]
at 48
===
move-tree
---
interface_declaration [80718,80908]
    interface: interface [80718,80727]
    identifier: IWETH [80728,80733]
    contract_body [80734,80908]
        function_definition [80741,80777]
            function: function [80741,80749]
            identifier: deposit [80750,80757]
            visibility: external [80760,80768]
            state_mutability [80769,80776]
                payable: payable [80769,80776]
        function_definition [80785,80828]
            function: function [80785,80793]
            identifier: withdraw [80794,80802]
            parameter [80803,80817]
                type_name: uint256 [80803,80810]
                identifier: amount [80811,80817]
            visibility: external [80819,80827]
        function_definition [80836,80905]
            function: function [80836,80844]
            identifier: transfer [80845,80853]
            parameter [80854,80864]
                type_name: address [80854,80861]
                identifier: to [80862,80864]
            parameter [80866,80879]
                type_name: uint256 [80866,80873]
                identifier: value [80874,80879]
            visibility: external [80881,80889]
            return_type_definition [80890,80904]
                returns: returns [80890,80897]
                parameter [80899,80903]
                    type_name: bool [80899,80903]
to
source_file [0,132524]
at 50
===
move-tree
---
interface_declaration [24429,25031]
    interface: interface [24429,24438]
    identifier: IERC2981 [24439,24447]
    is: is [24448,24450]
    inheritance_specifier [24451,24458]
        user_defined_type [24451,24458]
            identifier: IERC165 [24451,24458]
    contract_body [24459,25031]
        function_definition [24880,25028]
            function: function [24880,24888]
            identifier: royaltyInfo [24889,24900]
            parameter [24901,24916]
                type_name: uint256 [24901,24908]
                identifier: tokenId [24909,24916]
            parameter [24918,24935]
                type_name: uint256 [24918,24925]
                identifier: salePrice [24926,24935]
            visibility: external [24946,24954]
            state_mutability [24964,24968]
                view: view [24964,24968]
            return_type_definition [24978,25027]
                returns: returns [24978,24985]
                parameter [24987,25003]
                    type_name: address [24987,24994]
                    identifier: receiver [24995,25003]
                parameter [25005,25026]
                    type_name: uint256 [25005,25012]
                    identifier: royaltyAmount [25013,25026]
to
source_file [0,132524]
at 39
===
move-tree
---
interface_declaration [75114,80645]
    interface: interface [75114,75123]
    identifier: IMarketplace [75124,75136]
    contract_body [75137,80645]
        enum_declaration [75209,75266]
            enum: enum [75209,75213]
            identifier: TokenType [75214,75223]
            enum_value: ERC721 [75235,75241]
            enum_value: ERC1155 [75252,75259]
        enum_declaration [75466,75525]
            enum: enum [75466,75470]
            identifier: ListingType [75471,75482]
            enum_value: Direct [75494,75500]
            enum_value: Auction [75511,75518]
        enum_declaration [75725,75784]
            enum: enum [75725,75729]
            identifier: SaleType [75730,75738]
            enum_value: Primary [75750,75757]
            enum_value: Secondary [75768,75777]
        enum_declaration [75792,75847]
            enum: enum [75792,75796]
            identifier: AssetType [75797,75806]
            enum_value: NFT [75818,75821]
            enum_value: CURRENCY [75832,75840]
        struct_declaration [77227,77479]
            struct: struct [77227,77233]
            identifier: ListingParameters [77234,77251]
            struct_member [77263,77285]
                type_name: address [77263,77270]
                identifier: assetContract [77271,77284]
            struct_member [77295,77311]
                type_name: uint256 [77295,77302]
                identifier: tokenId [77303,77310]
            struct_member [77321,77344]
                type_name: uint256 [77321,77328]
                identifier: quantityToList [77329,77343]
            struct_member [77354,77379]
                type_name: address [77354,77361]
                identifier: currencyToAccept [77362,77378]
            struct_member [77389,77409]
                type_name: uint256 [77389,77396]
                identifier: buyoutPrice [77397,77408]
            struct_member [77419,77443]
                type_name: ListingType [77419,77430]
                identifier: listingType [77431,77442]
            struct_member [77453,77472]
                type_name: address [77453,77460]
                identifier: tokenOwner [77461,77471]
        struct_declaration [77615,77929]
            struct: struct [77615,77621]
            identifier: Listing [77622,77629]
            struct_member [77641,77659]
                type_name: uint256 [77641,77648]
                identifier: listingId [77649,77658]
            struct_member [77669,77688]
                type_name: address [77669,77676]
                identifier: tokenOwner [77677,77687]
            struct_member [77698,77720]
                type_name: address [77698,77705]
                identifier: assetContract [77706,77719]
            struct_member [77730,77746]
                type_name: uint256 [77730,77737]
                identifier: tokenId [77738,77745]
            struct_member [77756,77773]
                type_name: uint256 [77756,77763]
                identifier: quantity [77764,77772]
            struct_member [77783,77800]
                type_name: address [77783,77790]
                identifier: currency [77791,77799]
            struct_member [77810,77830]
                type_name: uint256 [77810,77817]
                identifier: buyoutPrice [77818,77829]
            struct_member [77840,77860]
                type_name: TokenType [77840,77849]
                identifier: tokenType [77850,77859]
            struct_member [77870,77894]
                type_name: ListingType [77870,77881]
                identifier: listingType [77882,77893]
            struct_member [77904,77922]
                type_name: SaleType [77904,77912]
                identifier: saleType [77913,77921]
        event_definition [77990,78175]
            identifier: NewListing [77996,78006]
            event_paramater [78017,78042]
                type_name: uint256 [78017,78024]
                indexed: indexed [78025,78032]
                identifier: listingId [78033,78042]
            event_paramater [78053,78082]
                type_name: address [78053,78060]
                indexed: indexed [78061,78068]
                identifier: assetContract [78069,78082]
            event_paramater [78093,78108]
                type_name: uint256 [78093,78100]
                identifier: tokenId [78101,78108]
            event_paramater [78119,78141]
                type_name: address [78119,78126]
                indexed: indexed [78127,78134]
                identifier: lister [78135,78141]
            event_paramater [78152,78167]
                type_name: Listing [78152,78159]
                identifier: listing [78160,78167]
        event_definition [78340,78581]
            identifier: NewSale [78346,78353]
            event_paramater [78364,78389]
                type_name: uint256 [78364,78371]
                indexed: indexed [78372,78379]
                identifier: listingId [78380,78389]
            event_paramater [78400,78429]
                type_name: address [78400,78407]
                indexed: indexed [78408,78415]
                identifier: assetContract [78416,78429]
            event_paramater [78440,78455]
                type_name: uint256 [78440,78447]
                identifier: tokenId [78448,78455]
            event_paramater [78466,78488]
                type_name: address [78466,78473]
                indexed: indexed [78474,78481]
                identifier: lister [78482,78488]
            event_paramater [78499,78512]
                type_name: address [78499,78506]
                identifier: buyer [78507,78512]
            event_paramater [78523,78545]
                type_name: uint256 [78523,78530]
                identifier: quantityBought [78531,78545]
            event_paramater [78556,78573]
                type_name: uint256 [78556,78563]
                identifier: pricePaid [78564,78573]
        event_definition [78589,78706]
            identifier: FundsWithdrawn [78595,78609]
            event_paramater [78620,78638]
                type_name: address [78620,78627]
                indexed: indexed [78628,78635]
                identifier: to [78636,78638]
            event_paramater [78649,78673]
                type_name: address [78649,78656]
                indexed: indexed [78657,78664]
                identifier: currency [78665,78673]
            event_paramater [78684,78698]
                type_name: uint256 [78684,78691]
                identifier: amount [78692,78698]
        event_definition [78714,78870]
            identifier: AssetWhitelisted [78720,78736]
            event_paramater [78747,78776]
                type_name: address [78747,78754]
                indexed: indexed [78755,78762]
                identifier: assetContract [78763,78776]
            event_paramater [78787,78806]
                type_name: AssetType [78787,78796]
                identifier: assetType [78797,78806]
            event_paramater [78817,78833]
                type_name: address [78817,78824]
                identifier: listedBy [78825,78833]
            event_paramater [78844,78862]
                type_name: bool [78844,78848]
                identifier: isWhitelisted [78849,78862]
        function_definition [79536,79602]
            function: function [79536,79544]
            identifier: createListing [79545,79558]
            parameter [79559,79591]
                type_name: ListingParameters [79559,79576]
                memory: memory [79577,79583]
                identifier: _params [79584,79591]
            visibility: external [79593,79601]
        function_definition [80228,80414]
            function: function [80228,80236]
            identifier: buy [80237,80240]
            parameter [80251,80269]
                type_name: uint256 [80251,80258]
                identifier: _listingId [80259,80269]
            parameter [80280,80297]
                type_name: address [80280,80287]
                identifier: _currency [80288,80297]
            parameter [80308,80322]
                type_name: uint256 [80308,80315]
                identifier: _price [80316,80322]
            parameter [80333,80355]
                type_name: uint256 [80333,80340]
                identifier: _quantityToBuy [80341,80355]
            parameter [80366,80389]
                type_name: bytes32[] [80366,80375]
                memory: memory [80376,80382]
                identifier: _proof [80383,80389]
            visibility: external [80397,80405]
            state_mutability [80406,80413]
                payable: payable [80406,80413]
        function_definition [80422,80642]
            function: function [80422,80430]
            identifier: delegatedBuy [80431,80443]
            parameter [80454,80472]
                type_name: uint256 [80454,80461]
                identifier: _listingId [80462,80472]
            parameter [80483,80500]
                type_name: address [80483,80490]
                identifier: _currency [80491,80500]
            parameter [80511,80525]
                type_name: uint256 [80511,80518]
                identifier: _price [80519,80525]
            parameter [80536,80558]
                type_name: uint256 [80536,80543]
                identifier: _quantityToBuy [80544,80558]
            parameter [80569,80583]
                type_name: address [80569,80576]
                identifier: _buyer [80577,80583]
            parameter [80594,80617]
                type_name: bytes32[] [80594,80603]
                memory: memory [80604,80610]
                identifier: _proof [80611,80617]
            visibility: external [80625,80633]
            state_mutability [80634,80641]
                payable: payable [80634,80641]
to
source_file [0,132524]
at 50
===
move-tree
---
interface_declaration [17574,21551]
    interface: interface [17574,17583]
    identifier: IERC1155 [17584,17592]
    is: is [17593,17595]
    inheritance_specifier [17596,17603]
        user_defined_type [17596,17603]
            identifier: IERC165 [17596,17603]
    contract_body [17604,21551]
        event_definition [17740,17908]
            identifier: TransferSingle [17746,17760]
            event_paramater [17771,17795]
                type_name: address [17771,17778]
                indexed: indexed [17779,17786]
                identifier: operator [17787,17795]
            event_paramater [17806,17826]
                type_name: address [17806,17813]
                indexed: indexed [17814,17821]
                identifier: from [17822,17826]
            event_paramater [17837,17855]
                type_name: address [17837,17844]
                indexed: indexed [17845,17852]
                identifier: to [17853,17855]
            event_paramater [17866,17876]
                type_name: uint256 [17866,17873]
                identifier: id [17874,17876]
            event_paramater [17887,17900]
                type_name: uint256 [17887,17894]
                identifier: value [17895,17900]
        event_definition [18069,18242]
            identifier: TransferBatch [18075,18088]
            event_paramater [18099,18123]
                type_name: address [18099,18106]
                indexed: indexed [18107,18114]
                identifier: operator [18115,18123]
            event_paramater [18134,18154]
                type_name: address [18134,18141]
                indexed: indexed [18142,18149]
                identifier: from [18150,18154]
            event_paramater [18165,18183]
                type_name: address [18165,18172]
                indexed: indexed [18173,18180]
                identifier: to [18181,18183]
            event_paramater [18194,18207]
                type_name: uint256[] [18194,18203]
                identifier: ids [18204,18207]
            event_paramater [18218,18234]
                type_name: uint256[] [18218,18227]
                identifier: values [18228,18234]
        event_definition [18406,18527]
            identifier: ApprovalForAll [18412,18426]
            event_paramater [18437,18460]
                type_name: address [18437,18444]
                indexed: indexed [18445,18452]
                identifier: account [18453,18460]
            event_paramater [18471,18495]
                type_name: address [18471,18478]
                indexed: indexed [18479,18486]
                identifier: operator [18487,18495]
            event_paramater [18506,18519]
                type_name: bool [18506,18510]
                identifier: approved [18511,18519]
        event_definition [18890,18934]
            identifier: URI [18896,18899]
            event_paramater [18900,18912]
                type_name: string [18900,18906]
                identifier: value [18907,18912]
            event_paramater [18914,18932]
                type_name: uint256 [18914,18921]
                indexed: indexed [18922,18929]
                identifier: id [18930,18932]
        function_definition [19127,19234]
            function: function [19127,19135]
            identifier: balanceOf [19136,19145]
            parameter [19146,19161]
                type_name: address [19146,19153]
                identifier: account [19154,19161]
            parameter [19163,19173]
                type_name: uint256 [19163,19170]
                identifier: id [19171,19173]
            visibility: external [19184,19192]
            state_mutability [19202,19206]
                view: view [19202,19206]
            return_type_definition [19216,19233]
                returns: returns [19216,19223]
                parameter [19225,19232]
                    type_name: uint256 [19225,19232]
        function_definition [19442,19587]
            function: function [19442,19450]
            identifier: balanceOfBatch [19451,19465]
            parameter [19466,19493]
                type_name: address[] [19466,19475]
                calldata: calldata [19476,19484]
                identifier: accounts [19485,19493]
            parameter [19495,19517]
                type_name: uint256[] [19495,19504]
                calldata: calldata [19505,19513]
                identifier: ids [19514,19517]
            visibility: external [19528,19536]
            state_mutability [19546,19550]
                view: view [19546,19550]
            return_type_definition [19560,19586]
                returns: returns [19560,19567]
                parameter [19569,19585]
                    type_name: uint256[] [19569,19578]
                    memory: memory [19579,19585]
        function_definition [19857,19926]
            function: function [19857,19865]
            identifier: setApprovalForAll [19866,19883]
            parameter [19884,19900]
                type_name: address [19884,19891]
                identifier: operator [19892,19900]
            parameter [19902,19915]
                type_name: bool [19902,19906]
                identifier: approved [19907,19915]
            visibility: external [19917,19925]
        function_definition [20079,20196]
            function: function [20079,20087]
            identifier: isApprovedForAll [20088,20104]
            parameter [20105,20120]
                type_name: address [20105,20112]
                identifier: account [20113,20120]
            parameter [20122,20138]
                type_name: address [20122,20129]
                identifier: operator [20130,20138]
            visibility: external [20149,20157]
            state_mutability [20167,20171]
                view: view [20167,20171]
            return_type_definition [20181,20195]
                returns: returns [20181,20188]
                parameter [20190,20194]
                    type_name: bool [20190,20194]
        function_definition [20781,20943]
            function: function [20781,20789]
            identifier: safeTransferFrom [20790,20806]
            parameter [20817,20829]
                type_name: address [20817,20824]
                identifier: from [20825,20829]
            parameter [20840,20850]
                type_name: address [20840,20847]
                identifier: to [20848,20850]
            parameter [20861,20871]
                type_name: uint256 [20861,20868]
                identifier: id [20869,20871]
            parameter [20882,20896]
                type_name: uint256 [20882,20889]
                identifier: amount [20890,20896]
            parameter [20907,20926]
                type_name: bytes [20907,20912]
                calldata: calldata [20913,20921]
                identifier: data [20922,20926]
            visibility: external [20934,20942]
        function_definition [21357,21548]
            function: function [21357,21365]
            identifier: safeBatchTransferFrom [21366,21387]
            parameter [21398,21410]
                type_name: address [21398,21405]
                identifier: from [21406,21410]
            parameter [21421,21431]
                type_name: address [21421,21428]
                identifier: to [21429,21431]
            parameter [21442,21464]
                type_name: uint256[] [21442,21451]
                calldata: calldata [21452,21460]
                identifier: ids [21461,21464]
            parameter [21475,21501]
                type_name: uint256[] [21475,21484]
                calldata: calldata [21485,21493]
                identifier: amounts [21494,21501]
            parameter [21512,21531]
                type_name: bytes [21512,21517]
                calldata: calldata [21518,21526]
                identifier: data [21527,21531]
            visibility: external [21539,21547]
to
source_file [0,132524]
at 40
===
move-tree
---
interface_declaration [39813,42742]
    interface: interface [39813,39822]
    identifier: IAccessControlUpgradeable [39823,39848]
    contract_body [39849,42742]
        event_definition [40161,40305]
            identifier: RoleAdminChanged [40167,40183]
            event_paramater [40194,40214]
                type_name: bytes32 [40194,40201]
                indexed: indexed [40202,40209]
                identifier: role [40210,40214]
            event_paramater [40225,40258]
                type_name: bytes32 [40225,40232]
                indexed: indexed [40233,40240]
                identifier: previousAdminRole [40241,40258]
            event_paramater [40269,40297]
                type_name: bytes32 [40269,40276]
                indexed: indexed [40277,40284]
                identifier: newAdminRole [40285,40297]
        event_definition [40536,40659]
            identifier: RoleGranted [40542,40553]
            event_paramater [40564,40584]
                type_name: bytes32 [40564,40571]
                indexed: indexed [40572,40579]
                identifier: role [40580,40584]
            event_paramater [40595,40618]
                type_name: address [40595,40602]
                indexed: indexed [40603,40610]
                identifier: account [40611,40618]
            event_paramater [40629,40651]
                type_name: address [40629,40636]
                indexed: indexed [40637,40644]
                identifier: sender [40645,40651]
        event_definition [40954,41077]
            identifier: RoleRevoked [40960,40971]
            event_paramater [40982,41002]
                type_name: bytes32 [40982,40989]
                indexed: indexed [40990,40997]
                identifier: role [40998,41002]
            event_paramater [41013,41036]
                type_name: address [41013,41020]
                indexed: indexed [41021,41028]
                identifier: account [41029,41036]
            event_paramater [41047,41069]
                type_name: address [41047,41054]
                indexed: indexed [41055,41062]
                identifier: sender [41063,41069]
        function_definition [41169,41273]
            function: function [41169,41177]
            identifier: hasRole [41178,41185]
            parameter [41186,41198]
                type_name: bytes32 [41186,41193]
                identifier: role [41194,41198]
            parameter [41200,41215]
                type_name: address [41200,41207]
                identifier: account [41208,41215]
            visibility: external [41226,41234]
            state_mutability [41244,41248]
                view: view [41244,41248]
            return_type_definition [41258,41272]
                returns: returns [41258,41265]
                parameter [41267,41271]
                    type_name: bool [41267,41271]
        function_definition [41476,41544]
            function: function [41476,41484]
            identifier: getRoleAdmin [41485,41497]
            parameter [41498,41510]
                type_name: bytes32 [41498,41505]
                identifier: role [41506,41510]
            visibility: external [41512,41520]
            state_mutability [41521,41525]
                view: view [41521,41525]
            return_type_definition [41526,41543]
                returns: returns [41526,41533]
                parameter [41535,41542]
                    type_name: bytes32 [41535,41542]
        function_definition [41806,41865]
            function: function [41806,41814]
            identifier: grantRole [41815,41824]
            parameter [41825,41837]
                type_name: bytes32 [41825,41832]
                identifier: role [41833,41837]
            parameter [41839,41854]
                type_name: address [41839,41846]
                identifier: account [41847,41854]
            visibility: external [41856,41864]
        function_definition [42110,42170]
            function: function [42110,42118]
            identifier: revokeRole [42119,42129]
            parameter [42130,42142]
                type_name: bytes32 [42130,42137]
                identifier: role [42138,42142]
            parameter [42144,42159]
                type_name: address [42144,42151]
                identifier: account [42152,42159]
            visibility: external [42161,42169]
        function_definition [42677,42739]
            function: function [42677,42685]
            identifier: renounceRole [42686,42698]
            parameter [42699,42711]
                type_name: bytes32 [42699,42706]
                identifier: role [42707,42711]
            parameter [42713,42728]
                type_name: address [42713,42720]
                identifier: account [42721,42728]
            visibility: external [42730,42738]
to
source_file [0,132524]
at 1
===
move-tree
---
interface_declaration [21775,24059]
    interface: interface [21775,21784]
    identifier: IERC1155Receiver [21785,21801]
    is: is [21802,21804]
    inheritance_specifier [21805,21812]
        user_defined_type [21805,21812]
            identifier: IERC165 [21805,21812]
    contract_body [21813,24059]
        function_definition [22654,22839]
            function: function [22654,22662]
            identifier: onERC1155Received [22663,22680]
            parameter [22691,22707]
                type_name: address [22691,22698]
                identifier: operator [22699,22707]
            parameter [22718,22730]
                type_name: address [22718,22725]
                identifier: from [22726,22730]
            parameter [22741,22751]
                type_name: uint256 [22741,22748]
                identifier: id [22749,22751]
            parameter [22762,22775]
                type_name: uint256 [22762,22769]
                identifier: value [22770,22775]
            parameter [22786,22805]
                type_name: bytes [22786,22791]
                calldata: calldata [22792,22800]
                identifier: data [22801,22805]
            visibility: external [22813,22821]
            return_type_definition [22822,22838]
                returns: returns [22822,22829]
                parameter [22831,22837]
                    type_name: bytes4 [22831,22837]
        function_definition [23842,24056]
            function: function [23842,23850]
            identifier: onERC1155BatchReceived [23851,23873]
            parameter [23884,23900]
                type_name: address [23884,23891]
                identifier: operator [23892,23900]
            parameter [23911,23923]
                type_name: address [23911,23918]
                identifier: from [23919,23923]
            parameter [23934,23956]
                type_name: uint256[] [23934,23943]
                calldata: calldata [23944,23952]
                identifier: ids [23953,23956]
            parameter [23967,23992]
                type_name: uint256[] [23967,23976]
                calldata: calldata [23977,23985]
                identifier: values [23986,23992]
            parameter [24003,24022]
                type_name: bytes [24003,24008]
                calldata: calldata [24009,24017]
                identifier: data [24018,24022]
            visibility: external [24030,24038]
            return_type_definition [24039,24055]
                returns: returns [24039,24046]
                parameter [24048,24054]
                    type_name: bytes4 [24048,24054]
to
source_file [0,132524]
at 41
===
move-tree
---
library_declaration [45674,47660]
    library: library [45674,45681]
    identifier: StringsUpgradeable [45682,45700]
    contract_body [45701,47660]
        state_variable_declaration [45708,45767]
            type_name: bytes16 [45708,45715]
            visibility: private [45716,45723]
            constant: constant [45724,45732]
            identifier: _HEX_SYMBOLS [45733,45745]
            affectation_operator: = [45746,45747]
            string_literal [45748,45766]
                string: "0123456789abcdef" [45748,45766]
        function_definition [45873,46596]
            function: function [45873,45881]
            identifier: toString [45882,45890]
            parameter [45891,45904]
                type_name: uint256 [45891,45898]
                identifier: value [45899,45904]
            visibility: internal [45906,45914]
            state_mutability [45915,45919]
                pure: pure [45915,45919]
            return_type_definition [45920,45943]
                returns: returns [45920,45927]
                parameter [45929,45942]
                    type_name: string [45929,45935]
                    memory: memory [45936,45942]
            function_body [45944,46596]
                if_statement [46146,46199]
                    if: if [46146,46148]
                    binary_expression [46150,46160]
                        identifier: value [46150,46155]
                        comparison_operator: == [46156,46158]
                        number_literal: 0 [46159,46160]
                    block_statement [46162,46199]
                        return_statement [46177,46188]
                            return: return [46177,46183]
                            string_literal [46184,46187]
                                string: "0" [46184,46187]
                variable_declaration_statement [46209,46230]
                    variable_declaration [46209,46221]
                        type_name: uint256 [46209,46216]
                        identifier: temp [46217,46221]
                    affectation_operator: = [46222,46223]
                    identifier: value [46224,46229]
                variable_declaration_statement [46240,46255]
                    variable_declaration [46240,46254]
                        type_name: uint256 [46240,46247]
                        identifier: digits [46248,46254]
                while_statement [46265,46343]
                    while: while [46265,46270]
                    binary_expression [46272,46281]
                        identifier: temp [46272,46276]
                        comparison_operator: != [46277,46279]
                        number_literal: 0 [46280,46281]
                    block_statement [46283,46343]
                        expression_statement [46298,46307]
                            update_expression [46298,46306]
                                identifier: digits [46298,46304]
                                increment_operator: ++ [46304,46306]
                        expression_statement [46321,46332]
                            augmented_assignment_expression [46321,46331]
                                identifier: temp [46321,46325]
                                affectation_operator: /= [46326,46328]
                                number_literal: 10 [46329,46331]
                variable_declaration_statement [46353,46393]
                    variable_declaration [46353,46372]
                        type_name: bytes [46353,46358]
                        memory: memory [46359,46365]
                        identifier: buffer [46366,46372]
                    affectation_operator: = [46373,46374]
                    call_expression [46375,46392]
                        new_expression [46375,46384]
                            new: new [46375,46378]
                            type_name: bytes [46379,46384]
                        call_argument [46385,46391]
                            identifier: digits [46385,46391]
                while_statement [46403,46557]
                    while: while [46403,46408]
                    binary_expression [46410,46420]
                        identifier: value [46410,46415]
                        comparison_operator: != [46416,46418]
                        number_literal: 0 [46419,46420]
                    block_statement [46422,46557]
                        expression_statement [46437,46449]
                            augmented_assignment_expression [46437,46448]
                                identifier: digits [46437,46443]
                                affectation_operator: -= [46444,46446]
                                number_literal: 1 [46447,46448]
                        expression_statement [46463,46520]
                            assignment_expression [46463,46519]
                                array_access [46463,46477]
                                    identifier: buffer [46463,46469]
                                    identifier: digits [46470,46476]
                                affectation_operator: = [46478,46479]
                                type_cast_expression [46480,46519]
                                    primitive_type: bytes1 [46480,46486]
                                    call_argument [46487,46518]
                                        type_cast_expression [46487,46518]
                                            primitive_type: uint8 [46487,46492]
                                            call_argument [46493,46517]
                                                binary_expression [46493,46517]
                                                    number_literal: 48 [46493,46495]
                                                    arithmetic_operator: + [46496,46497]
                                                    type_cast_expression [46498,46517]
                                                        primitive_type: uint256 [46498,46505]
                                                        call_argument [46506,46516]
                                                            binary_expression [46506,46516]
                                                                identifier: value [46506,46511]
                                                                %: % [46512,46513]
                                                                number_literal: 10 [46514,46516]
                        expression_statement [46534,46546]
                            augmented_assignment_expression [46534,46545]
                                identifier: value [46534,46539]
                                affectation_operator: /= [46540,46542]
                                number_literal: 10 [46543,46545]
                return_statement [46567,46589]
                    return: return [46567,46573]
                    type_cast_expression [46574,46588]
                        primitive_type: string [46574,46580]
                        call_argument [46581,46587]
                            identifier: buffer [46581,46587]
        function_definition [46706,47046]
            function: function [46706,46714]
            identifier: toHexString [46715,46726]
            parameter [46727,46740]
                type_name: uint256 [46727,46734]
                identifier: value [46735,46740]
            visibility: internal [46742,46750]
            state_mutability [46751,46755]
                pure: pure [46751,46755]
            return_type_definition [46756,46779]
                returns: returns [46756,46763]
                parameter [46765,46778]
                    type_name: string [46765,46771]
                    memory: memory [46772,46778]
            function_body [46780,47046]
                if_statement [46791,46847]
                    if: if [46791,46793]
                    binary_expression [46795,46805]
                        identifier: value [46795,46800]
                        comparison_operator: == [46801,46803]
                        number_literal: 0 [46804,46805]
                    block_statement [46807,46847]
                        return_statement [46822,46836]
                            return: return [46822,46828]
                            string_literal [46829,46835]
                                string: "0x00" [46829,46835]
                variable_declaration_statement [46857,46878]
                    variable_declaration [46857,46869]
                        type_name: uint256 [46857,46864]
                        identifier: temp [46865,46869]
                    affectation_operator: = [46870,46871]
                    identifier: value [46872,46877]
                variable_declaration_statement [46888,46907]
                    variable_declaration [46888,46902]
                        type_name: uint256 [46888,46895]
                        identifier: length [46896,46902]
                    affectation_operator: = [46903,46904]
                    number_literal: 0 [46905,46906]
                while_statement [46917,46995]
                    while: while [46917,46922]
                    binary_expression [46924,46933]
                        identifier: temp [46924,46928]
                        comparison_operator: != [46929,46931]
                        number_literal: 0 [46932,46933]
                    block_statement [46935,46995]
                        expression_statement [46950,46959]
                            update_expression [46950,46958]
                                identifier: length [46950,46956]
                                increment_operator: ++ [46956,46958]
                        expression_statement [46973,46984]
                            augmented_assignment_expression [46973,46983]
                                identifier: temp [46973,46977]
                                >>=: >>= [46978,46981]
                                number_literal: 8 [46982,46983]
                return_statement [47005,47039]
                    return: return [47005,47011]
                    call_expression [47012,47038]
                        identifier: toHexString [47012,47023]
                        call_argument [47024,47029]
                            identifier: value [47024,47029]
                        call_argument [47031,47037]
                            identifier: length [47031,47037]
        function_definition [47174,47657]
            function: function [47174,47182]
            identifier: toHexString [47183,47194]
            parameter [47195,47208]
                type_name: uint256 [47195,47202]
                identifier: value [47203,47208]
            parameter [47210,47224]
                type_name: uint256 [47210,47217]
                identifier: length [47218,47224]
            visibility: internal [47235,47243]
            state_mutability [47253,47257]
                pure: pure [47253,47257]
            return_type_definition [47267,47290]
                returns: returns [47267,47274]
                parameter [47276,47289]
                    type_name: string [47276,47282]
                    memory: memory [47283,47289]
            function_body [47296,47657]
                variable_declaration_statement [47307,47355]
                    variable_declaration [47307,47326]
                        type_name: bytes [47307,47312]
                        memory: memory [47313,47319]
                        identifier: buffer [47320,47326]
                    affectation_operator: = [47327,47328]
                    call_expression [47329,47354]
                        new_expression [47329,47338]
                            new: new [47329,47332]
                            type_name: bytes [47333,47338]
                        call_argument [47339,47353]
                            binary_expression [47339,47353]
                                binary_expression [47339,47349]
                                    number_literal: 2 [47339,47340]
                                    arithmetic_operator: * [47341,47342]
                                    identifier: length [47343,47349]
                                arithmetic_operator: + [47350,47351]
                                number_literal: 2 [47352,47353]
                expression_statement [47365,47381]
                    assignment_expression [47365,47380]
                        array_access [47365,47374]
                            identifier: buffer [47365,47371]
                            number_literal: 0 [47372,47373]
                        affectation_operator: = [47375,47376]
                        string_literal [47377,47380]
                            string: "0" [47377,47380]
                expression_statement [47391,47407]
                    assignment_expression [47391,47406]
                        array_access [47391,47400]
                            identifier: buffer [47391,47397]
                            number_literal: 1 [47398,47399]
                        affectation_operator: = [47401,47402]
                        string_literal [47403,47406]
                            string: "x" [47403,47406]
                for_statement [47417,47552]
                    for: for [47417,47420]
                    variable_declaration_statement [47422,47449]
                        variable_declaration [47422,47431]
                            type_name: uint256 [47422,47429]
                            identifier: i [47430,47431]
                        affectation_operator: = [47432,47433]
                        binary_expression [47434,47448]
                            binary_expression [47434,47444]
                                number_literal: 2 [47434,47435]
                                arithmetic_operator: * [47436,47437]
                                identifier: length [47438,47444]
                            arithmetic_operator: + [47445,47446]
                            number_literal: 1 [47447,47448]
                    expression_statement [47450,47456]
                        binary_expression [47450,47455]
                            identifier: i [47450,47451]
                            comparison_operator: > [47452,47453]
                            number_literal: 1 [47454,47455]
                    update_expression [47457,47460]
                        increment_operator: -- [47457,47459]
                        identifier: i [47459,47460]
                    block_statement [47462,47552]
                        expression_statement [47477,47515]
                            assignment_expression [47477,47514]
                                array_access [47477,47486]
                                    identifier: buffer [47477,47483]
                                    identifier: i [47484,47485]
                                affectation_operator: = [47487,47488]
                                array_access [47489,47514]
                                    identifier: _HEX_SYMBOLS [47489,47501]
                                    binary_expression [47502,47513]
                                        identifier: value [47502,47507]
                                        bitwise_operator: & [47508,47509]
                                        number_literal: 0xf [47510,47513]
                        expression_statement [47529,47541]
                            augmented_assignment_expression [47529,47540]
                                identifier: value [47529,47534]
                                >>=: >>= [47535,47538]
                                number_literal: 4 [47539,47540]
                expression_statement [47562,47618]
                    call_expression [47562,47617]
                        identifier: require [47562,47569]
                        call_argument [47570,47580]
                            binary_expression [47570,47580]
                                identifier: value [47570,47575]
                                comparison_operator: == [47576,47578]
                                number_literal: 0 [47579,47580]
                        call_argument [47582,47616]
                            string_literal [47582,47616]
                                string: "Strings: hex length insufficient" [47582,47616]
                return_statement [47628,47650]
                    return: return [47628,47634]
                    type_cast_expression [47635,47649]
                        primitive_type: string [47635,47641]
                        call_argument [47642,47648]
                            identifier: buffer [47642,47648]
to
source_file [0,132524]
at 23
===
move-tree
---
interface_declaration [82544,83767]
    interface: interface [82544,82553]
    identifier: IERC721Custom [82554,82567]
    contract_body [82568,83767]
        struct_declaration [82575,82749]
            struct: struct [82575,82581]
            identifier: WhitelistParams [82582,82597]
            struct_member [82609,82628]
                type_name: bytes32 [82609,82616]
                identifier: merkleRoot [82617,82627]
            struct_member [82638,82654]
                type_name: uint256 [82638,82645]
                identifier: endTime [82646,82653]
            struct_member [82724,82742]
                type_name: uint256 [82724,82731]
                identifier: startTime [82732,82741]
        struct_declaration [82757,83235]
            struct: struct [82757,82763]
            identifier: Collection [82764,82774]
            struct_member [82786,82799]
                type_name: string [82786,82792]
                identifier: title [82793,82798]
            struct_member [82809,82828]
                type_name: string [82809,82815]
                identifier: description [82816,82827]
            struct_member [82838,82855]
                type_name: string [82838,82844]
                identifier: thumbnail [82845,82854]
            struct_member [82865,82880]
                type_name: string [82865,82871]
                identifier: bgImage [82872,82879]
            struct_member [82890,82905]
                type_name: string [82890,82896]
                identifier: bgColor [82897,82904]
            struct_member [82915,82934]
                type_name: uint256[] [82915,82924]
                identifier: tokenIds [82925,82933]
            struct_member [82944,82958]
                type_name: address [82944,82951]
                identifier: owner [82952,82957]
            struct_member [82968,82986]
                type_name: uint256 [82968,82975]
                identifier: createdAt [82976,82985]
            struct_member [82996,83014]
                type_name: uint256 [82996,83003]
                identifier: updatedAt [83004,83013]
            struct_member [83024,83049]
                type_name: int256 [83024,83030]
                identifier: userPurchaseLimit [83031,83048]
            struct_member [83059,83087]
                type_name: int256 [83059,83065]
                identifier: allowedPurchaseLimit [83066,83086]
            struct_member [83097,83122]
                type_name: uint256 [83097,83104]
                identifier: primarySoldCount [83105,83121]
            struct_member [83132,83166]
                type_name: WhitelistParams[] [83132,83149]
                identifier: whitelistParams [83150,83165]
        function_definition [83243,83306]
            function: function [83243,83251]
            identifier: getFirstOwner [83252,83265]
            parameter [83266,83277]
                type_name: uint256 [83266,83273]
                identifier: _id [83274,83277]
            visibility: external [83279,83287]
            return_type_definition [83288,83305]
                returns: returns [83288,83295]
                parameter [83297,83304]
                    type_name: address [83297,83304]
        function_definition [83314,83409]
            function: function [83314,83322]
            identifier: getCollectionData [83323,83340]
            parameter [83341,83352]
                type_name: uint256 [83341,83348]
                identifier: _id [83349,83352]
            visibility: external [83363,83371]
            return_type_definition [83381,83408]
                returns: returns [83381,83388]
                parameter [83390,83407]
                    type_name: Collection [83390,83400]
                    memory: memory [83401,83407]
        function_definition [83417,83485]
            function: function [83417,83425]
            identifier: getNFTCollectionId [83426,83444]
            parameter [83445,83456]
                type_name: uint256 [83445,83452]
                identifier: _id [83453,83456]
            visibility: external [83458,83466]
            return_type_definition [83467,83484]
                returns: returns [83467,83474]
                parameter [83476,83483]
                    type_name: uint256 [83476,83483]
        function_definition [83493,83624]
            function: function [83493,83501]
            identifier: updateCollectionAfterPrimarySale [83502,83534]
            parameter [83545,83560]
                type_name: address [83545,83552]
                identifier: account [83553,83560]
            parameter [83571,83592]
                type_name: uint256 [83571,83578]
                identifier: _collectionId [83579,83592]
            visibility: external [83600,83608]
            return_type_definition [83609,83623]
                returns: returns [83609,83616]
                parameter [83618,83622]
                    type_name: bool [83618,83622]
        function_definition [83632,83764]
            function: function [83632,83640]
            identifier: getPrimarySaleUserCount [83641,83664]
            parameter [83665,83680]
                type_name: address [83665,83672]
                identifier: account [83673,83680]
            parameter [83682,83703]
                type_name: uint256 [83682,83689]
                identifier: _collectionId [83690,83703]
            visibility: external [83714,83722]
            state_mutability [83732,83736]
                view: view [83732,83736]
            return_type_definition [83746,83763]
                returns: returns [83746,83753]
                parameter [83755,83762]
                    type_name: uint256 [83755,83762]
to
source_file [0,132524]
at 50
===
move-tree
---
pragma_directive [85969,85992]
    pragma: pragma [85969,85975]
    solidity_pragma_token [85976,85991]
        solidity: solidity [85976,85984]
        solidity_version_comparison_operator [85984,85986]
            bitwise_operator:  ^ [85984,85986]
        solidity_version: 0.8.2 [85986,85991]
to
source_file [0,132524]
at 4
===
move-tree
---
contract_declaration [34683,36245]
    abstract: abstract [34683,34691]
    identifier: Initializable [34701,34714]
    contract_body [34715,36245]
        state_variable_declaration [34803,34829]
            type_name: bool [34803,34807]
            visibility: private [34808,34815]
            identifier: _initialized [34816,34828]
        state_variable_declaration [34936,34963]
            type_name: bool [34936,34940]
            visibility: private [34941,34948]
            identifier: _initializing [34949,34962]
        modifier_definition [35072,35786]
            modifier: modifier [35072,35080]
            identifier: initializer [35081,35092]
            function_body [35095,35786]
                expression_statement [35380,35525]
                    call_expression [35380,35524]
                        identifier: require [35380,35387]
                        call_argument [35402,35450]
                            ternary_expression [35402,35450]
                                identifier: _initializing [35402,35415]
                                ?: ? [35416,35417]
                                call_expression [35418,35434]
                                    identifier: _isConstructor [35418,35432]
                                :: : [35435,35436]
                                unary_expression [35437,35450]
                                    !: ! [35437,35438]
                                    identifier: _initialized [35438,35450]
                        call_argument [35465,35513]
                            string_literal [35465,35513]
                                string: "Initializable: contract is already initialized" [35465,35513]
                variable_declaration_statement [35537,35574]
                    variable_declaration [35537,35556]
                        type_name: bool [35537,35541]
                        identifier: isTopLevelCall [35542,35556]
                    affectation_operator: = [35557,35558]
                    unary_expression [35559,35573]
                        !: ! [35559,35560]
                        identifier: _initializing [35560,35573]
                if_statement [35584,35685]
                    if: if [35584,35586]
                    identifier: isTopLevelCall [35588,35602]
                    block_statement [35604,35685]
                        expression_statement [35619,35640]
                            assignment_expression [35619,35639]
                                identifier: _initializing [35619,35632]
                                affectation_operator: = [35633,35634]
                                boolean_literal: true [35635,35639]
                        expression_statement [35654,35674]
                            assignment_expression [35654,35673]
                                identifier: _initialized [35654,35666]
                                affectation_operator: = [35667,35668]
                                boolean_literal: true [35669,35673]
                expression_statement [35697,35699]
                    identifier: _ [35697,35698]
                if_statement [35711,35779]
                    if: if [35711,35713]
                    identifier: isTopLevelCall [35715,35729]
                    block_statement [35731,35779]
                        expression_statement [35746,35768]
                            assignment_expression [35746,35767]
                                identifier: _initializing [35746,35759]
                                affectation_operator: = [35760,35761]
                                boolean_literal: false [35762,35767]
        modifier_definition [35981,36109]
            modifier: modifier [35981,35989]
            identifier: onlyInitializing [35990,36006]
            function_body [36009,36109]
                expression_statement [36020,36090]
                    call_expression [36020,36089]
                        identifier: require [36020,36027]
                        call_argument [36028,36041]
                            identifier: _initializing [36028,36041]
                        call_argument [36043,36088]
                            string_literal [36043,36088]
                                string: "Initializable: contract is not initializing" [36043,36088]
                expression_statement [36100,36102]
                    identifier: _ [36100,36101]
        function_definition [36117,36242]
            function: function [36117,36125]
            identifier: _isConstructor [36126,36140]
            visibility: private [36143,36150]
            state_mutability [36151,36155]
                view: view [36151,36155]
            return_type_definition [36156,36170]
                returns: returns [36156,36163]
                parameter [36165,36169]
                    type_name: bool [36165,36169]
            function_body [36171,36242]
                return_statement [36182,36235]
                    return: return [36182,36188]
                    unary_expression [36189,36234]
                        !: ! [36189,36190]
                        call_expression [36190,36234]
                            member_expression: AddressUpgradeable.isContract [36190,36219]
                            call_argument [36220,36233]
                                type_cast_expression [36220,36233]
                                    primitive_type: address [36220,36227]
                                    call_argument [36228,36232]
                                        identifier: this [36228,36232]
to
source_file [0,132524]
at 5
===
move-tree
---
library_declaration [25287,32960]
    library: library [25287,25294]
    identifier: AddressUpgradeable [25295,25313]
    contract_body [25314,32960]
        function_definition [26306,26632]
            function: function [26306,26314]
            identifier: isContract [26315,26325]
            parameter [26326,26341]
                type_name: address [26326,26333]
                identifier: account [26334,26341]
            visibility: internal [26343,26351]
            state_mutability [26352,26356]
                view: view [26352,26356]
            return_type_definition [26357,26371]
                returns: returns [26357,26364]
                parameter [26366,26370]
                    type_name: bool [26366,26370]
            function_body [26372,26632]
                return_statement [26594,26625]
                    return: return [26594,26600]
                    binary_expression [26601,26624]
                        member_expression: account.code.length [26601,26620]
                        comparison_operator: > [26621,26622]
                        number_literal: 0 [26623,26624]
        function_definition [27567,27958]
            function: function [27567,27575]
            identifier: sendValue [27576,27585]
            parameter [27586,27611]
                type_name: address payable [27586,27601]
                identifier: recipient [27602,27611]
            parameter [27613,27627]
                type_name: uint256 [27613,27620]
                identifier: amount [27621,27627]
            visibility: internal [27629,27637]
            function_body [27638,27958]
                expression_statement [27649,27760]
                    call_expression [27649,27759]
                        identifier: require [27649,27656]
                        call_argument [27671,27702]
                            binary_expression [27671,27702]
                                member_expression: address(this).balance [27671,27692]
                                comparison_operator: >= [27693,27695]
                                identifier: amount [27696,27702]
                        call_argument [27717,27748]
                            string_literal [27717,27748]
                                string: "Address: insufficient balance" [27717,27748]
                variable_declaration_statement [27772,27825]
                    variable_declaration_tuple [27772,27788]
                        variable_declaration [27773,27785]
                            type_name: bool [27773,27777]
                            identifier: success [27778,27785]
                    affectation_operator: = [27789,27790]
                    call_expression [27791,27824]
                        struct_expression [27791,27820]
                            member_expression: recipient.call [27791,27805]
                            struct_field_assignment [27806,27819]
                                identifier: value [27806,27811]
                                :: : [27811,27812]
                                identifier: amount [27813,27819]
                        call_argument [27821,27823]
                            string_literal [27821,27823]
                                string: "" [27821,27823]
                expression_statement [27835,27951]
                    call_expression [27835,27950]
                        identifier: require [27835,27842]
                        call_argument [27857,27864]
                            identifier: success [27857,27864]
                        call_argument [27879,27939]
                            string_literal [27879,27939]
                                string: "Address: unable to send value, recipient may have reverted" [27879,27939]
        function_definition [28720,28918]
            function: function [28720,28728]
            identifier: functionCall [28729,28741]
            parameter [28742,28756]
                type_name: address [28742,28749]
                identifier: target [28750,28756]
            parameter [28758,28775]
                type_name: bytes [28758,28763]
                memory: memory [28764,28770]
                identifier: data [28771,28775]
            visibility: internal [28786,28794]
            return_type_definition [28804,28826]
                returns: returns [28804,28811]
                parameter [28813,28825]
                    type_name: bytes [28813,28818]
                    memory: memory [28819,28825]
            function_body [28832,28918]
                return_statement [28843,28911]
                    return: return [28843,28849]
                    call_expression [28850,28910]
                        identifier: functionCall [28850,28862]
                        call_argument [28863,28869]
                            identifier: target [28863,28869]
                        call_argument [28871,28875]
                            identifier: data [28871,28875]
                        call_argument [28877,28909]
                            string_literal [28877,28909]
                                string: "Address: low-level call failed" [28877,28909]
        function_definition [29148,29377]
            function: function [29148,29156]
            identifier: functionCall [29157,29169]
            parameter [29180,29194]
                type_name: address [29180,29187]
                identifier: target [29188,29194]
            parameter [29205,29222]
                type_name: bytes [29205,29210]
                memory: memory [29211,29217]
                identifier: data [29218,29222]
            parameter [29233,29259]
                type_name: string [29233,29239]
                memory: memory [29240,29246]
                identifier: errorMessage [29247,29259]
            visibility: internal [29267,29275]
            return_type_definition [29276,29298]
                returns: returns [29276,29283]
                parameter [29285,29297]
                    type_name: bytes [29285,29290]
                    memory: memory [29291,29297]
            function_body [29299,29377]
                return_statement [29310,29370]
                    return: return [29310,29316]
                    call_expression [29317,29369]
                        identifier: functionCallWithValue [29317,29338]
                        call_argument [29339,29345]
                            identifier: target [29339,29345]
                        call_argument [29347,29351]
                            identifier: data [29347,29351]
                        call_argument [29353,29354]
                            number_literal: 0 [29353,29354]
                        call_argument [29356,29368]
                            identifier: errorMessage [29356,29368]
        function_definition [29752,30108]
            function: function [29752,29760]
            identifier: functionCallWithValue [29761,29782]
            parameter [29793,29807]
                type_name: address [29793,29800]
                identifier: target [29801,29807]
            parameter [29818,29835]
                type_name: bytes [29818,29823]
                memory: memory [29824,29830]
                identifier: data [29831,29835]
            parameter [29846,29859]
                type_name: uint256 [29846,29853]
                identifier: value [29854,29859]
            visibility: internal [29867,29875]
            return_type_definition [29876,29898]
                returns: returns [29876,29883]
                parameter [29885,29897]
                    type_name: bytes [29885,29890]
                    memory: memory [29891,29897]
            function_body [29899,30108]
                return_statement [29910,30101]
                    return: return [29910,29916]
                    call_expression [29930,30100]
                        identifier: functionCallWithValue [29930,29951]
                        call_argument [29970,29976]
                            identifier: target [29970,29976]
                        call_argument [29995,29999]
                            identifier: data [29995,29999]
                        call_argument [30018,30023]
                            identifier: value [30018,30023]
                        call_argument [30042,30085]
                            string_literal [30042,30085]
                                string: "Address: low-level call with value failed" [30042,30085]
        function_definition [30364,30935]
            function: function [30364,30372]
            identifier: functionCallWithValue [30373,30394]
            parameter [30405,30419]
                type_name: address [30405,30412]
                identifier: target [30413,30419]
            parameter [30430,30447]
                type_name: bytes [30430,30435]
                memory: memory [30436,30442]
                identifier: data [30443,30447]
            parameter [30458,30471]
                type_name: uint256 [30458,30465]
                identifier: value [30466,30471]
            parameter [30482,30508]
                type_name: string [30482,30488]
                memory: memory [30489,30495]
                identifier: errorMessage [30496,30508]
            visibility: internal [30516,30524]
            return_type_definition [30525,30547]
                returns: returns [30525,30532]
                parameter [30534,30546]
                    type_name: bytes [30534,30539]
                    memory: memory [30540,30546]
            function_body [30548,30935]
                expression_statement [30559,30678]
                    call_expression [30559,30677]
                        identifier: require [30559,30566]
                        call_argument [30581,30611]
                            binary_expression [30581,30611]
                                member_expression: address(this).balance [30581,30602]
                                comparison_operator: >= [30603,30605]
                                identifier: value [30606,30611]
                        call_argument [30626,30666]
                            string_literal [30626,30666]
                                string: "Address: insufficient balance for call" [30626,30666]
                expression_statement [30688,30749]
                    call_expression [30688,30748]
                        identifier: require [30688,30695]
                        call_argument [30696,30714]
                            call_expression [30696,30714]
                                identifier: isContract [30696,30706]
                                call_argument [30707,30713]
                                    identifier: target [30707,30713]
                        call_argument [30716,30747]
                            string_literal [30716,30747]
                                string: "Address: call to non-contract" [30716,30747]
                variable_declaration_statement [30761,30859]
                    variable_declaration_tuple [30761,30800]
                        variable_declaration [30762,30774]
                            type_name: bool [30762,30766]
                            identifier: success [30767,30774]
                        variable_declaration [30776,30799]
                            type_name: bytes [30776,30781]
                            memory: memory [30782,30788]
                            identifier: returndata [30789,30799]
                    affectation_operator: = [30801,30802]
                    call_expression [30803,30858]
                        struct_expression [30803,30828]
                            member_expression: target.call [30803,30814]
                            struct_field_assignment [30815,30827]
                                identifier: value [30815,30820]
                                :: : [30820,30821]
                                identifier: value [30822,30827]
                        call_argument [30843,30847]
                            identifier: data [30843,30847]
                return_statement [30869,30928]
                    return: return [30869,30875]
                    call_expression [30876,30927]
                        identifier: verifyCallResult [30876,30892]
                        call_argument [30893,30900]
                            identifier: success [30893,30900]
                        call_argument [30902,30912]
                            identifier: returndata [30902,30912]
                        call_argument [30914,30926]
                            identifier: errorMessage [30914,30926]
        function_definition [31120,31430]
            function: function [31120,31128]
            identifier: functionStaticCall [31129,31147]
            parameter [31148,31162]
                type_name: address [31148,31155]
                identifier: target [31156,31162]
            parameter [31164,31181]
                type_name: bytes [31164,31169]
                memory: memory [31170,31176]
                identifier: data [31177,31181]
            visibility: internal [31192,31200]
            state_mutability [31210,31214]
                view: view [31210,31214]
            return_type_definition [31224,31246]
                returns: returns [31224,31231]
                parameter [31233,31245]
                    type_name: bytes [31233,31238]
                    memory: memory [31239,31245]
            function_body [31252,31430]
                return_statement [31263,31423]
                    return: return [31263,31269]
                    call_expression [31283,31422]
                        identifier: functionStaticCall [31283,31301]
                        call_argument [31320,31326]
                            identifier: target [31320,31326]
                        call_argument [31345,31349]
                            identifier: data [31345,31349]
                        call_argument [31368,31407]
                            string_literal [31368,31407]
                                string: "Address: low-level static call failed" [31368,31407]
        function_definition [31622,32017]
            function: function [31622,31630]
            identifier: functionStaticCall [31631,31649]
            parameter [31660,31674]
                type_name: address [31660,31667]
                identifier: target [31668,31674]
            parameter [31685,31702]
                type_name: bytes [31685,31690]
                memory: memory [31691,31697]
                identifier: data [31698,31702]
            parameter [31713,31739]
                type_name: string [31713,31719]
                memory: memory [31720,31726]
                identifier: errorMessage [31727,31739]
            visibility: internal [31747,31755]
            state_mutability [31756,31760]
                view: view [31756,31760]
            return_type_definition [31761,31783]
                returns: returns [31761,31768]
                parameter [31770,31782]
                    type_name: bytes [31770,31775]
                    memory: memory [31776,31782]
            function_body [31784,32017]
                expression_statement [31795,31863]
                    call_expression [31795,31862]
                        identifier: require [31795,31802]
                        call_argument [31803,31821]
                            call_expression [31803,31821]
                                identifier: isContract [31803,31813]
                                call_argument [31814,31820]
                                    identifier: target [31814,31820]
                        call_argument [31823,31861]
                            string_literal [31823,31861]
                                string: "Address: static call to non-contract" [31823,31861]
                variable_declaration_statement [31875,31941]
                    variable_declaration_tuple [31875,31914]
                        variable_declaration [31876,31888]
                            type_name: bool [31876,31880]
                            identifier: success [31881,31888]
                        variable_declaration [31890,31913]
                            type_name: bytes [31890,31895]
                            memory: memory [31896,31902]
                            identifier: returndata [31903,31913]
                    affectation_operator: = [31915,31916]
                    call_expression [31917,31940]
                        member_expression: target.staticcall [31917,31934]
                        call_argument [31935,31939]
                            identifier: data [31935,31939]
                return_statement [31951,32010]
                    return: return [31951,31957]
                    call_expression [31958,32009]
                        identifier: verifyCallResult [31958,31974]
                        call_argument [31975,31982]
                            identifier: success [31975,31982]
                        call_argument [31984,31994]
                            identifier: returndata [31984,31994]
                        call_argument [31996,32008]
                            identifier: errorMessage [31996,32008]
        function_definition [32245,32957]
            function: function [32245,32253]
            identifier: verifyCallResult [32254,32270]
            parameter [32281,32293]
                type_name: bool [32281,32285]
                identifier: success [32286,32293]
            parameter [32304,32327]
                type_name: bytes [32304,32309]
                memory: memory [32310,32316]
                identifier: returndata [32317,32327]
            parameter [32338,32364]
                type_name: string [32338,32344]
                memory: memory [32345,32351]
                identifier: errorMessage [32352,32364]
            visibility: internal [32372,32380]
            state_mutability [32381,32385]
                pure: pure [32381,32385]
            return_type_definition [32386,32408]
                returns: returns [32386,32393]
                parameter [32395,32407]
                    type_name: bytes [32395,32400]
                    memory: memory [32401,32407]
            function_body [32409,32957]
                if_statement [32420,32950]
                    if: if [32420,32422]
                    identifier: success [32424,32431]
                    block_statement [32433,32477]
                        return_statement [32448,32466]
                            return: return [32448,32454]
                            identifier: returndata [32455,32465]
                    else: else [32478,32482]
                    block_statement [32483,32950]
                        if_statement [32565,32939]
                            if: if [32565,32567]
                            binary_expression [32569,32590]
                                member_expression: returndata.length [32569,32586]
                                comparison_operator: > [32587,32588]
                                number_literal: 0 [32589,32590]
                            block_statement [32592,32878]
                                assembly_statement [32706,32863]
                                    assembly: assembly [32706,32714]
                                    yul_variable_declaration [32738,32778]
                                        let: let [32738,32741]
                                        yul_identifier [32742,32757]
                                            identifier: returndata_size [32742,32757]
                                        :=: := [32758,32760]
                                        yul_function_call [32761,32778]
                                            yul_evm_builtin [32761,32766]
                                                mload: mload [32761,32766]
                                            yul_path [32767,32777]
                                                yul_identifier [32767,32777]
                                                    identifier: returndata [32767,32777]
                                    yul_function_call [32800,32844]
                                        yul_evm_builtin [32800,32806]
                                            revert: revert [32800,32806]
                                        yul_function_call [32807,32826]
                                            yul_evm_builtin [32807,32810]
                                                add: add [32807,32810]
                                            yul_decimal_number: 32 [32811,32813]
                                            yul_path [32815,32825]
                                                yul_identifier [32815,32825]
                                                    identifier: returndata [32815,32825]
                                        yul_path [32828,32843]
                                            yul_identifier [32828,32843]
                                                identifier: returndata_size [32828,32843]
                            else: else [32879,32883]
                            block_statement [32884,32939]
                                revert_statement [32903,32924]
                                    revert: revert [32903,32909]
                                    parenthesized_expression [32909,32923]
                                        identifier: errorMessage [32910,32922]
to
source_file [0,132524]
at 3
===
move-tree
---
library_declaration [59585,71758]
    library: library [59585,59592]
    identifier: EnumerableSetUpgradeable [59593,59617]
    contract_body [59618,71758]
        struct_declaration [60074,60327]
            struct: struct [60074,60080]
            identifier: Set [60081,60084]
            struct_member [60130,60148]
                type_name: bytes32[] [60130,60139]
                identifier: _values [60140,60147]
            struct_member [60283,60320]
                type_name: mapping(bytes32 => uint256) [60283,60310]
                identifier: _indexes [60311,60319]
        function_definition [60505,60919]
            function: function [60505,60513]
            identifier: _add [60514,60518]
            parameter [60519,60534]
                type_name: Set [60519,60522]
                storage: storage [60523,60530]
                identifier: set [60531,60534]
            parameter [60536,60549]
                type_name: bytes32 [60536,60543]
                identifier: value [60544,60549]
            visibility: private [60551,60558]
            return_type_definition [60559,60573]
                returns: returns [60559,60566]
                parameter [60568,60572]
                    type_name: bool [60568,60572]
            function_body [60574,60919]
                if_statement [60585,60912]
                    if: if [60585,60587]
                    unary_expression [60589,60611]
                        !: ! [60589,60590]
                        call_expression [60590,60611]
                            identifier: _contains [60590,60599]
                            call_argument [60600,60603]
                                identifier: set [60600,60603]
                            call_argument [60605,60610]
                                identifier: value [60605,60610]
                    block_statement [60613,60867]
                        expression_statement [60628,60652]
                            call_expression [60628,60651]
                                member_expression: set._values.push [60628,60644]
                                call_argument [60645,60650]
                                    identifier: value [60645,60650]
                        expression_statement [60789,60830]
                            assignment_expression [60789,60829]
                                array_access [60789,60808]
                                    member_expression: set._indexes [60789,60801]
                                    identifier: value [60802,60807]
                                affectation_operator: = [60809,60810]
                                member_expression: set._values.length [60811,60829]
                        return_statement [60844,60856]
                            return: return [60844,60850]
                            boolean_literal: true [60851,60855]
                    else: else [60868,60872]
                    block_statement [60873,60912]
                        return_statement [60888,60901]
                            return: return [60888,60894]
                            boolean_literal: false [60895,60900]
        function_definition [61095,62515]
            function: function [61095,61103]
            identifier: _remove [61104,61111]
            parameter [61112,61127]
                type_name: Set [61112,61115]
                storage: storage [61116,61123]
                identifier: set [61124,61127]
            parameter [61129,61142]
                type_name: bytes32 [61129,61136]
                identifier: value [61137,61142]
            visibility: private [61144,61151]
            return_type_definition [61152,61166]
                returns: returns [61152,61159]
                parameter [61161,61165]
                    type_name: bool [61161,61165]
            function_body [61167,62515]
                variable_declaration_statement [61279,61320]
                    variable_declaration [61279,61297]
                        type_name: uint256 [61279,61286]
                        identifier: valueIndex [61287,61297]
                    affectation_operator: = [61298,61299]
                    array_access [61300,61319]
                        member_expression: set._indexes [61300,61312]
                        identifier: value [61313,61318]
                if_statement [61332,62508]
                    if: if [61332,61334]
                    binary_expression [61336,61351]
                        identifier: valueIndex [61336,61346]
                        comparison_operator: != [61347,61349]
                        number_literal: 0 [61350,61351]
                    block_statement [61353,62463]
                        variable_declaration_statement [61711,61750]
                            variable_declaration [61711,61732]
                                type_name: uint256 [61711,61718]
                                identifier: toDeleteIndex [61719,61732]
                            affectation_operator: = [61733,61734]
                            binary_expression [61735,61749]
                                identifier: valueIndex [61735,61745]
                                arithmetic_operator: - [61746,61747]
                                number_literal: 1 [61748,61749]
                        variable_declaration_statement [61764,61807]
                            variable_declaration [61764,61781]
                                type_name: uint256 [61764,61771]
                                identifier: lastIndex [61772,61781]
                            affectation_operator: = [61782,61783]
                            binary_expression [61784,61806]
                                member_expression: set._values.length [61784,61802]
                                arithmetic_operator: - [61803,61804]
                                number_literal: 1 [61805,61806]
                        if_statement [61823,62228]
                            if: if [61823,61825]
                            binary_expression [61827,61853]
                                identifier: lastIndex [61827,61836]
                                comparison_operator: != [61837,61839]
                                identifier: toDeleteIndex [61840,61853]
                            block_statement [61855,62228]
                                variable_declaration_statement [61874,61917]
                                    variable_declaration [61874,61891]
                                        type_name: bytes32 [61874,61881]
                                        identifier: lastvalue [61882,61891]
                                    affectation_operator: = [61892,61893]
                                    array_access [61894,61916]
                                        member_expression: set._values [61894,61905]
                                        identifier: lastIndex [61906,61915]
                                expression_statement [62019,62058]
                                    assignment_expression [62019,62057]
                                        array_access [62019,62045]
                                            member_expression: set._values [62019,62030]
                                            identifier: toDeleteIndex [62031,62044]
                                        affectation_operator: = [62046,62047]
                                        identifier: lastvalue [62048,62057]
                                expression_statement [62133,62170]
                                    assignment_expression [62133,62169]
                                        array_access [62133,62156]
                                            member_expression: set._indexes [62133,62145]
                                            identifier: lastvalue [62146,62155]
                                        affectation_operator: = [62157,62158]
                                        identifier: valueIndex [62159,62169]
                        expression_statement [62309,62327]
                            call_expression [62309,62326]
                                member_expression: set._values.pop [62309,62324]
                        expression_statement [62397,62424]
                            array_access [62397,62423]
                                unary_expression [62397,62416]
                                    delete: delete [62397,62403]
                                    member_expression: set._indexes [62404,62416]
                                identifier: value [62417,62422]
                        return_statement [62440,62452]
                            return: return [62440,62446]
                            boolean_literal: true [62447,62451]
                    else: else [62464,62468]
                    block_statement [62469,62508]
                        return_statement [62484,62497]
                            return: return [62484,62490]
                            boolean_literal: false [62491,62496]
        function_definition [62601,62762]
            function: function [62601,62609]
            identifier: _contains [62610,62619]
            parameter [62620,62635]
                type_name: Set [62620,62623]
                storage: storage [62624,62631]
                identifier: set [62632,62635]
            parameter [62637,62650]
                type_name: bytes32 [62637,62644]
                identifier: value [62645,62650]
            visibility: private [62661,62668]
            state_mutability [62678,62682]
                view: view [62678,62682]
            return_type_definition [62692,62706]
                returns: returns [62692,62699]
                parameter [62701,62705]
                    type_name: bool [62701,62705]
            function_body [62712,62762]
                return_statement [62723,62755]
                    return: return [62723,62729]
                    binary_expression [62730,62754]
                        array_access [62730,62749]
                            member_expression: set._indexes [62730,62742]
                            identifier: value [62743,62748]
                        comparison_operator: != [62750,62752]
                        number_literal: 0 [62753,62754]
        function_definition [62848,62957]
            function: function [62848,62856]
            identifier: _length [62857,62864]
            parameter [62865,62880]
                type_name: Set [62865,62868]
                storage: storage [62869,62876]
                identifier: set [62877,62880]
            visibility: private [62882,62889]
            state_mutability [62890,62894]
                view: view [62890,62894]
            return_type_definition [62895,62912]
                returns: returns [62895,62902]
                parameter [62904,62911]
                    type_name: uint256 [62904,62911]
            function_body [62913,62957]
                return_statement [62924,62950]
                    return: return [62924,62930]
                    member_expression: set._values.length [62931,62949]
        function_definition [63311,63463]
            function: function [63311,63319]
            identifier: _at [63320,63323]
            parameter [63324,63339]
                type_name: Set [63324,63327]
                storage: storage [63328,63335]
                identifier: set [63336,63339]
            parameter [63341,63354]
                type_name: uint256 [63341,63348]
                identifier: index [63349,63354]
            visibility: private [63365,63372]
            state_mutability [63382,63386]
                view: view [63382,63386]
            return_type_definition [63396,63413]
                returns: returns [63396,63403]
                parameter [63405,63412]
                    type_name: bytes32 [63405,63412]
            function_body [63419,63463]
                return_statement [63430,63456]
                    return: return [63430,63436]
                    array_access [63437,63455]
                        member_expression: set._values [63437,63448]
                        identifier: index [63449,63454]
        function_definition [64013,64124]
            function: function [64013,64021]
            identifier: _values [64022,64029]
            parameter [64030,64045]
                type_name: Set [64030,64033]
                storage: storage [64034,64041]
                identifier: set [64042,64045]
            visibility: private [64047,64054]
            state_mutability [64055,64059]
                view: view [64055,64059]
            return_type_definition [64060,64086]
                returns: returns [64060,64067]
                parameter [64069,64085]
                    type_name: bytes32[] [64069,64078]
                    memory: memory [64079,64085]
            function_body [64087,64124]
                return_statement [64098,64117]
                    return: return [64098,64104]
                    member_expression: set._values [64105,64116]
        struct_declaration [64153,64200]
            struct: struct [64153,64159]
            identifier: Bytes32Set [64160,64170]
            struct_member [64182,64193]
                type_name: Set [64182,64185]
                identifier: _inner [64186,64192]
        function_definition [64378,64526]
            function: function [64378,64386]
            identifier: add [64387,64390]
            parameter [64391,64413]
                type_name: Bytes32Set [64391,64401]
                storage: storage [64402,64409]
                identifier: set [64410,64413]
            parameter [64415,64428]
                type_name: bytes32 [64415,64422]
                identifier: value [64423,64428]
            visibility: internal [64439,64447]
            return_type_definition [64457,64471]
                returns: returns [64457,64464]
                parameter [64466,64470]
                    type_name: bool [64466,64470]
            function_body [64477,64526]
                return_statement [64488,64519]
                    return: return [64488,64494]
                    call_expression [64495,64518]
                        identifier: _add [64495,64499]
                        call_argument [64500,64510]
                            member_expression: set._inner [64500,64510]
                        call_argument [64512,64517]
                            identifier: value [64512,64517]
        function_definition [64702,64856]
            function: function [64702,64710]
            identifier: remove [64711,64717]
            parameter [64718,64740]
                type_name: Bytes32Set [64718,64728]
                storage: storage [64729,64736]
                identifier: set [64737,64740]
            parameter [64742,64755]
                type_name: bytes32 [64742,64749]
                identifier: value [64750,64755]
            visibility: internal [64766,64774]
            return_type_definition [64784,64798]
                returns: returns [64784,64791]
                parameter [64793,64797]
                    type_name: bool [64793,64797]
            function_body [64804,64856]
                return_statement [64815,64849]
                    return: return [64815,64821]
                    call_expression [64822,64848]
                        identifier: _remove [64822,64829]
                        call_argument [64830,64840]
                            member_expression: set._inner [64830,64840]
                        call_argument [64842,64847]
                            identifier: value [64842,64847]
        function_definition [64942,65114]
            function: function [64942,64950]
            identifier: contains [64951,64959]
            parameter [64960,64982]
                type_name: Bytes32Set [64960,64970]
                storage: storage [64971,64978]
                identifier: set [64979,64982]
            parameter [64984,64997]
                type_name: bytes32 [64984,64991]
                identifier: value [64992,64997]
            visibility: internal [65008,65016]
            state_mutability [65026,65030]
                view: view [65026,65030]
            return_type_definition [65040,65054]
                returns: returns [65040,65047]
                parameter [65049,65053]
                    type_name: bool [65049,65053]
            function_body [65060,65114]
                return_statement [65071,65107]
                    return: return [65071,65077]
                    call_expression [65078,65106]
                        identifier: _contains [65078,65087]
                        call_argument [65088,65098]
                            member_expression: set._inner [65088,65098]
                        call_argument [65100,65105]
                            identifier: value [65100,65105]
        function_definition [65200,65317]
            function: function [65200,65208]
            identifier: length [65209,65215]
            parameter [65216,65238]
                type_name: Bytes32Set [65216,65226]
                storage: storage [65227,65234]
                identifier: set [65235,65238]
            visibility: internal [65240,65248]
            state_mutability [65249,65253]
                view: view [65249,65253]
            return_type_definition [65254,65271]
                returns: returns [65254,65261]
                parameter [65263,65270]
                    type_name: uint256 [65263,65270]
            function_body [65272,65317]
                return_statement [65283,65310]
                    return: return [65283,65289]
                    call_expression [65290,65309]
                        identifier: _length [65290,65297]
                        call_argument [65298,65308]
                            member_expression: set._inner [65298,65308]
        function_definition [65671,65834]
            function: function [65671,65679]
            identifier: at [65680,65682]
            parameter [65683,65705]
                type_name: Bytes32Set [65683,65693]
                storage: storage [65694,65701]
                identifier: set [65702,65705]
            parameter [65707,65720]
                type_name: uint256 [65707,65714]
                identifier: index [65715,65720]
            visibility: internal [65731,65739]
            state_mutability [65749,65753]
                view: view [65749,65753]
            return_type_definition [65763,65780]
                returns: returns [65763,65770]
                parameter [65772,65779]
                    type_name: bytes32 [65772,65779]
            function_body [65786,65834]
                return_statement [65797,65827]
                    return: return [65797,65803]
                    call_expression [65804,65826]
                        identifier: _at [65804,65807]
                        call_argument [65808,65818]
                            member_expression: set._inner [65808,65818]
                        call_argument [65820,65825]
                            identifier: index [65820,65825]
        function_definition [66384,66542]
            function: function [66384,66392]
            identifier: values [66393,66399]
            parameter [66400,66422]
                type_name: Bytes32Set [66400,66410]
                storage: storage [66411,66418]
                identifier: set [66419,66422]
            visibility: internal [66433,66441]
            state_mutability [66451,66455]
                view: view [66451,66455]
            return_type_definition [66465,66491]
                returns: returns [66465,66472]
                parameter [66474,66490]
                    type_name: bytes32[] [66474,66483]
                    memory: memory [66484,66490]
            function_body [66497,66542]
                return_statement [66508,66535]
                    return: return [66508,66514]
                    call_expression [66515,66534]
                        identifier: _values [66515,66522]
                        call_argument [66523,66533]
                            member_expression: set._inner [66523,66533]
        struct_declaration [66571,66618]
            struct: struct [66571,66577]
            identifier: AddressSet [66578,66588]
            struct_member [66600,66611]
                type_name: Set [66600,66603]
                identifier: _inner [66604,66610]
        function_definition [66796,66971]
            function: function [66796,66804]
            identifier: add [66805,66808]
            parameter [66809,66831]
                type_name: AddressSet [66809,66819]
                storage: storage [66820,66827]
                identifier: set [66828,66831]
            parameter [66833,66846]
                type_name: address [66833,66840]
                identifier: value [66841,66846]
            visibility: internal [66857,66865]
            return_type_definition [66875,66889]
                returns: returns [66875,66882]
                parameter [66884,66888]
                    type_name: bool [66884,66888]
            function_body [66895,66971]
                return_statement [66906,66964]
                    return: return [66906,66912]
                    call_expression [66913,66963]
                        identifier: _add [66913,66917]
                        call_argument [66918,66928]
                            member_expression: set._inner [66918,66928]
                        call_argument [66930,66962]
                            type_cast_expression [66930,66962]
                                primitive_type: bytes32 [66930,66937]
                                call_argument [66938,66961]
                                    type_cast_expression [66938,66961]
                                        primitive_type: uint256 [66938,66945]
                                        call_argument [66946,66960]
                                            type_cast_expression [66946,66960]
                                                primitive_type: uint160 [66946,66953]
                                                call_argument [66954,66959]
                                                    identifier: value [66954,66959]
        function_definition [67147,67328]
            function: function [67147,67155]
            identifier: remove [67156,67162]
            parameter [67163,67185]
                type_name: AddressSet [67163,67173]
                storage: storage [67174,67181]
                identifier: set [67182,67185]
            parameter [67187,67200]
                type_name: address [67187,67194]
                identifier: value [67195,67200]
            visibility: internal [67211,67219]
            return_type_definition [67229,67243]
                returns: returns [67229,67236]
                parameter [67238,67242]
                    type_name: bool [67238,67242]
            function_body [67249,67328]
                return_statement [67260,67321]
                    return: return [67260,67266]
                    call_expression [67267,67320]
                        identifier: _remove [67267,67274]
                        call_argument [67275,67285]
                            member_expression: set._inner [67275,67285]
                        call_argument [67287,67319]
                            type_cast_expression [67287,67319]
                                primitive_type: bytes32 [67287,67294]
                                call_argument [67295,67318]
                                    type_cast_expression [67295,67318]
                                        primitive_type: uint256 [67295,67302]
                                        call_argument [67303,67317]
                                            type_cast_expression [67303,67317]
                                                primitive_type: uint160 [67303,67310]
                                                call_argument [67311,67316]
                                                    identifier: value [67311,67316]
        function_definition [67414,67613]
            function: function [67414,67422]
            identifier: contains [67423,67431]
            parameter [67432,67454]
                type_name: AddressSet [67432,67442]
                storage: storage [67443,67450]
                identifier: set [67451,67454]
            parameter [67456,67469]
                type_name: address [67456,67463]
                identifier: value [67464,67469]
            visibility: internal [67480,67488]
            state_mutability [67498,67502]
                view: view [67498,67502]
            return_type_definition [67512,67526]
                returns: returns [67512,67519]
                parameter [67521,67525]
                    type_name: bool [67521,67525]
            function_body [67532,67613]
                return_statement [67543,67606]
                    return: return [67543,67549]
                    call_expression [67550,67605]
                        identifier: _contains [67550,67559]
                        call_argument [67560,67570]
                            member_expression: set._inner [67560,67570]
                        call_argument [67572,67604]
                            type_cast_expression [67572,67604]
                                primitive_type: bytes32 [67572,67579]
                                call_argument [67580,67603]
                                    type_cast_expression [67580,67603]
                                        primitive_type: uint256 [67580,67587]
                                        call_argument [67588,67602]
                                            type_cast_expression [67588,67602]
                                                primitive_type: uint160 [67588,67595]
                                                call_argument [67596,67601]
                                                    identifier: value [67596,67601]
        function_definition [67699,67816]
            function: function [67699,67707]
            identifier: length [67708,67714]
            parameter [67715,67737]
                type_name: AddressSet [67715,67725]
                storage: storage [67726,67733]
                identifier: set [67734,67737]
            visibility: internal [67739,67747]
            state_mutability [67748,67752]
                view: view [67748,67752]
            return_type_definition [67753,67770]
                returns: returns [67753,67760]
                parameter [67762,67769]
                    type_name: uint256 [67762,67769]
            function_body [67771,67816]
                return_statement [67782,67809]
                    return: return [67782,67788]
                    call_expression [67789,67808]
                        identifier: _length [67789,67796]
                        call_argument [67797,67807]
                            member_expression: set._inner [67797,67807]
        function_definition [68170,68360]
            function: function [68170,68178]
            identifier: at [68179,68181]
            parameter [68182,68204]
                type_name: AddressSet [68182,68192]
                storage: storage [68193,68200]
                identifier: set [68201,68204]
            parameter [68206,68219]
                type_name: uint256 [68206,68213]
                identifier: index [68214,68219]
            visibility: internal [68230,68238]
            state_mutability [68248,68252]
                view: view [68248,68252]
            return_type_definition [68262,68279]
                returns: returns [68262,68269]
                parameter [68271,68278]
                    type_name: address [68271,68278]
            function_body [68285,68360]
                return_statement [68296,68353]
                    return: return [68296,68302]
                    type_cast_expression [68303,68352]
                        primitive_type: address [68303,68310]
                        call_argument [68311,68351]
                            type_cast_expression [68311,68351]
                                primitive_type: uint160 [68311,68318]
                                call_argument [68319,68350]
                                    type_cast_expression [68319,68350]
                                        primitive_type: uint256 [68319,68326]
                                        call_argument [68327,68349]
                                            call_expression [68327,68349]
                                                identifier: _at [68327,68330]
                                                call_argument [68331,68341]
                                                    member_expression: set._inner [68331,68341]
                                                call_argument [68343,68348]
                                                    identifier: index [68343,68348]
        function_definition [68910,69208]
            function: function [68910,68918]
            identifier: values [68919,68925]
            parameter [68926,68948]
                type_name: AddressSet [68926,68936]
                storage: storage [68937,68944]
                identifier: set [68945,68948]
            visibility: internal [68959,68967]
            state_mutability [68977,68981]
                view: view [68977,68981]
            return_type_definition [68991,69017]
                returns: returns [68991,68998]
                parameter [69000,69016]
                    type_name: address[] [69000,69009]
                    memory: memory [69010,69016]
            function_body [69023,69208]
                variable_declaration_statement [69034,69079]
                    variable_declaration [69034,69056]
                        type_name: bytes32[] [69034,69043]
                        memory: memory [69044,69050]
                        identifier: store [69051,69056]
                    affectation_operator: = [69057,69058]
                    call_expression [69059,69078]
                        identifier: _values [69059,69066]
                        call_argument [69067,69077]
                            member_expression: set._inner [69067,69077]
                variable_declaration_statement [69089,69113]
                    variable_declaration [69089,69112]
                        type_name: address[] [69089,69098]
                        memory: memory [69099,69105]
                        identifier: result [69106,69112]
                assembly_statement [69125,69175]
                    assembly: assembly [69125,69133]
                    yul_assignment [69149,69164]
                        yul_path [69149,69155]
                            yul_identifier [69149,69155]
                                identifier: result [69149,69155]
                        :=: := [69156,69158]
                        yul_path [69159,69164]
                            yul_identifier [69159,69164]
                                identifier: store [69159,69164]
                return_statement [69187,69201]
                    return: return [69187,69193]
                    identifier: result [69194,69200]
        struct_declaration [69234,69278]
            struct: struct [69234,69240]
            identifier: UintSet [69241,69248]
            struct_member [69260,69271]
                type_name: Set [69260,69263]
                identifier: _inner [69264,69270]
        function_definition [69456,69587]
            function: function [69456,69464]
            identifier: add [69465,69468]
            parameter [69469,69488]
                type_name: UintSet [69469,69476]
                storage: storage [69477,69484]
                identifier: set [69485,69488]
            parameter [69490,69503]
                type_name: uint256 [69490,69497]
                identifier: value [69498,69503]
            visibility: internal [69505,69513]
            return_type_definition [69514,69528]
                returns: returns [69514,69521]
                parameter [69523,69527]
                    type_name: bool [69523,69527]
            function_body [69529,69587]
                return_statement [69540,69580]
                    return: return [69540,69546]
                    call_expression [69547,69579]
                        identifier: _add [69547,69551]
                        call_argument [69552,69562]
                            member_expression: set._inner [69552,69562]
                        call_argument [69564,69578]
                            type_cast_expression [69564,69578]
                                primitive_type: bytes32 [69564,69571]
                                call_argument [69572,69577]
                                    identifier: value [69572,69577]
        function_definition [69763,69923]
            function: function [69763,69771]
            identifier: remove [69772,69778]
            parameter [69779,69798]
                type_name: UintSet [69779,69786]
                storage: storage [69787,69794]
                identifier: set [69795,69798]
            parameter [69800,69813]
                type_name: uint256 [69800,69807]
                identifier: value [69808,69813]
            visibility: internal [69824,69832]
            return_type_definition [69842,69856]
                returns: returns [69842,69849]
                parameter [69851,69855]
                    type_name: bool [69851,69855]
            function_body [69862,69923]
                return_statement [69873,69916]
                    return: return [69873,69879]
                    call_expression [69880,69915]
                        identifier: _remove [69880,69887]
                        call_argument [69888,69898]
                            member_expression: set._inner [69888,69898]
                        call_argument [69900,69914]
                            type_cast_expression [69900,69914]
                                primitive_type: bytes32 [69900,69907]
                                call_argument [69908,69913]
                                    identifier: value [69908,69913]
        function_definition [70009,70187]
            function: function [70009,70017]
            identifier: contains [70018,70026]
            parameter [70027,70046]
                type_name: UintSet [70027,70034]
                storage: storage [70035,70042]
                identifier: set [70043,70046]
            parameter [70048,70061]
                type_name: uint256 [70048,70055]
                identifier: value [70056,70061]
            visibility: internal [70072,70080]
            state_mutability [70090,70094]
                view: view [70090,70094]
            return_type_definition [70104,70118]
                returns: returns [70104,70111]
                parameter [70113,70117]
                    type_name: bool [70113,70117]
            function_body [70124,70187]
                return_statement [70135,70180]
                    return: return [70135,70141]
                    call_expression [70142,70179]
                        identifier: _contains [70142,70151]
                        call_argument [70152,70162]
                            member_expression: set._inner [70152,70162]
                        call_argument [70164,70178]
                            type_cast_expression [70164,70178]
                                primitive_type: bytes32 [70164,70171]
                                call_argument [70172,70177]
                                    identifier: value [70172,70177]
        function_definition [70273,70387]
            function: function [70273,70281]
            identifier: length [70282,70288]
            parameter [70289,70308]
                type_name: UintSet [70289,70296]
                storage: storage [70297,70304]
                identifier: set [70305,70308]
            visibility: internal [70310,70318]
            state_mutability [70319,70323]
                view: view [70319,70323]
            return_type_definition [70324,70341]
                returns: returns [70324,70331]
                parameter [70333,70340]
                    type_name: uint256 [70333,70340]
            function_body [70342,70387]
                return_statement [70353,70380]
                    return: return [70353,70359]
                    call_expression [70360,70379]
                        identifier: _length [70360,70367]
                        call_argument [70368,70378]
                            member_expression: set._inner [70368,70378]
        function_definition [70741,70910]
            function: function [70741,70749]
            identifier: at [70750,70752]
            parameter [70753,70772]
                type_name: UintSet [70753,70760]
                storage: storage [70761,70768]
                identifier: set [70769,70772]
            parameter [70774,70787]
                type_name: uint256 [70774,70781]
                identifier: index [70782,70787]
            visibility: internal [70798,70806]
            state_mutability [70816,70820]
                view: view [70816,70820]
            return_type_definition [70830,70847]
                returns: returns [70830,70837]
                parameter [70839,70846]
                    type_name: uint256 [70839,70846]
            function_body [70853,70910]
                return_statement [70864,70903]
                    return: return [70864,70870]
                    type_cast_expression [70871,70902]
                        primitive_type: uint256 [70871,70878]
                        call_argument [70879,70901]
                            call_expression [70879,70901]
                                identifier: _at [70879,70882]
                                call_argument [70883,70893]
                                    member_expression: set._inner [70883,70893]
                                call_argument [70895,70900]
                                    identifier: index [70895,70900]
        function_definition [71460,71755]
            function: function [71460,71468]
            identifier: values [71469,71475]
            parameter [71476,71495]
                type_name: UintSet [71476,71483]
                storage: storage [71484,71491]
                identifier: set [71492,71495]
            visibility: internal [71506,71514]
            state_mutability [71524,71528]
                view: view [71524,71528]
            return_type_definition [71538,71564]
                returns: returns [71538,71545]
                parameter [71547,71563]
                    type_name: uint256[] [71547,71556]
                    memory: memory [71557,71563]
            function_body [71570,71755]
                variable_declaration_statement [71581,71626]
                    variable_declaration [71581,71603]
                        type_name: bytes32[] [71581,71590]
                        memory: memory [71591,71597]
                        identifier: store [71598,71603]
                    affectation_operator: = [71604,71605]
                    call_expression [71606,71625]
                        identifier: _values [71606,71613]
                        call_argument [71614,71624]
                            member_expression: set._inner [71614,71624]
                variable_declaration_statement [71636,71660]
                    variable_declaration [71636,71659]
                        type_name: uint256[] [71636,71645]
                        memory: memory [71646,71652]
                        identifier: result [71653,71659]
                assembly_statement [71672,71722]
                    assembly: assembly [71672,71680]
                    yul_assignment [71696,71711]
                        yul_path [71696,71702]
                            yul_identifier [71696,71702]
                                identifier: result [71696,71702]
                        :=: := [71703,71705]
                        yul_path [71706,71711]
                            yul_identifier [71706,71711]
                                identifier: store [71706,71711]
                return_statement [71734,71748]
                    return: return [71734,71740]
                    identifier: result [71741,71747]
to
source_file [0,132524]
at 30
===
move-tree
---
contract_declaration [37204,39534]
    abstract: abstract [37204,37212]
    identifier: ReentrancyGuardUpgradeable [37222,37248]
    is: is [37249,37251]
    inheritance_specifier [37252,37265]
        user_defined_type [37252,37265]
            identifier: Initializable [37252,37265]
    contract_body [37266,39534]
        state_variable_declaration [38032,38074]
            type_name: uint256 [38032,38039]
            visibility: private [38040,38047]
            constant: constant [38048,38056]
            identifier: _NOT_ENTERED [38057,38069]
            affectation_operator: = [38070,38071]
            number_literal: 1 [38072,38073]
        state_variable_declaration [38080,38118]
            type_name: uint256 [38080,38087]
            visibility: private [38088,38095]
            constant: constant [38096,38104]
            identifier: _ENTERED [38105,38113]
            affectation_operator: = [38114,38115]
            number_literal: 2 [38116,38117]
        state_variable_declaration [38126,38150]
            type_name: uint256 [38126,38133]
            visibility: private [38134,38141]
            identifier: _status [38142,38149]
        function_definition [38158,38271]
            function: function [38158,38166]
            identifier: __ReentrancyGuard_init [38167,38189]
            visibility: internal [38192,38200]
            modifier_invocation [38201,38217]
                identifier: onlyInitializing [38201,38217]
            function_body [38218,38271]
                expression_statement [38229,38264]
                    call_expression [38229,38263]
                        identifier: __ReentrancyGuard_init_unchained [38229,38261]
        function_definition [38279,38390]
            function: function [38279,38287]
            identifier: __ReentrancyGuard_init_unchained [38288,38320]
            visibility: internal [38323,38331]
            modifier_invocation [38332,38348]
                identifier: onlyInitializing [38332,38348]
            function_body [38349,38390]
                expression_statement [38360,38383]
                    assignment_expression [38360,38382]
                        identifier: _status [38360,38367]
                        affectation_operator: = [38368,38369]
                        identifier: _NOT_ENTERED [38370,38382]
        modifier_definition [38776,39233]
            modifier: modifier [38776,38784]
            identifier: nonReentrant [38785,38797]
            function_body [38800,39233]
                expression_statement [38883,38947]
                    call_expression [38883,38946]
                        identifier: require [38883,38890]
                        call_argument [38891,38910]
                            binary_expression [38891,38910]
                                identifier: _status [38891,38898]
                                comparison_operator: != [38899,38901]
                                identifier: _ENTERED [38902,38910]
                        call_argument [38912,38945]
                            string_literal [38912,38945]
                                string: "ReentrancyGuard: reentrant call" [38912,38945]
                expression_statement [39024,39043]
                    assignment_expression [39024,39042]
                        identifier: _status [39024,39031]
                        affectation_operator: = [39032,39033]
                        identifier: _ENTERED [39034,39042]
                expression_statement [39055,39057]
                    identifier: _ [39055,39056]
                expression_statement [39203,39226]
                    assignment_expression [39203,39225]
                        identifier: _status [39203,39210]
                        affectation_operator: = [39211,39212]
                        identifier: _NOT_ENTERED [39213,39225]
        state_variable_declaration [39505,39531]
            type_name: uint256[49] [39505,39516]
            visibility: private [39517,39524]
            identifier: __gap [39525,39530]
to
source_file [0,132524]
at 34
===
move-tree
---
interface_declaration [43051,44086]
    interface: interface [43051,43060]
    identifier: IAccessControlEnumerableUpgradeable [43061,43096]
    is: is [43097,43099]
    inheritance_specifier [43100,43125]
        user_defined_type [43100,43125]
            identifier: IAccessControlUpgradeable [43100,43125]
    contract_body [43126,44086]
        function_definition [43724,43835]
            function: function [43724,43732]
            identifier: getRoleMember [43733,43746]
            parameter [43747,43759]
                type_name: bytes32 [43747,43754]
                identifier: role [43755,43759]
            parameter [43761,43774]
                type_name: uint256 [43761,43768]
                identifier: index [43769,43774]
            visibility: external [43785,43793]
            state_mutability [43803,43807]
                view: view [43803,43807]
            return_type_definition [43817,43834]
                returns: returns [43817,43824]
                parameter [43826,43833]
                    type_name: address [43826,43833]
        function_definition [44009,44083]
            function: function [44009,44017]
            identifier: getRoleMemberCount [44018,44036]
            parameter [44037,44049]
                type_name: bytes32 [44037,44044]
                identifier: role [44045,44049]
            visibility: external [44051,44059]
            state_mutability [44060,44064]
                view: view [44060,44064]
            return_type_definition [44065,44082]
                returns: returns [44065,44072]
                parameter [44074,44081]
                    type_name: uint256 [44074,44081]
to
source_file [0,132524]
at 28
===
move-tree
---
pragma_directive [25189,25212]
    pragma: pragma [25189,25195]
    solidity_pragma_token [25196,25211]
        solidity: solidity [25196,25204]
        solidity_version_comparison_operator [25204,25206]
            bitwise_operator:  ^ [25204,25206]
        solidity_version: 0.8.1 [25206,25211]
to
source_file [0,132524]
at 2
===
move-tree
---
contract_declaration [49402,50197]
    abstract: abstract [49402,49410]
    identifier: ERC165Upgradeable [49420,49437]
    is: is [49438,49440]
    inheritance_specifier [49441,49454]
        user_defined_type [49441,49454]
            identifier: Initializable [49441,49454]
    inheritance_specifier [49456,49474]
        user_defined_type [49456,49474]
            identifier: IERC165Upgradeable [49456,49474]
    contract_body [49475,50197]
        function_definition [49482,49535]
            function: function [49482,49490]
            identifier: __ERC165_init [49491,49504]
            visibility: internal [49507,49515]
            modifier_invocation [49516,49532]
                identifier: onlyInitializing [49516,49532]
            function_body [49533,49535]
        function_definition [49543,49606]
            function: function [49543,49551]
            identifier: __ERC165_init_unchained [49552,49575]
            visibility: internal [49578,49586]
            modifier_invocation [49587,49603]
                identifier: onlyInitializing [49587,49603]
            function_body [49604,49606]
        function_definition [49678,49896]
            function: function [49678,49686]
            identifier: supportsInterface [49687,49704]
            parameter [49705,49723]
                type_name: bytes4 [49705,49711]
                identifier: interfaceId [49712,49723]
            visibility: public [49734,49740]
            state_mutability [49750,49754]
                view: view [49750,49754]
            virtual: virtual [49764,49771]
            override_specifier [49781,49789]
                override: override [49781,49789]
            return_type_definition [49799,49813]
                returns: returns [49799,49806]
                parameter [49808,49812]
                    type_name: bool [49808,49812]
            function_body [49819,49896]
                return_statement [49830,49889]
                    return: return [49830,49836]
                    member_expression: interfaceId == type(IERC165Upgradeable).interfaceId [49837,49888]
        state_variable_declaration [50168,50194]
            type_name: uint256[50] [50168,50179]
            visibility: private [50180,50187]
            identifier: __gap [50188,50193]
to
source_file [0,132524]
at 18
===
move-tree
---
interface_declaration [7746,8203]
    interface: interface [7746,7755]
    identifier: IERC165 [7756,7763]
    contract_body [7764,8203]
        function_definition [8124,8200]
            function: function [8124,8132]
            identifier: supportsInterface [8133,8150]
            parameter [8151,8169]
                type_name: bytes4 [8151,8157]
                identifier: interfaceId [8158,8169]
            visibility: external [8171,8179]
            state_mutability [8180,8184]
                view: view [8180,8184]
            return_type_definition [8185,8199]
                returns: returns [8185,8192]
                parameter [8194,8198]
                    type_name: bool [8194,8198]
to
source_file [0,132524]
at 38
===
move-tree
---
interface_declaration [8435,13223]
    interface: interface [8435,8444]
    identifier: IERC721 [8445,8452]
    is: is [8453,8455]
    inheritance_specifier [8456,8463]
        user_defined_type [8456,8463]
            identifier: IERC165 [8456,8463]
    contract_body [8464,13223]
        event_definition [8567,8683]
            identifier: Transfer [8573,8581]
            event_paramater [8592,8612]
                type_name: address [8592,8599]
                indexed: indexed [8600,8607]
                identifier: from [8608,8612]
            event_paramater [8623,8641]
                type_name: address [8623,8630]
                indexed: indexed [8631,8638]
                identifier: to [8639,8641]
            event_paramater [8652,8675]
                type_name: uint256 [8652,8659]
                indexed: indexed [8660,8667]
                identifier: tokenId [8668,8675]
        event_definition [8793,8916]
            identifier: Approval [8799,8807]
            event_paramater [8818,8839]
                type_name: address [8818,8825]
                indexed: indexed [8826,8833]
                identifier: owner [8834,8839]
            event_paramater [8850,8874]
                type_name: address [8850,8857]
                indexed: indexed [8858,8865]
                identifier: approved [8866,8874]
            event_paramater [8885,8908]
                type_name: uint256 [8885,8892]
                indexed: indexed [8893,8900]
                identifier: tokenId [8901,8908]
        event_definition [9049,9168]
            identifier: ApprovalForAll [9055,9069]
            event_paramater [9080,9101]
                type_name: address [9080,9087]
                indexed: indexed [9088,9095]
                identifier: owner [9096,9101]
            event_paramater [9112,9136]
                type_name: address [9112,9119]
                indexed: indexed [9120,9127]
                identifier: operator [9128,9136]
            event_paramater [9147,9160]
                type_name: bool [9147,9151]
                identifier: approved [9152,9160]
        function_definition [9260,9334]
            function: function [9260,9268]
            identifier: balanceOf [9269,9278]
            parameter [9279,9292]
                type_name: address [9279,9286]
                identifier: owner [9287,9292]
            visibility: external [9294,9302]
            state_mutability [9303,9307]
                view: view [9303,9307]
            return_type_definition [9308,9333]
                returns: returns [9308,9315]
                parameter [9317,9332]
                    type_name: uint256 [9317,9324]
                    identifier: balance [9325,9332]
        function_definition [9485,9557]
            function: function [9485,9493]
            identifier: ownerOf [9494,9501]
            parameter [9502,9517]
                type_name: uint256 [9502,9509]
                identifier: tokenId [9510,9517]
            visibility: external [9519,9527]
            state_mutability [9528,9532]
                view: view [9528,9532]
            return_type_definition [9533,9556]
                returns: returns [9533,9540]
                parameter [9542,9555]
                    type_name: address [9542,9549]
                    identifier: owner [9550,9555]
        function_definition [10274,10386]
            function: function [10274,10282]
            identifier: safeTransferFrom [10283,10299]
            parameter [10310,10322]
                type_name: address [10310,10317]
                identifier: from [10318,10322]
            parameter [10333,10343]
                type_name: address [10333,10340]
                identifier: to [10341,10343]
            parameter [10354,10369]
                type_name: uint256 [10354,10361]
                identifier: tokenId [10362,10369]
            visibility: external [10377,10385]
        function_definition [10917,11025]
            function: function [10917,10925]
            identifier: transferFrom [10926,10938]
            parameter [10949,10961]
                type_name: address [10949,10956]
                identifier: from [10957,10961]
            parameter [10972,10982]
                type_name: address [10972,10979]
                identifier: to [10980,10982]
            parameter [10993,11008]
                type_name: uint256 [10993,11000]
                identifier: tokenId [11001,11008]
            visibility: external [11016,11024]
        function_definition [11503,11558]
            function: function [11503,11511]
            identifier: approve [11512,11519]
            parameter [11520,11530]
                type_name: address [11520,11527]
                identifier: to [11528,11530]
            parameter [11532,11547]
                type_name: uint256 [11532,11539]
                identifier: tokenId [11540,11547]
            visibility: external [11549,11557]
        function_definition [11717,11823]
            function: function [11717,11725]
            identifier: getApproved [11726,11737]
            parameter [11738,11753]
                type_name: uint256 [11738,11745]
                identifier: tokenId [11746,11753]
            visibility: external [11764,11772]
            state_mutability [11782,11786]
                view: view [11782,11786]
            return_type_definition [11796,11822]
                returns: returns [11796,11803]
                parameter [11805,11821]
                    type_name: address [11805,11812]
                    identifier: operator [11813,11821]
        function_definition [12155,12225]
            function: function [12155,12163]
            identifier: setApprovalForAll [12164,12181]
            parameter [12182,12198]
                type_name: address [12182,12189]
                identifier: operator [12190,12198]
            parameter [12200,12214]
                type_name: bool [12200,12204]
                identifier: _approved [12205,12214]
            visibility: external [12216,12224]
        function_definition [12381,12496]
            function: function [12381,12389]
            identifier: isApprovedForAll [12390,12406]
            parameter [12407,12420]
                type_name: address [12407,12414]
                identifier: owner [12415,12420]
            parameter [12422,12438]
                type_name: address [12422,12429]
                identifier: operator [12430,12438]
            visibility: external [12449,12457]
            state_mutability [12467,12471]
                view: view [12467,12471]
            return_type_definition [12481,12495]
                returns: returns [12481,12488]
                parameter [12490,12494]
                    type_name: bool [12490,12494]
        function_definition [13078,13220]
            function: function [13078,13086]
            identifier: safeTransferFrom [13087,13103]
            parameter [13114,13126]
                type_name: address [13114,13121]
                identifier: from [13122,13126]
            parameter [13137,13147]
                type_name: address [13137,13144]
                identifier: to [13145,13147]
            parameter [13158,13173]
                type_name: uint256 [13158,13165]
                identifier: tokenId [13166,13173]
            parameter [13184,13203]
                type_name: bytes [13184,13189]
                calldata: calldata [13190,13198]
                identifier: data [13199,13203]
            visibility: external [13211,13219]
to
source_file [0,132524]
at 42
===
move-tree
---
contract_declaration [51969,58676]
    abstract: abstract [51969,51977]
    identifier: AccessControlUpgradeable [51987,52011]
    is: is [52012,52014]
    inheritance_specifier [52020,52033]
        user_defined_type [52020,52033]
            identifier: Initializable [52020,52033]
    inheritance_specifier [52040,52058]
        user_defined_type [52040,52058]
            identifier: ContextUpgradeable [52040,52058]
    inheritance_specifier [52065,52090]
        user_defined_type [52065,52090]
            identifier: IAccessControlUpgradeable [52065,52090]
    inheritance_specifier [52097,52114]
        user_defined_type [52097,52114]
            identifier: ERC165Upgradeable [52097,52114]
    contract_body [52116,58676]
        function_definition [52123,52183]
            function: function [52123,52131]
            identifier: __AccessControl_init [52132,52152]
            visibility: internal [52155,52163]
            modifier_invocation [52164,52180]
                identifier: onlyInitializing [52164,52180]
            function_body [52181,52183]
        function_definition [52191,52261]
            function: function [52191,52199]
            identifier: __AccessControl_init_unchained [52200,52230]
            visibility: internal [52233,52241]
            modifier_invocation [52242,52258]
                identifier: onlyInitializing [52242,52258]
            function_body [52259,52261]
        struct_declaration [52269,52364]
            struct: struct [52269,52275]
            identifier: RoleData [52276,52284]
            struct_member [52296,52329]
                type_name: mapping(address => bool) [52296,52320]
                identifier: members [52321,52328]
            struct_member [52339,52357]
                type_name: bytes32 [52339,52346]
                identifier: adminRole [52347,52356]
        state_variable_declaration [52372,52416]
            type_name: mapping(bytes32 => RoleData) [52372,52400]
            visibility: private [52401,52408]
            identifier: _roles [52409,52415]
        state_variable_declaration [52424,52474]
            type_name: bytes32 [52424,52431]
            visibility: public [52432,52438]
            constant: constant [52439,52447]
            identifier: DEFAULT_ADMIN_ROLE [52448,52466]
            affectation_operator: = [52467,52468]
            number_literal: 0x00 [52469,52473]
        modifier_definition [52872,52965]
            modifier: modifier [52872,52880]
            identifier: onlyRole [52881,52889]
            parameter [52890,52902]
                type_name: bytes32 [52890,52897]
                identifier: role [52898,52902]
            function_body [52904,52965]
                expression_statement [52915,52946]
                    call_expression [52915,52945]
                        identifier: _checkRole [52915,52925]
                        call_argument [52926,52930]
                            identifier: role [52926,52930]
                        call_argument [52932,52944]
                            call_expression [52932,52944]
                                identifier: _msgSender [52932,52942]
                expression_statement [52956,52958]
                    identifier: _ [52956,52957]
        function_definition [53037,53328]
            function: function [53037,53045]
            identifier: supportsInterface [53046,53063]
            parameter [53064,53082]
                type_name: bytes4 [53064,53070]
                identifier: interfaceId [53071,53082]
            visibility: public [53093,53099]
            state_mutability [53109,53113]
                view: view [53109,53113]
            virtual: virtual [53123,53130]
            override_specifier [53140,53148]
                override: override [53140,53148]
            return_type_definition [53158,53172]
                returns: returns [53158,53165]
                parameter [53167,53171]
                    type_name: bool [53167,53171]
            function_body [53178,53328]
                return_statement [53189,53321]
                    return: return [53189,53195]
                    binary_expression [53209,53320]
                        member_expression: interfaceId == type(IAccessControlUpgradeable).interfaceId [53209,53267]
                        logical_operator: || [53268,53270]
                        call_expression [53284,53320]
                            member_expression: super.supportsInterface [53284,53307]
                            call_argument [53308,53319]
                                identifier: interfaceId [53308,53319]
        function_definition [53420,53617]
            function: function [53420,53428]
            identifier: hasRole [53429,53436]
            parameter [53437,53449]
                type_name: bytes32 [53437,53444]
                identifier: role [53445,53449]
            parameter [53451,53466]
                type_name: address [53451,53458]
                identifier: account [53459,53466]
            visibility: public [53477,53483]
            state_mutability [53493,53497]
                view: view [53493,53497]
            virtual: virtual [53507,53514]
            override_specifier [53524,53532]
                override: override [53524,53532]
            return_type_definition [53542,53556]
                returns: returns [53542,53549]
                parameter [53551,53555]
                    type_name: bool [53551,53555]
            function_body [53562,53617]
                return_statement [53573,53610]
                    return: return [53573,53579]
                    array_access [53580,53609]
                        member_expression: _roles[role].members [53580,53600]
                        identifier: account [53601,53608]
        function_definition [53907,54434]
            function: function [53907,53915]
            identifier: _checkRole [53916,53926]
            parameter [53927,53939]
                type_name: bytes32 [53927,53934]
                identifier: role [53935,53939]
            parameter [53941,53956]
                type_name: address [53941,53948]
                identifier: account [53949,53956]
            visibility: internal [53958,53966]
            state_mutability [53967,53971]
                view: view [53967,53971]
            virtual: virtual [53972,53979]
            function_body [53980,54434]
                if_statement [53991,54427]
                    if: if [53991,53993]
                    unary_expression [53995,54018]
                        !: ! [53995,53996]
                        call_expression [53996,54018]
                            identifier: hasRole [53996,54003]
                            call_argument [54004,54008]
                                identifier: role [54004,54008]
                            call_argument [54010,54017]
                                identifier: account [54010,54017]
                    block_statement [54020,54427]
                        revert_statement [54035,54416]
                            revert: revert [54035,54041]
                            parenthesized_expression [54041,54415]
                                type_cast_expression [54060,54400]
                                    primitive_type: string [54060,54066]
                                    call_argument [54089,54381]
                                        call_expression [54089,54381]
                                            member_expression: abi.encodePacked [54089,54105]
                                            call_argument [54132,54157]
                                                string_literal [54132,54157]
                                                    string: "AccessControl: account " [54132,54157]
                                            call_argument [54184,54236]
                                                call_expression [54184,54236]
                                                    member_expression: StringsUpgradeable.toHexString [54184,54214]
                                                    call_argument [54215,54231]
                                                        type_cast_expression [54215,54231]
                                                            primitive_type: uint160 [54215,54222]
                                                            call_argument [54223,54230]
                                                                identifier: account [54223,54230]
                                                    call_argument [54233,54235]
                                                        number_literal: 20 [54233,54235]
                                            call_argument [54263,54282]
                                                string_literal [54263,54282]
                                                    string: " is missing role " [54263,54282]
                                            call_argument [54309,54358]
                                                call_expression [54309,54358]
                                                    member_expression: StringsUpgradeable.toHexString [54309,54339]
                                                    call_argument [54340,54353]
                                                        type_cast_expression [54340,54353]
                                                            primitive_type: uint256 [54340,54347]
                                                            call_argument [54348,54352]
                                                                identifier: role [54348,54352]
                                                    call_argument [54355,54357]
                                                        number_literal: 32 [54355,54357]
        function_definition [54623,54804]
            function: function [54623,54631]
            identifier: getRoleAdmin [54632,54644]
            parameter [54645,54657]
                type_name: bytes32 [54645,54652]
                identifier: role [54653,54657]
            visibility: public [54668,54674]
            state_mutability [54684,54688]
                view: view [54684,54688]
            virtual: virtual [54698,54705]
            override_specifier [54715,54723]
                override: override [54715,54723]
            return_type_definition [54733,54750]
                returns: returns [54733,54740]
                parameter [54742,54749]
                    type_name: bytes32 [54742,54749]
            function_body [54756,54804]
                return_statement [54767,54797]
                    return: return [54767,54773]
                    member_expression: _roles[role].adminRole [54774,54796]
        function_definition [55066,55254]
            function: function [55066,55074]
            identifier: grantRole [55075,55084]
            parameter [55085,55097]
                type_name: bytes32 [55085,55092]
                identifier: role [55093,55097]
            parameter [55099,55114]
                type_name: address [55099,55106]
                identifier: account [55107,55114]
            visibility: public [55125,55131]
            virtual: virtual [55141,55148]
            override_specifier [55158,55166]
                override: override [55158,55166]
            modifier_invocation [55176,55204]
                identifier: onlyRole [55176,55184]
                call_argument [55185,55203]
                    call_expression [55185,55203]
                        identifier: getRoleAdmin [55185,55197]
                        call_argument [55198,55202]
                            identifier: role [55198,55202]
            function_body [55210,55254]
                expression_statement [55221,55247]
                    call_expression [55221,55246]
                        identifier: _grantRole [55221,55231]
                        call_argument [55232,55236]
                            identifier: role [55232,55236]
                        call_argument [55238,55245]
                            identifier: account [55238,55245]
        function_definition [55499,55689]
            function: function [55499,55507]
            identifier: revokeRole [55508,55518]
            parameter [55519,55531]
                type_name: bytes32 [55519,55526]
                identifier: role [55527,55531]
            parameter [55533,55548]
                type_name: address [55533,55540]
                identifier: account [55541,55548]
            visibility: public [55559,55565]
            virtual: virtual [55575,55582]
            override_specifier [55592,55600]
                override: override [55592,55600]
            modifier_invocation [55610,55638]
                identifier: onlyRole [55610,55618]
                call_argument [55619,55637]
                    call_expression [55619,55637]
                        identifier: getRoleAdmin [55619,55631]
                        call_argument [55632,55636]
                            identifier: role [55632,55636]
            function_body [55644,55689]
                expression_statement [55655,55682]
                    call_expression [55655,55681]
                        identifier: _revokeRole [55655,55666]
                        call_argument [55667,55671]
                            identifier: role [55667,55671]
                        call_argument [55673,55680]
                            identifier: account [55673,55680]
        function_definition [56196,56483]
            function: function [56196,56204]
            identifier: renounceRole [56205,56217]
            parameter [56218,56230]
                type_name: bytes32 [56218,56225]
                identifier: role [56226,56230]
            parameter [56232,56247]
                type_name: address [56232,56239]
                identifier: account [56240,56247]
            visibility: public [56258,56264]
            virtual: virtual [56274,56281]
            override_specifier [56291,56299]
                override: override [56291,56299]
            function_body [56305,56483]
                expression_statement [56316,56437]
                    call_expression [56316,56436]
                        identifier: require [56316,56323]
                        call_argument [56338,56361]
                            binary_expression [56338,56361]
                                identifier: account [56338,56345]
                                comparison_operator: == [56346,56348]
                                call_expression [56349,56361]
                                    identifier: _msgSender [56349,56359]
                        call_argument [56376,56425]
                            string_literal [56376,56425]
                                string: "AccessControl: can only renounce roles for self" [56376,56425]
                expression_statement [56449,56476]
                    call_expression [56449,56475]
                        identifier: _revokeRole [56449,56460]
                        call_argument [56461,56465]
                            identifier: role [56461,56465]
                        call_argument [56467,56474]
                            identifier: account [56467,56474]
        function_definition [57142,57254]
            function: function [57142,57150]
            identifier: _setupRole [57151,57161]
            parameter [57162,57174]
                type_name: bytes32 [57162,57169]
                identifier: role [57170,57174]
            parameter [57176,57191]
                type_name: address [57176,57183]
                identifier: account [57184,57191]
            visibility: internal [57193,57201]
            virtual: virtual [57202,57209]
            function_body [57210,57254]
                expression_statement [57221,57247]
                    call_expression [57221,57246]
                        identifier: _grantRole [57221,57231]
                        call_argument [57232,57236]
                            identifier: role [57232,57236]
                        call_argument [57238,57245]
                            identifier: account [57238,57245]
        function_definition [57386,57637]
            function: function [57386,57394]
            identifier: _setRoleAdmin [57395,57408]
            parameter [57409,57421]
                type_name: bytes32 [57409,57416]
                identifier: role [57417,57421]
            parameter [57423,57440]
                type_name: bytes32 [57423,57430]
                identifier: adminRole [57431,57440]
            visibility: internal [57442,57450]
            virtual: virtual [57451,57458]
            function_body [57459,57637]
                variable_declaration_statement [57470,57517]
                    variable_declaration [57470,57495]
                        type_name: bytes32 [57470,57477]
                        identifier: previousAdminRole [57478,57495]
                    affectation_operator: = [57496,57497]
                    call_expression [57498,57516]
                        identifier: getRoleAdmin [57498,57510]
                        call_argument [57511,57515]
                            identifier: role [57511,57515]
                expression_statement [57527,57562]
                    assignment_expression [57527,57561]
                        member_expression: _roles[role].adminRole [57527,57549]
                        affectation_operator: = [57550,57551]
                        identifier: adminRole [57552,57561]
                emit_statement [57572,57630]
                    identifier: RoleAdminChanged [57577,57593]
                    call_argument [57594,57598]
                        identifier: role [57594,57598]
                    call_argument [57600,57617]
                        identifier: previousAdminRole [57600,57617]
                    call_argument [57619,57628]
                        identifier: adminRole [57619,57628]
        function_definition [57766,58004]
            function: function [57766,57774]
            identifier: _grantRole [57775,57785]
            parameter [57786,57798]
                type_name: bytes32 [57786,57793]
                identifier: role [57794,57798]
            parameter [57800,57815]
                type_name: address [57800,57807]
                identifier: account [57808,57815]
            visibility: internal [57817,57825]
            virtual: virtual [57826,57833]
            function_body [57834,58004]
                if_statement [57845,57997]
                    if: if [57845,57847]
                    unary_expression [57849,57872]
                        !: ! [57849,57850]
                        call_expression [57850,57872]
                            identifier: hasRole [57850,57857]
                            call_argument [57858,57862]
                                identifier: role [57858,57862]
                            call_argument [57864,57871]
                                identifier: account [57864,57871]
                    block_statement [57874,57997]
                        expression_statement [57889,57926]
                            assignment_expression [57889,57925]
                                array_access [57889,57918]
                                    member_expression: _roles[role].members [57889,57909]
                                    identifier: account [57910,57917]
                                affectation_operator: = [57919,57920]
                                boolean_literal: true [57921,57925]
                        emit_statement [57940,57986]
                            identifier: RoleGranted [57945,57956]
                            call_argument [57957,57961]
                                identifier: role [57957,57961]
                            call_argument [57963,57970]
                                identifier: account [57963,57970]
                            call_argument [57972,57984]
                                call_expression [57972,57984]
                                    identifier: _msgSender [57972,57982]
        function_definition [58136,58375]
            function: function [58136,58144]
            identifier: _revokeRole [58145,58156]
            parameter [58157,58169]
                type_name: bytes32 [58157,58164]
                identifier: role [58165,58169]
            parameter [58171,58186]
                type_name: address [58171,58178]
                identifier: account [58179,58186]
            visibility: internal [58188,58196]
            virtual: virtual [58197,58204]
            function_body [58205,58375]
                if_statement [58216,58368]
                    if: if [58216,58218]
                    call_expression [58220,58242]
                        identifier: hasRole [58220,58227]
                        call_argument [58228,58232]
                            identifier: role [58228,58232]
                        call_argument [58234,58241]
                            identifier: account [58234,58241]
                    block_statement [58244,58368]
                        expression_statement [58259,58297]
                            assignment_expression [58259,58296]
                                array_access [58259,58288]
                                    member_expression: _roles[role].members [58259,58279]
                                    identifier: account [58280,58287]
                                affectation_operator: = [58289,58290]
                                boolean_literal: false [58291,58296]
                        emit_statement [58311,58357]
                            identifier: RoleRevoked [58316,58327]
                            call_argument [58328,58332]
                                identifier: role [58328,58332]
                            call_argument [58334,58341]
                                identifier: account [58334,58341]
                            call_argument [58343,58355]
                                call_expression [58343,58355]
                                    identifier: _msgSender [58343,58353]
        state_variable_declaration [58647,58673]
            type_name: uint256[49] [58647,58658]
            visibility: private [58659,58666]
            identifier: __gap [58667,58672]
to
source_file [0,132524]
at 25

New cluster:
===
insert-node
---
library_declaration [23588,36497]
to
source_file [0,132524]
at 16
------------
===
insert-node
---
function: function [23820,23828]
to
function_definition [23820,23926]
at 0
===
insert-node
---
identifier: log2 [33225,33229]
to
function_definition [33216,33532]
at 1
===
insert-node
---
visibility: internal [34803,34811]
to
function_definition [34745,35062]
at 4
===
insert-node
---
identifier: log2 [32047,32051]
to
function_definition [32038,33057]
at 1
===
insert-node
---
identifier: log10 [34754,34759]
to
function_definition [34745,35062]
at 1
===
insert-node
---
function: function [33663,33671]
to
function_definition [33663,34585]
at 0
===
insert-node
---
function: function [24590,24598]
to
function_definition [24590,24787]
at 0
===
insert-node
---
function_definition [29252,29600]
to
contract_body [23612,36497]
at 6
===
insert-node
---
identifier: mulDiv [29261,29267]
to
function_definition [29252,29600]
at 1
===
insert-node
---
identifier: average [24236,24243]
to
function_definition [24227,24383]
at 1
===
insert-node
---
library_declaration [23588,36497]
to
source_file [0,132524]
at 16
===
insert-node
---
visibility: internal [33273,33281]
to
function_definition [33216,33532]
at 4
===
insert-node
---
function_definition [31600,31908]
to
contract_body [23612,36497]
at 8
===
insert-node
---
function: function [33216,33224]
to
function_definition [33216,33532]
at 0
===
insert-node
---
contract_body [23612,36497]
to
library_declaration [23588,36497]
at 2
===
insert-node
---
identifier: ceilDiv [24599,24606]
to
function_definition [24590,24787]
at 1
===
insert-node
---
function_definition [33216,33532]
to
contract_body [23612,36497]
at 10
===
insert-node
---
function: function [24227,24235]
to
function_definition [24227,24383]
at 0
===
insert-node
---
visibility: internal [23855,23863]
to
function_definition [23820,23926]
at 4
===
insert-node
---
identifier: log10 [33672,33677]
to
function_definition [33663,34585]
at 1
===
insert-node
---
identifier: sqrt [29835,29839]
to
function_definition [29826,31495]
at 1
===
insert-node
---
visibility: internal [29373,29381]
to
function_definition [29252,29600]
at 6
===
insert-node
---
visibility: internal [32067,32075]
to
function_definition [32038,33057]
at 3
===
insert-node
---
function_definition [34745,35062]
to
contract_body [23612,36497]
at 12
===
insert-node
---
identifier: MathUpgradeable [23596,23611]
to
library_declaration [23588,36497]
at 1
===
insert-node
---
visibility: internal [24037,24045]
to
function_definition [24002,24108]
at 4
===
insert-node
---
identifier: max [23829,23832]
to
function_definition [23820,23926]
at 1
===
insert-node
---
if: if [29894,29896]
to
if_statement [29894,29941]
at 0
===
insert-node
---
function: function [34745,34753]
to
function_definition [34745,35062]
at 0
===
insert-node
---
function: function [31600,31608]
to
function_definition [31600,31908]
at 0
===
insert-node
---
visibility: internal [33693,33701]
to
function_definition [33663,34585]
at 3
===
insert-node
---
function_definition [24227,24383]
to
contract_body [23612,36497]
at 3
===
insert-node
---
identifier: min [24011,24014]
to
function_definition [24002,24108]
at 1
===
insert-node
---
function: function [29826,29834]
to
function_definition [29826,31495]
at 0
===
insert-node
---
identifier: sqrt [31609,31613]
to
function_definition [31600,31908]
at 1
===
insert-node
---
function: function [24002,24010]
to
function_definition [24002,24108]
at 0
===
insert-node
---
visibility: internal [29851,29859]
to
function_definition [29826,31495]
at 3
===
insert-node
---
function_body [29883,31495]
to
function_definition [29826,31495]
at 6
===
insert-node
---
visibility: internal [31653,31661]
to
function_definition [31600,31908]
at 4
===
insert-node
---
library: library [23588,23595]
to
library_declaration [23588,36497]
at 0
===
insert-node
---
visibility: internal [24266,24274]
to
function_definition [24227,24383]
at 4
===
insert-node
---
function_definition [23820,23926]
to
contract_body [23612,36497]
at 1
===
insert-node
---
function_definition [24002,24108]
to
contract_body [23612,36497]
at 2
===
insert-node
---
function_definition [33663,34585]
to
contract_body [23612,36497]
at 11
===
insert-node
---
function_definition [24590,24787]
to
contract_body [23612,36497]
at 4
===
insert-node
---
function: function [29252,29260]
to
function_definition [29252,29600]
at 0
===
insert-node
---
function: function [32038,32046]
to
function_definition [32038,33057]
at 0
===
insert-node
---
if_statement [29894,29941]
to
function_body [29883,31495]
at 0
===
insert-node
---
function_definition [32038,33057]
to
contract_body [23612,36497]
at 9
===
insert-node
---
visibility: internal [24629,24637]
to
function_definition [24590,24787]
at 4
===
insert-node
---
function_definition [29826,31495]
to
contract_body [23612,36497]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
interface_declaration [70743,72431]
    interface: interface [70743,70752]
    identifier: IERC20PermitUpgradeable [70753,70776]
    contract_body [70777,72431]
        function_definition [71602,71793]
            function: function [71602,71610]
            identifier: permit [71611,71617]
            parameter [71628,71641]
                type_name: address [71628,71635]
                identifier: owner [71636,71641]
            parameter [71652,71667]
                type_name: address [71652,71659]
                identifier: spender [71660,71667]
            parameter [71678,71691]
                type_name: uint256 [71678,71685]
                identifier: value [71686,71691]
            parameter [71702,71718]
                type_name: uint256 [71702,71709]
                identifier: deadline [71710,71718]
            parameter [71729,71736]
                type_name: uint8 [71729,71734]
                identifier: v [71735,71736]
            parameter [71747,71756]
                type_name: bytes32 [71747,71754]
                identifier: r [71755,71756]
            parameter [71767,71776]
                type_name: bytes32 [71767,71774]
                identifier: s [71775,71776]
            visibility: external [71784,71792]
        function_definition [72107,72170]
            function: function [72107,72115]
            identifier: nonces [72116,72122]
            parameter [72123,72136]
                type_name: address [72123,72130]
                identifier: owner [72131,72136]
            visibility: external [72138,72146]
            state_mutability [72147,72151]
                view: view [72147,72151]
            return_type_definition [72152,72169]
                returns: returns [72152,72159]
                parameter [72161,72168]
                    type_name: uint256 [72161,72168]
        function_definition [72368,72428]
            function: function [72368,72376]
            identifier: DOMAIN_SEPARATOR [72377,72393]
            visibility: external [72396,72404]
            state_mutability [72405,72409]
                view: view [72405,72409]
            return_type_definition [72410,72427]
                returns: returns [72410,72417]
                parameter [72419,72426]
                    type_name: bytes32 [72419,72426]
to
source_file [0,132524]
at 30

New cluster:
===
insert-node
---
library_declaration [76089,80564]
to
source_file [0,132524]
at 34
------------
===
insert-node
---
visibility: internal [77114,77122]
to
function_definition [77002,77666]
at 5
===
insert-node
---
function_body [77123,77666]
to
function_definition [77002,77666]
at 6
===
insert-node
---
logical_operator: || [77389,77391]
to
binary_expression [77376,77438]
at 1
===
insert-node
---
library: library [76089,76096]
to
library_declaration [76089,80564]
at 0
===
insert-node
---
call_expression [77354,77520]
to
expression_statement [77354,77521]
at 0
===
insert-node
---
identifier: safeApprove [77011,77022]
to
function_definition [77002,77666]
at 1
===
insert-node
---
call_argument [77376,77438]
to
call_expression [77354,77520]
at 1
===
insert-node
---
parenthesized_expression [77376,77388]
to
binary_expression [77376,77438]
at 0
===
insert-node
---
identifier: SafeERC20Upgradeable [76097,76117]
to
library_declaration [76089,80564]
at 1
===
insert-node
---
expression_statement [77354,77521]
to
function_body [77123,77666]
at 0
===
insert-node
---
contract_body [76118,80564]
to
library_declaration [76089,80564]
at 2
===
insert-node
---
binary_expression [77376,77438]
to
call_argument [77376,77438]
at 0
===
insert-node
---
library_declaration [76089,80564]
to
source_file [0,132524]
at 34
===
insert-node
---
function_definition [77002,77666]
to
contract_body [76118,80564]
at 3
===
insert-node
---
identifier: require [77354,77361]
to
call_expression [77354,77520]
at 0
===
insert-node
---
function: function [77002,77010]
to
function_definition [77002,77666]
at 0

New cluster:
===
insert-node
---
library_declaration [94771,107669]
to
source_file [0,132524]
at 46
------------
===
insert-node
---
identifier: log256 [107349,107355]
to
function_definition [107340,107666]
at 1
===
insert-node
---
function_definition [102772,103080]
to
contract_body [94784,107669]
at 8
===
insert-node
---
visibility: internal [107399,107407]
to
function_definition [107340,107666]
at 4
===
insert-node
---
library: library [94771,94778]
to
library_declaration [94771,107669]
at 0
===
insert-node
---
identifier: min [95183,95186]
to
function_definition [95174,95280]
at 1
===
insert-node
---
visibility: internal [95438,95446]
to
function_definition [95399,95555]
at 4
===
insert-node
---
function: function [95762,95770]
to
function_definition [95762,95959]
at 0
===
insert-node
---
function: function [95174,95182]
to
function_definition [95174,95280]
at 0
===
insert-node
---
function: function [102772,102780]
to
function_definition [102772,103080]
at 0
===
insert-node
---
identifier: ceilDiv [95771,95778]
to
function_definition [95762,95959]
at 1
===
insert-node
---
identifier: average [95408,95415]
to
function_definition [95399,95555]
at 1
===
insert-node
---
function: function [100998,101006]
to
function_definition [100998,102667]
at 0
===
insert-node
---
function: function [107340,107348]
to
function_definition [107340,107666]
at 0
===
insert-node
---
function_definition [95762,95959]
to
contract_body [94784,107669]
at 4
===
insert-node
---
identifier: Math [94779,94783]
to
library_declaration [94771,107669]
at 1
===
insert-node
---
visibility: internal [101023,101031]
to
function_definition [100998,102667]
at 3
===
insert-node
---
contract_body [94784,107669]
to
library_declaration [94771,107669]
at 2
===
insert-node
---
library_declaration [94771,107669]
to
source_file [0,132524]
at 46
===
insert-node
---
function: function [95399,95407]
to
function_definition [95399,95555]
at 0
===
insert-node
---
identifier: max [95001,95004]
to
function_definition [94992,95098]
at 1
===
insert-node
---
function_definition [95174,95280]
to
contract_body [94784,107669]
at 2
===
insert-node
---
visibility: internal [95027,95035]
to
function_definition [94992,95098]
at 4
===
insert-node
---
visibility: internal [102825,102833]
to
function_definition [102772,103080]
at 4
===
insert-node
---
function_definition [107340,107666]
to
contract_body [94784,107669]
at 14
===
insert-node
---
identifier: sqrt [102781,102785]
to
function_definition [102772,103080]
at 1
===
insert-node
---
identifier: sqrt [101007,101011]
to
function_definition [100998,102667]
at 1
===
insert-node
---
function_definition [95399,95555]
to
contract_body [94784,107669]
at 3
===
insert-node
---
function_definition [94992,95098]
to
contract_body [94784,107669]
at 1
===
insert-node
---
function_definition [100998,102667]
to
contract_body [94784,107669]
at 7
===
insert-node
---
function: function [94992,95000]
to
function_definition [94992,95098]
at 0
===
insert-node
---
visibility: internal [95209,95217]
to
function_definition [95174,95280]
at 4
===
insert-node
---
visibility: internal [95801,95809]
to
function_definition [95762,95959]
at 4

New cluster:
===
insert-node
---
library_declaration [107869,110025]
to
source_file [0,132524]
at 48
------------
===
insert-node
---
while_statement [108485,108773]
to
block_statement [108185,108812]
at 5
===
insert-node
---
unchecked: unchecked [108185,108194]
to
block_statement [108185,108812]
at 0
===
insert-node
---
library_declaration [107869,110025]
to
source_file [0,132524]
at 48
===
insert-node
---
block_statement [109014,109100]
to
function_body [109003,109107]
at 0
===
insert-node
---
variable_declaration_statement [108210,108249]
to
block_statement [108185,108812]
at 1
===
insert-node
---
if: if [108736,108738]
to
if_statement [108736,108758]
at 0
===
insert-node
---
identifier: toHexString [109046,109057]
to
call_expression [109046,109088]
at 0
===
insert-node
---
function_definition [108103,108819]
to
contract_body [107885,110025]
at 2
===
insert-node
---
identifier: Strings [107877,107884]
to
library_declaration [107869,110025]
at 1
===
insert-node
---
function_body [108174,108819]
to
function_definition [108103,108819]
at 6
===
insert-node
---
affectation_operator: = [107926,107927]
to
state_variable_declaration [107892,107947]
at 4
===
insert-node
---
function: function [108929,108937]
to
function_definition [108929,109107]
at 0
===
insert-node
---
state_variable_declaration [107892,107947]
to
contract_body [107885,110025]
at 0
===
insert-node
---
return: return [109039,109045]
to
return_statement [109039,109089]
at 0
===
insert-node
---
library: library [107869,107876]
to
library_declaration [107869,110025]
at 0
===
insert-node
---
identifier: toString [108112,108120]
to
function_definition [108103,108819]
at 1
===
insert-node
---
unchecked: unchecked [109014,109023]
to
block_statement [109014,109100]
at 0
===
insert-node
---
affectation_operator: = [108284,108285]
to
variable_declaration_statement [108263,108305]
at 1
===
insert-node
---
while: while [108485,108490]
to
while_statement [108485,108773]
at 0
===
insert-node
---
function_body [109003,109107]
to
function_definition [108929,109107]
at 6
===
insert-node
---
boolean_literal: true [108492,108496]
to
while_statement [108485,108773]
at 1
===
insert-node
---
if_statement [108736,108758]
to
block_statement [108498,108773]
at 3
===
insert-node
---
call_expression [108286,108304]
to
variable_declaration_statement [108263,108305]
at 2
===
insert-node
---
visibility: internal [108965,108973]
to
function_definition [108929,109107]
at 3
===
insert-node
---
visibility: private [107900,107907]
to
state_variable_declaration [107892,107947]
at 1
===
insert-node
---
function: function [108103,108111]
to
function_definition [108103,108819]
at 0
===
insert-node
---
identifier: toHexString [108938,108949]
to
function_definition [108929,109107]
at 1
===
insert-node
---
function_definition [108929,109107]
to
contract_body [107885,110025]
at 3
===
insert-node
---
affectation_operator: = [108225,108226]
to
variable_declaration_statement [108210,108249]
at 1
===
insert-node
---
block_statement [108498,108773]
to
while_statement [108485,108773]
at 2
===
insert-node
---
type_name: bytes16 [107892,107899]
to
state_variable_declaration [107892,107947]
at 0
===
insert-node
---
visibility: internal [108136,108144]
to
function_definition [108103,108819]
at 3
===
insert-node
---
call_expression [109046,109088]
to
return_statement [109039,109089]
at 1
===
insert-node
---
return_statement [109039,109089]
to
block_statement [109014,109100]
at 1
===
insert-node
---
constant: constant [107908,107916]
to
state_variable_declaration [107892,107947]
at 2
===
insert-node
---
block_statement [108185,108812]
to
function_body [108174,108819]
at 0
===
insert-node
---
identifier: _SYMBOLS [107917,107925]
to
state_variable_declaration [107892,107947]
at 3
===
insert-node
---
variable_declaration_statement [108263,108305]
to
block_statement [108185,108812]
at 2
===
insert-node
---
contract_body [107885,110025]
to
library_declaration [107869,110025]
at 2

New cluster:
===
insert-node
---
library_declaration [111952,120954]
to
source_file [0,132524]
at 52
------------
===
insert-node
---
for_statement [113805,113923]
to
function_body [113756,113960]
at 1
===
insert-node
---
visibility: internal [113701,113709]
to
function_definition [113622,113960]
at 4
===
insert-node
---
identifier: verifyCalldata [112620,112634]
to
function_definition [112611,112819]
at 1
===
insert-node
---
function_definition [112611,112819]
to
contract_body [111972,120954]
at 1
===
insert-node
---
identifier: processMultiProof [115903,115920]
to
function_definition [115894,118073]
at 1
===
insert-node
---
function: function [112611,112619]
to
function_definition [112611,112819]
at 0
===
insert-node
---
function_body [112752,112819]
to
function_definition [112611,112819]
at 8
===
insert-node
---
visibility: internal [112723,112731]
to
function_definition [112611,112819]
at 5
===
insert-node
---
identifier: computedHash [113863,113875]
to
assignment_expression [113863,113911]
at 0
===
insert-node
---
contract_body [111972,120954]
to
library_declaration [111952,120954]
at 2
===
insert-node
---
function_definition [118295,120486]
to
contract_body [111972,120954]
at 7
===
insert-node
---
for_statement [119901,120273]
to
function_body [118486,120486]
at 7
===
insert-node
---
assignment_expression [113863,113911]
to
expression_statement [113863,113912]
at 0
===
insert-node
---
for: for [117488,117491]
to
for_statement [117488,117860]
at 0
===
insert-node
---
library_declaration [111952,120954]
to
source_file [0,132524]
at 52
===
insert-node
---
function_body [116073,118073]
to
function_definition [115894,118073]
at 8
===
insert-node
---
identifier: processMultiProofCalldata [118304,118329]
to
function_definition [118295,120486]
at 1
===
insert-node
---
for: for [119901,119904]
to
for_statement [119901,120273]
at 0
===
insert-node
---
function: function [113622,113630]
to
function_definition [113622,113960]
at 0
===
insert-node
---
visibility: internal [118443,118451]
to
function_definition [118295,120486]
at 5
===
insert-node
---
binary_expression [112770,112811]
to
return_statement [112763,112812]
at 1
===
insert-node
---
return_statement [112763,112812]
to
function_body [112752,112819]
at 0
===
insert-node
---
function_definition [113622,113960]
to
contract_body [111972,120954]
at 3
===
insert-node
---
library: library [111952,111959]
to
library_declaration [111952,120954]
at 0
===
insert-node
---
call_expression [113878,113911]
to
assignment_expression [113863,113911]
at 2
===
insert-node
---
for_statement [117488,117860]
to
function_body [116073,118073]
at 7
===
insert-node
---
identifier: root [112807,112811]
to
binary_expression [112770,112811]
at 2
===
insert-node
---
function_definition [115894,118073]
to
contract_body [111972,120954]
at 6
===
insert-node
---
return: return [112763,112769]
to
return_statement [112763,112812]
at 0
===
insert-node
---
for: for [113805,113808]
to
for_statement [113805,113923]
at 0
===
insert-node
---
affectation_operator: = [113876,113877]
to
assignment_expression [113863,113911]
at 1
===
insert-node
---
identifier: _hashPair [113878,113887]
to
call_expression [113878,113911]
at 0
===
insert-node
---
function_body [113756,113960]
to
function_definition [113622,113960]
at 7
===
insert-node
---
function: function [115894,115902]
to
function_definition [115894,118073]
at 0
===
insert-node
---
function: function [118295,118303]
to
function_definition [118295,120486]
at 0
===
insert-node
---
call_expression [112770,112803]
to
binary_expression [112770,112811]
at 0
===
insert-node
---
expression_statement [113863,113912]
to
block_statement [113848,113923]
at 0
===
insert-node
---
block_statement [113848,113923]
to
for_statement [113805,113923]
at 4
===
insert-node
---
identifier: MerkleProof [111960,111971]
to
library_declaration [111952,120954]
at 1
===
insert-node
---
function_body [118486,120486]
to
function_definition [118295,120486]
at 8
===
insert-node
---
visibility: internal [116030,116038]
to
function_definition [115894,118073]
at 5
===
insert-node
---
comparison_operator: == [112804,112806]
to
binary_expression [112770,112811]
at 1
===
insert-node
---
identifier: processProofCalldata [112770,112790]
to
call_expression [112770,112803]
at 0
===
insert-node
---
identifier: processProofCalldata [113631,113651]
to
function_definition [113622,113960]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [121006,121029]
    pragma: pragma [121006,121012]
    solidity_pragma_token [121013,121028]
        solidity: solidity [121013,121021]
        solidity_version:  0.8.16 [121021,121028]
to
source_file [0,132524]
at 53

New cluster:
===
insert-node
---
interface_declaration [121033,123287]
to
source_file [0,132524]
at 54
------------
===
insert-node
---
contract_body [121055,123287]
to
interface_declaration [121033,123287]
at 2
===
insert-node
---
identifier: ICollection [121043,121054]
to
interface_declaration [121033,123287]
at 1
===
insert-node
---
interface: interface [121033,121042]
to
interface_declaration [121033,123287]
at 0
===
insert-node
---
interface_declaration [121033,123287]
to
source_file [0,132524]
at 54

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [123342,123365]
    pragma: pragma [123342,123348]
    solidity_pragma_token [123349,123364]
        solidity: solidity [123349,123357]
        solidity_version:  0.8.16 [123357,123364]
to
source_file [0,132524]
at 55

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [125385,125408]
    pragma: pragma [125385,125391]
    solidity_pragma_token [125392,125407]
        solidity: solidity [125392,125400]
        solidity_version:  0.8.16 [125400,125407]
to
source_file [0,132524]
at 57

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [126242,126265]
    pragma: pragma [126242,126248]
    solidity_pragma_token [126249,126264]
        solidity: solidity [126249,126257]
        solidity_version:  0.8.16 [126257,126264]
to
source_file [0,132524]
at 59

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [133258,133281]
    pragma: pragma [133258,133264]
    solidity_pragma_token [133265,133280]
        solidity: solidity [133265,133273]
        solidity_version:  0.8.16 [133273,133280]
to
source_file [0,132524]
at 61

New cluster:
Unknown cluster type
------------
===
insert-tree
---
interface_declaration [133285,133379]
    interface: interface [133285,133294]
    identifier: INFTCustom [133295,133305]
    contract_body [133306,133379]
        function_definition [133313,133376]
            function: function [133313,133321]
            identifier: getFirstOwner [133322,133335]
            parameter [133336,133347]
                type_name: uint256 [133336,133343]
                identifier: _id [133344,133347]
            visibility: external [133349,133357]
            return_type_definition [133358,133375]
                returns: returns [133358,133365]
                parameter [133367,133374]
                    type_name: address [133367,133374]
to
source_file [0,132524]
at 62

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [133425,133448]
    pragma: pragma [133425,133431]
    solidity_pragma_token [133432,133447]
        solidity: solidity [133432,133440]
        solidity_version:  0.8.16 [133440,133447]
to
source_file [0,132524]
at 63

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [133939,133963]
    pragma: pragma [133939,133945]
    solidity_pragma_token [133946,133962]
        solidity: solidity [133946,133954]
        solidity_version_comparison_operator [133954,133956]
            bitwise_operator:  ^ [133954,133956]
        solidity_version: 0.8.16 [133956,133962]
to
source_file [0,132524]
at 65

New cluster:
===
insert-node
---
contract_declaration [134291,138745]
to
source_file [0,132524]
at 66
------------
===
insert-node
---
function_body [138436,138561]
to
function_definition [138324,138561]
at 6
===
insert-node
---
is: is [134314,134316]
to
contract_declaration [134291,138745]
at 1
===
insert-node
---
contract_body [134352,138745]
to
contract_declaration [134291,138745]
at 3
===
insert-node
---
function: function [138638,138646]
to
function_definition [138638,138742]
at 0
===
insert-node
---
function_definition [138324,138561]
to
contract_body [134352,138745]
at 8
===
insert-node
---
visibility: public [138669,138675]
to
function_definition [138638,138742]
at 2
===
insert-node
---
function: function [138324,138332]
to
function_definition [138324,138561]
at 0
===
insert-node
---
contract_declaration [134291,138745]
to
source_file [0,132524]
at 66
===
insert-node
---
identifier: Authenticator [134300,134313]
to
contract_declaration [134291,138745]
at 0
===
insert-node
---
identifier: setPrivilegedSigner [138333,138352]
to
function_definition [138324,138561]
at 1
===
insert-node
---
function_definition [138638,138742]
to
contract_body [134352,138745]
at 9
===
insert-node
---
identifier: getPrivilegedSigner [138647,138666]
to
function_definition [138638,138742]
at 1
===
insert-node
---
visibility: external [138379,138387]
to
function_definition [138324,138561]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [138787,138810]
    pragma: pragma [138787,138793]
    solidity_pragma_token [138794,138809]
        solidity: solidity [138794,138802]
        solidity_version:  0.8.16 [138802,138809]
to
source_file [0,132524]
at 67

New cluster:
Unknown cluster type
------------
===
insert-tree
---
pragma_directive [143922,143945]
    pragma: pragma [143922,143928]
    solidity_pragma_token [143929,143944]
        solidity: solidity [143929,143937]
        solidity_version:  0.8.16 [143937,143944]
to
source_file [0,132524]
at 70

New cluster:
UPDATE from IERC20 to IERC20Upgradeable
------------
===
update-node
---
type_name: IERC20 [126116,126122]
replace IERC20 by IERC20Upgradeable
===
update-node
---
identifier: IERC20 [126135,126141]
replace IERC20 by IERC20Upgradeable
===
update-node
---
identifier: IERC20 [14499,14505]
replace IERC20 by IERC20Upgradeable

New cluster:
MOVE from contract_body [14506,17237]
------------
===
move-tree
---
event_definition [17122,17234]
    identifier: Approval [17128,17136]
    event_paramater [17147,17168]
        type_name: address [17147,17154]
        indexed: indexed [17155,17162]
        identifier: owner [17163,17168]
    event_paramater [17179,17202]
        type_name: address [17179,17186]
        indexed: indexed [17187,17194]
        identifier: spender [17195,17202]
    event_paramater [17213,17226]
        type_name: uint256 [17213,17220]
        identifier: value [17221,17226]
to
contract_body [14506,17237]
at 1
===
move-tree
---
event_definition [16885,16957]
    identifier: Transfer [16891,16899]
    event_paramater [16900,16920]
        type_name: address [16900,16907]
        indexed: indexed [16908,16915]
        identifier: from [16916,16920]
    event_paramater [16922,16940]
        type_name: address [16922,16929]
        indexed: indexed [16930,16937]
        identifier: to [16938,16940]
    event_paramater [16942,16955]
        type_name: uint256 [16942,16949]
        identifier: value [16950,16955]
to
contract_body [14506,17237]
at 0

New cluster:
MOVE from contract_body [8464,13223]
------------
===
move-tree
---
function_definition [11717,11823]
    function: function [11717,11725]
    identifier: getApproved [11726,11737]
    parameter [11738,11753]
        type_name: uint256 [11738,11745]
        identifier: tokenId [11746,11753]
    visibility: external [11764,11772]
    state_mutability [11782,11786]
        view: view [11782,11786]
    return_type_definition [11796,11822]
        returns: returns [11796,11803]
        parameter [11805,11821]
            type_name: address [11805,11812]
            identifier: operator [11813,11821]
to
contract_body [8464,13223]
at 10
===
move-tree
---
function_definition [13078,13220]
    function: function [13078,13086]
    identifier: safeTransferFrom [13087,13103]
    parameter [13114,13126]
        type_name: address [13114,13121]
        identifier: from [13122,13126]
    parameter [13137,13147]
        type_name: address [13137,13144]
        identifier: to [13145,13147]
    parameter [13158,13173]
        type_name: uint256 [13158,13165]
        identifier: tokenId [13166,13173]
    parameter [13184,13203]
        type_name: bytes [13184,13189]
        calldata: calldata [13190,13198]
        identifier: data [13199,13203]
    visibility: external [13211,13219]
to
contract_body [8464,13223]
at 5

New cluster:
UPDATE from IERC721Custom to IERC1155Custom
------------
===
update-node
---
identifier: IERC721Custom [82554,82567]
replace IERC721Custom by IERC1155Custom

New cluster:
UPDATE from IERC1155Custom to IERC721Custom
------------
===
update-node
---
identifier: IERC1155Custom [81000,81014]
replace IERC1155Custom by IERC721Custom

New cluster:
MOVE from contract_body [75137,80645]
------------
===
move-tree
---
function_definition [80228,80414]
    function: function [80228,80236]
    identifier: buy [80237,80240]
    parameter [80251,80269]
        type_name: uint256 [80251,80258]
        identifier: _listingId [80259,80269]
    parameter [80280,80297]
        type_name: address [80280,80287]
        identifier: _currency [80288,80297]
    parameter [80308,80322]
        type_name: uint256 [80308,80315]
        identifier: _price [80316,80322]
    parameter [80333,80355]
        type_name: uint256 [80333,80340]
        identifier: _quantityToBuy [80341,80355]
    parameter [80366,80389]
        type_name: bytes32[] [80366,80375]
        memory: memory [80376,80382]
        identifier: _proof [80383,80389]
    visibility: external [80397,80405]
    state_mutability [80406,80413]
        payable: payable [80406,80413]
to
contract_body [75137,80645]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
inheritance_specifier [134317,134351]
    user_defined_type [134317,134351]
        identifier: AccessControlEnumerableUpgradeable [134317,134351]
to
contract_declaration [134291,138745]
at 2

New cluster:
===
insert-node
---
identifier: TokenTraxxMarketplace [144296,144317]
to
contract_declaration [92318,132524]
at 0
------------
===
insert-node
---
identifier: TokenTraxxMarketplace [144296,144317]
to
contract_declaration [92318,132524]
at 0

New cluster:
===
insert-node
---
is: is [144318,144320]
to
contract_declaration [92318,132524]
at 1
------------
===
insert-node
---
is: is [144318,144320]
to
contract_declaration [92318,132524]
at 1

New cluster:
===
insert-node
---
function_definition [10767,11411]
to
contract_body [25314,32960]
at 8
------------
===
insert-node
---
if: if [10977,10979]
to
if_statement [10977,11404]
at 0
===
insert-node
---
block_statement [10990,11338]
to
if_statement [10977,11404]
at 2
===
insert-node
---
call_expression [11359,11392]
to
expression_statement [11359,11393]
at 0
===
insert-node
---
visibility: internal [10929,10937]
to
function_definition [10767,11411]
at 6
===
insert-node
---
identifier: success [10981,10988]
to
if_statement [10977,11404]
at 1
===
insert-node
---
identifier: _revert [11359,11366]
to
call_expression [11359,11392]
at 0
===
insert-node
---
if_statement [10977,11404]
to
function_body [10966,11411]
at 0
===
insert-node
---
function: function [10767,10775]
to
function_definition [10767,11411]
at 0
===
insert-node
---
block_statement [11033,11295]
to
if_statement [11005,11295]
at 2
===
insert-node
---
block_statement [11344,11404]
to
if_statement [10977,11404]
at 4
===
insert-node
---
if: if [11005,11007]
to
if_statement [11005,11295]
at 0
===
insert-node
---
if_statement [11005,11295]
to
block_statement [10990,11338]
at 0
===
insert-node
---
identifier: verifyCallResultFromTarget [10776,10802]
to
function_definition [10767,11411]
at 1
===
insert-node
---
else: else [11339,11343]
to
if_statement [10977,11404]
at 3
===
insert-node
---
function_body [10966,11411]
to
function_definition [10767,11411]
at 9
===
insert-node
---
expression_statement [11359,11393]
to
block_statement [11344,11404]
at 0
===
insert-node
---
function_definition [10767,11411]
to
contract_body [25314,32960]
at 8

New cluster:
===
insert-node
---
function_definition [11640,11945]
to
contract_body [25314,32960]
at 9
------------
===
insert-node
---
function_definition [11640,11945]
to
contract_body [25314,32960]
at 9
===
insert-node
---
function_body [11804,11945]
to
function_definition [11640,11945]
at 8
===
insert-node
---
if_statement [11815,11938]
to
function_body [11804,11945]
at 0
===
insert-node
---
identifier: verifyCallResult [11649,11665]
to
function_definition [11640,11945]
at 1
===
insert-node
---
expression_statement [11893,11927]
to
block_statement [11878,11938]
at 0
===
insert-node
---
function: function [11640,11648]
to
function_definition [11640,11945]
at 0
===
insert-node
---
block_statement [11878,11938]
to
if_statement [11815,11938]
at 4
===
insert-node
---
identifier: _revert [11893,11900]
to
call_expression [11893,11926]
at 0
===
insert-node
---
visibility: internal [11767,11775]
to
function_definition [11640,11945]
at 5
===
insert-node
---
call_expression [11893,11926]
to
expression_statement [11893,11927]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [15401,15434]
    identifier: Initialized [15407,15418]
    event_paramater [15419,15432]
        type_name: uint8 [15419,15424]
        identifier: version [15425,15432]
to
contract_body [34715,36245]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [17507,17844]
    modifier: modifier [17507,17515]
    identifier: reinitializer [17516,17529]
    parameter [17530,17543]
        type_name: uint8 [17530,17535]
        identifier: version [17536,17543]
    function_body [17545,17844]
        expression_statement [17556,17693]
            call_expression [17556,17692]
                identifier: require [17556,17563]
                call_argument [17578,17618]
                    binary_expression [17578,17618]
                        unary_expression [17578,17592]
                            !: ! [17578,17579]
                            identifier: _initializing [17579,17592]
                        logical_operator: && [17593,17595]
                        binary_expression [17596,17618]
                            identifier: _initialized [17596,17608]
                            comparison_operator: < [17609,17610]
                            identifier: version [17611,17618]
                call_argument [17633,17681]
                    string_literal [17633,17681]
                        string: "Initializable: contract is already initialized" [17633,17681]
        expression_statement [17703,17726]
            assignment_expression [17703,17725]
                identifier: _initialized [17703,17715]
                affectation_operator: = [17716,17717]
                identifier: version [17718,17725]
        expression_statement [17736,17757]
            assignment_expression [17736,17756]
                identifier: _initializing [17736,17749]
                affectation_operator: = [17750,17751]
                boolean_literal: true [17752,17756]
        expression_statement [17767,17769]
            identifier: _ [17767,17768]
        expression_statement [17779,17801]
            assignment_expression [17779,17800]
                identifier: _initializing [17779,17792]
                affectation_operator: = [17793,17794]
                boolean_literal: false [17795,17800]
        emit_statement [17811,17837]
            identifier: Initialized [17816,17827]
            call_argument [17828,17835]
                identifier: version [17828,17835]
to
contract_body [34715,36245]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [18684,18969]
    function: function [18684,18692]
    identifier: _disableInitializers [18693,18713]
    visibility: internal [18716,18724]
    virtual: virtual [18725,18732]
    function_body [18733,18969]
        expression_statement [18744,18811]
            call_expression [18744,18810]
                identifier: require [18744,18751]
                call_argument [18752,18766]
                    unary_expression [18752,18766]
                        !: ! [18752,18753]
                        identifier: _initializing [18753,18766]
                call_argument [18768,18809]
                    string_literal [18768,18809]
                        string: "Initializable: contract is initializing" [18768,18809]
        if_statement [18821,18962]
            if: if [18821,18823]
            member_expression: _initialized < type(uint8).max [18825,18855]
            block_statement [18857,18962]
                expression_statement [18872,18903]
                    assignment_expression [18872,18902]
                        identifier: _initialized [18872,18884]
                        affectation_operator: = [18885,18886]
                        member_expression: type(uint8).max [18887,18902]
                emit_statement [18917,18951]
                    identifier: Initialized [18922,18933]
                    call_argument [18934,18949]
                        member_expression: type(uint8).max [18934,18949]
to
contract_body [34715,36245]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [19084,19186]
    function: function [19084,19092]
    identifier: _getInitializedVersion [19093,19115]
    visibility: internal [19118,19126]
    state_mutability [19127,19131]
        view: view [19127,19131]
    return_type_definition [19132,19147]
        returns: returns [19132,19139]
        parameter [19141,19146]
            type_name: uint8 [19141,19146]
    function_body [19148,19186]
        return_statement [19159,19179]
            return: return [19159,19165]
            identifier: _initialized [19166,19178]
to
contract_body [34715,36245]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
enum_declaration [23619,23745]
    enum: enum [23619,23623]
    identifier: Rounding [23624,23632]
    enum_value: Down [23644,23648]
    enum_value: Up [23687,23689]
    enum_value: Zero [23719,23723]
to
contract_body [23612,36497]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [25110,29115]
    function: function [25110,25118]
    identifier: mulDiv [25119,25125]
    parameter [25136,25145]
        type_name: uint256 [25136,25143]
        identifier: x [25144,25145]
    parameter [25156,25165]
        type_name: uint256 [25156,25163]
        identifier: y [25164,25165]
    parameter [25176,25195]
        type_name: uint256 [25176,25183]
        identifier: denominator [25184,25195]
    visibility: internal [25203,25211]
    state_mutability [25212,25216]
        pure: pure [25212,25216]
    return_type_definition [25217,25241]
        returns: returns [25217,25224]
        parameter [25226,25240]
            type_name: uint256 [25226,25233]
            identifier: result [25234,25240]
    function_body [25242,29115]
        block_statement [25253,29108]
            unchecked: unchecked [25253,25262]
            variable_declaration_statement [25578,25592]
                variable_declaration [25578,25591]
                    type_name: uint256 [25578,25585]
                    identifier: prod0 [25586,25591]
            variable_declaration_statement [25651,25665]
                variable_declaration [25651,25664]
                    type_name: uint256 [25651,25658]
                    identifier: prod1 [25659,25664]
            assembly_statement [25723,25893]
                assembly: assembly [25723,25731]
                yul_variable_declaration [25751,25781]
                    let: let [25751,25754]
                    yul_identifier [25755,25757]
                        identifier: mm [25755,25757]
                    :=: := [25758,25760]
                    yul_function_call [25761,25781]
                        yul_evm_builtin [25761,25767]
                            mulmod: mulmod [25761,25767]
                        yul_path [25768,25769]
                            yul_identifier [25768,25769]
                                identifier: x [25768,25769]
                        yul_path [25771,25772]
                            yul_identifier [25771,25772]
                                identifier: y [25771,25772]
                        yul_function_call [25774,25780]
                            yul_evm_builtin [25774,25777]
                                not: not [25774,25777]
                            yul_decimal_number: 0 [25778,25779]
                yul_assignment [25799,25817]
                    yul_path [25799,25804]
                        yul_identifier [25799,25804]
                            identifier: prod0 [25799,25804]
                    :=: := [25805,25807]
                    yul_function_call [25808,25817]
                        yul_evm_builtin [25808,25811]
                            mul: mul [25808,25811]
                        yul_path [25812,25813]
                            yul_identifier [25812,25813]
                                identifier: x [25812,25813]
                        yul_path [25815,25816]
                            yul_identifier [25815,25816]
                                identifier: y [25815,25816]
                yul_assignment [25835,25878]
                    yul_path [25835,25840]
                        yul_identifier [25835,25840]
                            identifier: prod1 [25835,25840]
                    :=: := [25841,25843]
                    yul_function_call [25844,25878]
                        yul_evm_builtin [25844,25847]
                            sub: sub [25844,25847]
                        yul_function_call [25848,25862]
                            yul_evm_builtin [25848,25851]
                                sub: sub [25848,25851]
                            yul_path [25852,25854]
                                yul_identifier [25852,25854]
                                    identifier: mm [25852,25854]
                            yul_path [25856,25861]
                                yul_identifier [25856,25861]
                                    identifier: prod0 [25856,25861]
                        yul_function_call [25864,25877]
                            yul_evm_builtin [25864,25866]
                                lt: lt [25864,25866]
                            yul_path [25867,25869]
                                yul_identifier [25867,25869]
                                    identifier: mm [25867,25869]
                            yul_path [25871,25876]
                                yul_identifier [25871,25876]
                                    identifier: prod0 [25871,25876]
            if_statement [25973,26050]
                if: if [25973,25975]
                binary_expression [25977,25987]
                    identifier: prod1 [25977,25982]
                    comparison_operator: == [25983,25985]
                    number_literal: 0 [25986,25987]
                block_statement [25989,26050]
                    return_statement [26008,26035]
                        return: return [26008,26014]
                        binary_expression [26015,26034]
                            identifier: prod0 [26015,26020]
                            arithmetic_operator: / [26021,26022]
                            identifier: denominator [26023,26034]
            expression_statement [26155,26184]
                call_expression [26155,26183]
                    identifier: require [26155,26162]
                    call_argument [26163,26182]
                        binary_expression [26163,26182]
                            identifier: denominator [26163,26174]
                            comparison_operator: > [26175,26176]
                            identifier: prod1 [26177,26182]
            variable_declaration_statement [26446,26464]
                variable_declaration [26446,26463]
                    type_name: uint256 [26446,26453]
                    identifier: remainder [26454,26463]
            assembly_statement [26478,26785]
                assembly: assembly [26478,26486]
                yul_assignment [26558,26596]
                    yul_path [26558,26567]
                        yul_identifier [26558,26567]
                            identifier: remainder [26558,26567]
                    :=: := [26568,26570]
                    yul_function_call [26571,26596]
                        yul_evm_builtin [26571,26577]
                            mulmod: mulmod [26571,26577]
                        yul_path [26578,26579]
                            yul_identifier [26578,26579]
                                identifier: x [26578,26579]
                        yul_path [26581,26582]
                            yul_identifier [26581,26582]
                                identifier: y [26581,26582]
                        yul_path [26584,26595]
                            yul_identifier [26584,26595]
                                identifier: denominator [26584,26595]
                yul_assignment [26681,26722]
                    yul_path [26681,26686]
                        yul_identifier [26681,26686]
                            identifier: prod1 [26681,26686]
                    :=: := [26687,26689]
                    yul_function_call [26690,26722]
                        yul_evm_builtin [26690,26693]
                            sub: sub [26690,26693]
                        yul_path [26694,26699]
                            yul_identifier [26694,26699]
                                identifier: prod1 [26694,26699]
                        yul_function_call [26701,26721]
                            yul_evm_builtin [26701,26703]
                                gt: gt [26701,26703]
                            yul_path [26704,26713]
                                yul_identifier [26704,26713]
                                    identifier: remainder [26704,26713]
                            yul_path [26715,26720]
                                yul_identifier [26715,26720]
                                    identifier: prod0 [26715,26720]
                yul_assignment [26740,26770]
                    yul_path [26740,26745]
                        yul_identifier [26740,26745]
                            identifier: prod0 [26740,26745]
                    :=: := [26746,26748]
                    yul_function_call [26749,26770]
                        yul_evm_builtin [26749,26752]
                            sub: sub [26749,26752]
                        yul_path [26753,26758]
                            yul_identifier [26753,26758]
                                identifier: prod0 [26753,26758]
                        yul_path [26760,26769]
                            yul_identifier [26760,26769]
                                identifier: remainder [26760,26769]
            variable_declaration_statement [27098,27146]
                variable_declaration [27098,27110]
                    type_name: uint256 [27098,27105]
                    identifier: twos [27106,27110]
                affectation_operator: = [27111,27112]
                binary_expression [27113,27145]
                    identifier: denominator [27113,27124]
                    bitwise_operator: & [27125,27126]
                    parenthesized_expression [27127,27145]
                        binary_expression [27128,27144]
                            unary_expression [27128,27140]
                                ~: ~ [27128,27129]
                                identifier: denominator [27129,27140]
                            arithmetic_operator: + [27141,27142]
                            number_literal: 1 [27143,27144]
            assembly_statement [27160,27540]
                assembly: assembly [27160,27168]
                yul_assignment [27236,27273]
                    yul_path [27236,27247]
                        yul_identifier [27236,27247]
                            identifier: denominator [27236,27247]
                    :=: := [27248,27250]
                    yul_function_call [27251,27273]
                        yul_evm_builtin [27251,27254]
                            div: div [27251,27254]
                        yul_path [27255,27266]
                            yul_identifier [27255,27266]
                                identifier: denominator [27255,27266]
                        yul_path [27268,27272]
                            yul_identifier [27268,27272]
                                identifier: twos [27268,27272]
                yul_assignment [27343,27368]
                    yul_path [27343,27348]
                        yul_identifier [27343,27348]
                            identifier: prod0 [27343,27348]
                    :=: := [27349,27351]
                    yul_function_call [27352,27368]
                        yul_evm_builtin [27352,27355]
                            div: div [27352,27355]
                        yul_path [27356,27361]
                            yul_identifier [27356,27361]
                                identifier: prod0 [27356,27361]
                        yul_path [27363,27367]
                            yul_identifier [27363,27367]
                                identifier: twos [27363,27367]
                yul_assignment [27486,27525]
                    yul_path [27486,27490]
                        yul_identifier [27486,27490]
                            identifier: twos [27486,27490]
                    :=: := [27491,27493]
                    yul_function_call [27494,27525]
                        yul_evm_builtin [27494,27497]
                            add: add [27494,27497]
                        yul_function_call [27498,27521]
                            yul_evm_builtin [27498,27501]
                                div: div [27498,27501]
                            yul_function_call [27502,27514]
                                yul_evm_builtin [27502,27505]
                                    sub: sub [27502,27505]
                                yul_decimal_number: 0 [27506,27507]
                                yul_path [27509,27513]
                                    yul_identifier [27509,27513]
                                        identifier: twos [27509,27513]
                            yul_path [27516,27520]
                                yul_identifier [27516,27520]
                                    identifier: twos [27516,27520]
                        yul_decimal_number: 1 [27523,27524]
            expression_statement [27609,27631]
                augmented_assignment_expression [27609,27630]
                    identifier: prod0 [27609,27614]
                    affectation_operator: |= [27615,27617]
                    binary_expression [27618,27630]
                        identifier: prod1 [27618,27623]
                        arithmetic_operator: * [27624,27625]
                        identifier: twos [27626,27630]
            variable_declaration_statement [27953,27993]
                variable_declaration [27953,27968]
                    type_name: uint256 [27953,27960]
                    identifier: inverse [27961,27968]
                affectation_operator: = [27969,27970]
                binary_expression [27971,27992]
                    parenthesized_expression [27971,27988]
                        binary_expression [27972,27987]
                            number_literal: 3 [27972,27973]
                            arithmetic_operator: * [27974,27975]
                            identifier: denominator [27976,27987]
                    bitwise_operator: ^ [27989,27990]
                    number_literal: 2 [27991,27992]
            expression_statement [28213,28250]
                augmented_assignment_expression [28213,28249]
                    identifier: inverse [28213,28220]
                    affectation_operator: *= [28221,28223]
                    binary_expression [28224,28249]
                        number_literal: 2 [28224,28225]
                        arithmetic_operator: - [28226,28227]
                        binary_expression [28228,28249]
                            identifier: denominator [28228,28239]
                            arithmetic_operator: * [28240,28241]
                            identifier: inverse [28242,28249]
            expression_statement [28283,28320]
                augmented_assignment_expression [28283,28319]
                    identifier: inverse [28283,28290]
                    affectation_operator: *= [28291,28293]
                    binary_expression [28294,28319]
                        number_literal: 2 [28294,28295]
                        arithmetic_operator: - [28296,28297]
                        binary_expression [28298,28319]
                            identifier: denominator [28298,28309]
                            arithmetic_operator: * [28310,28311]
                            identifier: inverse [28312,28319]
            expression_statement [28354,28391]
                augmented_assignment_expression [28354,28390]
                    identifier: inverse [28354,28361]
                    affectation_operator: *= [28362,28364]
                    binary_expression [28365,28390]
                        number_literal: 2 [28365,28366]
                        arithmetic_operator: - [28367,28368]
                        binary_expression [28369,28390]
                            identifier: denominator [28369,28380]
                            arithmetic_operator: * [28381,28382]
                            identifier: inverse [28383,28390]
            expression_statement [28425,28462]
                augmented_assignment_expression [28425,28461]
                    identifier: inverse [28425,28432]
                    affectation_operator: *= [28433,28435]
                    binary_expression [28436,28461]
                        number_literal: 2 [28436,28437]
                        arithmetic_operator: - [28438,28439]
                        binary_expression [28440,28461]
                            identifier: denominator [28440,28451]
                            arithmetic_operator: * [28452,28453]
                            identifier: inverse [28454,28461]
            expression_statement [28496,28533]
                augmented_assignment_expression [28496,28532]
                    identifier: inverse [28496,28503]
                    affectation_operator: *= [28504,28506]
                    binary_expression [28507,28532]
                        number_literal: 2 [28507,28508]
                        arithmetic_operator: - [28509,28510]
                        binary_expression [28511,28532]
                            identifier: denominator [28511,28522]
                            arithmetic_operator: * [28523,28524]
                            identifier: inverse [28525,28532]
            expression_statement [28568,28605]
                augmented_assignment_expression [28568,28604]
                    identifier: inverse [28568,28575]
                    affectation_operator: *= [28576,28578]
                    binary_expression [28579,28604]
                        number_literal: 2 [28579,28580]
                        arithmetic_operator: - [28581,28582]
                        binary_expression [28583,28604]
                            identifier: denominator [28583,28594]
                            arithmetic_operator: * [28595,28596]
                            identifier: inverse [28597,28604]
            expression_statement [29044,29069]
                assignment_expression [29044,29068]
                    identifier: result [29044,29050]
                    affectation_operator: = [29051,29052]
                    binary_expression [29053,29068]
                        identifier: prod0 [29053,29058]
                        arithmetic_operator: * [29059,29060]
                        identifier: inverse [29061,29068]
            return_statement [29083,29097]
                return: return [29083,29089]
                identifier: result [29090,29096]
to
contract_body [23612,36497]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [35321,36008]
    function: function [35321,35329]
    identifier: log256 [35330,35336]
    parameter [35337,35350]
        type_name: uint256 [35337,35344]
        identifier: value [35345,35350]
    visibility: internal [35352,35360]
    state_mutability [35361,35365]
        pure: pure [35361,35365]
    return_type_definition [35366,35383]
        returns: returns [35366,35373]
        parameter [35375,35382]
            type_name: uint256 [35375,35382]
    function_body [35384,36008]
        variable_declaration_statement [35395,35414]
            variable_declaration [35395,35409]
                type_name: uint256 [35395,35402]
                identifier: result [35403,35409]
            affectation_operator: = [35410,35411]
            number_literal: 0 [35412,35413]
        block_statement [35424,35977]
            unchecked: unchecked [35424,35433]
            if_statement [35449,35550]
                if: if [35449,35451]
                binary_expression [35453,35469]
                    binary_expression [35453,35465]
                        identifier: value [35453,35458]
                        >>: >> [35459,35461]
                        number_literal: 128 [35462,35465]
                    comparison_operator: > [35466,35467]
                    number_literal: 0 [35468,35469]
                block_statement [35471,35550]
                    expression_statement [35490,35504]
                        augmented_assignment_expression [35490,35503]
                            identifier: value [35490,35495]
                            >>=: >>= [35496,35499]
                            number_literal: 128 [35500,35503]
                    expression_statement [35522,35535]
                        augmented_assignment_expression [35522,35534]
                            identifier: result [35522,35528]
                            affectation_operator: += [35529,35531]
                            number_literal: 16 [35532,35534]
            if_statement [35564,35662]
                if: if [35564,35566]
                binary_expression [35568,35583]
                    binary_expression [35568,35579]
                        identifier: value [35568,35573]
                        >>: >> [35574,35576]
                        number_literal: 64 [35577,35579]
                    comparison_operator: > [35580,35581]
                    number_literal: 0 [35582,35583]
                block_statement [35585,35662]
                    expression_statement [35604,35617]
                        augmented_assignment_expression [35604,35616]
                            identifier: value [35604,35609]
                            >>=: >>= [35610,35613]
                            number_literal: 64 [35614,35616]
                    expression_statement [35635,35647]
                        augmented_assignment_expression [35635,35646]
                            identifier: result [35635,35641]
                            affectation_operator: += [35642,35644]
                            number_literal: 8 [35645,35646]
            if_statement [35676,35774]
                if: if [35676,35678]
                binary_expression [35680,35695]
                    binary_expression [35680,35691]
                        identifier: value [35680,35685]
                        >>: >> [35686,35688]
                        number_literal: 32 [35689,35691]
                    comparison_operator: > [35692,35693]
                    number_literal: 0 [35694,35695]
                block_statement [35697,35774]
                    expression_statement [35716,35729]
                        augmented_assignment_expression [35716,35728]
                            identifier: value [35716,35721]
                            >>=: >>= [35722,35725]
                            number_literal: 32 [35726,35728]
                    expression_statement [35747,35759]
                        augmented_assignment_expression [35747,35758]
                            identifier: result [35747,35753]
                            affectation_operator: += [35754,35756]
                            number_literal: 4 [35757,35758]
            if_statement [35788,35886]
                if: if [35788,35790]
                binary_expression [35792,35807]
                    binary_expression [35792,35803]
                        identifier: value [35792,35797]
                        >>: >> [35798,35800]
                        number_literal: 16 [35801,35803]
                    comparison_operator: > [35804,35805]
                    number_literal: 0 [35806,35807]
                block_statement [35809,35886]
                    expression_statement [35828,35841]
                        augmented_assignment_expression [35828,35840]
                            identifier: value [35828,35833]
                            >>=: >>= [35834,35837]
                            number_literal: 16 [35838,35840]
                    expression_statement [35859,35871]
                        augmented_assignment_expression [35859,35870]
                            identifier: result [35859,35865]
                            affectation_operator: += [35866,35868]
                            number_literal: 2 [35869,35870]
            if_statement [35900,35966]
                if: if [35900,35902]
                binary_expression [35904,35918]
                    binary_expression [35904,35914]
                        identifier: value [35904,35909]
                        >>: >> [35910,35912]
                        number_literal: 8 [35913,35914]
                    comparison_operator: > [35915,35916]
                    number_literal: 0 [35917,35918]
                block_statement [35920,35966]
                    expression_statement [35939,35951]
                        augmented_assignment_expression [35939,35950]
                            identifier: result [35939,35945]
                            affectation_operator: += [35946,35948]
                            number_literal: 1 [35949,35950]
        return_statement [35987,36001]
            return: return [35987,35993]
            identifier: result [35994,36000]
to
contract_body [23612,36497]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [36168,36494]
    function: function [36168,36176]
    identifier: log256 [36177,36183]
    parameter [36184,36197]
        type_name: uint256 [36184,36191]
        identifier: value [36192,36197]
    parameter [36199,36216]
        type_name: Rounding [36199,36207]
        identifier: rounding [36208,36216]
    visibility: internal [36227,36235]
    state_mutability [36245,36249]
        pure: pure [36245,36249]
    return_type_definition [36259,36276]
        returns: returns [36259,36266]
        parameter [36268,36275]
            type_name: uint256 [36268,36275]
    function_body [36282,36494]
        block_statement [36293,36487]
            unchecked: unchecked [36293,36302]
            variable_declaration_statement [36318,36349]
                variable_declaration [36318,36332]
                    type_name: uint256 [36318,36325]
                    identifier: result [36326,36332]
                affectation_operator: = [36333,36334]
                call_expression [36335,36348]
                    identifier: log256 [36335,36341]
                    call_argument [36342,36347]
                        identifier: value [36342,36347]
            return_statement [36363,36476]
                return: return [36363,36369]
                binary_expression [36387,36475]
                    identifier: result [36387,36393]
                    arithmetic_operator: + [36394,36395]
                    parenthesized_expression [36413,36475]
                        ternary_expression [36414,36474]
                            binary_expression [36414,36466]
                                binary_expression [36414,36437]
                                    identifier: rounding [36414,36422]
                                    comparison_operator: == [36423,36425]
                                    member_expression: Rounding.Up [36426,36437]
                                logical_operator: && [36438,36440]
                                binary_expression [36441,36466]
                                    binary_expression [36441,36458]
                                        number_literal: 1 [36441,36442]
                                        <<: << [36443,36445]
                                        parenthesized_expression [36446,36458]
                                            binary_expression [36447,36457]
                                                identifier: result [36447,36453]
                                                arithmetic_operator: * [36454,36455]
                                                number_literal: 8 [36456,36457]
                                    comparison_operator: < [36459,36460]
                                    identifier: value [36461,36466]
                            ?: ? [36467,36468]
                            number_literal: 1 [36469,36470]
                            :: : [36471,36472]
                            number_literal: 0 [36473,36474]
to
contract_body [23612,36497]
at 14

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [36815,36859]
    type_name: uint8 [36815,36820]
    visibility: private [36821,36828]
    constant: constant [36829,36837]
    identifier: _ADDRESS_LENGTH [36838,36853]
    affectation_operator: = [36854,36855]
    number_literal: 20 [36856,36858]
to
contract_body [45701,47660]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [38755,38906]
    function: function [38755,38763]
    identifier: toHexString [38764,38775]
    parameter [38776,38788]
        type_name: address [38776,38783]
        identifier: addr [38784,38788]
    visibility: internal [38790,38798]
    state_mutability [38799,38803]
        pure: pure [38799,38803]
    return_type_definition [38804,38827]
        returns: returns [38804,38811]
        parameter [38813,38826]
            type_name: string [38813,38819]
            memory: memory [38820,38826]
    function_body [38828,38906]
        return_statement [38839,38899]
            return: return [38839,38845]
            call_expression [38846,38898]
                identifier: toHexString [38846,38857]
                call_argument [38858,38880]
                    type_cast_expression [38858,38880]
                        primitive_type: uint256 [38858,38865]
                        call_argument [38866,38879]
                            type_cast_expression [38866,38879]
                                primitive_type: uint160 [38866,38873]
                                call_argument [38874,38878]
                                    identifier: addr [38874,38878]
                call_argument [38882,38897]
                    identifier: _ADDRESS_LENGTH [38882,38897]
to
contract_body [45701,47660]
at 5

New cluster:
===
insert-node
---
function_definition [42619,42724]
to
contract_body [52116,58676]
at 8
------------
===
insert-node
---
function: function [42619,42627]
to
function_definition [42619,42724]
at 0
===
insert-node
---
function_definition [42619,42724]
to
contract_body [52116,58676]
at 8
===
insert-node
---
identifier: _checkRole [42628,42638]
to
function_definition [42619,42724]
at 1
===
insert-node
---
virtual: virtual [42667,42674]
to
function_definition [42619,42724]
at 5
===
insert-node
---
visibility: internal [42653,42661]
to
function_definition [42619,42724]
at 3

New cluster:
===
insert-node
---
modifier_definition [69098,69205]
to
contract_body [37266,39534]
at 5
------------
===
insert-node
---
modifier_definition [69098,69205]
to
contract_body [37266,39534]
at 5
===
insert-node
---
function_body [69122,69205]
to
modifier_definition [69098,69205]
at 2

New cluster:
===
insert-node
---
function_definition [69213,69506]
to
contract_body [37266,39534]
at 6
------------
===
insert-node
---
function_definition [69213,69506]
to
contract_body [37266,39534]
at 6
===
insert-node
---
function: function [69213,69221]
to
function_definition [69213,69506]
at 0
===
insert-node
---
identifier: _nonReentrantBefore [69222,69241]
to
function_definition [69213,69506]
at 1
===
insert-node
---
visibility: private [69244,69251]
to
function_definition [69213,69506]
at 2

New cluster:
===
insert-node
---
function_definition [69514,69727]
to
contract_body [37266,39534]
at 7
------------
===
insert-node
---
function: function [69514,69522]
to
function_definition [69514,69727]
at 0
===
insert-node
---
identifier: _nonReentrantAfter [69523,69541]
to
function_definition [69514,69727]
at 1
===
insert-node
---
function_definition [69514,69727]
to
contract_body [37266,39534]
at 7
===
insert-node
---
function_body [69552,69727]
to
function_definition [69514,69727]
at 3
===
insert-node
---
visibility: private [69544,69551]
to
function_definition [69514,69727]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
using_directive [76125,76162]
    using: using [76125,76130]
    type_alias [76131,76149]
        identifier: AddressUpgradeable [76131,76149]
    for: for [76150,76153]
    type_name: address [76154,76161]
to
contract_body [76118,80564]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [76170,76429]
    function: function [76170,76178]
    identifier: safeTransfer [76179,76191]
    parameter [76202,76225]
        type_name: IERC20Upgradeable [76202,76219]
        identifier: token [76220,76225]
    parameter [76236,76246]
        type_name: address [76236,76243]
        identifier: to [76244,76246]
    parameter [76257,76270]
        type_name: uint256 [76257,76264]
        identifier: value [76265,76270]
    visibility: internal [76278,76286]
    function_body [76287,76429]
        expression_statement [76298,76422]
            call_expression [76298,76421]
                identifier: _callOptionalReturn [76298,76317]
                call_argument [76332,76337]
                    identifier: token [76332,76337]
                call_argument [76352,76410]
                    call_expression [76352,76410]
                        member_expression: abi.encodeWithSelector [76352,76374]
                        call_argument [76375,76398]
                            member_expression: token.transfer.selector [76375,76398]
                        call_argument [76400,76402]
                            identifier: to [76400,76402]
                        call_argument [76404,76409]
                            identifier: value [76404,76409]
to
contract_body [76118,80564]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [76437,76733]
    function: function [76437,76445]
    identifier: safeTransferFrom [76446,76462]
    parameter [76473,76496]
        type_name: IERC20Upgradeable [76473,76490]
        identifier: token [76491,76496]
    parameter [76507,76519]
        type_name: address [76507,76514]
        identifier: from [76515,76519]
    parameter [76530,76540]
        type_name: address [76530,76537]
        identifier: to [76538,76540]
    parameter [76551,76564]
        type_name: uint256 [76551,76558]
        identifier: value [76559,76564]
    visibility: internal [76572,76580]
    function_body [76581,76733]
        expression_statement [76592,76726]
            call_expression [76592,76725]
                identifier: _callOptionalReturn [76592,76611]
                call_argument [76626,76631]
                    identifier: token [76626,76631]
                call_argument [76646,76714]
                    call_expression [76646,76714]
                        member_expression: abi.encodeWithSelector [76646,76668]
                        call_argument [76669,76696]
                            member_expression: token.transferFrom.selector [76669,76696]
                        call_argument [76698,76702]
                            identifier: from [76698,76702]
                        call_argument [76704,76706]
                            identifier: to [76704,76706]
                        call_argument [76708,76713]
                            identifier: value [76708,76713]
to
contract_body [76118,80564]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [77674,78105]
    function: function [77674,77682]
    identifier: safeIncreaseAllowance [77683,77704]
    parameter [77715,77738]
        type_name: IERC20Upgradeable [77715,77732]
        identifier: token [77733,77738]
    parameter [77749,77764]
        type_name: address [77749,77756]
        identifier: spender [77757,77764]
    parameter [77775,77788]
        type_name: uint256 [77775,77782]
        identifier: value [77783,77788]
    visibility: internal [77796,77804]
    function_body [77805,78105]
        variable_declaration_statement [77816,77887]
            variable_declaration [77816,77836]
                type_name: uint256 [77816,77823]
                identifier: newAllowance [77824,77836]
            affectation_operator: = [77837,77838]
            binary_expression [77839,77886]
                call_expression [77839,77878]
                    member_expression: token.allowance [77839,77854]
                    call_argument [77855,77868]
                        type_cast_expression [77855,77868]
                            primitive_type: address [77855,77862]
                            call_argument [77863,77867]
                                identifier: this [77863,77867]
                    call_argument [77870,77877]
                        identifier: spender [77870,77877]
                arithmetic_operator: + [77879,77880]
                identifier: value [77881,77886]
        expression_statement [77897,78098]
            call_expression [77897,78097]
                identifier: _callOptionalReturn [77897,77916]
                call_argument [77931,77936]
                    identifier: token [77931,77936]
                call_argument [77951,78086]
                    call_expression [77951,78086]
                        member_expression: abi.encodeWithSelector [77951,77973]
                        call_argument [77992,78014]
                            member_expression: token.approve.selector [77992,78014]
                        call_argument [78033,78040]
                            identifier: spender [78033,78040]
                        call_argument [78059,78071]
                            identifier: newAllowance [78059,78071]
to
contract_body [76118,80564]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [78113,78801]
    function: function [78113,78121]
    identifier: safeDecreaseAllowance [78122,78143]
    parameter [78154,78177]
        type_name: IERC20Upgradeable [78154,78171]
        identifier: token [78172,78177]
    parameter [78188,78203]
        type_name: address [78188,78195]
        identifier: spender [78196,78203]
    parameter [78214,78227]
        type_name: uint256 [78214,78221]
        identifier: value [78222,78227]
    visibility: internal [78235,78243]
    function_body [78244,78801]
        block_statement [78255,78794]
            unchecked: unchecked [78255,78264]
            variable_declaration_statement [78280,78343]
                variable_declaration [78280,78300]
                    type_name: uint256 [78280,78287]
                    identifier: oldAllowance [78288,78300]
                affectation_operator: = [78301,78302]
                call_expression [78303,78342]
                    member_expression: token.allowance [78303,78318]
                    call_argument [78319,78332]
                        type_cast_expression [78319,78332]
                            primitive_type: address [78319,78326]
                            call_argument [78327,78331]
                                identifier: this [78327,78331]
                    call_argument [78334,78341]
                        identifier: spender [78334,78341]
            expression_statement [78357,78482]
                call_expression [78357,78481]
                    identifier: require [78357,78364]
                    call_argument [78383,78404]
                        binary_expression [78383,78404]
                            identifier: oldAllowance [78383,78395]
                            comparison_operator: >= [78396,78398]
                            identifier: value [78399,78404]
                    call_argument [78423,78466]
                        string_literal [78423,78466]
                            string: "SafeERC20: decreased allowance below zero" [78423,78466]
            variable_declaration_statement [78496,78540]
                variable_declaration [78496,78516]
                    type_name: uint256 [78496,78503]
                    identifier: newAllowance [78504,78516]
                affectation_operator: = [78517,78518]
                binary_expression [78519,78539]
                    identifier: oldAllowance [78519,78531]
                    arithmetic_operator: - [78532,78533]
                    identifier: value [78534,78539]
            expression_statement [78554,78783]
                call_expression [78554,78782]
                    identifier: _callOptionalReturn [78554,78573]
                    call_argument [78592,78597]
                        identifier: token [78592,78597]
                    call_argument [78616,78767]
                        call_expression [78616,78767]
                            member_expression: abi.encodeWithSelector [78616,78638]
                            call_argument [78661,78683]
                                member_expression: token.approve.selector [78661,78683]
                            call_argument [78706,78713]
                                identifier: spender [78706,78713]
                            call_argument [78736,78748]
                                identifier: newAllowance [78736,78748]
to
contract_body [76118,80564]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [78809,79343]
    function: function [78809,78817]
    identifier: safePermit [78818,78828]
    parameter [78839,78868]
        type_name: IERC20PermitUpgradeable [78839,78862]
        identifier: token [78863,78868]
    parameter [78879,78892]
        type_name: address [78879,78886]
        identifier: owner [78887,78892]
    parameter [78903,78918]
        type_name: address [78903,78910]
        identifier: spender [78911,78918]
    parameter [78929,78942]
        type_name: uint256 [78929,78936]
        identifier: value [78937,78942]
    parameter [78953,78969]
        type_name: uint256 [78953,78960]
        identifier: deadline [78961,78969]
    parameter [78980,78987]
        type_name: uint8 [78980,78985]
        identifier: v [78986,78987]
    parameter [78998,79007]
        type_name: bytes32 [78998,79005]
        identifier: r [79006,79007]
    parameter [79018,79027]
        type_name: bytes32 [79018,79025]
        identifier: s [79026,79027]
    visibility: internal [79035,79043]
    function_body [79044,79343]
        variable_declaration_statement [79055,79097]
            variable_declaration [79055,79074]
                type_name: uint256 [79055,79062]
                identifier: nonceBefore [79063,79074]
            affectation_operator: = [79075,79076]
            call_expression [79077,79096]
                member_expression: token.nonces [79077,79089]
                call_argument [79090,79095]
                    identifier: owner [79090,79095]
        expression_statement [79107,79162]
            call_expression [79107,79161]
                member_expression: token.permit [79107,79119]
                call_argument [79120,79125]
                    identifier: owner [79120,79125]
                call_argument [79127,79134]
                    identifier: spender [79127,79134]
                call_argument [79136,79141]
                    identifier: value [79136,79141]
                call_argument [79143,79151]
                    identifier: deadline [79143,79151]
                call_argument [79153,79154]
                    identifier: v [79153,79154]
                call_argument [79156,79157]
                    identifier: r [79156,79157]
                call_argument [79159,79160]
                    identifier: s [79159,79160]
        variable_declaration_statement [79172,79213]
            variable_declaration [79172,79190]
                type_name: uint256 [79172,79179]
                identifier: nonceAfter [79180,79190]
            affectation_operator: = [79191,79192]
            call_expression [79193,79212]
                member_expression: token.nonces [79193,79205]
                call_argument [79206,79211]
                    identifier: owner [79206,79211]
        expression_statement [79223,79336]
            call_expression [79223,79335]
                identifier: require [79223,79230]
                call_argument [79245,79274]
                    binary_expression [79245,79274]
                        identifier: nonceAfter [79245,79255]
                        comparison_operator: == [79256,79258]
                        binary_expression [79259,79274]
                            identifier: nonceBefore [79259,79270]
                            arithmetic_operator: + [79271,79272]
                            number_literal: 1 [79273,79274]
                call_argument [79289,79324]
                    string_literal [79289,79324]
                        string: "SafeERC20: permit did not succeed" [79289,79324]
to
contract_body [76118,80564]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [79734,80561]
    function: function [79734,79742]
    identifier: _callOptionalReturn [79743,79762]
    parameter [79763,79786]
        type_name: IERC20Upgradeable [79763,79780]
        identifier: token [79781,79786]
    parameter [79788,79805]
        type_name: bytes [79788,79793]
        memory: memory [79794,79800]
        identifier: data [79801,79805]
    visibility: private [79816,79823]
    function_body [79829,80561]
        variable_declaration_statement [80183,80316]
            variable_declaration [80183,80206]
                type_name: bytes [80183,80188]
                memory: memory [80189,80195]
                identifier: returndata [80196,80206]
            affectation_operator: = [80207,80208]
            call_expression [80209,80315]
                member_expression: address(token).functionCall [80209,80236]
                call_argument [80251,80255]
                    identifier: data [80251,80255]
                call_argument [80270,80304]
                    string_literal [80270,80304]
                        string: "SafeERC20: low-level call failed" [80270,80304]
        if_statement [80326,80554]
            if: if [80326,80328]
            binary_expression [80330,80351]
                member_expression: returndata.length [80330,80347]
                comparison_operator: > [80348,80349]
                number_literal: 0 [80350,80351]
            block_statement [80353,80554]
                expression_statement [80408,80543]
                    call_expression [80408,80542]
                        identifier: require [80408,80415]
                        call_argument [80434,80464]
                            call_expression [80434,80464]
                                member_expression: abi.decode [80434,80444]
                                call_argument [80445,80455]
                                    identifier: returndata [80445,80455]
                                call_argument [80457,80463]
                                    parenthesized_expression [80457,80463]
                                        primitive_type: bool [80458,80462]
                        call_argument [80483,80527]
                            string_literal [80483,80527]
                                string: "SafeERC20: ERC20 operation did not succeed" [80483,80527]
to
contract_body [76118,80564]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
enum_declaration [94791,94917]
    enum: enum [94791,94795]
    identifier: Rounding [94796,94804]
    enum_value: Down [94816,94820]
    enum_value: Up [94859,94861]
    enum_value: Zero [94891,94895]
to
contract_body [94784,107669]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [96282,100287]
    function: function [96282,96290]
    identifier: mulDiv [96291,96297]
    parameter [96308,96317]
        type_name: uint256 [96308,96315]
        identifier: x [96316,96317]
    parameter [96328,96337]
        type_name: uint256 [96328,96335]
        identifier: y [96336,96337]
    parameter [96348,96367]
        type_name: uint256 [96348,96355]
        identifier: denominator [96356,96367]
    visibility: internal [96375,96383]
    state_mutability [96384,96388]
        pure: pure [96384,96388]
    return_type_definition [96389,96413]
        returns: returns [96389,96396]
        parameter [96398,96412]
            type_name: uint256 [96398,96405]
            identifier: result [96406,96412]
    function_body [96414,100287]
        block_statement [96425,100280]
            unchecked: unchecked [96425,96434]
            variable_declaration_statement [96750,96764]
                variable_declaration [96750,96763]
                    type_name: uint256 [96750,96757]
                    identifier: prod0 [96758,96763]
            variable_declaration_statement [96823,96837]
                variable_declaration [96823,96836]
                    type_name: uint256 [96823,96830]
                    identifier: prod1 [96831,96836]
            assembly_statement [96895,97065]
                assembly: assembly [96895,96903]
                yul_variable_declaration [96923,96953]
                    let: let [96923,96926]
                    yul_identifier [96927,96929]
                        identifier: mm [96927,96929]
                    :=: := [96930,96932]
                    yul_function_call [96933,96953]
                        yul_evm_builtin [96933,96939]
                            mulmod: mulmod [96933,96939]
                        yul_path [96940,96941]
                            yul_identifier [96940,96941]
                                identifier: x [96940,96941]
                        yul_path [96943,96944]
                            yul_identifier [96943,96944]
                                identifier: y [96943,96944]
                        yul_function_call [96946,96952]
                            yul_evm_builtin [96946,96949]
                                not: not [96946,96949]
                            yul_decimal_number: 0 [96950,96951]
                yul_assignment [96971,96989]
                    yul_path [96971,96976]
                        yul_identifier [96971,96976]
                            identifier: prod0 [96971,96976]
                    :=: := [96977,96979]
                    yul_function_call [96980,96989]
                        yul_evm_builtin [96980,96983]
                            mul: mul [96980,96983]
                        yul_path [96984,96985]
                            yul_identifier [96984,96985]
                                identifier: x [96984,96985]
                        yul_path [96987,96988]
                            yul_identifier [96987,96988]
                                identifier: y [96987,96988]
                yul_assignment [97007,97050]
                    yul_path [97007,97012]
                        yul_identifier [97007,97012]
                            identifier: prod1 [97007,97012]
                    :=: := [97013,97015]
                    yul_function_call [97016,97050]
                        yul_evm_builtin [97016,97019]
                            sub: sub [97016,97019]
                        yul_function_call [97020,97034]
                            yul_evm_builtin [97020,97023]
                                sub: sub [97020,97023]
                            yul_path [97024,97026]
                                yul_identifier [97024,97026]
                                    identifier: mm [97024,97026]
                            yul_path [97028,97033]
                                yul_identifier [97028,97033]
                                    identifier: prod0 [97028,97033]
                        yul_function_call [97036,97049]
                            yul_evm_builtin [97036,97038]
                                lt: lt [97036,97038]
                            yul_path [97039,97041]
                                yul_identifier [97039,97041]
                                    identifier: mm [97039,97041]
                            yul_path [97043,97048]
                                yul_identifier [97043,97048]
                                    identifier: prod0 [97043,97048]
            if_statement [97145,97222]
                if: if [97145,97147]
                binary_expression [97149,97159]
                    identifier: prod1 [97149,97154]
                    comparison_operator: == [97155,97157]
                    number_literal: 0 [97158,97159]
                block_statement [97161,97222]
                    return_statement [97180,97207]
                        return: return [97180,97186]
                        binary_expression [97187,97206]
                            identifier: prod0 [97187,97192]
                            arithmetic_operator: / [97193,97194]
                            identifier: denominator [97195,97206]
            expression_statement [97327,97356]
                call_expression [97327,97355]
                    identifier: require [97327,97334]
                    call_argument [97335,97354]
                        binary_expression [97335,97354]
                            identifier: denominator [97335,97346]
                            comparison_operator: > [97347,97348]
                            identifier: prod1 [97349,97354]
            variable_declaration_statement [97618,97636]
                variable_declaration [97618,97635]
                    type_name: uint256 [97618,97625]
                    identifier: remainder [97626,97635]
            assembly_statement [97650,97957]
                assembly: assembly [97650,97658]
                yul_assignment [97730,97768]
                    yul_path [97730,97739]
                        yul_identifier [97730,97739]
                            identifier: remainder [97730,97739]
                    :=: := [97740,97742]
                    yul_function_call [97743,97768]
                        yul_evm_builtin [97743,97749]
                            mulmod: mulmod [97743,97749]
                        yul_path [97750,97751]
                            yul_identifier [97750,97751]
                                identifier: x [97750,97751]
                        yul_path [97753,97754]
                            yul_identifier [97753,97754]
                                identifier: y [97753,97754]
                        yul_path [97756,97767]
                            yul_identifier [97756,97767]
                                identifier: denominator [97756,97767]
                yul_assignment [97853,97894]
                    yul_path [97853,97858]
                        yul_identifier [97853,97858]
                            identifier: prod1 [97853,97858]
                    :=: := [97859,97861]
                    yul_function_call [97862,97894]
                        yul_evm_builtin [97862,97865]
                            sub: sub [97862,97865]
                        yul_path [97866,97871]
                            yul_identifier [97866,97871]
                                identifier: prod1 [97866,97871]
                        yul_function_call [97873,97893]
                            yul_evm_builtin [97873,97875]
                                gt: gt [97873,97875]
                            yul_path [97876,97885]
                                yul_identifier [97876,97885]
                                    identifier: remainder [97876,97885]
                            yul_path [97887,97892]
                                yul_identifier [97887,97892]
                                    identifier: prod0 [97887,97892]
                yul_assignment [97912,97942]
                    yul_path [97912,97917]
                        yul_identifier [97912,97917]
                            identifier: prod0 [97912,97917]
                    :=: := [97918,97920]
                    yul_function_call [97921,97942]
                        yul_evm_builtin [97921,97924]
                            sub: sub [97921,97924]
                        yul_path [97925,97930]
                            yul_identifier [97925,97930]
                                identifier: prod0 [97925,97930]
                        yul_path [97932,97941]
                            yul_identifier [97932,97941]
                                identifier: remainder [97932,97941]
            variable_declaration_statement [98270,98318]
                variable_declaration [98270,98282]
                    type_name: uint256 [98270,98277]
                    identifier: twos [98278,98282]
                affectation_operator: = [98283,98284]
                binary_expression [98285,98317]
                    identifier: denominator [98285,98296]
                    bitwise_operator: & [98297,98298]
                    parenthesized_expression [98299,98317]
                        binary_expression [98300,98316]
                            unary_expression [98300,98312]
                                ~: ~ [98300,98301]
                                identifier: denominator [98301,98312]
                            arithmetic_operator: + [98313,98314]
                            number_literal: 1 [98315,98316]
            assembly_statement [98332,98712]
                assembly: assembly [98332,98340]
                yul_assignment [98408,98445]
                    yul_path [98408,98419]
                        yul_identifier [98408,98419]
                            identifier: denominator [98408,98419]
                    :=: := [98420,98422]
                    yul_function_call [98423,98445]
                        yul_evm_builtin [98423,98426]
                            div: div [98423,98426]
                        yul_path [98427,98438]
                            yul_identifier [98427,98438]
                                identifier: denominator [98427,98438]
                        yul_path [98440,98444]
                            yul_identifier [98440,98444]
                                identifier: twos [98440,98444]
                yul_assignment [98515,98540]
                    yul_path [98515,98520]
                        yul_identifier [98515,98520]
                            identifier: prod0 [98515,98520]
                    :=: := [98521,98523]
                    yul_function_call [98524,98540]
                        yul_evm_builtin [98524,98527]
                            div: div [98524,98527]
                        yul_path [98528,98533]
                            yul_identifier [98528,98533]
                                identifier: prod0 [98528,98533]
                        yul_path [98535,98539]
                            yul_identifier [98535,98539]
                                identifier: twos [98535,98539]
                yul_assignment [98658,98697]
                    yul_path [98658,98662]
                        yul_identifier [98658,98662]
                            identifier: twos [98658,98662]
                    :=: := [98663,98665]
                    yul_function_call [98666,98697]
                        yul_evm_builtin [98666,98669]
                            add: add [98666,98669]
                        yul_function_call [98670,98693]
                            yul_evm_builtin [98670,98673]
                                div: div [98670,98673]
                            yul_function_call [98674,98686]
                                yul_evm_builtin [98674,98677]
                                    sub: sub [98674,98677]
                                yul_decimal_number: 0 [98678,98679]
                                yul_path [98681,98685]
                                    yul_identifier [98681,98685]
                                        identifier: twos [98681,98685]
                            yul_path [98688,98692]
                                yul_identifier [98688,98692]
                                    identifier: twos [98688,98692]
                        yul_decimal_number: 1 [98695,98696]
            expression_statement [98781,98803]
                augmented_assignment_expression [98781,98802]
                    identifier: prod0 [98781,98786]
                    affectation_operator: |= [98787,98789]
                    binary_expression [98790,98802]
                        identifier: prod1 [98790,98795]
                        arithmetic_operator: * [98796,98797]
                        identifier: twos [98798,98802]
            variable_declaration_statement [99125,99165]
                variable_declaration [99125,99140]
                    type_name: uint256 [99125,99132]
                    identifier: inverse [99133,99140]
                affectation_operator: = [99141,99142]
                binary_expression [99143,99164]
                    parenthesized_expression [99143,99160]
                        binary_expression [99144,99159]
                            number_literal: 3 [99144,99145]
                            arithmetic_operator: * [99146,99147]
                            identifier: denominator [99148,99159]
                    bitwise_operator: ^ [99161,99162]
                    number_literal: 2 [99163,99164]
            expression_statement [99385,99422]
                augmented_assignment_expression [99385,99421]
                    identifier: inverse [99385,99392]
                    affectation_operator: *= [99393,99395]
                    binary_expression [99396,99421]
                        number_literal: 2 [99396,99397]
                        arithmetic_operator: - [99398,99399]
                        binary_expression [99400,99421]
                            identifier: denominator [99400,99411]
                            arithmetic_operator: * [99412,99413]
                            identifier: inverse [99414,99421]
            expression_statement [99455,99492]
                augmented_assignment_expression [99455,99491]
                    identifier: inverse [99455,99462]
                    affectation_operator: *= [99463,99465]
                    binary_expression [99466,99491]
                        number_literal: 2 [99466,99467]
                        arithmetic_operator: - [99468,99469]
                        binary_expression [99470,99491]
                            identifier: denominator [99470,99481]
                            arithmetic_operator: * [99482,99483]
                            identifier: inverse [99484,99491]
            expression_statement [99526,99563]
                augmented_assignment_expression [99526,99562]
                    identifier: inverse [99526,99533]
                    affectation_operator: *= [99534,99536]
                    binary_expression [99537,99562]
                        number_literal: 2 [99537,99538]
                        arithmetic_operator: - [99539,99540]
                        binary_expression [99541,99562]
                            identifier: denominator [99541,99552]
                            arithmetic_operator: * [99553,99554]
                            identifier: inverse [99555,99562]
            expression_statement [99597,99634]
                augmented_assignment_expression [99597,99633]
                    identifier: inverse [99597,99604]
                    affectation_operator: *= [99605,99607]
                    binary_expression [99608,99633]
                        number_literal: 2 [99608,99609]
                        arithmetic_operator: - [99610,99611]
                        binary_expression [99612,99633]
                            identifier: denominator [99612,99623]
                            arithmetic_operator: * [99624,99625]
                            identifier: inverse [99626,99633]
            expression_statement [99668,99705]
                augmented_assignment_expression [99668,99704]
                    identifier: inverse [99668,99675]
                    affectation_operator: *= [99676,99678]
                    binary_expression [99679,99704]
                        number_literal: 2 [99679,99680]
                        arithmetic_operator: - [99681,99682]
                        binary_expression [99683,99704]
                            identifier: denominator [99683,99694]
                            arithmetic_operator: * [99695,99696]
                            identifier: inverse [99697,99704]
            expression_statement [99740,99777]
                augmented_assignment_expression [99740,99776]
                    identifier: inverse [99740,99747]
                    affectation_operator: *= [99748,99750]
                    binary_expression [99751,99776]
                        number_literal: 2 [99751,99752]
                        arithmetic_operator: - [99753,99754]
                        binary_expression [99755,99776]
                            identifier: denominator [99755,99766]
                            arithmetic_operator: * [99767,99768]
                            identifier: inverse [99769,99776]
            expression_statement [100216,100241]
                assignment_expression [100216,100240]
                    identifier: result [100216,100222]
                    affectation_operator: = [100223,100224]
                    binary_expression [100225,100240]
                        identifier: prod0 [100225,100230]
                        arithmetic_operator: * [100231,100232]
                        identifier: inverse [100233,100240]
            return_statement [100255,100269]
                return: return [100255,100261]
                identifier: result [100262,100268]
to
contract_body [94784,107669]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [100424,100772]
    function: function [100424,100432]
    identifier: mulDiv [100433,100439]
    parameter [100450,100459]
        type_name: uint256 [100450,100457]
        identifier: x [100458,100459]
    parameter [100470,100479]
        type_name: uint256 [100470,100477]
        identifier: y [100478,100479]
    parameter [100490,100509]
        type_name: uint256 [100490,100497]
        identifier: denominator [100498,100509]
    parameter [100520,100537]
        type_name: Rounding [100520,100528]
        identifier: rounding [100529,100537]
    visibility: internal [100545,100553]
    state_mutability [100554,100558]
        pure: pure [100554,100558]
    return_type_definition [100559,100576]
        returns: returns [100559,100566]
        parameter [100568,100575]
            type_name: uint256 [100568,100575]
    function_body [100577,100772]
        variable_declaration_statement [100588,100631]
            variable_declaration [100588,100602]
                type_name: uint256 [100588,100595]
                identifier: result [100596,100602]
            affectation_operator: = [100603,100604]
            call_expression [100605,100630]
                identifier: mulDiv [100605,100611]
                call_argument [100612,100613]
                    identifier: x [100612,100613]
                call_argument [100615,100616]
                    identifier: y [100615,100616]
                call_argument [100618,100629]
                    identifier: denominator [100618,100629]
        if_statement [100641,100741]
            if: if [100641,100643]
            binary_expression [100645,100701]
                binary_expression [100645,100668]
                    identifier: rounding [100645,100653]
                    comparison_operator: == [100654,100656]
                    member_expression: Rounding.Up [100657,100668]
                logical_operator: && [100669,100671]
                binary_expression [100672,100701]
                    call_expression [100672,100697]
                        identifier: mulmod [100672,100678]
                        call_argument [100679,100680]
                            identifier: x [100679,100680]
                        call_argument [100682,100683]
                            identifier: y [100682,100683]
                        call_argument [100685,100696]
                            identifier: denominator [100685,100696]
                    comparison_operator: > [100698,100699]
                    number_literal: 0 [100700,100701]
            block_statement [100703,100741]
                expression_statement [100718,100730]
                    augmented_assignment_expression [100718,100729]
                        identifier: result [100718,100724]
                        affectation_operator: += [100725,100727]
                        number_literal: 1 [100728,100729]
        return_statement [100751,100765]
            return: return [100751,100757]
            identifier: result [100758,100764]
to
contract_body [94784,107669]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [103210,104229]
    function: function [103210,103218]
    identifier: log2 [103219,103223]
    parameter [103224,103237]
        type_name: uint256 [103224,103231]
        identifier: value [103232,103237]
    visibility: internal [103239,103247]
    state_mutability [103248,103252]
        pure: pure [103248,103252]
    return_type_definition [103253,103270]
        returns: returns [103253,103260]
        parameter [103262,103269]
            type_name: uint256 [103262,103269]
    function_body [103271,104229]
        variable_declaration_statement [103282,103301]
            variable_declaration [103282,103296]
                type_name: uint256 [103282,103289]
                identifier: result [103290,103296]
            affectation_operator: = [103297,103298]
            number_literal: 0 [103299,103300]
        block_statement [103311,104198]
            unchecked: unchecked [103311,103320]
            if_statement [103336,103438]
                if: if [103336,103338]
                binary_expression [103340,103356]
                    binary_expression [103340,103352]
                        identifier: value [103340,103345]
                        >>: >> [103346,103348]
                        number_literal: 128 [103349,103352]
                    comparison_operator: > [103353,103354]
                    number_literal: 0 [103355,103356]
                block_statement [103358,103438]
                    expression_statement [103377,103391]
                        augmented_assignment_expression [103377,103390]
                            identifier: value [103377,103382]
                            >>=: >>= [103383,103386]
                            number_literal: 128 [103387,103390]
                    expression_statement [103409,103423]
                        augmented_assignment_expression [103409,103422]
                            identifier: result [103409,103415]
                            affectation_operator: += [103416,103418]
                            number_literal: 128 [103419,103422]
            if_statement [103452,103551]
                if: if [103452,103454]
                binary_expression [103456,103471]
                    binary_expression [103456,103467]
                        identifier: value [103456,103461]
                        >>: >> [103462,103464]
                        number_literal: 64 [103465,103467]
                    comparison_operator: > [103468,103469]
                    number_literal: 0 [103470,103471]
                block_statement [103473,103551]
                    expression_statement [103492,103505]
                        augmented_assignment_expression [103492,103504]
                            identifier: value [103492,103497]
                            >>=: >>= [103498,103501]
                            number_literal: 64 [103502,103504]
                    expression_statement [103523,103536]
                        augmented_assignment_expression [103523,103535]
                            identifier: result [103523,103529]
                            affectation_operator: += [103530,103532]
                            number_literal: 64 [103533,103535]
            if_statement [103565,103664]
                if: if [103565,103567]
                binary_expression [103569,103584]
                    binary_expression [103569,103580]
                        identifier: value [103569,103574]
                        >>: >> [103575,103577]
                        number_literal: 32 [103578,103580]
                    comparison_operator: > [103581,103582]
                    number_literal: 0 [103583,103584]
                block_statement [103586,103664]
                    expression_statement [103605,103618]
                        augmented_assignment_expression [103605,103617]
                            identifier: value [103605,103610]
                            >>=: >>= [103611,103614]
                            number_literal: 32 [103615,103617]
                    expression_statement [103636,103649]
                        augmented_assignment_expression [103636,103648]
                            identifier: result [103636,103642]
                            affectation_operator: += [103643,103645]
                            number_literal: 32 [103646,103648]
            if_statement [103678,103777]
                if: if [103678,103680]
                binary_expression [103682,103697]
                    binary_expression [103682,103693]
                        identifier: value [103682,103687]
                        >>: >> [103688,103690]
                        number_literal: 16 [103691,103693]
                    comparison_operator: > [103694,103695]
                    number_literal: 0 [103696,103697]
                block_statement [103699,103777]
                    expression_statement [103718,103731]
                        augmented_assignment_expression [103718,103730]
                            identifier: value [103718,103723]
                            >>=: >>= [103724,103727]
                            number_literal: 16 [103728,103730]
                    expression_statement [103749,103762]
                        augmented_assignment_expression [103749,103761]
                            identifier: result [103749,103755]
                            affectation_operator: += [103756,103758]
                            number_literal: 16 [103759,103761]
            if_statement [103791,103887]
                if: if [103791,103793]
                binary_expression [103795,103809]
                    binary_expression [103795,103805]
                        identifier: value [103795,103800]
                        >>: >> [103801,103803]
                        number_literal: 8 [103804,103805]
                    comparison_operator: > [103806,103807]
                    number_literal: 0 [103808,103809]
                block_statement [103811,103887]
                    expression_statement [103830,103842]
                        augmented_assignment_expression [103830,103841]
                            identifier: value [103830,103835]
                            >>=: >>= [103836,103839]
                            number_literal: 8 [103840,103841]
                    expression_statement [103860,103872]
                        augmented_assignment_expression [103860,103871]
                            identifier: result [103860,103866]
                            affectation_operator: += [103867,103869]
                            number_literal: 8 [103870,103871]
            if_statement [103901,103997]
                if: if [103901,103903]
                binary_expression [103905,103919]
                    binary_expression [103905,103915]
                        identifier: value [103905,103910]
                        >>: >> [103911,103913]
                        number_literal: 4 [103914,103915]
                    comparison_operator: > [103916,103917]
                    number_literal: 0 [103918,103919]
                block_statement [103921,103997]
                    expression_statement [103940,103952]
                        augmented_assignment_expression [103940,103951]
                            identifier: value [103940,103945]
                            >>=: >>= [103946,103949]
                            number_literal: 4 [103950,103951]
                    expression_statement [103970,103982]
                        augmented_assignment_expression [103970,103981]
                            identifier: result [103970,103976]
                            affectation_operator: += [103977,103979]
                            number_literal: 4 [103980,103981]
            if_statement [104011,104107]
                if: if [104011,104013]
                binary_expression [104015,104029]
                    binary_expression [104015,104025]
                        identifier: value [104015,104020]
                        >>: >> [104021,104023]
                        number_literal: 2 [104024,104025]
                    comparison_operator: > [104026,104027]
                    number_literal: 0 [104028,104029]
                block_statement [104031,104107]
                    expression_statement [104050,104062]
                        augmented_assignment_expression [104050,104061]
                            identifier: value [104050,104055]
                            >>=: >>= [104056,104059]
                            number_literal: 2 [104060,104061]
                    expression_statement [104080,104092]
                        augmented_assignment_expression [104080,104091]
                            identifier: result [104080,104086]
                            affectation_operator: += [104087,104089]
                            number_literal: 2 [104090,104091]
            if_statement [104121,104187]
                if: if [104121,104123]
                binary_expression [104125,104139]
                    binary_expression [104125,104135]
                        identifier: value [104125,104130]
                        >>: >> [104131,104133]
                        number_literal: 1 [104134,104135]
                    comparison_operator: > [104136,104137]
                    number_literal: 0 [104138,104139]
                block_statement [104141,104187]
                    expression_statement [104160,104172]
                        augmented_assignment_expression [104160,104171]
                            identifier: result [104160,104166]
                            affectation_operator: += [104167,104169]
                            number_literal: 1 [104170,104171]
        return_statement [104208,104222]
            return: return [104208,104214]
            identifier: result [104215,104221]
to
contract_body [94784,107669]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [104388,104704]
    function: function [104388,104396]
    identifier: log2 [104397,104401]
    parameter [104402,104415]
        type_name: uint256 [104402,104409]
        identifier: value [104410,104415]
    parameter [104417,104434]
        type_name: Rounding [104417,104425]
        identifier: rounding [104426,104434]
    visibility: internal [104445,104453]
    state_mutability [104463,104467]
        pure: pure [104463,104467]
    return_type_definition [104477,104494]
        returns: returns [104477,104484]
        parameter [104486,104493]
            type_name: uint256 [104486,104493]
    function_body [104500,104704]
        block_statement [104511,104697]
            unchecked: unchecked [104511,104520]
            variable_declaration_statement [104536,104565]
                variable_declaration [104536,104550]
                    type_name: uint256 [104536,104543]
                    identifier: result [104544,104550]
                affectation_operator: = [104551,104552]
                call_expression [104553,104564]
                    identifier: log2 [104553,104557]
                    call_argument [104558,104563]
                        identifier: value [104558,104563]
            return_statement [104579,104686]
                return: return [104579,104585]
                binary_expression [104603,104685]
                    identifier: result [104603,104609]
                    arithmetic_operator: + [104610,104611]
                    parenthesized_expression [104629,104685]
                        ternary_expression [104630,104684]
                            binary_expression [104630,104676]
                                binary_expression [104630,104653]
                                    identifier: rounding [104630,104638]
                                    comparison_operator: == [104639,104641]
                                    member_expression: Rounding.Up [104642,104653]
                                logical_operator: && [104654,104656]
                                binary_expression [104657,104676]
                                    binary_expression [104657,104668]
                                        number_literal: 1 [104657,104658]
                                        <<: << [104659,104661]
                                        identifier: result [104662,104668]
                                    comparison_operator: < [104669,104670]
                                    identifier: value [104671,104676]
                            ?: ? [104677,104678]
                            number_literal: 1 [104679,104680]
                            :: : [104681,104682]
                            number_literal: 0 [104683,104684]
to
contract_body [94784,107669]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [104835,105757]
    function: function [104835,104843]
    identifier: log10 [104844,104849]
    parameter [104850,104863]
        type_name: uint256 [104850,104857]
        identifier: value [104858,104863]
    visibility: internal [104865,104873]
    state_mutability [104874,104878]
        pure: pure [104874,104878]
    return_type_definition [104879,104896]
        returns: returns [104879,104886]
        parameter [104888,104895]
            type_name: uint256 [104888,104895]
    function_body [104897,105757]
        variable_declaration_statement [104908,104927]
            variable_declaration [104908,104922]
                type_name: uint256 [104908,104915]
                identifier: result [104916,104922]
            affectation_operator: = [104923,104924]
            number_literal: 0 [104925,104926]
        block_statement [104937,105726]
            unchecked: unchecked [104937,104946]
            if_statement [104962,105064]
                if: if [104962,104964]
                binary_expression [104966,104981]
                    identifier: value [104966,104971]
                    comparison_operator: >= [104972,104974]
                    binary_expression [104975,104981]
                        number_literal: 10 [104975,104977]
                        **: ** [104977,104979]
                        number_literal: 64 [104979,104981]
                block_statement [104983,105064]
                    expression_statement [105002,105018]
                        augmented_assignment_expression [105002,105017]
                            identifier: value [105002,105007]
                            affectation_operator: /= [105008,105010]
                            binary_expression [105011,105017]
                                number_literal: 10 [105011,105013]
                                **: ** [105013,105015]
                                number_literal: 64 [105015,105017]
                    expression_statement [105036,105049]
                        augmented_assignment_expression [105036,105048]
                            identifier: result [105036,105042]
                            affectation_operator: += [105043,105045]
                            number_literal: 64 [105046,105048]
            if_statement [105078,105180]
                if: if [105078,105080]
                binary_expression [105082,105097]
                    identifier: value [105082,105087]
                    comparison_operator: >= [105088,105090]
                    binary_expression [105091,105097]
                        number_literal: 10 [105091,105093]
                        **: ** [105093,105095]
                        number_literal: 32 [105095,105097]
                block_statement [105099,105180]
                    expression_statement [105118,105134]
                        augmented_assignment_expression [105118,105133]
                            identifier: value [105118,105123]
                            affectation_operator: /= [105124,105126]
                            binary_expression [105127,105133]
                                number_literal: 10 [105127,105129]
                                **: ** [105129,105131]
                                number_literal: 32 [105131,105133]
                    expression_statement [105152,105165]
                        augmented_assignment_expression [105152,105164]
                            identifier: result [105152,105158]
                            affectation_operator: += [105159,105161]
                            number_literal: 32 [105162,105164]
            if_statement [105194,105296]
                if: if [105194,105196]
                binary_expression [105198,105213]
                    identifier: value [105198,105203]
                    comparison_operator: >= [105204,105206]
                    binary_expression [105207,105213]
                        number_literal: 10 [105207,105209]
                        **: ** [105209,105211]
                        number_literal: 16 [105211,105213]
                block_statement [105215,105296]
                    expression_statement [105234,105250]
                        augmented_assignment_expression [105234,105249]
                            identifier: value [105234,105239]
                            affectation_operator: /= [105240,105242]
                            binary_expression [105243,105249]
                                number_literal: 10 [105243,105245]
                                **: ** [105245,105247]
                                number_literal: 16 [105247,105249]
                    expression_statement [105268,105281]
                        augmented_assignment_expression [105268,105280]
                            identifier: result [105268,105274]
                            affectation_operator: += [105275,105277]
                            number_literal: 16 [105278,105280]
            if_statement [105310,105409]
                if: if [105310,105312]
                binary_expression [105314,105328]
                    identifier: value [105314,105319]
                    comparison_operator: >= [105320,105322]
                    binary_expression [105323,105328]
                        number_literal: 10 [105323,105325]
                        **: ** [105325,105327]
                        number_literal: 8 [105327,105328]
                block_statement [105330,105409]
                    expression_statement [105349,105364]
                        augmented_assignment_expression [105349,105363]
                            identifier: value [105349,105354]
                            affectation_operator: /= [105355,105357]
                            binary_expression [105358,105363]
                                number_literal: 10 [105358,105360]
                                **: ** [105360,105362]
                                number_literal: 8 [105362,105363]
                    expression_statement [105382,105394]
                        augmented_assignment_expression [105382,105393]
                            identifier: result [105382,105388]
                            affectation_operator: += [105389,105391]
                            number_literal: 8 [105392,105393]
            if_statement [105423,105522]
                if: if [105423,105425]
                binary_expression [105427,105441]
                    identifier: value [105427,105432]
                    comparison_operator: >= [105433,105435]
                    binary_expression [105436,105441]
                        number_literal: 10 [105436,105438]
                        **: ** [105438,105440]
                        number_literal: 4 [105440,105441]
                block_statement [105443,105522]
                    expression_statement [105462,105477]
                        augmented_assignment_expression [105462,105476]
                            identifier: value [105462,105467]
                            affectation_operator: /= [105468,105470]
                            binary_expression [105471,105476]
                                number_literal: 10 [105471,105473]
                                **: ** [105473,105475]
                                number_literal: 4 [105475,105476]
                    expression_statement [105495,105507]
                        augmented_assignment_expression [105495,105506]
                            identifier: result [105495,105501]
                            affectation_operator: += [105502,105504]
                            number_literal: 4 [105505,105506]
            if_statement [105536,105635]
                if: if [105536,105538]
                binary_expression [105540,105554]
                    identifier: value [105540,105545]
                    comparison_operator: >= [105546,105548]
                    binary_expression [105549,105554]
                        number_literal: 10 [105549,105551]
                        **: ** [105551,105553]
                        number_literal: 2 [105553,105554]
                block_statement [105556,105635]
                    expression_statement [105575,105590]
                        augmented_assignment_expression [105575,105589]
                            identifier: value [105575,105580]
                            affectation_operator: /= [105581,105583]
                            binary_expression [105584,105589]
                                number_literal: 10 [105584,105586]
                                **: ** [105586,105588]
                                number_literal: 2 [105588,105589]
                    expression_statement [105608,105620]
                        augmented_assignment_expression [105608,105619]
                            identifier: result [105608,105614]
                            affectation_operator: += [105615,105617]
                            number_literal: 2 [105618,105619]
            if_statement [105649,105715]
                if: if [105649,105651]
                binary_expression [105653,105667]
                    identifier: value [105653,105658]
                    comparison_operator: >= [105659,105661]
                    binary_expression [105662,105667]
                        number_literal: 10 [105662,105664]
                        **: ** [105664,105666]
                        number_literal: 1 [105666,105667]
                block_statement [105669,105715]
                    expression_statement [105688,105700]
                        augmented_assignment_expression [105688,105699]
                            identifier: result [105688,105694]
                            affectation_operator: += [105695,105697]
                            number_literal: 1 [105698,105699]
        return_statement [105736,105750]
            return: return [105736,105742]
            identifier: result [105743,105749]
to
contract_body [94784,107669]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [105917,106234]
    function: function [105917,105925]
    identifier: log10 [105926,105931]
    parameter [105932,105945]
        type_name: uint256 [105932,105939]
        identifier: value [105940,105945]
    parameter [105947,105964]
        type_name: Rounding [105947,105955]
        identifier: rounding [105956,105964]
    visibility: internal [105975,105983]
    state_mutability [105993,105997]
        pure: pure [105993,105997]
    return_type_definition [106007,106024]
        returns: returns [106007,106014]
        parameter [106016,106023]
            type_name: uint256 [106016,106023]
    function_body [106030,106234]
        block_statement [106041,106227]
            unchecked: unchecked [106041,106050]
            variable_declaration_statement [106066,106096]
                variable_declaration [106066,106080]
                    type_name: uint256 [106066,106073]
                    identifier: result [106074,106080]
                affectation_operator: = [106081,106082]
                call_expression [106083,106095]
                    identifier: log10 [106083,106088]
                    call_argument [106089,106094]
                        identifier: value [106089,106094]
            return_statement [106110,106216]
                return: return [106110,106116]
                binary_expression [106134,106215]
                    identifier: result [106134,106140]
                    arithmetic_operator: + [106141,106142]
                    parenthesized_expression [106160,106215]
                        ternary_expression [106161,106214]
                            binary_expression [106161,106206]
                                binary_expression [106161,106184]
                                    identifier: rounding [106161,106169]
                                    comparison_operator: == [106170,106172]
                                    member_expression: Rounding.Up [106173,106184]
                                logical_operator: && [106185,106187]
                                binary_expression [106188,106206]
                                    binary_expression [106188,106198]
                                        number_literal: 10 [106188,106190]
                                        **: ** [106190,106192]
                                        identifier: result [106192,106198]
                                    comparison_operator: < [106199,106200]
                                    identifier: value [106201,106206]
                            ?: ? [106207,106208]
                            number_literal: 1 [106209,106210]
                            :: : [106211,106212]
                            number_literal: 0 [106213,106214]
to
contract_body [94784,107669]
at 12

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [106493,107180]
    function: function [106493,106501]
    identifier: log256 [106502,106508]
    parameter [106509,106522]
        type_name: uint256 [106509,106516]
        identifier: value [106517,106522]
    visibility: internal [106524,106532]
    state_mutability [106533,106537]
        pure: pure [106533,106537]
    return_type_definition [106538,106555]
        returns: returns [106538,106545]
        parameter [106547,106554]
            type_name: uint256 [106547,106554]
    function_body [106556,107180]
        variable_declaration_statement [106567,106586]
            variable_declaration [106567,106581]
                type_name: uint256 [106567,106574]
                identifier: result [106575,106581]
            affectation_operator: = [106582,106583]
            number_literal: 0 [106584,106585]
        block_statement [106596,107149]
            unchecked: unchecked [106596,106605]
            if_statement [106621,106722]
                if: if [106621,106623]
                binary_expression [106625,106641]
                    binary_expression [106625,106637]
                        identifier: value [106625,106630]
                        >>: >> [106631,106633]
                        number_literal: 128 [106634,106637]
                    comparison_operator: > [106638,106639]
                    number_literal: 0 [106640,106641]
                block_statement [106643,106722]
                    expression_statement [106662,106676]
                        augmented_assignment_expression [106662,106675]
                            identifier: value [106662,106667]
                            >>=: >>= [106668,106671]
                            number_literal: 128 [106672,106675]
                    expression_statement [106694,106707]
                        augmented_assignment_expression [106694,106706]
                            identifier: result [106694,106700]
                            affectation_operator: += [106701,106703]
                            number_literal: 16 [106704,106706]
            if_statement [106736,106834]
                if: if [106736,106738]
                binary_expression [106740,106755]
                    binary_expression [106740,106751]
                        identifier: value [106740,106745]
                        >>: >> [106746,106748]
                        number_literal: 64 [106749,106751]
                    comparison_operator: > [106752,106753]
                    number_literal: 0 [106754,106755]
                block_statement [106757,106834]
                    expression_statement [106776,106789]
                        augmented_assignment_expression [106776,106788]
                            identifier: value [106776,106781]
                            >>=: >>= [106782,106785]
                            number_literal: 64 [106786,106788]
                    expression_statement [106807,106819]
                        augmented_assignment_expression [106807,106818]
                            identifier: result [106807,106813]
                            affectation_operator: += [106814,106816]
                            number_literal: 8 [106817,106818]
            if_statement [106848,106946]
                if: if [106848,106850]
                binary_expression [106852,106867]
                    binary_expression [106852,106863]
                        identifier: value [106852,106857]
                        >>: >> [106858,106860]
                        number_literal: 32 [106861,106863]
                    comparison_operator: > [106864,106865]
                    number_literal: 0 [106866,106867]
                block_statement [106869,106946]
                    expression_statement [106888,106901]
                        augmented_assignment_expression [106888,106900]
                            identifier: value [106888,106893]
                            >>=: >>= [106894,106897]
                            number_literal: 32 [106898,106900]
                    expression_statement [106919,106931]
                        augmented_assignment_expression [106919,106930]
                            identifier: result [106919,106925]
                            affectation_operator: += [106926,106928]
                            number_literal: 4 [106929,106930]
            if_statement [106960,107058]
                if: if [106960,106962]
                binary_expression [106964,106979]
                    binary_expression [106964,106975]
                        identifier: value [106964,106969]
                        >>: >> [106970,106972]
                        number_literal: 16 [106973,106975]
                    comparison_operator: > [106976,106977]
                    number_literal: 0 [106978,106979]
                block_statement [106981,107058]
                    expression_statement [107000,107013]
                        augmented_assignment_expression [107000,107012]
                            identifier: value [107000,107005]
                            >>=: >>= [107006,107009]
                            number_literal: 16 [107010,107012]
                    expression_statement [107031,107043]
                        augmented_assignment_expression [107031,107042]
                            identifier: result [107031,107037]
                            affectation_operator: += [107038,107040]
                            number_literal: 2 [107041,107042]
            if_statement [107072,107138]
                if: if [107072,107074]
                binary_expression [107076,107090]
                    binary_expression [107076,107086]
                        identifier: value [107076,107081]
                        >>: >> [107082,107084]
                        number_literal: 8 [107085,107086]
                    comparison_operator: > [107087,107088]
                    number_literal: 0 [107089,107090]
                block_statement [107092,107138]
                    expression_statement [107111,107123]
                        augmented_assignment_expression [107111,107122]
                            identifier: result [107111,107117]
                            affectation_operator: += [107118,107120]
                            number_literal: 1 [107121,107122]
        return_statement [107159,107173]
            return: return [107159,107165]
            identifier: result [107166,107172]
to
contract_body [94784,107669]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [107953,107997]
    type_name: uint8 [107953,107958]
    visibility: private [107959,107966]
    constant: constant [107967,107975]
    identifier: _ADDRESS_LENGTH [107976,107991]
    affectation_operator: = [107992,107993]
    number_literal: 20 [107994,107996]
to
contract_body [107885,110025]
at 1

New cluster:
MOVE from contract_body [107885,110025]
------------
===
move-tree
---
function_definition [85441,85924]
    function: function [85441,85449]
    identifier: toHexString [85450,85461]
    parameter [85462,85475]
        type_name: uint256 [85462,85469]
        identifier: value [85470,85475]
    parameter [85477,85491]
        type_name: uint256 [85477,85484]
        identifier: length [85485,85491]
    visibility: internal [85502,85510]
    state_mutability [85520,85524]
        pure: pure [85520,85524]
    return_type_definition [85534,85557]
        returns: returns [85534,85541]
        parameter [85543,85556]
            type_name: string [85543,85549]
            memory: memory [85550,85556]
    function_body [85563,85924]
        variable_declaration_statement [85574,85622]
            variable_declaration [85574,85593]
                type_name: bytes [85574,85579]
                memory: memory [85580,85586]
                identifier: buffer [85587,85593]
            affectation_operator: = [85594,85595]
            call_expression [85596,85621]
                new_expression [85596,85605]
                    new: new [85596,85599]
                    type_name: bytes [85600,85605]
                call_argument [85606,85620]
                    binary_expression [85606,85620]
                        binary_expression [85606,85616]
                            number_literal: 2 [85606,85607]
                            arithmetic_operator: * [85608,85609]
                            identifier: length [85610,85616]
                        arithmetic_operator: + [85617,85618]
                        number_literal: 2 [85619,85620]
        expression_statement [85632,85648]
            assignment_expression [85632,85647]
                array_access [85632,85641]
                    identifier: buffer [85632,85638]
                    number_literal: 0 [85639,85640]
                affectation_operator: = [85642,85643]
                string_literal [85644,85647]
                    string: "0" [85644,85647]
        expression_statement [85658,85674]
            assignment_expression [85658,85673]
                array_access [85658,85667]
                    identifier: buffer [85658,85664]
                    number_literal: 1 [85665,85666]
                affectation_operator: = [85668,85669]
                string_literal [85670,85673]
                    string: "x" [85670,85673]
        for_statement [85684,85819]
            for: for [85684,85687]
            variable_declaration_statement [85689,85716]
                variable_declaration [85689,85698]
                    type_name: uint256 [85689,85696]
                    identifier: i [85697,85698]
                affectation_operator: = [85699,85700]
                binary_expression [85701,85715]
                    binary_expression [85701,85711]
                        number_literal: 2 [85701,85702]
                        arithmetic_operator: * [85703,85704]
                        identifier: length [85705,85711]
                    arithmetic_operator: + [85712,85713]
                    number_literal: 1 [85714,85715]
            expression_statement [85717,85723]
                binary_expression [85717,85722]
                    identifier: i [85717,85718]
                    comparison_operator: > [85719,85720]
                    number_literal: 1 [85721,85722]
            update_expression [85724,85727]
                increment_operator: -- [85724,85726]
                identifier: i [85726,85727]
            block_statement [85729,85819]
                expression_statement [85744,85782]
                    assignment_expression [85744,85781]
                        array_access [85744,85753]
                            identifier: buffer [85744,85750]
                            identifier: i [85751,85752]
                        affectation_operator: = [85754,85755]
                        array_access [85756,85781]
                            identifier: _HEX_SYMBOLS [85756,85768]
                            binary_expression [85769,85780]
                                identifier: value [85769,85774]
                                bitwise_operator: & [85775,85776]
                                number_literal: 0xf [85777,85780]
                expression_statement [85796,85808]
                    augmented_assignment_expression [85796,85807]
                        identifier: value [85796,85801]
                        >>=: >>= [85802,85805]
                        number_literal: 4 [85806,85807]
        expression_statement [85829,85885]
            call_expression [85829,85884]
                identifier: require [85829,85836]
                call_argument [85837,85847]
                    binary_expression [85837,85847]
                        identifier: value [85837,85842]
                        comparison_operator: == [85843,85845]
                        number_literal: 0 [85846,85847]
                call_argument [85849,85883]
                    string_literal [85849,85883]
                        string: "Strings: hex length insufficient" [85849,85883]
        return_statement [85895,85917]
            return: return [85895,85901]
            type_cast_expression [85902,85916]
                primitive_type: string [85902,85908]
                call_argument [85909,85915]
                    identifier: buffer [85909,85915]
to
contract_body [107885,110025]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [109871,110022]
    function: function [109871,109879]
    identifier: toHexString [109880,109891]
    parameter [109892,109904]
        type_name: address [109892,109899]
        identifier: addr [109900,109904]
    visibility: internal [109906,109914]
    state_mutability [109915,109919]
        pure: pure [109915,109919]
    return_type_definition [109920,109943]
        returns: returns [109920,109927]
        parameter [109929,109942]
            type_name: string [109929,109935]
            memory: memory [109936,109942]
    function_body [109944,110022]
        return_statement [109955,110015]
            return: return [109955,109961]
            call_expression [109962,110014]
                identifier: toHexString [109962,109973]
                call_argument [109974,109996]
                    type_cast_expression [109974,109996]
                        primitive_type: uint256 [109974,109981]
                        call_argument [109982,109995]
                            type_cast_expression [109982,109995]
                                primitive_type: uint160 [109982,109989]
                                call_argument [109990,109994]
                                    identifier: addr [109990,109994]
                call_argument [109998,110013]
                    identifier: _ADDRESS_LENGTH [109998,110013]
to
contract_body [107885,110025]
at 5

New cluster:
MOVE from contract_body [111972,120954]
------------
===
move-tree
---
function_definition [91293,92106]
    function: function [91293,91301]
    identifier: processProof [91302,91314]
    parameter [91315,91337]
        type_name: bytes32[] [91315,91324]
        memory: memory [91325,91331]
        identifier: proof [91332,91337]
    parameter [91339,91351]
        type_name: bytes32 [91339,91346]
        identifier: leaf [91347,91351]
    visibility: internal [91362,91370]
    state_mutability [91380,91384]
        pure: pure [91380,91384]
    return_type_definition [91394,91411]
        returns: returns [91394,91401]
        parameter [91403,91410]
            type_name: bytes32 [91403,91410]
    function_body [91417,92106]
        variable_declaration_statement [91428,91456]
            variable_declaration [91428,91448]
                type_name: bytes32 [91428,91435]
                identifier: computedHash [91436,91448]
            affectation_operator: = [91449,91450]
            identifier: leaf [91451,91455]
        for_statement [91466,92069]
            for: for [91466,91469]
            variable_declaration_statement [91471,91485]
                variable_declaration [91471,91480]
                    type_name: uint256 [91471,91478]
                    identifier: i [91479,91480]
                affectation_operator: = [91481,91482]
                number_literal: 0 [91483,91484]
            expression_statement [91486,91503]
                binary_expression [91486,91502]
                    identifier: i [91486,91487]
                    comparison_operator: < [91488,91489]
                    member_expression: proof.length [91490,91502]
            update_expression [91504,91507]
                identifier: i [91504,91505]
                increment_operator: ++ [91505,91507]
            block_statement [91509,92069]
                variable_declaration_statement [91524,91556]
                    variable_declaration [91524,91544]
                        type_name: bytes32 [91524,91531]
                        identifier: proofElement [91532,91544]
                    affectation_operator: = [91545,91546]
                    array_access [91547,91555]
                        identifier: proof [91547,91552]
                        identifier: i [91553,91554]
                if_statement [91570,92058]
                    if: if [91570,91572]
                    binary_expression [91574,91602]
                        identifier: computedHash [91574,91586]
                        comparison_operator: <= [91587,91589]
                        identifier: proofElement [91590,91602]
                    block_statement [91604,91828]
                        expression_statement [91702,91813]
                            assignment_expression [91702,91812]
                                identifier: computedHash [91702,91714]
                                affectation_operator: = [91715,91716]
                                call_expression [91717,91812]
                                    identifier: keccak256 [91717,91726]
                                    call_argument [91749,91793]
                                        call_expression [91749,91793]
                                            member_expression: abi.encodePacked [91749,91765]
                                            call_argument [91766,91778]
                                                identifier: computedHash [91766,91778]
                                            call_argument [91780,91792]
                                                identifier: proofElement [91780,91792]
                    else: else [91829,91833]
                    block_statement [91834,92058]
                        expression_statement [91932,92043]
                            assignment_expression [91932,92042]
                                identifier: computedHash [91932,91944]
                                affectation_operator: = [91945,91946]
                                call_expression [91947,92042]
                                    identifier: keccak256 [91947,91956]
                                    call_argument [91979,92023]
                                        call_expression [91979,92023]
                                            member_expression: abi.encodePacked [91979,91995]
                                            call_argument [91996,92008]
                                                identifier: proofElement [91996,92008]
                                            call_argument [92010,92022]
                                                identifier: computedHash [92010,92022]
        return_statement [92079,92099]
            return: return [92079,92085]
            identifier: computedHash [92086,92098]
to
contract_body [111972,120954]
at 2
===
move-tree
---
function_definition [90741,90931]
    function: function [90741,90749]
    identifier: verify [90750,90756]
    parameter [90767,90789]
        type_name: bytes32[] [90767,90776]
        memory: memory [90777,90783]
        identifier: proof [90784,90789]
    parameter [90800,90812]
        type_name: bytes32 [90800,90807]
        identifier: root [90808,90812]
    parameter [90823,90835]
        type_name: bytes32 [90823,90830]
        identifier: leaf [90831,90835]
    visibility: internal [90843,90851]
    state_mutability [90852,90856]
        pure: pure [90852,90856]
    return_type_definition [90857,90871]
        returns: returns [90857,90864]
        parameter [90866,90870]
            type_name: bool [90866,90870]
    function_body [90872,90931]
        return_statement [90883,90924]
            return: return [90883,90889]
            binary_expression [90890,90923]
                call_expression [90890,90915]
                    identifier: processProof [90890,90902]
                    call_argument [90903,90908]
                        identifier: proof [90903,90908]
                    call_argument [90910,90914]
                        identifier: leaf [90910,90914]
                comparison_operator: == [90916,90918]
                identifier: root [90919,90923]
to
contract_body [111972,120954]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [114331,114596]
    function: function [114331,114339]
    identifier: multiProofVerify [114340,114356]
    parameter [114367,114389]
        type_name: bytes32[] [114367,114376]
        memory: memory [114377,114383]
        identifier: proof [114384,114389]
    parameter [114400,114424]
        type_name: bool[] [114400,114406]
        memory: memory [114407,114413]
        identifier: proofFlags [114414,114424]
    parameter [114435,114447]
        type_name: bytes32 [114435,114442]
        identifier: root [114443,114447]
    parameter [114458,114481]
        type_name: bytes32[] [114458,114467]
        memory: memory [114468,114474]
        identifier: leaves [114475,114481]
    visibility: internal [114489,114497]
    state_mutability [114498,114502]
        pure: pure [114498,114502]
    return_type_definition [114503,114517]
        returns: returns [114503,114510]
        parameter [114512,114516]
            type_name: bool [114512,114516]
    function_body [114518,114596]
        return_statement [114529,114589]
            return: return [114529,114535]
            binary_expression [114536,114588]
                call_expression [114536,114580]
                    identifier: processMultiProof [114536,114553]
                    call_argument [114554,114559]
                        identifier: proof [114554,114559]
                    call_argument [114561,114571]
                        identifier: proofFlags [114561,114571]
                    call_argument [114573,114579]
                        identifier: leaves [114573,114579]
                comparison_operator: == [114581,114583]
                identifier: root [114584,114588]
to
contract_body [111972,120954]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [114816,115101]
    function: function [114816,114824]
    identifier: multiProofVerifyCalldata [114825,114849]
    parameter [114860,114884]
        type_name: bytes32[] [114860,114869]
        calldata: calldata [114870,114878]
        identifier: proof [114879,114884]
    parameter [114895,114921]
        type_name: bool[] [114895,114901]
        calldata: calldata [114902,114910]
        identifier: proofFlags [114911,114921]
    parameter [114932,114944]
        type_name: bytes32 [114932,114939]
        identifier: root [114940,114944]
    parameter [114955,114978]
        type_name: bytes32[] [114955,114964]
        memory: memory [114965,114971]
        identifier: leaves [114972,114978]
    visibility: internal [114986,114994]
    state_mutability [114995,114999]
        pure: pure [114995,114999]
    return_type_definition [115000,115014]
        returns: returns [115000,115007]
        parameter [115009,115013]
            type_name: bool [115009,115013]
    function_body [115015,115101]
        return_statement [115026,115094]
            return: return [115026,115032]
            binary_expression [115033,115093]
                call_expression [115033,115085]
                    identifier: processMultiProofCalldata [115033,115058]
                    call_argument [115059,115064]
                        identifier: proof [115059,115064]
                    call_argument [115066,115076]
                        identifier: proofFlags [115066,115076]
                    call_argument [115078,115084]
                        identifier: leaves [115078,115084]
                comparison_operator: == [115086,115088]
                identifier: root [115089,115093]
to
contract_body [111972,120954]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [120494,120643]
    function: function [120494,120502]
    identifier: _hashPair [120503,120512]
    parameter [120513,120522]
        type_name: bytes32 [120513,120520]
        identifier: a [120521,120522]
    parameter [120524,120533]
        type_name: bytes32 [120524,120531]
        identifier: b [120532,120533]
    visibility: private [120535,120542]
    state_mutability [120543,120547]
        pure: pure [120543,120547]
    return_type_definition [120548,120565]
        returns: returns [120548,120555]
        parameter [120557,120564]
            type_name: bytes32 [120557,120564]
    function_body [120566,120643]
        return_statement [120577,120636]
            return: return [120577,120583]
            ternary_expression [120584,120635]
                binary_expression [120584,120589]
                    identifier: a [120584,120585]
                    comparison_operator: < [120586,120587]
                    identifier: b [120588,120589]
                ?: ? [120590,120591]
                call_expression [120592,120612]
                    identifier: _efficientHash [120592,120606]
                    call_argument [120607,120608]
                        identifier: a [120607,120608]
                    call_argument [120610,120611]
                        identifier: b [120610,120611]
                :: : [120613,120614]
                call_expression [120615,120635]
                    identifier: _efficientHash [120615,120629]
                    call_argument [120630,120631]
                        identifier: b [120630,120631]
                    call_argument [120633,120634]
                        identifier: a [120633,120634]
to
contract_body [111972,120954]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [120651,120951]
    function: function [120651,120659]
    identifier: _efficientHash [120660,120674]
    parameter [120675,120684]
        type_name: bytes32 [120675,120682]
        identifier: a [120683,120684]
    parameter [120686,120695]
        type_name: bytes32 [120686,120693]
        identifier: b [120694,120695]
    visibility: private [120706,120713]
    state_mutability [120723,120727]
        pure: pure [120723,120727]
    return_type_definition [120737,120760]
        returns: returns [120737,120744]
        parameter [120746,120759]
            type_name: bytes32 [120746,120753]
            identifier: value [120754,120759]
    function_body [120766,120951]
        assembly_statement [120821,120944]
            assembly: assembly [120821,120829]
            yul_function_call [120845,120860]
                yul_evm_builtin [120845,120851]
                    mstore: mstore [120845,120851]
                yul_hex_number: 0x00 [120852,120856]
                yul_path [120858,120859]
                    yul_identifier [120858,120859]
                        identifier: a [120858,120859]
            yul_function_call [120874,120889]
                yul_evm_builtin [120874,120880]
                    mstore: mstore [120874,120880]
                yul_hex_number: 0x20 [120881,120885]
                yul_path [120887,120888]
                    yul_identifier [120887,120888]
                        identifier: b [120887,120888]
            yul_assignment [120903,120933]
                yul_path [120903,120908]
                    yul_identifier [120903,120908]
                        identifier: value [120903,120908]
                :=: := [120909,120911]
                yul_function_call [120912,120933]
                    yul_evm_builtin [120912,120921]
                        keccak256: keccak256 [120912,120921]
                    yul_hex_number: 0x00 [120922,120926]
                    yul_hex_number: 0x40 [120928,120932]
to
contract_body [111972,120954]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
enum_declaration [121062,121119]
    enum: enum [121062,121066]
    identifier: TokenType [121067,121076]
    enum_value: ERC721 [121088,121094]
    enum_value: ERC1155 [121105,121112]
to
contract_body [121055,123287]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [121127,121241]
    struct: struct [121127,121133]
    identifier: WhitelistParams [121134,121149]
    struct_member [121161,121180]
        type_name: bytes32 [121161,121168]
        identifier: merkleRoot [121169,121179]
    struct_member [121190,121206]
        type_name: uint256 [121190,121197]
        identifier: endTime [121198,121205]
    struct_member [121216,121234]
        type_name: uint256 [121216,121223]
        identifier: startTime [121224,121233]
to
contract_body [121055,123287]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
struct_declaration [121249,121717]
    struct: struct [121249,121255]
    identifier: Collection [121256,121266]
    struct_member [121278,121291]
        type_name: string [121278,121284]
        identifier: title [121285,121290]
    struct_member [121301,121321]
        type_name: TokenType [121301,121310]
        identifier: tokenType [121311,121320]
    struct_member [121331,121350]
        type_name: string [121331,121337]
        identifier: description [121338,121349]
    struct_member [121360,121377]
        type_name: string [121360,121366]
        identifier: thumbnail [121367,121376]
    struct_member [121387,121402]
        type_name: string [121387,121393]
        identifier: bgImage [121394,121401]
    struct_member [121412,121427]
        type_name: string [121412,121418]
        identifier: bgColor [121419,121426]
    struct_member [121437,121456]
        type_name: uint256[] [121437,121446]
        identifier: tokenIds [121447,121455]
    struct_member [121466,121480]
        type_name: address [121466,121473]
        identifier: owner [121474,121479]
    struct_member [121490,121508]
        type_name: uint256 [121490,121497]
        identifier: createdAt [121498,121507]
    struct_member [121518,121536]
        type_name: uint256 [121518,121525]
        identifier: updatedAt [121526,121535]
    struct_member [121546,121571]
        type_name: int256 [121546,121552]
        identifier: userPurchaseLimit [121553,121570]
    struct_member [121581,121609]
        type_name: int256 [121581,121587]
        identifier: allowedPurchaseLimit [121588,121608]
    struct_member [121619,121644]
        type_name: uint256 [121619,121626]
        identifier: primarySoldCount [121627,121643]
    struct_member [121654,121688]
        type_name: WhitelistParams[] [121654,121671]
        identifier: whitelistParams [121672,121687]
    struct_member [121698,121710]
        type_name: bool [121698,121702]
        identifier: exists [121703,121709]
to
contract_body [121055,123287]
at 2

New cluster:
MOVE from contract_body [121055,123287]
------------
===
move-tree
---
function_definition [83493,83624]
    function: function [83493,83501]
    identifier: updateCollectionAfterPrimarySale [83502,83534]
    parameter [83545,83560]
        type_name: address [83545,83552]
        identifier: account [83553,83560]
    parameter [83571,83592]
        type_name: uint256 [83571,83578]
        identifier: _collectionId [83579,83592]
    visibility: external [83600,83608]
    return_type_definition [83609,83623]
        returns: returns [83609,83616]
        parameter [83618,83622]
            type_name: bool [83618,83622]
to
contract_body [121055,123287]
at 6
===
move-tree
---
function_definition [83417,83485]
    function: function [83417,83425]
    identifier: getNFTCollectionId [83426,83444]
    parameter [83445,83456]
        type_name: uint256 [83445,83452]
        identifier: _id [83453,83456]
    visibility: external [83458,83466]
    return_type_definition [83467,83484]
        returns: returns [83467,83474]
        parameter [83476,83483]
            type_name: uint256 [83476,83483]
to
contract_body [121055,123287]
at 4
===
move-tree
---
function_definition [83314,83409]
    function: function [83314,83322]
    identifier: getCollectionData [83323,83340]
    parameter [83341,83352]
        type_name: uint256 [83341,83348]
        identifier: _id [83349,83352]
    visibility: external [83363,83371]
    return_type_definition [83381,83408]
        returns: returns [83381,83388]
        parameter [83390,83407]
            type_name: Collection [83390,83400]
            memory: memory [83401,83407]
to
contract_body [121055,123287]
at 3
===
move-tree
---
function_definition [83632,83764]
    function: function [83632,83640]
    identifier: getPrimarySaleUserCount [83641,83664]
    parameter [83665,83680]
        type_name: address [83665,83672]
        identifier: account [83673,83680]
    parameter [83682,83703]
        type_name: uint256 [83682,83689]
        identifier: _collectionId [83690,83703]
    visibility: external [83714,83722]
    state_mutability [83732,83736]
        view: view [83732,83736]
    return_type_definition [83746,83763]
        returns: returns [83746,83753]
        parameter [83755,83762]
            type_name: uint256 [83755,83762]
to
contract_body [121055,123287]
at 7

New cluster:
MOVE from contract_body [121055,123287]
------------
===
move-tree
---
function_definition [81988,82056]
    function: function [81988,81996]
    identifier: getNFTCollectionId [81997,82015]
    parameter [82016,82027]
        type_name: uint256 [82016,82023]
        identifier: _id [82024,82027]
    visibility: external [82029,82037]
    return_type_definition [82038,82055]
        returns: returns [82038,82045]
        parameter [82047,82054]
            type_name: uint256 [82047,82054]
to
contract_body [121055,123287]
at 5

New cluster:
===
insert-node
---
function_definition [124376,124497]
to
contract_body [82568,83767]
at 3
------------
===
insert-node
---
function: function [124376,124384]
to
function_definition [124376,124497]
at 0
===
insert-node
---
identifier: getPrimarySalePurchaseLimitPerToken [124385,124420]
to
function_definition [124376,124497]
at 1
===
insert-node
---
function_definition [124376,124497]
to
contract_body [82568,83767]
at 3
===
insert-node
---
visibility: external [124448,124456]
to
function_definition [124376,124497]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [124743,124878]
    function: function [124743,124751]
    identifier: getPrimarySaleUserCountPerToken [124752,124783]
    parameter [124784,124799]
        type_name: address [124784,124791]
        identifier: account [124792,124799]
    parameter [124801,124817]
        type_name: uint256 [124801,124808]
        identifier: _tokenId [124809,124817]
    visibility: external [124828,124836]
    state_mutability [124846,124850]
        view: view [124846,124850]
    return_type_definition [124860,124877]
        returns: returns [124860,124867]
        parameter [124869,124876]
            type_name: uint256 [124869,124876]
to
contract_body [82568,83767]
at 4

New cluster:
===
insert-node
---
function_definition [125173,125328]
to
contract_body [82568,83767]
at 5
------------
===
insert-node
---
function_definition [125173,125328]
to
contract_body [82568,83767]
at 5
===
insert-node
---
identifier: updatePrimarySaleUserCountPerToken [125182,125216]
to
function_definition [125173,125328]
at 1
===
insert-node
---
visibility: external [125304,125312]
to
function_definition [125173,125328]
at 5
===
insert-node
---
function: function [125173,125181]
to
function_definition [125173,125328]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [130410,130450]
    identifier: ListingRemoved [130416,130430]
    event_paramater [130431,130448]
        type_name: uint256 [130431,130438]
        identifier: listingId [130439,130448]
to
contract_body [75137,80645]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
event_definition [130525,130645]
    identifier: ListingModified [130531,130546]
    event_paramater [130557,130574]
        type_name: uint256 [130557,130564]
        identifier: listingId [130565,130574]
    event_paramater [130585,130604]
        type_name: uint256 [130585,130592]
        identifier: buyoutPrice [130593,130604]
    event_paramater [130615,130637]
        type_name: uint256 [130615,130622]
        identifier: quantityToList [130623,130637]
to
contract_body [75137,80645]
at 11

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [133647,133757]
    function: function [133647,133655]
    identifier: allowance [133656,133665]
    parameter [133666,133679]
        type_name: address [133666,133673]
        identifier: owner [133674,133679]
    parameter [133681,133696]
        type_name: address [133681,133688]
        identifier: spender [133689,133696]
    visibility: external [133707,133715]
    state_mutability [133725,133729]
        view: view [133725,133729]
    return_type_definition [133739,133756]
        returns: returns [133739,133746]
        parameter [133748,133755]
            type_name: uint256 [133748,133755]
to
contract_body [80734,80908]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [133765,133887]
    function: function [133765,133773]
    identifier: transferFrom [133774,133786]
    parameter [133797,133808]
        type_name: address [133797,133804]
        identifier: src [133805,133808]
    parameter [133819,133830]
        type_name: address [133819,133826]
        identifier: dst [133827,133830]
    parameter [133841,133855]
        type_name: uint256 [133841,133848]
        identifier: amount [133849,133855]
    visibility: external [133863,133871]
    return_type_definition [133872,133886]
        returns: returns [133872,133879]
        parameter [133881,133885]
            type_name: bool [133881,133885]
to
contract_body [80734,80908]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [134359,134394]
    type_name: address [134359,134366]
    visibility: internal [134367,134375]
    identifier: _privilegedSigner [134376,134393]
to
contract_body [134352,138745]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
constructor_definition [134402,134564]
    constructor: constructor [134402,134413]
    parameter [134414,134446]
        type_name: address [134414,134421]
        identifier: _privilegedSignerAddress [134422,134446]
    function_body [134448,134564]
        expression_statement [134459,134504]
            assignment_expression [134459,134503]
                identifier: _privilegedSigner [134459,134476]
                affectation_operator: = [134477,134478]
                identifier: _privilegedSignerAddress [134479,134503]
        expression_statement [134514,134557]
            call_expression [134514,134556]
                identifier: _setupRole [134514,134524]
                call_argument [134525,134543]
                    identifier: DEFAULT_ADMIN_ROLE [134525,134543]
                call_argument [134545,134555]
                    member_expression: msg.sender [134545,134555]
to
contract_body [134352,138745]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_definition [134631,134745]
    modifier: modifier [134631,134639]
    identifier: onlyAdmin [134640,134649]
    function_body [134652,134745]
        expression_statement [134663,134726]
            call_expression [134663,134725]
                identifier: require [134663,134670]
                call_argument [134671,134710]
                    call_expression [134671,134710]
                        identifier: hasRole [134671,134678]
                        call_argument [134679,134697]
                            identifier: DEFAULT_ADMIN_ROLE [134679,134697]
                        call_argument [134699,134709]
                            member_expression: msg.sender [134699,134709]
                call_argument [134712,134724]
                    string_literal [134712,134724]
                        string: "ONLY ADMIN" [134712,134724]
        expression_statement [134736,134738]
            identifier: _ [134736,134737]
to
contract_body [134352,138745]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [135084,135273]
    function: function [135084,135092]
    identifier: getMessageHash [135093,135107]
    parameter [135108,135119]
        type_name: address [135108,135115]
        identifier: _to [135116,135119]
    parameter [135121,135139]
        type_name: uint256 [135121,135128]
        identifier: _timestamp [135129,135139]
    visibility: public [135150,135156]
    state_mutability [135166,135170]
        pure: pure [135166,135170]
    return_type_definition [135180,135197]
        returns: returns [135180,135187]
        parameter [135189,135196]
            type_name: bytes32 [135189,135196]
    function_body [135203,135273]
        return_statement [135214,135266]
            return: return [135214,135220]
            call_expression [135221,135265]
                identifier: keccak256 [135221,135230]
                call_argument [135231,135264]
                    call_expression [135231,135264]
                        member_expression: abi.encodePacked [135231,135247]
                        call_argument [135248,135251]
                            identifier: _to [135248,135251]
                        call_argument [135253,135263]
                            identifier: _timestamp [135253,135263]
to
contract_body [134352,138745]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [135767,136261]
    function: function [135767,135775]
    identifier: getEthSignedMessageHash [135776,135799]
    parameter [135800,135820]
        type_name: bytes32 [135800,135807]
        identifier: _messageHash [135808,135820]
    visibility: public [135831,135837]
    state_mutability [135847,135851]
        pure: pure [135847,135851]
    return_type_definition [135861,135878]
        returns: returns [135861,135868]
        parameter [135870,135877]
            type_name: bytes32 [135870,135877]
    function_body [135884,136261]
        return_statement [136063,136254]
            return: return [136063,136069]
            call_expression [136083,136253]
                identifier: keccak256 [136083,136092]
                call_argument [136111,136238]
                    call_expression [136111,136238]
                        member_expression: abi.encodePacked [136111,136127]
                        call_argument [136150,136184]
                            string_literal [136150,136184]
                                string: "\x19Ethereum Signed Message:\n32" [136150,136184]
                        call_argument [136207,136219]
                            identifier: _messageHash [136207,136219]
to
contract_body [134352,138745]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [136642,137027]
    function: function [136642,136650]
    identifier: verify [136651,136657]
    parameter [136668,136683]
        type_name: address [136668,136675]
        identifier: _signer [136676,136683]
    parameter [136694,136705]
        type_name: address [136694,136701]
        identifier: _to [136702,136705]
    parameter [136716,136734]
        type_name: uint256 [136716,136723]
        identifier: _timestamp [136724,136734]
    parameter [136745,136767]
        type_name: bytes [136745,136750]
        memory: memory [136751,136757]
        identifier: signature [136758,136767]
    visibility: public [136775,136781]
    state_mutability [136782,136786]
        pure: pure [136782,136786]
    return_type_definition [136787,136801]
        returns: returns [136787,136794]
        parameter [136796,136800]
            type_name: bool [136796,136800]
    function_body [136802,137027]
        variable_declaration_statement [136813,136867]
            variable_declaration [136813,136832]
                type_name: bytes32 [136813,136820]
                identifier: messageHash [136821,136832]
            affectation_operator: = [136833,136834]
            call_expression [136835,136866]
                identifier: getMessageHash [136835,136849]
                call_argument [136850,136853]
                    identifier: _to [136850,136853]
                call_argument [136855,136865]
                    identifier: _timestamp [136855,136865]
        variable_declaration_statement [136877,136945]
            variable_declaration [136877,136905]
                type_name: bytes32 [136877,136884]
                identifier: ethSignedMessageHash [136885,136905]
            affectation_operator: = [136906,136907]
            call_expression [136908,136944]
                identifier: getEthSignedMessageHash [136908,136931]
                call_argument [136932,136943]
                    identifier: messageHash [136932,136943]
        return_statement [136955,137020]
            return: return [136955,136961]
            binary_expression [136962,137019]
                call_expression [136962,137008]
                    identifier: recoverSigner [136962,136975]
                    call_argument [136976,136996]
                        identifier: ethSignedMessageHash [136976,136996]
                    call_argument [136998,137007]
                        identifier: signature [136998,137007]
                comparison_operator: == [137009,137011]
                identifier: _signer [137012,137019]
to
contract_body [134352,138745]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [137035,137309]
    function: function [137035,137043]
    identifier: recoverSigner [137044,137057]
    parameter [137068,137097]
        type_name: bytes32 [137068,137075]
        identifier: _ethSignedMessageHash [137076,137097]
    parameter [137108,137131]
        type_name: bytes [137108,137113]
        memory: memory [137114,137120]
        identifier: _signature [137121,137131]
    visibility: public [137139,137145]
    state_mutability [137146,137150]
        pure: pure [137146,137150]
    return_type_definition [137151,137168]
        returns: returns [137151,137158]
        parameter [137160,137167]
            type_name: address [137160,137167]
    function_body [137169,137309]
        variable_declaration_statement [137180,137241]
            variable_declaration_tuple [137180,137211]
                variable_declaration [137181,137190]
                    type_name: bytes32 [137181,137188]
                    identifier: r [137189,137190]
                variable_declaration [137192,137201]
                    type_name: bytes32 [137192,137199]
                    identifier: s [137200,137201]
                variable_declaration [137203,137210]
                    type_name: uint8 [137203,137208]
                    identifier: v [137209,137210]
            affectation_operator: = [137212,137213]
            call_expression [137214,137240]
                identifier: splitSignature [137214,137228]
                call_argument [137229,137239]
                    identifier: _signature [137229,137239]
        return_statement [137253,137302]
            return: return [137253,137259]
            call_expression [137260,137301]
                identifier: ecrecover [137260,137269]
                call_argument [137270,137291]
                    identifier: _ethSignedMessageHash [137270,137291]
                call_argument [137293,137294]
                    identifier: v [137293,137294]
                call_argument [137296,137297]
                    identifier: r [137296,137297]
                call_argument [137299,137300]
                    identifier: s [137299,137300]
to
contract_body [134352,138745]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [137317,138208]
    function: function [137317,137325]
    identifier: splitSignature [137326,137340]
    parameter [137341,137357]
        type_name: bytes [137341,137346]
        memory: memory [137347,137353]
        identifier: sig [137354,137357]
    visibility: public [137368,137374]
    state_mutability [137384,137388]
        pure: pure [137384,137388]
    return_type_definition [137398,137487]
        returns: returns [137398,137405]
        parameter [137421,137430]
            type_name: bytes32 [137421,137428]
            identifier: r [137429,137430]
        parameter [137445,137454]
            type_name: bytes32 [137445,137452]
            identifier: s [137453,137454]
        parameter [137469,137476]
            type_name: uint8 [137469,137474]
            identifier: v [137475,137476]
    function_body [137493,138208]
        expression_statement [137504,137558]
            call_expression [137504,137557]
                identifier: require [137504,137511]
                call_argument [137512,137528]
                    binary_expression [137512,137528]
                        member_expression: sig.length [137512,137522]
                        comparison_operator: == [137523,137525]
                        number_literal: 65 [137526,137528]
                call_argument [137530,137556]
                    string_literal [137530,137556]
                        string: "invalid signature length" [137530,137556]
        assembly_statement [137570,138159]
            assembly: assembly [137570,137578]
            yul_assignment [137946,137970]
                yul_path [137946,137947]
                    yul_identifier [137946,137947]
                        identifier: r [137946,137947]
                :=: := [137948,137950]
                yul_function_call [137951,137970]
                    yul_evm_builtin [137951,137956]
                        mload: mload [137951,137956]
                    yul_function_call [137957,137969]
                        yul_evm_builtin [137957,137960]
                            add: add [137957,137960]
                        yul_path [137961,137964]
                            yul_identifier [137961,137964]
                                identifier: sig [137961,137964]
                        yul_decimal_number: 32 [137966,137968]
            yul_assignment [138016,138040]
                yul_path [138016,138017]
                    yul_identifier [138016,138017]
                        identifier: s [138016,138017]
                :=: := [138018,138020]
                yul_function_call [138021,138040]
                    yul_evm_builtin [138021,138026]
                        mload: mload [138021,138026]
                    yul_function_call [138027,138039]
                        yul_evm_builtin [138027,138030]
                            add: add [138027,138030]
                        yul_path [138031,138034]
                            yul_identifier [138031,138034]
                                identifier: sig [138031,138034]
                        yul_decimal_number: 64 [138036,138038]
            yul_assignment [138115,138148]
                yul_path [138115,138116]
                    yul_identifier [138115,138116]
                        identifier: v [138115,138116]
                :=: := [138117,138119]
                yul_function_call [138120,138148]
                    yul_evm_builtin [138120,138124]
                        byte: byte [138120,138124]
                    yul_decimal_number: 0 [138125,138126]
                    yul_function_call [138128,138147]
                        yul_evm_builtin [138128,138133]
                            mload: mload [138128,138133]
                        yul_function_call [138134,138146]
                            yul_evm_builtin [138134,138137]
                                add: add [138134,138137]
                            yul_path [138138,138141]
                                yul_identifier [138138,138141]
                                    identifier: sig [138138,138141]
                            yul_decimal_number: 96 [138143,138145]
to
contract_body [134352,138745]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142517,142576]
    type_name: int32 [142517,142522]
    visibility: internal [142523,142531]
    constant: constant [142532,142540]
    identifier: ERC721_CANNOT_BE_ZERO_ADDRESS [142541,142570]
    affectation_operator: = [142571,142572]
    number_literal: 58 [142573,142575]
to
contract_body [86100,89825]
at 58

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142582,142642]
    type_name: int32 [142582,142587]
    visibility: internal [142588,142596]
    constant: constant [142597,142605]
    identifier: ERC1155_CANNOT_BE_ZERO_ADDRESS [142606,142636]
    affectation_operator: = [142637,142638]
    number_literal: 59 [142639,142641]
to
contract_body [86100,89825]
at 59

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142648,142703]
    type_name: int32 [142648,142653]
    visibility: internal [142654,142662]
    constant: constant [142663,142671]
    identifier: COLLECTION_DOES_NOT_EXIST [142672,142697]
    affectation_operator: = [142698,142699]
    number_literal: 60 [142700,142702]
to
contract_body [86100,89825]
at 60

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142709,142781]
    type_name: int32 [142709,142714]
    visibility: internal [142715,142723]
    constant: constant [142724,142732]
    identifier: COLLECTION_CONTRACT_CANNOT_BE_ZERO_ADDRESS [142733,142775]
    affectation_operator: = [142776,142777]
    number_literal: 61 [142778,142780]
to
contract_body [86100,89825]
at 61

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142787,142835]
    type_name: int32 [142787,142792]
    visibility: internal [142793,142801]
    constant: constant [142802,142810]
    identifier: INVALID_TOKEN_TYPE [142811,142829]
    affectation_operator: = [142830,142831]
    number_literal: 62 [142832,142834]
to
contract_body [86100,89825]
at 62

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142841,142929]
    type_name: int32 [142841,142846]
    visibility: internal [142847,142855]
    constant: constant [142856,142864]
    identifier: MAXIMUM_PURCHASE_QUANTITY_PER_TOKEN_LIMIT_REACHED [142865,142914]
    affectation_operator: = [142915,142916]
    number_literal: 63 [142926,142928]
to
contract_body [86100,89825]
at 63

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142937,142989]
    type_name: int32 [142937,142942]
    visibility: internal [142943,142951]
    constant: constant [142952,142960]
    identifier: INVALID_PAYABLE_AMOUNT [142961,142983]
    affectation_operator: = [142984,142985]
    number_literal: 64 [142986,142988]
to
contract_body [86100,89825]
at 64

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [142995,143052]
    type_name: int32 [142995,143000]
    visibility: internal [143001,143009]
    constant: constant [143010,143018]
    identifier: INVALID_WITHDRAWABLE_AMOUNT [143019,143046]
    affectation_operator: = [143047,143048]
    number_literal: 65 [143049,143051]
to
contract_body [86100,89825]
at 65

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143058,143108]
    type_name: int32 [143058,143063]
    visibility: internal [143064,143072]
    constant: constant [143073,143081]
    identifier: EXCEEDED_TOKEN_LIMIT [143082,143102]
    affectation_operator: = [143103,143104]
    number_literal: 66 [143105,143107]
to
contract_body [86100,89825]
at 66

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143114,143163]
    type_name: int32 [143114,143119]
    visibility: internal [143120,143128]
    constant: constant [143129,143137]
    identifier: EXCEEDED_MINT_LIMIT [143138,143157]
    affectation_operator: = [143158,143159]
    number_literal: 67 [143160,143162]
to
contract_body [86100,89825]
at 67

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143169,143230]
    type_name: int32 [143169,143174]
    visibility: internal [143175,143183]
    constant: constant [143184,143192]
    identifier: EXCEEDED_INDIVIDUAL_TOKEN_LIMIT [143193,143224]
    affectation_operator: = [143225,143226]
    number_literal: 68 [143227,143229]
to
contract_body [86100,89825]
at 68

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143236,143286]
    type_name: int32 [143236,143241]
    visibility: internal [143242,143250]
    constant: constant [143251,143259]
    identifier: NAME_CANNOT_BE_EMPTY [143260,143280]
    affectation_operator: = [143281,143282]
    number_literal: 69 [143283,143285]
to
contract_body [86100,89825]
at 69

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143292,143344]
    type_name: int32 [143292,143297]
    visibility: internal [143298,143306]
    constant: constant [143307,143315]
    identifier: SYMBOL_CANNOT_BE_EMPTY [143316,143338]
    affectation_operator: = [143339,143340]
    number_literal: 70 [143341,143343]
to
contract_body [86100,89825]
at 70

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143350,143399]
    type_name: int32 [143350,143355]
    visibility: internal [143356,143364]
    constant: constant [143365,143373]
    identifier: INVALID_ROYALTY_BPS [143374,143393]
    affectation_operator: = [143394,143395]
    number_literal: 71 [143396,143398]
to
contract_body [86100,89825]
at 71

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143405,143453]
    type_name: int32 [143405,143410]
    visibility: internal [143411,143419]
    constant: constant [143420,143428]
    identifier: INVALID_MINT_PRICE [143429,143447]
    affectation_operator: = [143448,143449]
    number_literal: 72 [143450,143452]
to
contract_body [86100,89825]
at 72

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143459,143513]
    type_name: int32 [143459,143464]
    visibility: internal [143465,143473]
    constant: constant [143474,143482]
    identifier: INVALID_TOKEN_SUPPLY_CAP [143483,143507]
    affectation_operator: = [143508,143509]
    number_literal: 73 [143510,143512]
to
contract_body [86100,89825]
at 73

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143519,143576]
    type_name: int32 [143519,143524]
    visibility: internal [143525,143533]
    constant: constant [143534,143542]
    identifier: INVALID_USER_PURCHASE_LIMIT [143543,143570]
    affectation_operator: = [143571,143572]
    number_literal: 74 [143573,143575]
to
contract_body [86100,89825]
at 74

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143582,143657]
    type_name: int32 [143582,143587]
    visibility: internal [143588,143596]
    constant: constant [143597,143605]
    identifier: WHITELIST_STARTTIME_MUST_BE_LESS_THAN_ENDTIME [143606,143651]
    affectation_operator: = [143652,143653]
    number_literal: 75 [143654,143656]
to
contract_body [86100,89825]
at 75

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [143663,143733]
    type_name: int32 [143663,143668]
    visibility: internal [143669,143677]
    constant: constant [143678,143686]
    identifier: SIGNATURE_MUST_BE_USED_WITHIN_30_MINUTES [143687,143727]
    affectation_operator: = [143728,143729]
    number_literal: 76 [143730,143732]
to
contract_body [86100,89825]
at 76

New cluster:
Unknown cluster type
------------
===
insert-tree
---
using_directive [144541,144590]
    using: using [144541,144546]
    type_alias [144547,144567]
        identifier: SafeERC20Upgradeable [144547,144567]
    for: for [144568,144571]
    type_name: IERC20Upgradeable [144572,144589]
to
contract_body [92504,132524]
at 0

New cluster:
===
insert-node
---
modifier_definition [145851,145915]
to
contract_body [92504,132524]
at 14
------------
===
insert-node
---
modifier: modifier [145851,145859]
to
modifier_definition [145851,145915]
at 0
===
insert-node
---
identifier: onlyAdmin [145860,145869]
to
modifier_definition [145851,145915]
at 1
===
insert-node
---
modifier_definition [145851,145915]
to
contract_body [92504,132524]
at 14
===
insert-node
---
function_body [145872,145915]
to
modifier_definition [145851,145915]
at 2

New cluster:
===
insert-node
---
function_definition [147795,148017]
to
contract_body [92504,132524]
at 17
------------
===
insert-node
---
expression_statement [147908,147959]
to
function_body [147897,148017]
at 0
===
insert-node
---
function: function [147795,147803]
to
function_definition [147795,148017]
at 0
===
insert-node
---
identifier: setCollectionContract [147804,147825]
to
function_definition [147795,148017]
at 1
===
insert-node
---
function_body [147897,148017]
to
function_definition [147795,148017]
at 5
===
insert-node
---
function_definition [147795,148017]
to
contract_body [92504,132524]
at 17
===
insert-node
---
visibility: external [147864,147872]
to
function_definition [147795,148017]
at 3

New cluster:
===
insert-node
---
function_definition [153532,154564]
to
contract_body [92504,132524]
at 20
------------
===
insert-node
---
identifier: delegatedBuy [153541,153553]
to
function_definition [153532,154564]
at 1
===
insert-node
---
visibility: external [153806,153814]
to
function_definition [153532,154564]
at 10
===
insert-node
---
call_expression [154053,154259]
to
variable_declaration_statement [154033,154260]
at 2
===
insert-node
---
affectation_operator: = [154051,154052]
to
variable_declaration_statement [154033,154260]
at 1
===
insert-node
---
variable_declaration_statement [154033,154260]
to
function_body [153845,154564]
at 1
===
insert-node
---
identifier: validateBuyParams [154053,154070]
to
call_expression [154053,154259]
at 0
===
insert-node
---
function_body [153845,154564]
to
function_definition [153532,154564]
at 14
===
insert-node
---
function_definition [153532,154564]
to
contract_body [92504,132524]
at 20
===
insert-node
---
function: function [153532,153540]
to
function_definition [153532,154564]
at 0

New cluster:
===
insert-node
---
function_definition [175409,175572]
to
contract_body [92504,132524]
at 38
------------
===
insert-node
---
visibility: external [175456,175464]
to
function_definition [175409,175572]
at 3
===
insert-node
---
function: function [175409,175417]
to
function_definition [175409,175572]
at 0
===
insert-node
---
function_definition [175409,175572]
to
contract_body [92504,132524]
at 38
===
insert-node
---
function_body [175475,175572]
to
function_definition [175409,175572]
at 5
===
insert-node
---
identifier: setRoyaltyTreasury [175418,175436]
to
function_definition [175409,175572]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [184860,185119]
    function: function [184860,184868]
    identifier: setAuthenticatorContract [184869,184893]
    parameter [184894,184916]
        type_name: address [184894,184901]
        identifier: _authenticator [184902,184916]
    visibility: external [184927,184935]
    modifier_invocation [184945,184954]
        identifier: onlyAdmin [184945,184954]
    return_type_definition [184964,184978]
        returns: returns [184964,184971]
        parameter [184973,184977]
            type_name: bool [184973,184977]
    function_body [184984,185119]
        expression_statement [184995,185041]
            call_expression [184995,185040]
                identifier: _nonZeroAddress [184995,185010]
                call_argument [185011,185025]
                    identifier: _authenticator [185011,185025]
                call_argument [185027,185039]
                    identifier: ZERO_ADDRESS [185027,185039]
        expression_statement [185051,185090]
            assignment_expression [185051,185089]
                identifier: _authenticatorAddress [185051,185072]
                affectation_operator: = [185073,185074]
                identifier: _authenticator [185075,185089]
        return_statement [185100,185112]
            return: return [185100,185106]
            boolean_literal: true [185107,185111]
to
contract_body [92504,132524]
at 52

New cluster:
===
insert-node
---
function_definition [185127,187843]
to
contract_body [92504,132524]
at 53
------------
===
insert-node
---
assignment_expression [185907,186134]
to
expression_statement [185907,186135]
at 0
===
insert-node
---
visibility: private [185372,185379]
to
function_definition [185127,187843]
at 9
===
insert-node
---
if: if [186241,186243]
to
if_statement [186241,186837]
at 0
===
insert-node
---
block_statement [185585,186146]
to
if_statement [185559,186146]
at 2
===
insert-node
---
expression_statement [185907,186135]
to
block_statement [185585,186146]
at 2
===
insert-node
---
else: else [187381,187385]
to
if_statement [186972,187806]
at 3
===
insert-node
---
else: else [186598,186602]
to
if_statement [186241,186837]
at 3
===
insert-node
---
affectation_operator: = [185920,185921]
to
assignment_expression [185907,186134]
at 1
===
insert-node
---
identifier: validateBuyParams [185136,185153]
to
function_definition [185127,187843]
at 1
===
insert-node
---
function: function [185127,185135]
to
function_definition [185127,187843]
at 0
===
insert-node
---
function_definition [185127,187843]
to
contract_body [92504,132524]
at 53
===
insert-node
---
if_statement [186241,186837]
to
function_body [185400,187843]
at 3
===
insert-node
---
if: if [185559,185561]
to
if_statement [185559,186146]
at 0
===
insert-node
---
function_body [185400,187843]
to
function_definition [185127,187843]
at 12
===
insert-node
---
identifier: isPrivileged [186245,186257]
to
if_statement [186241,186837]
at 1
===
insert-node
---
block_statement [186603,186837]
to
if_statement [186241,186837]
at 4
===
insert-node
---
identifier: isPrivileged [185907,185919]
to
assignment_expression [185907,186134]
at 0
===
insert-node
---
if_statement [186972,187806]
to
function_body [185400,187843]
at 5
===
insert-node
---
member_expression: authenticatorContractInstance.verify [185922,185958]
to
call_expression [185922,186134]
at 0
===
insert-node
---
if: if [186972,186974]
to
if_statement [186972,187806]
at 0
===
insert-node
---
if_statement [185559,186146]
to
function_body [185400,187843]
at 2
===
insert-node
---
call_expression [185922,186134]
to
assignment_expression [185907,186134]
at 2

New cluster:
===
insert-node
---
function_definition [187851,188014]
to
contract_body [92504,132524]
at 54
------------
===
insert-node
---
function: function [187851,187859]
to
function_definition [187851,188014]
at 0
===
insert-node
---
identifier: _onlyAdmin [187860,187870]
to
function_definition [187851,188014]
at 1
===
insert-node
---
visibility: private [187873,187880]
to
function_definition [187851,188014]
at 2
===
insert-node
---
function_definition [187851,188014]
to
contract_body [92504,132524]
at 54

New cluster:
===
insert-node
---
function_definition [188022,188170]
to
contract_body [92504,132524]
at 55
------------
===
insert-node
---
function: function [188022,188030]
to
function_definition [188022,188170]
at 0
===
insert-node
---
identifier: _nonZeroAddress [188031,188046]
to
function_definition [188022,188170]
at 1
===
insert-node
---
function_definition [188022,188170]
to
contract_body [92504,132524]
at 55
===
insert-node
---
visibility: private [188083,188090]
to
function_definition [188022,188170]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_definition [188178,188285]
    function: function [188178,188186]
    identifier: _checkIfZero [188187,188199]
    parameter [188200,188216]
        type_name: uint256 [188200,188207]
        identifier: _toCheck [188208,188216]
    visibility: private [188218,188225]
    state_mutability [188226,188230]
        pure: pure [188226,188230]
    return_type_definition [188231,188245]
        returns: returns [188231,188238]
        parameter [188240,188244]
            type_name: bool [188240,188244]
    function_body [188246,188285]
        return_statement [188257,188278]
            return: return [188257,188263]
            binary_expression [188264,188277]
                identifier: _toCheck [188264,188272]
                comparison_operator: == [188273,188275]
                number_literal: 0 [188276,188277]
to
contract_body [92504,132524]
at 56

New cluster:
===
insert-node
---
function_definition [188293,188413]
to
contract_body [92504,132524]
at 57
------------
===
insert-node
---
identifier: _depositToIWETH [188302,188317]
to
function_definition [188293,188413]
at 1
===
insert-node
---
function: function [188293,188301]
to
function_definition [188293,188413]
at 0
===
insert-node
---
visibility: private [188335,188342]
to
function_definition [188293,188413]
at 3
===
insert-node
---
function_definition [188293,188413]
to
contract_body [92504,132524]
at 57
===
insert-node
---
function_body [188343,188413]
to
function_definition [188293,188413]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [189360,189394]
    type_name: address [189360,189367]
    visibility: public [189368,189374]
    identifier: collectionContract [189375,189393]
to
contract_body [92504,132524]
at 64

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_variable_declaration [189458,189495]
    type_name: address [189458,189465]
    visibility: public [189466,189472]
    identifier: _authenticatorAddress [189473,189494]
to
contract_body [92504,132524]
at 65

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [10813,10827]
    type_name: address [10813,10820]
    identifier: target [10821,10827]
to
function_definition [10767,11411]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [10838,10850]
    type_name: bool [10838,10842]
    identifier: success [10843,10850]
to
function_definition [10767,11411]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [10861,10884]
    type_name: bytes [10861,10866]
    memory: memory [10867,10873]
    identifier: returndata [10874,10884]
to
function_definition [10767,11411]
at 4

New cluster:
MOVE from function_definition [102772,103080]
------------
===
move-tree
---
parameter [5423,5432]
    type_name: uint256 [5423,5430]
    identifier: a [5431,5432]
to
function_definition [102772,103080]
at 2
===
move-tree
---
state_mutability [5506,5510]
    pure: pure [5506,5510]
to
function_definition [33216,33532]
at 5
===
move-tree
---
parameter [5463,5489]
    type_name: string [5463,5469]
    memory: memory [5470,5476]
    identifier: errorMessage [5477,5489]
to
function_definition [10767,11411]
at 5
===
move-tree
---
return_type_definition [5511,5528]
    returns: returns [5511,5518]
    parameter [5520,5527]
        type_name: uint256 [5520,5527]
to
function_definition [33216,33532]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [10938,10942]
    view: view [10938,10942]
to
function_definition [10767,11411]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [10943,10965]
    returns: returns [10943,10950]
    parameter [10952,10964]
        type_name: bytes [10952,10957]
        memory: memory [10958,10964]
to
function_definition [10767,11411]
at 8

New cluster:
MOVE from function_definition [11640,11945]
------------
===
move-tree
---
parameter [32281,32293]
    type_name: bool [32281,32285]
    identifier: success [32286,32293]
to
function_definition [11640,11945]
at 2
===
move-tree
---
return_type_definition [32386,32408]
    returns: returns [32386,32393]
    parameter [32395,32407]
        type_name: bytes [32395,32400]
        memory: memory [32401,32407]
to
function_definition [11640,11945]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [11699,11722]
    type_name: bytes [11699,11704]
    memory: memory [11705,11711]
    identifier: returndata [11712,11722]
to
function_definition [11640,11945]
at 3

New cluster:
MOVE from function_definition [100998,102667]
------------
===
move-tree
---
parameter [6161,6170]
    type_name: uint256 [6161,6168]
    identifier: a [6169,6170]
to
function_definition [100998,102667]
at 2
===
move-tree
---
return_type_definition [6249,6266]
    returns: returns [6249,6256]
    parameter [6258,6265]
        type_name: uint256 [6258,6265]
to
function_definition [33663,34585]
at 5
===
move-tree
---
parameter [6201,6227]
    type_name: string [6201,6207]
    memory: memory [6208,6214]
    identifier: errorMessage [6215,6227]
to
function_definition [11640,11945]
at 4
===
move-tree
---
state_mutability [6244,6248]
    pure: pure [6244,6248]
to
function_definition [11640,11945]
at 6

New cluster:
UPDATE from verifyCallResult to _revert
------------
===
update-node
---
identifier: verifyCallResult [32254,32270]
replace verifyCallResult by _revert

New cluster:
UPDATE from internal to private
------------
===
update-node
---
visibility: internal [32372,32380]
replace internal by private

New cluster:
UPDATE from bool to uint8
------------
===
update-node
---
type_name: bool [34803,34807]
replace bool by uint8

New cluster:
MOVE from function_body [35095,35786]
------------
===
move-tree
---
expression_statement [35380,35525]
    call_expression [35380,35524]
        identifier: require [35380,35387]
        call_argument [35402,35450]
            ternary_expression [35402,35450]
                identifier: _initializing [35402,35415]
                ?: ? [35416,35417]
                call_expression [35418,35434]
                    identifier: _isConstructor [35418,35432]
                :: : [35435,35436]
                unary_expression [35437,35450]
                    !: ! [35437,35438]
                    identifier: _initialized [35438,35450]
        call_argument [35465,35513]
            string_literal [35465,35513]
                string: "Initializable: contract is already initialized" [35465,35513]
to
function_body [35095,35786]
at 1

New cluster:
UPDATE from _isConstructor to _isInitializing
------------
===
update-node
---
identifier: _isConstructor [36126,36140]
replace _isConstructor by _isInitializing

New cluster:
UPDATE from public to internal
------------
===
update-node
---
visibility: public [129406,129412]
replace public by internal
===
update-node
---
visibility: private [36143,36150]
replace private by internal

New cluster:
MOVE from function_definition [23820,23926]
------------
===
move-tree
---
parameter [1198,1207]
    type_name: uint256 [1198,1205]
    identifier: a [1206,1207]
to
function_definition [23820,23926]
at 2
===
move-tree
---
state_mutability [1247,1251]
    pure: pure [1247,1251]
to
function_definition [23820,23926]
at 5
===
move-tree
---
parameter [1209,1218]
    type_name: uint256 [1209,1216]
    identifier: b [1217,1218]
to
function_definition [23820,23926]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [23869,23886]
    returns: returns [23869,23876]
    parameter [23878,23885]
        type_name: uint256 [23878,23885]
to
function_definition [23820,23926]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [23887,23926]
    return_statement [23898,23919]
        return: return [23898,23904]
        ternary_expression [23905,23918]
            binary_expression [23905,23910]
                identifier: a [23905,23906]
                comparison_operator: > [23907,23908]
                identifier: b [23909,23910]
            ?: ? [23911,23912]
            identifier: a [23913,23914]
            :: : [23915,23916]
            identifier: b [23917,23918]
to
function_definition [23820,23926]
at 7

New cluster:
MOVE from function_definition [24002,24108]
------------
===
move-tree
---
state_mutability [1628,1632]
    pure: pure [1628,1632]
to
function_definition [24002,24108]
at 5
===
move-tree
---
parameter [1579,1588]
    type_name: uint256 [1579,1586]
    identifier: a [1587,1588]
to
function_definition [24002,24108]
at 2
===
move-tree
---
parameter [1590,1599]
    type_name: uint256 [1590,1597]
    identifier: b [1598,1599]
to
function_definition [24002,24108]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [24051,24068]
    returns: returns [24051,24058]
    parameter [24060,24067]
        type_name: uint256 [24060,24067]
to
function_definition [24002,24108]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [24069,24108]
    return_statement [24080,24101]
        return: return [24080,24086]
        ternary_expression [24087,24100]
            binary_expression [24087,24092]
                identifier: a [24087,24088]
                comparison_operator: < [24089,24090]
                identifier: b [24091,24092]
            ?: ? [24093,24094]
            identifier: a [24095,24096]
            :: : [24097,24098]
            identifier: b [24099,24100]
to
function_definition [24002,24108]
at 7

New cluster:
MOVE from function_definition [24227,24383]
------------
===
move-tree
---
parameter [2270,2279]
    type_name: uint256 [2270,2277]
    identifier: a [2278,2279]
to
function_definition [24227,24383]
at 2
===
move-tree
---
state_mutability [2319,2323]
    pure: pure [2319,2323]
to
function_definition [24227,24383]
at 5
===
move-tree
---
parameter [2281,2290]
    type_name: uint256 [2281,2288]
    identifier: b [2289,2290]
to
function_definition [24227,24383]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [24280,24297]
    returns: returns [24280,24287]
    parameter [24289,24296]
        type_name: uint256 [24289,24296]
to
function_definition [24227,24383]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [24298,24383]
    return_statement [24347,24376]
        return: return [24347,24353]
        binary_expression [24354,24375]
            parenthesized_expression [24354,24361]
                binary_expression [24355,24360]
                    identifier: a [24355,24356]
                    bitwise_operator: & [24357,24358]
                    identifier: b [24359,24360]
            arithmetic_operator: + [24362,24363]
            binary_expression [24364,24375]
                parenthesized_expression [24364,24371]
                    binary_expression [24365,24370]
                        identifier: a [24365,24366]
                        bitwise_operator: ^ [24367,24368]
                        identifier: b [24369,24370]
                arithmetic_operator: / [24372,24373]
                number_literal: 2 [24374,24375]
to
function_definition [24227,24383]
at 7

New cluster:
MOVE from function_definition [24590,24787]
------------
===
move-tree
---
parameter [3145,3154]
    type_name: uint256 [3145,3152]
    identifier: b [3153,3154]
to
function_definition [24590,24787]
at 3
===
move-tree
---
return_type_definition [3170,3187]
    returns: returns [3170,3177]
    parameter [3179,3186]
        type_name: uint256 [3179,3186]
to
function_definition [24590,24787]
at 6
===
move-tree
---
state_mutability [3165,3169]
    pure: pure [3165,3169]
to
function_definition [24590,24787]
at 5
===
move-tree
---
parameter [3134,3143]
    type_name: uint256 [3134,3141]
    identifier: a [3142,3143]
to
function_definition [24590,24787]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [24661,24787]
    return_statement [24744,24780]
        return: return [24744,24750]
        ternary_expression [24751,24779]
            binary_expression [24751,24757]
                identifier: a [24751,24752]
                comparison_operator: == [24753,24755]
                number_literal: 0 [24756,24757]
            ?: ? [24758,24759]
            number_literal: 0 [24760,24761]
            :: : [24762,24763]
            binary_expression [24764,24779]
                binary_expression [24764,24775]
                    parenthesized_expression [24764,24771]
                        binary_expression [24765,24770]
                            identifier: a [24765,24766]
                            arithmetic_operator: - [24767,24768]
                            number_literal: 1 [24769,24770]
                    arithmetic_operator: / [24772,24773]
                    identifier: b [24774,24775]
                arithmetic_operator: + [24776,24777]
                number_literal: 1 [24778,24779]
to
function_definition [24590,24787]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [29278,29287]
    type_name: uint256 [29278,29285]
    identifier: x [29286,29287]
to
function_definition [29252,29600]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [29298,29307]
    type_name: uint256 [29298,29305]
    identifier: y [29306,29307]
to
function_definition [29252,29600]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [29318,29337]
    type_name: uint256 [29318,29325]
    identifier: denominator [29326,29337]
to
function_definition [29252,29600]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [29348,29365]
    type_name: Rounding [29348,29356]
    identifier: rounding [29357,29365]
to
function_definition [29252,29600]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [29382,29386]
    pure: pure [29382,29386]
to
function_definition [29252,29600]
at 7

New cluster:
MOVE from function_definition [95399,95555]
------------
===
move-tree
---
parameter [3526,3535]
    type_name: uint256 [3526,3533]
    identifier: b [3534,3535]
to
function_definition [95399,95555]
at 3
===
move-tree
---
state_mutability [3546,3550]
    pure: pure [3546,3550]
to
function_definition [95399,95555]
at 5
===
move-tree
---
parameter [3515,3524]
    type_name: uint256 [3515,3522]
    identifier: a [3523,3524]
to
function_definition [95399,95555]
at 2
===
move-tree
---
return_type_definition [3551,3568]
    returns: returns [3551,3558]
    parameter [3560,3567]
        type_name: uint256 [3560,3567]
to
function_definition [29252,29600]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [29405,29600]
    variable_declaration_statement [29416,29459]
        variable_declaration [29416,29430]
            type_name: uint256 [29416,29423]
            identifier: result [29424,29430]
        affectation_operator: = [29431,29432]
        call_expression [29433,29458]
            identifier: mulDiv [29433,29439]
            call_argument [29440,29441]
                identifier: x [29440,29441]
            call_argument [29443,29444]
                identifier: y [29443,29444]
            call_argument [29446,29457]
                identifier: denominator [29446,29457]
    if_statement [29469,29569]
        if: if [29469,29471]
        binary_expression [29473,29529]
            binary_expression [29473,29496]
                identifier: rounding [29473,29481]
                comparison_operator: == [29482,29484]
                member_expression: Rounding.Up [29485,29496]
            logical_operator: && [29497,29499]
            binary_expression [29500,29529]
                call_expression [29500,29525]
                    identifier: mulmod [29500,29506]
                    call_argument [29507,29508]
                        identifier: x [29507,29508]
                    call_argument [29510,29511]
                        identifier: y [29510,29511]
                    call_argument [29513,29524]
                        identifier: denominator [29513,29524]
                comparison_operator: > [29526,29527]
                number_literal: 0 [29528,29529]
        block_statement [29531,29569]
            expression_statement [29546,29558]
                augmented_assignment_expression [29546,29557]
                    identifier: result [29546,29552]
                    affectation_operator: += [29553,29555]
                    number_literal: 1 [29556,29557]
    return_statement [29579,29593]
        return: return [29579,29585]
        identifier: result [29586,29592]
to
function_definition [29252,29600]
at 9

New cluster:
MOVE from function_definition [29826,31495]
------------
===
move-tree
---
parameter [4836,4845]
    type_name: uint256 [4836,4843]
    identifier: a [4844,4845]
to
function_definition [29826,31495]
at 2
===
move-tree
---
state_mutability [4867,4871]
    pure: pure [4867,4871]
to
function_definition [32038,33057]
at 4
===
move-tree
---
return_type_definition [4872,4889]
    returns: returns [4872,4879]
    parameter [4881,4888]
        type_name: uint256 [4881,4888]
to
function_definition [32038,33057]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [29860,29864]
    pure: pure [29860,29864]
to
function_definition [29826,31495]
at 4

New cluster:
MOVE from function_definition [29826,31495]
------------
===
move-tree
---
return_type_definition [3908,3925]
    returns: returns [3908,3915]
    parameter [3917,3924]
        type_name: uint256 [3917,3924]
to
function_definition [29826,31495]
at 5
===
move-tree
---
parameter [3883,3892]
    type_name: uint256 [3883,3890]
    identifier: b [3891,3892]
to
function_definition [95174,95280]
at 3
===
move-tree
---
parameter [3872,3881]
    type_name: uint256 [3872,3879]
    identifier: a [3880,3881]
to
function_definition [95174,95280]
at 2
===
move-tree
---
state_mutability [3903,3907]
    pure: pure [3903,3907]
to
function_definition [95174,95280]
at 5

New cluster:
MOVE from function_definition [31600,31908]
------------
===
move-tree
---
parameter [4271,4280]
    type_name: uint256 [4271,4278]
    identifier: a [4279,4280]
to
function_definition [31600,31908]
at 2
===
move-tree
---
state_mutability [4302,4306]
    pure: pure [4302,4306]
to
function_definition [31600,31908]
at 5
===
move-tree
---
return_type_definition [4307,4324]
    returns: returns [4307,4314]
    parameter [4316,4323]
        type_name: uint256 [4316,4323]
to
function_definition [31600,31908]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [31625,31642]
    type_name: Rounding [31625,31633]
    identifier: rounding [31634,31642]
to
function_definition [31600,31908]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [31708,31908]
    block_statement [31719,31901]
        unchecked: unchecked [31719,31728]
        variable_declaration_statement [31744,31769]
            variable_declaration [31744,31758]
                type_name: uint256 [31744,31751]
                identifier: result [31752,31758]
            affectation_operator: = [31759,31760]
            call_expression [31761,31768]
                identifier: sqrt [31761,31765]
                call_argument [31766,31767]
                    identifier: a [31766,31767]
        return_statement [31783,31890]
            return: return [31783,31789]
            binary_expression [31807,31889]
                identifier: result [31807,31813]
                arithmetic_operator: + [31814,31815]
                parenthesized_expression [31833,31889]
                    ternary_expression [31834,31888]
                        binary_expression [31834,31880]
                            binary_expression [31834,31857]
                                identifier: rounding [31834,31842]
                                comparison_operator: == [31843,31845]
                                member_expression: Rounding.Up [31846,31857]
                            logical_operator: && [31858,31860]
                            binary_expression [31861,31880]
                                binary_expression [31861,31876]
                                    identifier: result [31861,31867]
                                    arithmetic_operator: * [31868,31869]
                                    identifier: result [31870,31876]
                                comparison_operator: < [31877,31878]
                                identifier: a [31879,31880]
                        ?: ? [31881,31882]
                        number_literal: 1 [31883,31884]
                        :: : [31885,31886]
                        number_literal: 0 [31887,31888]
to
function_definition [31600,31908]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [32052,32065]
    type_name: uint256 [32052,32059]
    identifier: value [32060,32065]
to
function_definition [32038,33057]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [32099,33057]
    variable_declaration_statement [32110,32129]
        variable_declaration [32110,32124]
            type_name: uint256 [32110,32117]
            identifier: result [32118,32124]
        affectation_operator: = [32125,32126]
        number_literal: 0 [32127,32128]
    block_statement [32139,33026]
        unchecked: unchecked [32139,32148]
        if_statement [32164,32266]
            if: if [32164,32166]
            binary_expression [32168,32184]
                binary_expression [32168,32180]
                    identifier: value [32168,32173]
                    >>: >> [32174,32176]
                    number_literal: 128 [32177,32180]
                comparison_operator: > [32181,32182]
                number_literal: 0 [32183,32184]
            block_statement [32186,32266]
                expression_statement [32205,32219]
                    augmented_assignment_expression [32205,32218]
                        identifier: value [32205,32210]
                        >>=: >>= [32211,32214]
                        number_literal: 128 [32215,32218]
                expression_statement [32237,32251]
                    augmented_assignment_expression [32237,32250]
                        identifier: result [32237,32243]
                        affectation_operator: += [32244,32246]
                        number_literal: 128 [32247,32250]
        if_statement [32280,32379]
            if: if [32280,32282]
            binary_expression [32284,32299]
                binary_expression [32284,32295]
                    identifier: value [32284,32289]
                    >>: >> [32290,32292]
                    number_literal: 64 [32293,32295]
                comparison_operator: > [32296,32297]
                number_literal: 0 [32298,32299]
            block_statement [32301,32379]
                expression_statement [32320,32333]
                    augmented_assignment_expression [32320,32332]
                        identifier: value [32320,32325]
                        >>=: >>= [32326,32329]
                        number_literal: 64 [32330,32332]
                expression_statement [32351,32364]
                    augmented_assignment_expression [32351,32363]
                        identifier: result [32351,32357]
                        affectation_operator: += [32358,32360]
                        number_literal: 64 [32361,32363]
        if_statement [32393,32492]
            if: if [32393,32395]
            binary_expression [32397,32412]
                binary_expression [32397,32408]
                    identifier: value [32397,32402]
                    >>: >> [32403,32405]
                    number_literal: 32 [32406,32408]
                comparison_operator: > [32409,32410]
                number_literal: 0 [32411,32412]
            block_statement [32414,32492]
                expression_statement [32433,32446]
                    augmented_assignment_expression [32433,32445]
                        identifier: value [32433,32438]
                        >>=: >>= [32439,32442]
                        number_literal: 32 [32443,32445]
                expression_statement [32464,32477]
                    augmented_assignment_expression [32464,32476]
                        identifier: result [32464,32470]
                        affectation_operator: += [32471,32473]
                        number_literal: 32 [32474,32476]
        if_statement [32506,32605]
            if: if [32506,32508]
            binary_expression [32510,32525]
                binary_expression [32510,32521]
                    identifier: value [32510,32515]
                    >>: >> [32516,32518]
                    number_literal: 16 [32519,32521]
                comparison_operator: > [32522,32523]
                number_literal: 0 [32524,32525]
            block_statement [32527,32605]
                expression_statement [32546,32559]
                    augmented_assignment_expression [32546,32558]
                        identifier: value [32546,32551]
                        >>=: >>= [32552,32555]
                        number_literal: 16 [32556,32558]
                expression_statement [32577,32590]
                    augmented_assignment_expression [32577,32589]
                        identifier: result [32577,32583]
                        affectation_operator: += [32584,32586]
                        number_literal: 16 [32587,32589]
        if_statement [32619,32715]
            if: if [32619,32621]
            binary_expression [32623,32637]
                binary_expression [32623,32633]
                    identifier: value [32623,32628]
                    >>: >> [32629,32631]
                    number_literal: 8 [32632,32633]
                comparison_operator: > [32634,32635]
                number_literal: 0 [32636,32637]
            block_statement [32639,32715]
                expression_statement [32658,32670]
                    augmented_assignment_expression [32658,32669]
                        identifier: value [32658,32663]
                        >>=: >>= [32664,32667]
                        number_literal: 8 [32668,32669]
                expression_statement [32688,32700]
                    augmented_assignment_expression [32688,32699]
                        identifier: result [32688,32694]
                        affectation_operator: += [32695,32697]
                        number_literal: 8 [32698,32699]
        if_statement [32729,32825]
            if: if [32729,32731]
            binary_expression [32733,32747]
                binary_expression [32733,32743]
                    identifier: value [32733,32738]
                    >>: >> [32739,32741]
                    number_literal: 4 [32742,32743]
                comparison_operator: > [32744,32745]
                number_literal: 0 [32746,32747]
            block_statement [32749,32825]
                expression_statement [32768,32780]
                    augmented_assignment_expression [32768,32779]
                        identifier: value [32768,32773]
                        >>=: >>= [32774,32777]
                        number_literal: 4 [32778,32779]
                expression_statement [32798,32810]
                    augmented_assignment_expression [32798,32809]
                        identifier: result [32798,32804]
                        affectation_operator: += [32805,32807]
                        number_literal: 4 [32808,32809]
        if_statement [32839,32935]
            if: if [32839,32841]
            binary_expression [32843,32857]
                binary_expression [32843,32853]
                    identifier: value [32843,32848]
                    >>: >> [32849,32851]
                    number_literal: 2 [32852,32853]
                comparison_operator: > [32854,32855]
                number_literal: 0 [32856,32857]
            block_statement [32859,32935]
                expression_statement [32878,32890]
                    augmented_assignment_expression [32878,32889]
                        identifier: value [32878,32883]
                        >>=: >>= [32884,32887]
                        number_literal: 2 [32888,32889]
                expression_statement [32908,32920]
                    augmented_assignment_expression [32908,32919]
                        identifier: result [32908,32914]
                        affectation_operator: += [32915,32917]
                        number_literal: 2 [32918,32919]
        if_statement [32949,33015]
            if: if [32949,32951]
            binary_expression [32953,32967]
                binary_expression [32953,32963]
                    identifier: value [32953,32958]
                    >>: >> [32959,32961]
                    number_literal: 1 [32962,32963]
                comparison_operator: > [32964,32965]
                number_literal: 0 [32966,32967]
            block_statement [32969,33015]
                expression_statement [32988,33000]
                    augmented_assignment_expression [32988,32999]
                        identifier: result [32988,32994]
                        affectation_operator: += [32995,32997]
                        number_literal: 1 [32998,32999]
    return_statement [33036,33050]
        return: return [33036,33042]
        identifier: result [33043,33049]
to
function_definition [32038,33057]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [33230,33243]
    type_name: uint256 [33230,33237]
    identifier: value [33238,33243]
to
function_definition [33216,33532]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [33245,33262]
    type_name: Rounding [33245,33253]
    identifier: rounding [33254,33262]
to
function_definition [33216,33532]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [33328,33532]
    block_statement [33339,33525]
        unchecked: unchecked [33339,33348]
        variable_declaration_statement [33364,33393]
            variable_declaration [33364,33378]
                type_name: uint256 [33364,33371]
                identifier: result [33372,33378]
            affectation_operator: = [33379,33380]
            call_expression [33381,33392]
                identifier: log2 [33381,33385]
                call_argument [33386,33391]
                    identifier: value [33386,33391]
        return_statement [33407,33514]
            return: return [33407,33413]
            binary_expression [33431,33513]
                identifier: result [33431,33437]
                arithmetic_operator: + [33438,33439]
                parenthesized_expression [33457,33513]
                    ternary_expression [33458,33512]
                        binary_expression [33458,33504]
                            binary_expression [33458,33481]
                                identifier: rounding [33458,33466]
                                comparison_operator: == [33467,33469]
                                member_expression: Rounding.Up [33470,33481]
                            logical_operator: && [33482,33484]
                            binary_expression [33485,33504]
                                binary_expression [33485,33496]
                                    number_literal: 1 [33485,33486]
                                    <<: << [33487,33489]
                                    identifier: result [33490,33496]
                                comparison_operator: < [33497,33498]
                                identifier: value [33499,33504]
                        ?: ? [33505,33506]
                        number_literal: 1 [33507,33508]
                        :: : [33509,33510]
                        number_literal: 0 [33511,33512]
to
function_definition [33216,33532]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [33678,33691]
    type_name: uint256 [33678,33685]
    identifier: value [33686,33691]
to
function_definition [33663,34585]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [33702,33706]
    pure: pure [33702,33706]
to
function_definition [33663,34585]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [33725,34585]
    variable_declaration_statement [33736,33755]
        variable_declaration [33736,33750]
            type_name: uint256 [33736,33743]
            identifier: result [33744,33750]
        affectation_operator: = [33751,33752]
        number_literal: 0 [33753,33754]
    block_statement [33765,34554]
        unchecked: unchecked [33765,33774]
        if_statement [33790,33892]
            if: if [33790,33792]
            binary_expression [33794,33809]
                identifier: value [33794,33799]
                comparison_operator: >= [33800,33802]
                binary_expression [33803,33809]
                    number_literal: 10 [33803,33805]
                    **: ** [33805,33807]
                    number_literal: 64 [33807,33809]
            block_statement [33811,33892]
                expression_statement [33830,33846]
                    augmented_assignment_expression [33830,33845]
                        identifier: value [33830,33835]
                        affectation_operator: /= [33836,33838]
                        binary_expression [33839,33845]
                            number_literal: 10 [33839,33841]
                            **: ** [33841,33843]
                            number_literal: 64 [33843,33845]
                expression_statement [33864,33877]
                    augmented_assignment_expression [33864,33876]
                        identifier: result [33864,33870]
                        affectation_operator: += [33871,33873]
                        number_literal: 64 [33874,33876]
        if_statement [33906,34008]
            if: if [33906,33908]
            binary_expression [33910,33925]
                identifier: value [33910,33915]
                comparison_operator: >= [33916,33918]
                binary_expression [33919,33925]
                    number_literal: 10 [33919,33921]
                    **: ** [33921,33923]
                    number_literal: 32 [33923,33925]
            block_statement [33927,34008]
                expression_statement [33946,33962]
                    augmented_assignment_expression [33946,33961]
                        identifier: value [33946,33951]
                        affectation_operator: /= [33952,33954]
                        binary_expression [33955,33961]
                            number_literal: 10 [33955,33957]
                            **: ** [33957,33959]
                            number_literal: 32 [33959,33961]
                expression_statement [33980,33993]
                    augmented_assignment_expression [33980,33992]
                        identifier: result [33980,33986]
                        affectation_operator: += [33987,33989]
                        number_literal: 32 [33990,33992]
        if_statement [34022,34124]
            if: if [34022,34024]
            binary_expression [34026,34041]
                identifier: value [34026,34031]
                comparison_operator: >= [34032,34034]
                binary_expression [34035,34041]
                    number_literal: 10 [34035,34037]
                    **: ** [34037,34039]
                    number_literal: 16 [34039,34041]
            block_statement [34043,34124]
                expression_statement [34062,34078]
                    augmented_assignment_expression [34062,34077]
                        identifier: value [34062,34067]
                        affectation_operator: /= [34068,34070]
                        binary_expression [34071,34077]
                            number_literal: 10 [34071,34073]
                            **: ** [34073,34075]
                            number_literal: 16 [34075,34077]
                expression_statement [34096,34109]
                    augmented_assignment_expression [34096,34108]
                        identifier: result [34096,34102]
                        affectation_operator: += [34103,34105]
                        number_literal: 16 [34106,34108]
        if_statement [34138,34237]
            if: if [34138,34140]
            binary_expression [34142,34156]
                identifier: value [34142,34147]
                comparison_operator: >= [34148,34150]
                binary_expression [34151,34156]
                    number_literal: 10 [34151,34153]
                    **: ** [34153,34155]
                    number_literal: 8 [34155,34156]
            block_statement [34158,34237]
                expression_statement [34177,34192]
                    augmented_assignment_expression [34177,34191]
                        identifier: value [34177,34182]
                        affectation_operator: /= [34183,34185]
                        binary_expression [34186,34191]
                            number_literal: 10 [34186,34188]
                            **: ** [34188,34190]
                            number_literal: 8 [34190,34191]
                expression_statement [34210,34222]
                    augmented_assignment_expression [34210,34221]
                        identifier: result [34210,34216]
                        affectation_operator: += [34217,34219]
                        number_literal: 8 [34220,34221]
        if_statement [34251,34350]
            if: if [34251,34253]
            binary_expression [34255,34269]
                identifier: value [34255,34260]
                comparison_operator: >= [34261,34263]
                binary_expression [34264,34269]
                    number_literal: 10 [34264,34266]
                    **: ** [34266,34268]
                    number_literal: 4 [34268,34269]
            block_statement [34271,34350]
                expression_statement [34290,34305]
                    augmented_assignment_expression [34290,34304]
                        identifier: value [34290,34295]
                        affectation_operator: /= [34296,34298]
                        binary_expression [34299,34304]
                            number_literal: 10 [34299,34301]
                            **: ** [34301,34303]
                            number_literal: 4 [34303,34304]
                expression_statement [34323,34335]
                    augmented_assignment_expression [34323,34334]
                        identifier: result [34323,34329]
                        affectation_operator: += [34330,34332]
                        number_literal: 4 [34333,34334]
        if_statement [34364,34463]
            if: if [34364,34366]
            binary_expression [34368,34382]
                identifier: value [34368,34373]
                comparison_operator: >= [34374,34376]
                binary_expression [34377,34382]
                    number_literal: 10 [34377,34379]
                    **: ** [34379,34381]
                    number_literal: 2 [34381,34382]
            block_statement [34384,34463]
                expression_statement [34403,34418]
                    augmented_assignment_expression [34403,34417]
                        identifier: value [34403,34408]
                        affectation_operator: /= [34409,34411]
                        binary_expression [34412,34417]
                            number_literal: 10 [34412,34414]
                            **: ** [34414,34416]
                            number_literal: 2 [34416,34417]
                expression_statement [34436,34448]
                    augmented_assignment_expression [34436,34447]
                        identifier: result [34436,34442]
                        affectation_operator: += [34443,34445]
                        number_literal: 2 [34446,34447]
        if_statement [34477,34543]
            if: if [34477,34479]
            binary_expression [34481,34495]
                identifier: value [34481,34486]
                comparison_operator: >= [34487,34489]
                binary_expression [34490,34495]
                    number_literal: 10 [34490,34492]
                    **: ** [34492,34494]
                    number_literal: 1 [34494,34495]
            block_statement [34497,34543]
                expression_statement [34516,34528]
                    augmented_assignment_expression [34516,34527]
                        identifier: result [34516,34522]
                        affectation_operator: += [34523,34525]
                        number_literal: 1 [34526,34527]
    return_statement [34564,34578]
        return: return [34564,34570]
        identifier: result [34571,34577]
to
function_definition [33663,34585]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [34760,34773]
    type_name: uint256 [34760,34767]
    identifier: value [34768,34773]
to
function_definition [34745,35062]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [34775,34792]
    type_name: Rounding [34775,34783]
    identifier: rounding [34784,34792]
to
function_definition [34745,35062]
at 3

New cluster:
MOVE from function_definition [34745,35062]
------------
===
move-tree
---
return_type_definition [7151,7168]
    returns: returns [7151,7158]
    parameter [7160,7167]
        type_name: uint256 [7160,7167]
to
function_definition [34745,35062]
at 6
===
move-tree
---
state_mutability [7146,7150]
    pure: pure [7146,7150]
to
function_definition [34745,35062]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [34858,35062]
    block_statement [34869,35055]
        unchecked: unchecked [34869,34878]
        variable_declaration_statement [34894,34924]
            variable_declaration [34894,34908]
                type_name: uint256 [34894,34901]
                identifier: result [34902,34908]
            affectation_operator: = [34909,34910]
            call_expression [34911,34923]
                identifier: log10 [34911,34916]
                call_argument [34917,34922]
                    identifier: value [34917,34922]
        return_statement [34938,35044]
            return: return [34938,34944]
            binary_expression [34962,35043]
                identifier: result [34962,34968]
                arithmetic_operator: + [34969,34970]
                parenthesized_expression [34988,35043]
                    ternary_expression [34989,35042]
                        binary_expression [34989,35034]
                            binary_expression [34989,35012]
                                identifier: rounding [34989,34997]
                                comparison_operator: == [34998,35000]
                                member_expression: Rounding.Up [35001,35012]
                            logical_operator: && [35013,35015]
                            binary_expression [35016,35034]
                                binary_expression [35016,35026]
                                    number_literal: 10 [35016,35018]
                                    **: ** [35018,35020]
                                    identifier: result [35020,35026]
                                comparison_operator: < [35027,35028]
                                identifier: value [35029,35034]
                        ?: ? [35035,35036]
                        number_literal: 1 [35037,35038]
                        :: : [35039,35040]
                        number_literal: 0 [35041,35042]
to
function_definition [34745,35062]
at 7

New cluster:
UPDATE from _HEX_SYMBOLS to _SYMBOLS
------------
===
update-node
---
identifier: _HEX_SYMBOLS [85756,85768]
replace _HEX_SYMBOLS by _SYMBOLS
===
update-node
---
identifier: _HEX_SYMBOLS [45733,45745]
replace _HEX_SYMBOLS by _SYMBOLS
===
update-node
---
identifier: _HEX_SYMBOLS [47489,47501]
replace _HEX_SYMBOLS by _SYMBOLS

New cluster:
MOVE from function_definition [45873,46596]
------------
===
move-tree
---
return_type_definition [46756,46779]
    returns: returns [46756,46763]
    parameter [46765,46778]
        type_name: string [46765,46771]
        memory: memory [46772,46778]
to
function_definition [45873,46596]
at 6
===
move-tree
---
parameter [46727,46740]
    type_name: uint256 [46727,46734]
    identifier: value [46735,46740]
to
function_definition [45873,46596]
at 2
===
move-tree
---
state_mutability [46751,46755]
    pure: pure [46751,46755]
to
function_definition [45873,46596]
at 5

New cluster:
MOVE from function_definition [46706,47046]
------------
===
move-tree
---
parameter [45891,45904]
    type_name: uint256 [45891,45898]
    identifier: value [45899,45904]
to
function_definition [46706,47046]
at 2
===
move-tree
---
state_mutability [45915,45919]
    pure: pure [45915,45919]
to
function_definition [46706,47046]
at 4
===
move-tree
---
return_type_definition [45920,45943]
    returns: returns [45920,45927]
    parameter [45929,45942]
        type_name: string [45929,45935]
        memory: memory [45936,45942]
to
function_definition [46706,47046]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [41602,41614]
    type_name: bytes32 [41602,41609]
    identifier: role [41610,41614]
to
modifier_definition [52872,52965]
at 2

New cluster:
===
insert-node
---
function_body [41616,41663]
to
modifier_definition [52872,52965]
at 3
------------
===
insert-node
---
function_body [41616,41663]
to
modifier_definition [52872,52965]
at 3

New cluster:
MOVE from function_definition [42619,42724]
------------
===
move-tree
---
function_body [52904,52965]
    expression_statement [52915,52946]
        call_expression [52915,52945]
            identifier: _checkRole [52915,52925]
            call_argument [52926,52930]
                identifier: role [52926,52930]
            call_argument [52932,52944]
                call_expression [52932,52944]
                    identifier: _msgSender [52932,52942]
    expression_statement [52956,52958]
        identifier: _ [52956,52957]
to
function_definition [42619,42724]
at 6
===
move-tree
---
parameter [52890,52902]
    type_name: bytes32 [52890,52897]
    identifier: role [52898,52902]
to
function_definition [42619,42724]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [42662,42666]
    view: view [42662,42666]
to
function_definition [42619,42724]
at 4

New cluster:
MOVE from function_definition [69213,69506]
------------
===
move-tree
---
function_body [38800,39233]
    expression_statement [38883,38947]
        call_expression [38883,38946]
            identifier: require [38883,38890]
            call_argument [38891,38910]
                binary_expression [38891,38910]
                    identifier: _status [38891,38898]
                    comparison_operator: != [38899,38901]
                    identifier: _ENTERED [38902,38910]
            call_argument [38912,38945]
                string_literal [38912,38945]
                    string: "ReentrancyGuard: reentrant call" [38912,38945]
    expression_statement [39024,39043]
        assignment_expression [39024,39042]
            identifier: _status [39024,39031]
            affectation_operator: = [39032,39033]
            identifier: _ENTERED [39034,39042]
    expression_statement [39055,39057]
        identifier: _ [39055,39056]
    expression_statement [39203,39226]
        assignment_expression [39203,39225]
            identifier: _status [39203,39210]
            affectation_operator: = [39211,39212]
            identifier: _NOT_ENTERED [39213,39225]
to
function_definition [69213,69506]
at 3
===
move-tree
---
modifier: modifier [38776,38784]
to
modifier_definition [69098,69205]
at 0
===
move-tree
---
identifier: nonReentrant [38785,38797]
to
modifier_definition [69098,69205]
at 1

New cluster:
MOVE from function_definition [15027,15122]
------------
===
move-tree
---
return_type_definition [16693,16707]
    returns: returns [16693,16700]
    parameter [16702,16706]
        type_name: bool [16702,16706]
to
function_definition [15027,15122]
at 6
===
move-tree
---
parameter [16662,16676]
    type_name: uint256 [16662,16669]
    identifier: amount [16670,16676]
to
function_definition [15027,15122]
at 3

New cluster:
MOVE from function_definition [16577,16708]
------------
===
move-tree
---
return_type_definition [15107,15121]
    returns: returns [15107,15114]
    parameter [15116,15120]
        type_name: bool [15116,15120]
to
function_definition [16577,16708]
at 6
===
move-tree
---
parameter [15064,15078]
    type_name: uint256 [15064,15071]
    identifier: amount [15072,15078]
to
function_definition [16577,16708]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [77033,77056]
    type_name: IERC20Upgradeable [77033,77050]
    identifier: token [77051,77056]
to
function_definition [77002,77666]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [77067,77082]
    type_name: address [77067,77074]
    identifier: spender [77075,77082]
to
function_definition [77002,77666]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [77093,77106]
    type_name: uint256 [77093,77100]
    identifier: value [77101,77106]
to
function_definition [77002,77666]
at 4

New cluster:
MOVE from function_definition [94992,95098]
------------
===
move-tree
---
state_mutability [840,844]
    pure: pure [840,844]
to
function_definition [94992,95098]
at 5
===
move-tree
---
parameter [791,800]
    type_name: uint256 [791,798]
    identifier: a [799,800]
to
function_definition [94992,95098]
at 2
===
move-tree
---
parameter [802,811]
    type_name: uint256 [802,809]
    identifier: b [810,811]
to
function_definition [94992,95098]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [95041,95058]
    returns: returns [95041,95048]
    parameter [95050,95057]
        type_name: uint256 [95050,95057]
to
function_definition [94992,95098]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [95059,95098]
    return_statement [95070,95091]
        return: return [95070,95076]
        ternary_expression [95077,95090]
            binary_expression [95077,95082]
                identifier: a [95077,95078]
                comparison_operator: > [95079,95080]
                identifier: b [95081,95082]
            ?: ? [95083,95084]
            identifier: a [95085,95086]
            :: : [95087,95088]
            identifier: b [95089,95090]
to
function_definition [94992,95098]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [95223,95240]
    returns: returns [95223,95230]
    parameter [95232,95239]
        type_name: uint256 [95232,95239]
to
function_definition [95174,95280]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [95241,95280]
    return_statement [95252,95273]
        return: return [95252,95258]
        ternary_expression [95259,95272]
            binary_expression [95259,95264]
                identifier: a [95259,95260]
                comparison_operator: < [95261,95262]
                identifier: b [95263,95264]
            ?: ? [95265,95266]
            identifier: a [95267,95268]
            :: : [95269,95270]
            identifier: b [95271,95272]
to
function_definition [95174,95280]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [95452,95469]
    returns: returns [95452,95459]
    parameter [95461,95468]
        type_name: uint256 [95461,95468]
to
function_definition [95399,95555]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [95470,95555]
    return_statement [95519,95548]
        return: return [95519,95525]
        binary_expression [95526,95547]
            parenthesized_expression [95526,95533]
                binary_expression [95527,95532]
                    identifier: a [95527,95528]
                    bitwise_operator: & [95529,95530]
                    identifier: b [95531,95532]
            arithmetic_operator: + [95534,95535]
            binary_expression [95536,95547]
                parenthesized_expression [95536,95543]
                    binary_expression [95537,95542]
                        identifier: a [95537,95538]
                        bitwise_operator: ^ [95539,95540]
                        identifier: b [95541,95542]
                arithmetic_operator: / [95544,95545]
                number_literal: 2 [95546,95547]
to
function_definition [95399,95555]
at 7

New cluster:
MOVE from function_definition [95762,95959]
------------
===
move-tree
---
state_mutability [2712,2716]
    pure: pure [2712,2716]
to
function_definition [95762,95959]
at 5
===
move-tree
---
parameter [2663,2672]
    type_name: uint256 [2663,2670]
    identifier: a [2671,2672]
to
function_definition [95762,95959]
at 2
===
move-tree
---
parameter [2674,2683]
    type_name: uint256 [2674,2681]
    identifier: b [2682,2683]
to
function_definition [95762,95959]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [95815,95832]
    returns: returns [95815,95822]
    parameter [95824,95831]
        type_name: uint256 [95824,95831]
to
function_definition [95762,95959]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [95833,95959]
    return_statement [95916,95952]
        return: return [95916,95922]
        ternary_expression [95923,95951]
            binary_expression [95923,95929]
                identifier: a [95923,95924]
                comparison_operator: == [95925,95927]
                number_literal: 0 [95928,95929]
            ?: ? [95930,95931]
            number_literal: 0 [95932,95933]
            :: : [95934,95935]
            binary_expression [95936,95951]
                binary_expression [95936,95947]
                    parenthesized_expression [95936,95943]
                        binary_expression [95937,95942]
                            identifier: a [95937,95938]
                            arithmetic_operator: - [95939,95940]
                            number_literal: 1 [95941,95942]
                    arithmetic_operator: / [95944,95945]
                    identifier: b [95946,95947]
                arithmetic_operator: + [95948,95949]
                number_literal: 1 [95950,95951]
to
function_definition [95762,95959]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [101032,101036]
    pure: pure [101032,101036]
to
function_definition [100998,102667]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [101037,101054]
    returns: returns [101037,101044]
    parameter [101046,101053]
        type_name: uint256 [101046,101053]
to
function_definition [100998,102667]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [101055,102667]
    if_statement [101066,101113]
        if: if [101066,101068]
        binary_expression [101070,101076]
            identifier: a [101070,101071]
            comparison_operator: == [101072,101074]
            number_literal: 0 [101075,101076]
        block_statement [101078,101113]
            return_statement [101093,101102]
                return: return [101093,101099]
                number_literal: 0 [101100,101101]
    variable_declaration_statement [101800,101837]
        variable_declaration [101800,101814]
            type_name: uint256 [101800,101807]
            identifier: result [101808,101814]
        affectation_operator: = [101815,101816]
        binary_expression [101817,101836]
            number_literal: 1 [101817,101818]
            <<: << [101819,101821]
            parenthesized_expression [101822,101836]
                binary_expression [101823,101835]
                    call_expression [101823,101830]
                        identifier: log2 [101823,101827]
                        call_argument [101828,101829]
                            identifier: a [101828,101829]
                    >>: >> [101831,101833]
                    number_literal: 1 [101834,101835]
    block_statement [102243,102660]
        unchecked: unchecked [102243,102252]
        expression_statement [102268,102304]
            assignment_expression [102268,102303]
                identifier: result [102268,102274]
                affectation_operator: = [102275,102276]
                binary_expression [102277,102303]
                    parenthesized_expression [102277,102298]
                        binary_expression [102278,102297]
                            identifier: result [102278,102284]
                            arithmetic_operator: + [102285,102286]
                            binary_expression [102287,102297]
                                identifier: a [102287,102288]
                                arithmetic_operator: / [102289,102290]
                                identifier: result [102291,102297]
                    >>: >> [102299,102301]
                    number_literal: 1 [102302,102303]
        expression_statement [102318,102354]
            assignment_expression [102318,102353]
                identifier: result [102318,102324]
                affectation_operator: = [102325,102326]
                binary_expression [102327,102353]
                    parenthesized_expression [102327,102348]
                        binary_expression [102328,102347]
                            identifier: result [102328,102334]
                            arithmetic_operator: + [102335,102336]
                            binary_expression [102337,102347]
                                identifier: a [102337,102338]
                                arithmetic_operator: / [102339,102340]
                                identifier: result [102341,102347]
                    >>: >> [102349,102351]
                    number_literal: 1 [102352,102353]
        expression_statement [102368,102404]
            assignment_expression [102368,102403]
                identifier: result [102368,102374]
                affectation_operator: = [102375,102376]
                binary_expression [102377,102403]
                    parenthesized_expression [102377,102398]
                        binary_expression [102378,102397]
                            identifier: result [102378,102384]
                            arithmetic_operator: + [102385,102386]
                            binary_expression [102387,102397]
                                identifier: a [102387,102388]
                                arithmetic_operator: / [102389,102390]
                                identifier: result [102391,102397]
                    >>: >> [102399,102401]
                    number_literal: 1 [102402,102403]
        expression_statement [102418,102454]
            assignment_expression [102418,102453]
                identifier: result [102418,102424]
                affectation_operator: = [102425,102426]
                binary_expression [102427,102453]
                    parenthesized_expression [102427,102448]
                        binary_expression [102428,102447]
                            identifier: result [102428,102434]
                            arithmetic_operator: + [102435,102436]
                            binary_expression [102437,102447]
                                identifier: a [102437,102438]
                                arithmetic_operator: / [102439,102440]
                                identifier: result [102441,102447]
                    >>: >> [102449,102451]
                    number_literal: 1 [102452,102453]
        expression_statement [102468,102504]
            assignment_expression [102468,102503]
                identifier: result [102468,102474]
                affectation_operator: = [102475,102476]
                binary_expression [102477,102503]
                    parenthesized_expression [102477,102498]
                        binary_expression [102478,102497]
                            identifier: result [102478,102484]
                            arithmetic_operator: + [102485,102486]
                            binary_expression [102487,102497]
                                identifier: a [102487,102488]
                                arithmetic_operator: / [102489,102490]
                                identifier: result [102491,102497]
                    >>: >> [102499,102501]
                    number_literal: 1 [102502,102503]
        expression_statement [102518,102554]
            assignment_expression [102518,102553]
                identifier: result [102518,102524]
                affectation_operator: = [102525,102526]
                binary_expression [102527,102553]
                    parenthesized_expression [102527,102548]
                        binary_expression [102528,102547]
                            identifier: result [102528,102534]
                            arithmetic_operator: + [102535,102536]
                            binary_expression [102537,102547]
                                identifier: a [102537,102538]
                                arithmetic_operator: / [102539,102540]
                                identifier: result [102541,102547]
                    >>: >> [102549,102551]
                    number_literal: 1 [102552,102553]
        expression_statement [102568,102604]
            assignment_expression [102568,102603]
                identifier: result [102568,102574]
                affectation_operator: = [102575,102576]
                binary_expression [102577,102603]
                    parenthesized_expression [102577,102598]
                        binary_expression [102578,102597]
                            identifier: result [102578,102584]
                            arithmetic_operator: + [102585,102586]
                            binary_expression [102587,102597]
                                identifier: a [102587,102588]
                                arithmetic_operator: / [102589,102590]
                                identifier: result [102591,102597]
                    >>: >> [102599,102601]
                    number_literal: 1 [102602,102603]
        return_statement [102618,102649]
            return: return [102618,102624]
            call_expression [102625,102648]
                identifier: min [102625,102628]
                call_argument [102629,102635]
                    identifier: result [102629,102635]
                call_argument [102637,102647]
                    binary_expression [102637,102647]
                        identifier: a [102637,102638]
                        arithmetic_operator: / [102639,102640]
                        identifier: result [102641,102647]
to
function_definition [100998,102667]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [102797,102814]
    type_name: Rounding [102797,102805]
    identifier: rounding [102806,102814]
to
function_definition [102772,103080]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [102843,102847]
    pure: pure [102843,102847]
to
function_definition [102772,103080]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [102857,102874]
    returns: returns [102857,102864]
    parameter [102866,102873]
        type_name: uint256 [102866,102873]
to
function_definition [102772,103080]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [102880,103080]
    block_statement [102891,103073]
        unchecked: unchecked [102891,102900]
        variable_declaration_statement [102916,102941]
            variable_declaration [102916,102930]
                type_name: uint256 [102916,102923]
                identifier: result [102924,102930]
            affectation_operator: = [102931,102932]
            call_expression [102933,102940]
                identifier: sqrt [102933,102937]
                call_argument [102938,102939]
                    identifier: a [102938,102939]
        return_statement [102955,103062]
            return: return [102955,102961]
            binary_expression [102979,103061]
                identifier: result [102979,102985]
                arithmetic_operator: + [102986,102987]
                parenthesized_expression [103005,103061]
                    ternary_expression [103006,103060]
                        binary_expression [103006,103052]
                            binary_expression [103006,103029]
                                identifier: rounding [103006,103014]
                                comparison_operator: == [103015,103017]
                                member_expression: Rounding.Up [103018,103029]
                            logical_operator: && [103030,103032]
                            binary_expression [103033,103052]
                                binary_expression [103033,103048]
                                    identifier: result [103033,103039]
                                    arithmetic_operator: * [103040,103041]
                                    identifier: result [103042,103048]
                                comparison_operator: < [103049,103050]
                                identifier: a [103051,103052]
                        ?: ? [103053,103054]
                        number_literal: 1 [103055,103056]
                        :: : [103057,103058]
                        number_literal: 0 [103059,103060]
to
function_definition [102772,103080]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [107356,107369]
    type_name: uint256 [107356,107363]
    identifier: value [107364,107369]
to
function_definition [107340,107666]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [107371,107388]
    type_name: Rounding [107371,107379]
    identifier: rounding [107380,107388]
to
function_definition [107340,107666]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [107417,107421]
    pure: pure [107417,107421]
to
function_definition [107340,107666]
at 5

New cluster:
MOVE from function_definition [138638,138742]
------------
===
move-tree
---
state_mutability [115145,115149]
    view: view [115145,115149]
to
function_definition [138638,138742]
at 3
===
move-tree
---
return_type_definition [115150,115167]
    returns: returns [115150,115157]
    parameter [115159,115166]
        type_name: uint256 [115159,115166]
to
function_definition [107340,107666]
at 6
===
move-tree
---
parameter [115116,115134]
    type_name: uint256 [115116,115123]
    identifier: _listingId [115124,115134]
to
function_definition [153532,154564]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [107454,107666]
    block_statement [107465,107659]
        unchecked: unchecked [107465,107474]
        variable_declaration_statement [107490,107521]
            variable_declaration [107490,107504]
                type_name: uint256 [107490,107497]
                identifier: result [107498,107504]
            affectation_operator: = [107505,107506]
            call_expression [107507,107520]
                identifier: log256 [107507,107513]
                call_argument [107514,107519]
                    identifier: value [107514,107519]
        return_statement [107535,107648]
            return: return [107535,107541]
            binary_expression [107559,107647]
                identifier: result [107559,107565]
                arithmetic_operator: + [107566,107567]
                parenthesized_expression [107585,107647]
                    ternary_expression [107586,107646]
                        binary_expression [107586,107638]
                            binary_expression [107586,107609]
                                identifier: rounding [107586,107594]
                                comparison_operator: == [107595,107597]
                                member_expression: Rounding.Up [107598,107609]
                            logical_operator: && [107610,107612]
                            binary_expression [107613,107638]
                                binary_expression [107613,107630]
                                    number_literal: 1 [107613,107614]
                                    <<: << [107615,107617]
                                    parenthesized_expression [107618,107630]
                                        binary_expression [107619,107629]
                                            identifier: result [107619,107625]
                                            arithmetic_operator: * [107626,107627]
                                            number_literal: 8 [107628,107629]
                                comparison_operator: < [107631,107632]
                                identifier: value [107633,107638]
                        ?: ? [107639,107640]
                        number_literal: 1 [107641,107642]
                        :: : [107643,107644]
                        number_literal: 0 [107645,107646]
to
function_definition [107340,107666]
at 7

New cluster:
MOVE from state_variable_declaration [107892,107947]
------------
===
move-tree
---
string_literal [84015,84033]
    string: "0123456789abcdef" [84015,84033]
to
state_variable_declaration [107892,107947]
at 5

New cluster:
MOVE from function_definition [108103,108819]
------------
===
move-tree
---
state_mutability [85018,85022]
    pure: pure [85018,85022]
to
function_definition [108103,108819]
at 4
===
move-tree
---
parameter [84994,85007]
    type_name: uint256 [84994,85001]
    identifier: value [85002,85007]
to
function_definition [108103,108819]
at 2
===
move-tree
---
return_type_definition [85023,85046]
    returns: returns [85023,85030]
    parameter [85032,85045]
        type_name: string [85032,85038]
        memory: memory [85039,85045]
to
function_definition [108103,108819]
at 5

New cluster:
MOVE from function_definition [108929,109107]
------------
===
move-tree
---
parameter [84158,84171]
    type_name: uint256 [84158,84165]
    identifier: value [84166,84171]
to
function_definition [108929,109107]
at 2
===
move-tree
---
return_type_definition [84187,84210]
    returns: returns [84187,84194]
    parameter [84196,84209]
        type_name: string [84196,84202]
        memory: memory [84203,84209]
to
function_definition [108929,109107]
at 5
===
move-tree
---
state_mutability [84182,84186]
    pure: pure [84182,84186]
to
function_definition [108929,109107]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [112645,112669]
    type_name: bytes32[] [112645,112654]
    calldata: calldata [112655,112663]
    identifier: proof [112664,112669]
to
function_definition [112611,112819]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [112680,112692]
    type_name: bytes32 [112680,112687]
    identifier: root [112688,112692]
to
function_definition [112611,112819]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [112703,112715]
    type_name: bytes32 [112703,112710]
    identifier: leaf [112711,112715]
to
function_definition [112611,112819]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [112732,112736]
    pure: pure [112732,112736]
to
function_definition [112611,112819]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [112737,112751]
    returns: returns [112737,112744]
    parameter [112746,112750]
        type_name: bool [112746,112750]
to
function_definition [112611,112819]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [113652,113676]
    type_name: bytes32[] [113652,113661]
    calldata: calldata [113662,113670]
    identifier: proof [113671,113676]
to
function_definition [113622,113960]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [113678,113690]
    type_name: bytes32 [113678,113685]
    identifier: leaf [113686,113690]
to
function_definition [113622,113960]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [113719,113723]
    pure: pure [113719,113723]
to
function_definition [113622,113960]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [113733,113750]
    returns: returns [113733,113740]
    parameter [113742,113749]
        type_name: bytes32 [113742,113749]
to
function_definition [113622,113960]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [115931,115953]
    type_name: bytes32[] [115931,115940]
    memory: memory [115941,115947]
    identifier: proof [115948,115953]
to
function_definition [115894,118073]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [115964,115988]
    type_name: bool[] [115964,115970]
    memory: memory [115971,115977]
    identifier: proofFlags [115978,115988]
to
function_definition [115894,118073]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [115999,116022]
    type_name: bytes32[] [115999,116008]
    memory: memory [116009,116015]
    identifier: leaves [116016,116022]
to
function_definition [115894,118073]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [116039,116043]
    pure: pure [116039,116043]
to
function_definition [115894,118073]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [116044,116072]
    returns: returns [116044,116051]
    parameter [116053,116071]
        type_name: bytes32 [116053,116060]
        identifier: merkleRoot [116061,116071]
to
function_definition [115894,118073]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [118340,118364]
    type_name: bytes32[] [118340,118349]
    calldata: calldata [118350,118358]
    identifier: proof [118359,118364]
to
function_definition [118295,120486]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [118375,118401]
    type_name: bool[] [118375,118381]
    calldata: calldata [118382,118390]
    identifier: proofFlags [118391,118401]
to
function_definition [118295,120486]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [118412,118435]
    type_name: bytes32[] [118412,118421]
    memory: memory [118422,118428]
    identifier: leaves [118429,118435]
to
function_definition [118295,120486]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [118452,118456]
    pure: pure [118452,118456]
to
function_definition [118295,120486]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [118457,118485]
    returns: returns [118457,118464]
    parameter [118466,118484]
        type_name: bytes32 [118466,118473]
        identifier: merkleRoot [118474,118484]
to
function_definition [118295,120486]
at 7

New cluster:
UPDATE from getNFTCollectionId to getERC721CollectionId
------------
===
update-node
---
identifier: getNFTCollectionId [83426,83444]
replace getNFTCollectionId by getERC721CollectionId

New cluster:
UPDATE from getNFTCollectionId to getERC1155CollectionId
------------
===
update-node
---
identifier: getNFTCollectionId [81997,82015]
replace getNFTCollectionId by getERC1155CollectionId

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [124421,124437]
    type_name: uint256 [124421,124428]
    identifier: _tokenId [124429,124437]
to
function_definition [124376,124497]
at 2

New cluster:
MOVE from function_definition [124376,124497]
------------
===
move-tree
---
state_mutability [81087,81091]
    view: view [81087,81091]
to
function_definition [124376,124497]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [124480,124496]
    returns: returns [124480,124487]
    parameter [124489,124495]
        type_name: int256 [124489,124495]
to
function_definition [124376,124497]
at 5

New cluster:
MOVE from function_definition [125173,125328]
------------
===
move-tree
---
parameter [82213,82228]
    type_name: address [82213,82220]
    identifier: account [82221,82228]
to
function_definition [125173,125328]
at 2
===
move-tree
---
return_type_definition [82305,82319]
    returns: returns [82305,82312]
    parameter [82314,82318]
        type_name: bool [82314,82318]
to
function_definition [125173,125328]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [125253,125269]
    type_name: uint256 [125253,125260]
    identifier: _tokenId [125261,125269]
to
function_definition [125173,125328]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [125280,125296]
    type_name: uint256 [125280,125287]
    identifier: quantity [125288,125296]
to
function_definition [125173,125328]
at 4

New cluster:
UPDATE from delegatedBuy to buy
------------
===
update-node
---
identifier: delegatedBuy [80431,80443]
replace delegatedBuy by buy

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [132175,132202]
    type_name: uint256 [132175,132182]
    identifier: _signatureTimestamp [132183,132202]
to
function_definition [80422,80642]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [132213,132235]
    type_name: bytes [132213,132218]
    memory: memory [132219,132225]
    identifier: signature [132226,132235]
to
function_definition [80422,80642]
at 9

New cluster:
UPDATE from buy to delegatedBuy
------------
===
update-node
---
identifier: buy [80237,80240]
replace buy by delegatedBuy

New cluster:
MOVE from function_definition [80228,80414]
------------
===
move-tree
---
parameter [80569,80583]
    type_name: address [80569,80576]
    identifier: _buyer [80577,80583]
to
function_definition [80228,80414]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [133119,133146]
    type_name: uint256 [133119,133126]
    identifier: _signatureTimestamp [133127,133146]
to
function_definition [80228,80414]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [133157,133179]
    type_name: bytes [133157,133162]
    memory: memory [133163,133169]
    identifier: signature [133170,133179]
to
function_definition [80228,80414]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [138353,138368]
    type_name: address [138353,138360]
    identifier: _signer [138361,138368]
to
function_definition [138324,138561]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [138397,138406]
    identifier: onlyAdmin [138397,138406]
to
function_definition [138324,138561]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [138416,138430]
    returns: returns [138416,138423]
    parameter [138425,138429]
        type_name: bool [138425,138429]
to
function_definition [138324,138561]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [138681,138698]
    returns: returns [138681,138688]
    parameter [138690,138697]
        type_name: address [138690,138697]
to
function_definition [138638,138742]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
function_body [138699,138742]
    return_statement [138710,138735]
        return: return [138710,138716]
        identifier: _privilegedSigner [138717,138734]
to
function_definition [138638,138742]
at 5

New cluster:
UPDATE from INVALID_CURRENCY_FROM_LISTING to CURRENCY_OR_PRICE_DOES_NOT_MATCH_LISTING
------------
===
update-node
---
identifier: INVALID_CURRENCY_FROM_LISTING [86947,86976]
replace INVALID_CURRENCY_FROM_LISTING by CURRENCY_OR_PRICE_DOES_NOT_MATCH_LISTING
===
update-node
---
identifier: INVALID_CURRENCY_FROM_LISTING [100242,100271]
replace INVALID_CURRENCY_FROM_LISTING by CURRENCY_OR_PRICE_DOES_NOT_MATCH_LISTING

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [146774,146801]
    type_name: address [146774,146781]
    identifier: _collectionContract [146782,146801]
to
function_definition [93937,94578]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [147826,147853]
    type_name: address [147826,147833]
    identifier: _collectionContract [147834,147853]
to
function_definition [147795,148017]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [147882,147891]
    identifier: onlyAdmin [147882,147891]
to
function_definition [147795,148017]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [153593,153610]
    type_name: address [153593,153600]
    identifier: _currency [153601,153610]
to
function_definition [153532,154564]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [153621,153635]
    type_name: uint256 [153621,153628]
    identifier: _price [153629,153635]
to
function_definition [153532,154564]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [153646,153668]
    type_name: uint256 [153646,153653]
    identifier: _quantityToBuy [153654,153668]
to
function_definition [153532,154564]
at 5

New cluster:
MOVE from function_definition [153532,154564]
------------
===
move-tree
---
parameter [121825,121839]
    type_name: address [121825,121832]
    identifier: _buyer [121833,121839]
to
function_definition [153532,154564]
at 6

New cluster:
MOVE from function_definition [153532,154564]
------------
===
move-tree
---
modifier_invocation [99744,99756]
    identifier: nonReentrant [99744,99756]
to
function_definition [153532,154564]
at 13
===
move-tree
---
parameter [99687,99710]
    type_name: bytes32[] [99687,99696]
    memory: memory [99697,99703]
    identifier: _proof [99704,99710]
to
function_definition [153532,154564]
at 7
===
move-tree
---
parameter [99629,99651]
    type_name: uint256 [99629,99636]
    identifier: _quantityToBuy [99637,99651]
to
function_definition [185127,187843]
at 6
===
move-tree
---
parameter [99547,99565]
    type_name: uint256 [99547,99554]
    identifier: _listingId [99555,99565]
to
function_definition [185127,187843]
at 2
===
move-tree
---
state_mutability [99727,99734]
    payable: payable [99727,99734]
to
function_definition [153532,154564]
at 11
===
move-tree
---
parameter [99604,99618]
    type_name: uint256 [99604,99611]
    identifier: _price [99612,99618]
to
function_definition [185127,187843]
at 4
===
move-tree
---
override_specifier [99735,99743]
    override: override [99735,99743]
to
function_definition [153532,154564]
at 12
===
move-tree
---
parameter [99662,99676]
    type_name: address [99662,99669]
    identifier: _buyer [99670,99676]
to
function_definition [185127,187843]
at 5
===
move-tree
---
parameter [99576,99593]
    type_name: address [99576,99583]
    identifier: _currency [99584,99593]
to
function_definition [185127,187843]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [153738,153765]
    type_name: uint256 [153738,153745]
    identifier: _signatureTimestamp [153746,153765]
to
function_definition [153532,154564]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [153776,153798]
    type_name: bytes [153776,153781]
    memory: memory [153782,153788]
    identifier: signature [153789,153798]
to
function_definition [153532,154564]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [159066,159093]
    type_name: uint256 [159066,159073]
    identifier: _signatureTimestamp [159074,159093]
to
function_definition [106946,108737]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [159104,159126]
    type_name: bytes [159104,159109]
    memory: memory [159110,159116]
    identifier: signature [159117,159126]
to
function_definition [106946,108737]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [160348,160366]
    type_name: bool [160348,160352]
    identifier: _isDiscounted [160353,160366]
to
function_definition [110128,113589]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [164388,164406]
    type_name: bool [164388,164392]
    identifier: _isDiscounted [164393,164406]
to
function_definition [115303,117324]
at 7

New cluster:
MOVE from function_definition [175409,175572]
------------
===
move-tree
---
modifier_invocation [124044,124053]
    identifier: onlyAdmin [124044,124053]
to
function_definition [175409,175572]
at 4
===
move-tree
---
parameter [124016,124033]
    type_name: address [124016,124023]
    identifier: _treasury [124024,124033]
to
function_definition [175409,175572]
at 2
===
move-tree
---
function_body [124054,124169]
    expression_statement [124065,124124]
        call_expression [124065,124123]
            identifier: require [124065,124072]
            call_argument [124073,124096]
                binary_expression [124073,124096]
                    identifier: _treasury [124073,124082]
                    comparison_operator: != [124083,124085]
                    type_cast_expression [124086,124096]
                        primitive_type: address [124086,124093]
                        call_argument [124094,124095]
                            number_literal: 0 [124094,124095]
            call_argument [124098,124122]
                call_expression [124098,124122]
                    identifier: throwError [124098,124108]
                    call_argument [124109,124121]
                        identifier: ZERO_ADDRESS [124109,124121]
    expression_statement [124134,124162]
        assignment_expression [124134,124161]
            identifier: royaltyTreasury [124134,124149]
            affectation_operator: = [124150,124151]
            identifier: _treasury [124152,124161]
to
function_definition [188022,188170]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [177308,177320]
    identifier: nonReentrant [177308,177320]
to
function_definition [125485,125794]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
modifier_invocation [177913,177925]
    identifier: nonReentrant [177913,177925]
to
function_definition [125802,125989]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [185304,185331]
    type_name: uint256 [185304,185311]
    identifier: _signatureTimestamp [185312,185331]
to
function_definition [185127,187843]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [185342,185364]
    type_name: bytes [185342,185347]
    memory: memory [185348,185354]
    identifier: signature [185355,185364]
to
function_definition [185127,187843]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [185380,185384]
    view: view [185380,185384]
to
function_definition [185127,187843]
at 10

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_type_definition [185385,185399]
    returns: returns [185385,185392]
    parameter [185394,185398]
        type_name: bool [185394,185398]
to
function_definition [185127,187843]
at 11

New cluster:
MOVE from function_definition [187851,188014]
------------
===
move-tree
---
state_mutability [131423,131427]
    view: view [131423,131427]
to
function_definition [187851,188014]
at 3

New cluster:
MOVE from function_definition [187851,188014]
------------
===
move-tree
---
function_body [93789,93929]
    expression_statement [93800,93910]
        call_expression [93800,93909]
            identifier: require [93800,93807]
            call_argument [93822,93861]
                call_expression [93822,93861]
                    identifier: hasRole [93822,93829]
                    call_argument [93830,93848]
                        identifier: DEFAULT_ADMIN_ROLE [93830,93848]
                    call_argument [93850,93860]
                        member_expression: msg.sender [93850,93860]
            call_argument [93876,93898]
                call_expression [93876,93898]
                    identifier: throwError [93876,93886]
                    call_argument [93887,93897]
                        identifier: ONLY_ADMIN [93887,93897]
    expression_statement [93920,93922]
        identifier: _ [93920,93921]
to
function_definition [187851,188014]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [188047,188063]
    type_name: address [188047,188054]
    identifier: _toCheck [188055,188063]
to
function_definition [188022,188170]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [188065,188081]
    type_name: int32 [188065,188070]
    identifier: _errorCode [188071,188081]
to
function_definition [188022,188170]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
state_mutability [188091,188095]
    pure: pure [188091,188095]
to
function_definition [188022,188170]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parameter [188318,188333]
    type_name: uint256 [188318,188325]
    identifier: _amount [188326,188333]
to
function_definition [188293,188413]
at 2

New cluster:
MOVE from function_body [32409,32957]
------------
===
move-tree
---
if_statement [32565,32939]
    if: if [32565,32567]
    binary_expression [32569,32590]
        member_expression: returndata.length [32569,32586]
        comparison_operator: > [32587,32588]
        number_literal: 0 [32589,32590]
    block_statement [32592,32878]
        assembly_statement [32706,32863]
            assembly: assembly [32706,32714]
            yul_variable_declaration [32738,32778]
                let: let [32738,32741]
                yul_identifier [32742,32757]
                    identifier: returndata_size [32742,32757]
                :=: := [32758,32760]
                yul_function_call [32761,32778]
                    yul_evm_builtin [32761,32766]
                        mload: mload [32761,32766]
                    yul_path [32767,32777]
                        yul_identifier [32767,32777]
                            identifier: returndata [32767,32777]
            yul_function_call [32800,32844]
                yul_evm_builtin [32800,32806]
                    revert: revert [32800,32806]
                yul_function_call [32807,32826]
                    yul_evm_builtin [32807,32810]
                        add: add [32807,32810]
                    yul_decimal_number: 32 [32811,32813]
                    yul_path [32815,32825]
                        yul_identifier [32815,32825]
                            identifier: returndata [32815,32825]
                yul_path [32828,32843]
                    yul_identifier [32828,32843]
                        identifier: returndata_size [32828,32843]
    else: else [32879,32883]
    block_statement [32884,32939]
        revert_statement [32903,32924]
            revert: revert [32903,32909]
            parenthesized_expression [32909,32923]
                identifier: errorMessage [32910,32922]
to
function_body [32409,32957]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [16189,16206]
    assignment_expression [16189,16205]
        identifier: _initialized [16189,16201]
        affectation_operator: = [16202,16203]
        number_literal: 1 [16204,16205]
to
function_body [35095,35786]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [30628,30665]
    variable_declaration [30628,30642]
        type_name: uint256 [30628,30635]
        identifier: result [30636,30642]
    affectation_operator: = [30643,30644]
    binary_expression [30645,30664]
        number_literal: 1 [30645,30646]
        <<: << [30647,30649]
        parenthesized_expression [30650,30664]
            binary_expression [30651,30663]
                call_expression [30651,30658]
                    identifier: log2 [30651,30655]
                    call_argument [30656,30657]
                        identifier: a [30656,30657]
                >>: >> [30659,30661]
                number_literal: 1 [30662,30663]
to
function_body [29883,31495]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [31071,31488]
    unchecked: unchecked [31071,31080]
    expression_statement [31096,31132]
        assignment_expression [31096,31131]
            identifier: result [31096,31102]
            affectation_operator: = [31103,31104]
            binary_expression [31105,31131]
                parenthesized_expression [31105,31126]
                    binary_expression [31106,31125]
                        identifier: result [31106,31112]
                        arithmetic_operator: + [31113,31114]
                        binary_expression [31115,31125]
                            identifier: a [31115,31116]
                            arithmetic_operator: / [31117,31118]
                            identifier: result [31119,31125]
                >>: >> [31127,31129]
                number_literal: 1 [31130,31131]
    expression_statement [31146,31182]
        assignment_expression [31146,31181]
            identifier: result [31146,31152]
            affectation_operator: = [31153,31154]
            binary_expression [31155,31181]
                parenthesized_expression [31155,31176]
                    binary_expression [31156,31175]
                        identifier: result [31156,31162]
                        arithmetic_operator: + [31163,31164]
                        binary_expression [31165,31175]
                            identifier: a [31165,31166]
                            arithmetic_operator: / [31167,31168]
                            identifier: result [31169,31175]
                >>: >> [31177,31179]
                number_literal: 1 [31180,31181]
    expression_statement [31196,31232]
        assignment_expression [31196,31231]
            identifier: result [31196,31202]
            affectation_operator: = [31203,31204]
            binary_expression [31205,31231]
                parenthesized_expression [31205,31226]
                    binary_expression [31206,31225]
                        identifier: result [31206,31212]
                        arithmetic_operator: + [31213,31214]
                        binary_expression [31215,31225]
                            identifier: a [31215,31216]
                            arithmetic_operator: / [31217,31218]
                            identifier: result [31219,31225]
                >>: >> [31227,31229]
                number_literal: 1 [31230,31231]
    expression_statement [31246,31282]
        assignment_expression [31246,31281]
            identifier: result [31246,31252]
            affectation_operator: = [31253,31254]
            binary_expression [31255,31281]
                parenthesized_expression [31255,31276]
                    binary_expression [31256,31275]
                        identifier: result [31256,31262]
                        arithmetic_operator: + [31263,31264]
                        binary_expression [31265,31275]
                            identifier: a [31265,31266]
                            arithmetic_operator: / [31267,31268]
                            identifier: result [31269,31275]
                >>: >> [31277,31279]
                number_literal: 1 [31280,31281]
    expression_statement [31296,31332]
        assignment_expression [31296,31331]
            identifier: result [31296,31302]
            affectation_operator: = [31303,31304]
            binary_expression [31305,31331]
                parenthesized_expression [31305,31326]
                    binary_expression [31306,31325]
                        identifier: result [31306,31312]
                        arithmetic_operator: + [31313,31314]
                        binary_expression [31315,31325]
                            identifier: a [31315,31316]
                            arithmetic_operator: / [31317,31318]
                            identifier: result [31319,31325]
                >>: >> [31327,31329]
                number_literal: 1 [31330,31331]
    expression_statement [31346,31382]
        assignment_expression [31346,31381]
            identifier: result [31346,31352]
            affectation_operator: = [31353,31354]
            binary_expression [31355,31381]
                parenthesized_expression [31355,31376]
                    binary_expression [31356,31375]
                        identifier: result [31356,31362]
                        arithmetic_operator: + [31363,31364]
                        binary_expression [31365,31375]
                            identifier: a [31365,31366]
                            arithmetic_operator: / [31367,31368]
                            identifier: result [31369,31375]
                >>: >> [31377,31379]
                number_literal: 1 [31380,31381]
    expression_statement [31396,31432]
        assignment_expression [31396,31431]
            identifier: result [31396,31402]
            affectation_operator: = [31403,31404]
            binary_expression [31405,31431]
                parenthesized_expression [31405,31426]
                    binary_expression [31406,31425]
                        identifier: result [31406,31412]
                        arithmetic_operator: + [31413,31414]
                        binary_expression [31415,31425]
                            identifier: a [31415,31416]
                            arithmetic_operator: / [31417,31418]
                            identifier: result [31419,31425]
                >>: >> [31427,31429]
                number_literal: 1 [31430,31431]
    return_statement [31446,31477]
        return: return [31446,31452]
        call_expression [31453,31476]
            identifier: min [31453,31456]
            call_argument [31457,31463]
                identifier: result [31457,31463]
            call_argument [31465,31475]
                binary_expression [31465,31475]
                    identifier: a [31465,31466]
                    arithmetic_operator: / [31467,31468]
                    identifier: result [31469,31475]
to
function_body [29883,31495]
at 2

New cluster:
===
insert-node
---
block_statement [37047,37685]
to
function_body [45944,46596]
at 0
------------
===
insert-node
---
arithmetic_operator: + [37118,37119]
to
binary_expression [37089,37121]
at 1
===
insert-node
---
call_argument [37111,37116]
to
call_expression [37089,37117]
at 1
===
insert-node
---
variable_declaration_statement [37072,37122]
to
block_statement [37047,37685]
at 1
===
insert-node
---
binary_expression [37089,37121]
to
variable_declaration_statement [37072,37122]
at 2
===
insert-node
---
member_expression: MathUpgradeable.log10 [37089,37110]
to
call_expression [37089,37117]
at 0
===
insert-node
---
block_statement [37047,37685]
to
function_body [45944,46596]
at 0
===
insert-node
---
unchecked: unchecked [37047,37056]
to
block_statement [37047,37685]
at 0
===
insert-node
---
call_expression [37089,37117]
to
binary_expression [37089,37121]
at 0

New cluster:
===
insert-node
---
block_statement [37887,37984]
to
function_body [46780,47046]
at 0
------------
===
insert-node
---
block_statement [37887,37984]
to
function_body [46780,47046]
at 0
===
insert-node
---
unchecked: unchecked [37887,37896]
to
block_statement [37887,37984]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [41627,41644]
    call_expression [41627,41643]
        identifier: _checkRole [41627,41637]
        call_argument [41638,41642]
            identifier: role [41638,41642]
to
function_body [41616,41663]
at 0

New cluster:
MOVE from function_body [41616,41663]
------------
===
move-tree
---
expression_statement [52956,52958]
    identifier: _ [52956,52957]
to
function_body [41616,41663]
at 1

New cluster:
===
insert-node
---
variable_declaration_statement [57754,57799]
to
function_body [66497,66542]
at 0
------------
===
insert-node
---
affectation_operator: = [57777,57778]
to
variable_declaration_statement [57754,57799]
at 1
===
insert-node
---
variable_declaration_statement [57754,57799]
to
function_body [66497,66542]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [57809,57833]
    variable_declaration [57809,57832]
        type_name: bytes32[] [57809,57818]
        memory: memory [57819,57825]
        identifier: result [57826,57832]
to
function_body [66497,66542]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
assembly_statement [57889,57939]
    assembly: assembly [57889,57897]
    yul_assignment [57913,57928]
        yul_path [57913,57919]
            yul_identifier [57913,57919]
                identifier: result [57913,57919]
        :=: := [57920,57922]
        yul_path [57923,57928]
            yul_identifier [57923,57928]
                identifier: store [57923,57928]
to
function_body [66497,66542]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [57951,57965]
    return: return [57951,57957]
    identifier: result [57958,57964]
to
function_body [66497,66542]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [69133,69155]
    call_expression [69133,69154]
        identifier: _nonReentrantBefore [69133,69152]
to
function_body [69122,69205]
at 0

New cluster:
MOVE from function_body [69552,69727]
------------
===
move-tree
---
expression_statement [39203,39226]
    assignment_expression [39203,39225]
        identifier: _status [39203,39210]
        affectation_operator: = [39211,39212]
        identifier: _NOT_ENTERED [39213,39225]
to
function_body [69552,69727]
at 0
===
move-tree
---
expression_statement [39055,39057]
    identifier: _ [39055,39056]
to
function_body [69122,69205]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [69177,69198]
    call_expression [69177,69197]
        identifier: _nonReentrantAfter [69177,69195]
to
function_body [69122,69205]
at 2

New cluster:
UPDATE from recipient to to
------------
===
update-node
---
identifier: recipient [15053,15062]
replace recipient by to
===
update-node
---
identifier: recipient [16642,16651]
replace recipient by to

New cluster:
UPDATE from sender to from
------------
===
update-node
---
identifier: sender [16617,16623]
replace sender by from

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [77531,77659]
    call_expression [77531,77658]
        identifier: _callOptionalReturn [77531,77550]
        call_argument [77565,77570]
            identifier: token [77565,77570]
        call_argument [77585,77647]
            call_expression [77585,77647]
                member_expression: abi.encodeWithSelector [77585,77607]
                call_argument [77608,77630]
                    member_expression: token.approve.selector [77608,77630]
                call_argument [77632,77639]
                    identifier: spender [77632,77639]
                call_argument [77641,77646]
                    identifier: value [77641,77646]
to
function_body [77123,77666]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [113767,113795]
    variable_declaration [113767,113787]
        type_name: bytes32 [113767,113774]
        identifier: computedHash [113775,113787]
    affectation_operator: = [113788,113789]
    identifier: leaf [113790,113794]
to
function_body [113756,113960]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [113933,113953]
    return: return [113933,113939]
    identifier: computedHash [113940,113952]
to
function_body [113756,113960]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [116461,116495]
    variable_declaration [116461,116478]
        type_name: uint256 [116461,116468]
        identifier: leavesLen [116469,116478]
    affectation_operator: = [116479,116480]
    member_expression: leaves.length [116481,116494]
to
function_body [116073,118073]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [116505,116545]
    variable_declaration [116505,116524]
        type_name: uint256 [116505,116512]
        identifier: totalHashes [116513,116524]
    affectation_operator: = [116525,116526]
    member_expression: proofFlags.length [116527,116544]
to
function_body [116073,118073]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [116591,116716]
    call_expression [116591,116715]
        identifier: require [116591,116598]
        call_argument [116613,116656]
            binary_expression [116613,116656]
                binary_expression [116613,116641]
                    binary_expression [116613,116637]
                        identifier: leavesLen [116613,116622]
                        arithmetic_operator: + [116623,116624]
                        member_expression: proof.length [116625,116637]
                    arithmetic_operator: - [116638,116639]
                    number_literal: 1 [116640,116641]
                comparison_operator: == [116642,116644]
                identifier: totalHashes [116645,116656]
        call_argument [116671,116704]
            string_literal [116671,116704]
                string: "MerkleProof: invalid multiproof" [116671,116704]
to
function_body [116073,118073]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [116964,117017]
    variable_declaration [116964,116987]
        type_name: bytes32[] [116964,116973]
        memory: memory [116974,116980]
        identifier: hashes [116981,116987]
    affectation_operator: = [116988,116989]
    call_expression [116990,117016]
        new_expression [116990,117003]
            new: new [116990,116993]
            type_name: bytes32[] [116994,117003]
        call_argument [117004,117015]
            identifier: totalHashes [117004,117015]
to
function_body [116073,118073]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [117027,117047]
    variable_declaration [117027,117042]
        type_name: uint256 [117027,117034]
        identifier: leafPos [117035,117042]
    affectation_operator: = [117043,117044]
    number_literal: 0 [117045,117046]
to
function_body [116073,118073]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [117057,117077]
    variable_declaration [117057,117072]
        type_name: uint256 [117057,117064]
        identifier: hashPos [117065,117072]
    affectation_operator: = [117073,117074]
    number_literal: 0 [117075,117076]
to
function_body [116073,118073]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [117087,117108]
    variable_declaration [117087,117103]
        type_name: uint256 [117087,117094]
        identifier: proofPos [117095,117103]
    affectation_operator: = [117104,117105]
    number_literal: 0 [117106,117107]
to
function_body [116073,118073]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [117872,118066]
    if: if [117872,117874]
    binary_expression [117876,117891]
        identifier: totalHashes [117876,117887]
        comparison_operator: > [117888,117889]
        number_literal: 0 [117890,117891]
    block_statement [117893,117950]
        return_statement [117908,117939]
            return: return [117908,117914]
            array_access [117915,117938]
                identifier: hashes [117915,117921]
                binary_expression [117922,117937]
                    identifier: totalHashes [117922,117933]
                    arithmetic_operator: - [117934,117935]
                    number_literal: 1 [117936,117937]
    else: else [117951,117955]
    if_statement [117956,118066]
        if: if [117956,117958]
        binary_expression [117960,117973]
            identifier: leavesLen [117960,117969]
            comparison_operator: > [117970,117971]
            number_literal: 0 [117972,117973]
        block_statement [117975,118018]
            return_statement [117990,118007]
                return: return [117990,117996]
                array_access [117997,118006]
                    identifier: leaves [117997,118003]
                    number_literal: 0 [118004,118005]
        else: else [118019,118023]
        block_statement [118024,118066]
            return_statement [118039,118055]
                return: return [118039,118045]
                array_access [118046,118054]
                    identifier: proof [118046,118051]
                    number_literal: 0 [118052,118053]
to
function_body [116073,118073]
at 8

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [118874,118908]
    variable_declaration [118874,118891]
        type_name: uint256 [118874,118881]
        identifier: leavesLen [118882,118891]
    affectation_operator: = [118892,118893]
    member_expression: leaves.length [118894,118907]
to
function_body [118486,120486]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [118918,118958]
    variable_declaration [118918,118937]
        type_name: uint256 [118918,118925]
        identifier: totalHashes [118926,118937]
    affectation_operator: = [118938,118939]
    member_expression: proofFlags.length [118940,118957]
to
function_body [118486,120486]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [119004,119129]
    call_expression [119004,119128]
        identifier: require [119004,119011]
        call_argument [119026,119069]
            binary_expression [119026,119069]
                binary_expression [119026,119054]
                    binary_expression [119026,119050]
                        identifier: leavesLen [119026,119035]
                        arithmetic_operator: + [119036,119037]
                        member_expression: proof.length [119038,119050]
                    arithmetic_operator: - [119051,119052]
                    number_literal: 1 [119053,119054]
                comparison_operator: == [119055,119057]
                identifier: totalHashes [119058,119069]
        call_argument [119084,119117]
            string_literal [119084,119117]
                string: "MerkleProof: invalid multiproof" [119084,119117]
to
function_body [118486,120486]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [119377,119430]
    variable_declaration [119377,119400]
        type_name: bytes32[] [119377,119386]
        memory: memory [119387,119393]
        identifier: hashes [119394,119400]
    affectation_operator: = [119401,119402]
    call_expression [119403,119429]
        new_expression [119403,119416]
            new: new [119403,119406]
            type_name: bytes32[] [119407,119416]
        call_argument [119417,119428]
            identifier: totalHashes [119417,119428]
to
function_body [118486,120486]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [119440,119460]
    variable_declaration [119440,119455]
        type_name: uint256 [119440,119447]
        identifier: leafPos [119448,119455]
    affectation_operator: = [119456,119457]
    number_literal: 0 [119458,119459]
to
function_body [118486,120486]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [119470,119490]
    variable_declaration [119470,119485]
        type_name: uint256 [119470,119477]
        identifier: hashPos [119478,119485]
    affectation_operator: = [119486,119487]
    number_literal: 0 [119488,119489]
to
function_body [118486,120486]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [119500,119521]
    variable_declaration [119500,119516]
        type_name: uint256 [119500,119507]
        identifier: proofPos [119508,119516]
    affectation_operator: = [119517,119518]
    number_literal: 0 [119519,119520]
to
function_body [118486,120486]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [120285,120479]
    if: if [120285,120287]
    binary_expression [120289,120304]
        identifier: totalHashes [120289,120300]
        comparison_operator: > [120301,120302]
        number_literal: 0 [120303,120304]
    block_statement [120306,120363]
        return_statement [120321,120352]
            return: return [120321,120327]
            array_access [120328,120351]
                identifier: hashes [120328,120334]
                binary_expression [120335,120350]
                    identifier: totalHashes [120335,120346]
                    arithmetic_operator: - [120347,120348]
                    number_literal: 1 [120349,120350]
    else: else [120364,120368]
    if_statement [120369,120479]
        if: if [120369,120371]
        binary_expression [120373,120386]
            identifier: leavesLen [120373,120382]
            comparison_operator: > [120383,120384]
            number_literal: 0 [120385,120386]
        block_statement [120388,120431]
            return_statement [120403,120420]
                return: return [120403,120409]
                array_access [120410,120419]
                    identifier: leaves [120410,120416]
                    number_literal: 0 [120417,120418]
        else: else [120432,120436]
        block_statement [120437,120479]
            return_statement [120452,120468]
                return: return [120452,120458]
                array_access [120459,120467]
                    identifier: proof [120459,120464]
                    number_literal: 0 [120465,120466]
to
function_body [118486,120486]
at 8

New cluster:
MOVE from function_body [138436,138561]
------------
===
move-tree
---
expression_statement [94173,94242]
    call_expression [94173,94241]
        identifier: require [94173,94180]
        call_argument [94181,94214]
            binary_expression [94181,94214]
                identifier: _nativeTokenWrapper [94181,94200]
                comparison_operator: != [94201,94203]
                type_cast_expression [94204,94214]
                    primitive_type: address [94204,94211]
                    call_argument [94212,94213]
                        number_literal: 0 [94212,94213]
        call_argument [94216,94240]
            call_expression [94216,94240]
                identifier: throwError [94216,94226]
                call_argument [94227,94239]
                    identifier: ZERO_ADDRESS [94227,94239]
to
function_body [138436,138561]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [138504,138532]
    assignment_expression [138504,138531]
        identifier: _privilegedSigner [138504,138521]
        affectation_operator: = [138522,138523]
        identifier: _signer [138524,138531]
to
function_body [138436,138561]
at 1

New cluster:
MOVE from function_body [138436,138561]
------------
===
move-tree
---
return_statement [131549,131561]
    return: return [131549,131555]
    boolean_literal: true [131556,131560]
to
function_body [138436,138561]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [145883,145896]
    call_expression [145883,145895]
        identifier: _onlyAdmin [145883,145893]
to
function_body [145872,145915]
at 0

New cluster:
MOVE from function_body [145872,145915]
------------
===
move-tree
---
expression_statement [93920,93922]
    identifier: _ [93920,93921]
to
function_body [145872,145915]
at 1

New cluster:
===
insert-node
---
expression_statement [146876,146927]
to
function_body [94127,94578]
at 1
------------
===
insert-node
---
expression_statement [146876,146927]
to
function_body [94127,94578]
at 1

New cluster:
===
insert-node
---
expression_statement [146937,146988]
to
function_body [94127,94578]
at 2
------------
===
insert-node
---
expression_statement [146937,146988]
to
function_body [94127,94578]
at 2

New cluster:
===
insert-node
---
expression_statement [146998,147135]
to
function_body [94127,94578]
at 3
------------
===
insert-node
---
expression_statement [146998,147135]
to
function_body [94127,94578]
at 3
===
insert-node
---
call_expression [146998,147134]
to
expression_statement [146998,147135]
at 0
===
insert-node
---
identifier: require [146998,147005]
to
call_expression [146998,147134]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147145,147193]
    call_expression [147145,147192]
        identifier: _nonZeroAddress [147145,147160]
        call_argument [147161,147177]
            identifier: _initialCurrency [147161,147177]
        call_argument [147179,147191]
            identifier: ZERO_ADDRESS [147179,147191]
to
function_body [94127,94578]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147382,147423]
    assignment_expression [147382,147422]
        identifier: collectionContract [147382,147400]
        affectation_operator: = [147401,147402]
        identifier: _collectionContract [147403,147422]
to
function_body [94127,94578]
at 9

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [147969,148010]
    assignment_expression [147969,148009]
        identifier: collectionContract [147969,147987]
        affectation_operator: = [147988,147989]
        identifier: _collectionContract [147990,148009]
to
function_body [147897,148017]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
emit_statement [152896,153024]
    identifier: ListingModified [152901,152916]
    call_argument [152931,152941]
        identifier: _listingId [152931,152941]
    call_argument [152956,152975]
        member_expression: _params.buyoutPrice [152956,152975]
    call_argument [152990,153012]
        member_expression: _params.quantityToList [152990,153012]
to
function_body [97849,99507]
at 13

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [153856,153908]
    variable_declaration [153856,153884]
        type_name: Listing [153856,153863]
        memory: memory [153864,153870]
        identifier: targetListing [153871,153884]
    affectation_operator: = [153885,153886]
    array_access [153887,153907]
        identifier: listings [153887,153895]
        identifier: _listingId [153896,153906]
to
function_body [153845,154564]
at 0

New cluster:
MOVE from block_statement [186603,186837]
------------
===
move-tree
---
expression_statement [100103,100284]
    call_expression [100103,100283]
        identifier: require [100103,100110]
        call_argument [100125,100216]
            binary_expression [100125,100216]
                binary_expression [100125,100160]
                    identifier: _currency [100125,100134]
                    comparison_operator: == [100135,100137]
                    member_expression: targetListing.currency [100138,100160]
                logical_operator: && [100161,100163]
                binary_expression [100181,100216]
                    identifier: _price [100181,100187]
                    comparison_operator: == [100188,100190]
                    member_expression: targetListing.buyoutPrice [100191,100216]
        call_argument [100231,100272]
            call_expression [100231,100272]
                identifier: throwError [100231,100241]
                call_argument [100242,100271]
                    identifier: INVALID_CURRENCY_FROM_LISTING [100242,100271]
to
block_statement [186603,186837]
at 0
===
move-tree
---
expression_statement [101276,101471]
    call_expression [101276,101470]
        identifier: executeSale [101276,101287]
        call_argument [101302,101315]
            identifier: targetListing [101302,101315]
        call_argument [101330,101336]
            identifier: _buyer [101330,101336]
        call_argument [101351,101373]
            member_expression: targetListing.currency [101351,101373]
        call_argument [101388,101430]
            binary_expression [101388,101430]
                member_expression: targetListing.buyoutPrice [101388,101413]
                arithmetic_operator: * [101414,101415]
                identifier: _quantityToBuy [101416,101430]
        call_argument [101445,101459]
            identifier: _quantityToBuy [101445,101459]
to
function_body [153845,154564]
at 3
===
move-tree
---
variable_declaration_statement [99920,99972]
    variable_declaration [99920,99948]
        type_name: Listing [99920,99927]
        memory: memory [99928,99934]
        identifier: targetListing [99935,99948]
    affectation_operator: = [99949,99950]
    array_access [99951,99971]
        identifier: listings [99951,99959]
        identifier: _listingId [99960,99970]
to
function_body [185400,187843]
at 0
===
move-tree
---
expression_statement [100896,100966]
    call_expression [100896,100965]
        identifier: validateSaleParameters [100896,100918]
        call_argument [100919,100932]
            identifier: targetListing [100919,100932]
        call_argument [100934,100940]
            identifier: _proof [100934,100940]
        call_argument [100942,100948]
            identifier: _buyer [100942,100948]
        call_argument [100950,100964]
            identifier: _quantityToBuy [100950,100964]
to
function_body [153845,154564]
at 2

New cluster:
MOVE from function_body [101951,106938]
------------
===
move-tree
---
variable_declaration_statement [102286,102429]
    variable_declaration [102286,102349]
        type_name: IERC721Custom.Collection [102286,102310]
        memory: memory [102328,102334]
        identifier: collectionData [102335,102349]
    affectation_operator: = [102350,102351]
    call_expression [102352,102428]
        member_expression: erc721ContractInstance                     .getCollectionData [102352,102414]
        call_argument [102415,102427]
            identifier: collectionId [102415,102427]
to
function_body [101951,106938]
at 2
===
move-tree
---
if_statement [103443,103783]
    if: if [103443,103445]
    binary_expression [103447,103465]
        identifier: merkleRoot [103447,103457]
        comparison_operator: != [103458,103460]
        number_literal: 0x00 [103461,103465]
    block_statement [103467,103783]
        expression_statement [103486,103768]
            call_expression [103486,103767]
                identifier: require [103486,103493]
                call_argument [103516,103690]
                    call_expression [103516,103690]
                        identifier: verifyWalletWhitelist [103516,103537]
                        call_argument [103564,103569]
                            identifier: proof [103564,103569]
                        call_argument [103596,103606]
                            identifier: merkleRoot [103596,103606]
                        call_argument [103633,103667]
                            call_expression [103633,103667]
                                identifier: keccak256 [103633,103642]
                                call_argument [103643,103666]
                                    call_expression [103643,103666]
                                        member_expression: abi.encodePacked [103643,103659]
                                        call_argument [103660,103665]
                                            identifier: buyer [103660,103665]
                call_argument [103713,103748]
                    call_expression [103713,103748]
                        identifier: throwError [103713,103723]
                        call_argument [103724,103747]
                            identifier: ADDRESS_NOT_WHITELISTED [103724,103747]
to
function_body [101951,106938]
at 6
===
move-tree
---
variable_declaration_statement [102024,102136]
    variable_declaration [102024,102060]
        type_name: IERC721Custom [102024,102037]
        identifier: erc721ContractInstance [102038,102060]
    affectation_operator: = [102061,102062]
    call_expression [102063,102135]
        identifier: IERC721Custom [102063,102076]
        call_argument [102095,102120]
            member_expression: listingData.assetContract [102095,102120]
to
function_body [101951,106938]
at 0

New cluster:
MOVE from function_body [101951,106938]
------------
===
move-tree
---
if_statement [104916,105332]
    if: if [104916,104918]
    binary_expression [104938,105039]
        member_expression: collectionData.allowedPurchaseLimit != -1 &&                 collectionData.allowedPurchaseLimit [104938,105035]
        comparison_operator: > [105036,105037]
        number_literal: 0 [105038,105039]
    block_statement [105055,105332]
        expression_statement [105074,105317]
            call_expression [105074,105316]
                identifier: require [105074,105081]
                call_argument [105104,105226]
                    binary_expression [105104,105226]
                        parenthesized_expression [105104,105153]
                            binary_expression [105105,105152]
                                member_expression: collectionData.primarySoldCount [105105,105136]
                                arithmetic_operator: + [105137,105138]
                                identifier: quantityToBuy [105139,105152]
                        comparison_operator: <= [105154,105156]
                        type_cast_expression [105182,105226]
                            primitive_type: uint256 [105182,105189]
                            call_argument [105190,105225]
                                member_expression: collectionData.allowedPurchaseLimit [105190,105225]
                call_argument [105249,105297]
                    call_expression [105249,105297]
                        identifier: throwError [105249,105259]
                        call_argument [105260,105296]
                            identifier: MAX_QUANTITY_ALLOWANCE_LIMIT_REACHED [105260,105296]
to
function_body [101951,106938]
at 3
===
move-tree
---
variable_declaration_statement [105348,105374]
    variable_declaration [105348,105366]
        type_name: bytes32 [105348,105355]
        identifier: merkleRoot [105356,105366]
    affectation_operator: = [105367,105368]
    number_literal: 0x00 [105369,105373]
to
function_body [101951,106938]
at 4
===
move-tree
---
for_statement [105390,105898]
    for: for [105390,105393]
    variable_declaration_statement [105413,105427]
        variable_declaration [105413,105422]
            type_name: uint256 [105413,105420]
            identifier: i [105421,105422]
        affectation_operator: = [105423,105424]
        number_literal: 0 [105425,105426]
    expression_statement [105445,105487]
        member_expression: i < collectionData.whitelistParams.length [105445,105486]
    update_expression [105505,105508]
        identifier: i [105505,105506]
        increment_operator: ++ [105506,105508]
    block_statement [105524,105898]
        if_statement [105543,105883]
            if: if [105543,105545]
            member_expression: block.timestamp >                     collectionData.whitelistParams[i].startTime &&                     block.timestamp < collectionData.whitelistParams[i].endTime [105569,105735]
            block_statement [105755,105883]
                expression_statement [105778,105836]
                    assignment_expression [105778,105835]
                        identifier: merkleRoot [105778,105788]
                        affectation_operator: = [105789,105790]
                        member_expression: collectionData.whitelistParams[i].merkleRoot [105791,105835]
                break_statement [105858,105864]
                    break: break [105858,105863]
to
function_body [101951,106938]
at 5
===
move-tree
---
if_statement [106258,106920]
    if: if [106258,106260]
    binary_expression [106280,106379]
        call_expression [106280,106338]
            member_expression: erc1155ContractInstance.getFirstOwner [106280,106317]
            call_argument [106318,106337]
                member_expression: listingData.tokenId [106318,106337]
        comparison_operator: == [106339,106341]
        member_expression: collectionData.owner [106359,106379]
    block_statement [106395,106920]
        if_statement [106414,106905]
            if: if [106414,106416]
            binary_expression [106418,106456]
                member_expression: collectionData.userPurchaseLimit [106418,106450]
                comparison_operator: != [106451,106453]
                unary_expression [106454,106456]
                    arithmetic_operator: - [106454,106455]
                    number_literal: 1 [106455,106456]
            block_statement [106458,106905]
                expression_statement [106481,106886]
                    call_expression [106481,106885]
                        identifier: require [106481,106488]
                        call_argument [106515,106792]
                            binary_expression [106515,106792]
                                binary_expression [106515,106718]
                                    call_expression [106515,106673]
                                        member_expression: erc1155ContractInstance.getPrimarySaleUserCount [106515,106562]
                                        call_argument [106593,106603]
                                            member_expression: msg.sender [106593,106603]
                                        call_argument [106634,106646]
                                            identifier: collectionId [106634,106646]
                                    arithmetic_operator: + [106674,106675]
                                    identifier: quantityToBuy [106705,106718]
                                comparison_operator: <= [106719,106721]
                                type_cast_expression [106751,106792]
                                    primitive_type: uint256 [106751,106758]
                                    call_argument [106759,106791]
                                        member_expression: collectionData.userPurchaseLimit [106759,106791]
                        call_argument [106819,106862]
                            call_expression [106819,106862]
                                identifier: throwError [106819,106829]
                                call_argument [106830,106861]
                                    identifier: EXCEEDED_PRIMARY_PURCHASE_LIMIT [106830,106861]
to
function_body [101951,106938]
at 7
===
move-tree
---
variable_declaration_statement [104620,104739]
    variable_declaration [104620,104640]
        type_name: uint256 [104620,104627]
        identifier: collectionId [104628,104640]
    affectation_operator: = [104641,104642]
    call_expression [104643,104738]
        member_expression: erc1155ContractInstance.getNFTCollectionId [104643,104685]
        call_argument [104704,104723]
            member_expression: listingData.tokenId [104704,104723]
to
function_body [101951,106938]
at 1

New cluster:
===
insert-node
---
if_statement [157428,158427]
to
function_body [101951,106938]
at 8
------------
===
insert-node
---
parenthesized_expression [157721,157951]
to
binary_expression [157721,158249]
at 0
===
insert-node
---
binary_expression [157721,158249]
to
call_argument [157721,158249]
at 0
===
insert-node
---
if: if [157428,157430]
to
if_statement [157428,158427]
at 0
===
insert-node
---
if_statement [157428,158427]
to
function_body [101951,106938]
at 8
===
insert-node
---
block_statement [157476,158427]
to
if_statement [157428,158427]
at 2
===
insert-node
---
block_statement [157672,158416]
to
if_statement [157491,158416]
at 2
===
insert-node
---
call_expression [157691,158400]
to
expression_statement [157691,158401]
at 0
===
insert-node
---
call_argument [157721,158249]
to
call_expression [157691,158400]
at 1
===
insert-node
---
if_statement [157491,158416]
to
block_statement [157476,158427]
at 0
===
insert-node
---
comparison_operator: <= [157952,157954]
to
binary_expression [157721,158249]
at 1
===
insert-node
---
identifier: quantityToBuy [157937,157950]
to
binary_expression [157722,157950]
at 2
===
insert-node
---
arithmetic_operator: + [157935,157936]
to
binary_expression [157722,157950]
at 1
===
insert-node
---
if: if [157491,157493]
to
if_statement [157491,158416]
at 0
===
insert-node
---
identifier: require [157691,157698]
to
call_expression [157691,158400]
at 0
===
insert-node
---
binary_expression [157722,157950]
to
parenthesized_expression [157721,157951]
at 0
===
insert-node
---
expression_statement [157691,158401]
to
block_statement [157672,158416]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [159184,159294]
    call_expression [159184,159293]
        identifier: require [159184,159191]
        call_argument [159206,159235]
            binary_expression [159206,159235]
                identifier: _listingId [159206,159216]
                comparison_operator: < [159217,159218]
                identifier: listingIdTracker [159219,159235]
        call_argument [159250,159282]
            call_expression [159250,159282]
                identifier: throwError [159250,159260]
                call_argument [159261,159281]
                    identifier: LISTING_ID_NOT_FOUND [159261,159281]
to
function_body [107153,108737]
at 0

New cluster:
===
insert-node
---
variable_declaration_statement [159486,159712]
to
function_body [107153,108737]
at 3
------------
===
insert-node
---
variable_declaration_statement [159486,159712]
to
function_body [107153,108737]
at 3
===
insert-node
---
call_argument [159587,159593]
to
call_expression [159506,159711]
at 3
===
insert-node
---
type_name: bool [159486,159490]
to
variable_declaration [159486,159503]
at 0
===
insert-node
---
call_argument [159628,159642]
to
call_expression [159506,159711]
at 5
===
insert-node
---
call_expression [159506,159711]
to
variable_declaration_statement [159486,159712]
at 2
===
insert-node
---
affectation_operator: = [159504,159505]
to
variable_declaration_statement [159486,159712]
at 1
===
insert-node
---
call_argument [159538,159548]
to
call_expression [159506,159711]
at 1
===
insert-node
---
variable_declaration [159486,159503]
to
variable_declaration_statement [159486,159712]
at 0

New cluster:
MOVE from function_body [110330,113589]
------------
===
move-tree
---
variable_declaration_statement [111014,111129]
    variable_declaration [111014,111050]
        type_name: IERC721Custom [111014,111027]
        identifier: erc721ContractInstance [111028,111050]
    affectation_operator: = [111051,111052]
    call_expression [111053,111128]
        identifier: IERC721Custom [111053,111066]
        call_argument [111085,111113]
            member_expression: _targetListing.assetContract [111085,111113]
to
function_body [110330,113589]
at 5
===
move-tree
---
variable_declaration_statement [111282,111425]
    variable_declaration [111282,111345]
        type_name: IERC721Custom.Collection [111282,111306]
        memory: memory [111324,111330]
        identifier: collectionData [111331,111345]
    affectation_operator: = [111346,111347]
    call_expression [111348,111424]
        member_expression: erc721ContractInstance                     .getCollectionData [111348,111410]
        call_argument [111411,111423]
            identifier: collectionId [111411,111423]
to
function_body [110330,113589]
at 7

New cluster:
MOVE from function_body [110330,113589]
------------
===
move-tree
---
variable_declaration_statement [111923,112045]
    variable_declaration [111923,111943]
        type_name: uint256 [111923,111930]
        identifier: collectionId [111931,111943]
    affectation_operator: = [111944,111945]
    call_expression [111946,112044]
        member_expression: erc1155ContractInstance.getNFTCollectionId [111946,111988]
        call_argument [112007,112029]
            member_expression: _targetListing.tokenId [112007,112029]
to
function_body [110330,113589]
at 6
===
move-tree
---
if_statement [112222,112572]
    if: if [112222,112224]
    binary_expression [112244,112346]
        call_expression [112244,112305]
            member_expression: erc1155ContractInstance.getFirstOwner [112244,112281]
            call_argument [112282,112304]
                member_expression: _targetListing.tokenId [112282,112304]
        comparison_operator: == [112306,112308]
        member_expression: collectionData.owner [112326,112346]
    block_statement [112362,112572]
        expression_statement [112381,112557]
            call_expression [112381,112556]
                member_expression: erc1155ContractInstance.updateCollectionAfterPrimarySale [112381,112437]
                call_argument [112460,112470]
                    member_expression: msg.sender [112460,112470]
                call_argument [112493,112505]
                    identifier: collectionId [112493,112505]
                call_argument [112528,112537]
                    identifier: _quantity [112528,112537]
to
function_body [110330,113589]
at 8

New cluster:
===
insert-node
---
if_statement [161951,162251]
to
function_body [110330,113589]
at 9
------------
===
insert-node
---
if_statement [161951,162251]
to
function_body [110330,113589]
at 9
===
insert-node
---
call_expression [162017,162239]
to
expression_statement [162017,162240]
at 0
===
insert-node
---
member_expression: IERC1155Custom(_targetListing.assetContract)                 .updatePrimarySaleUserCountPerToken [162017,162114]
to
call_expression [162017,162239]
at 0
===
insert-node
---
expression_statement [162017,162240]
to
block_statement [162002,162251]
at 0
===
insert-node
---
if: if [161951,161953]
to
if_statement [161951,162251]
at 0
===
insert-node
---
block_statement [162002,162251]
to
if_statement [161951,162251]
at 2

New cluster:
===
insert-node
---
if_statement [164531,164773]
to
function_body [115489,117324]
at 2
------------
===
insert-node
---
if_statement [164531,164773]
to
function_body [115489,117324]
at 2
===
insert-node
---
block_statement [164551,164773]
to
if_statement [164531,164773]
at 2
===
insert-node
---
if: if [164531,164533]
to
if_statement [164531,164773]
at 0

New cluster:
===
insert-node
---
expression_statement [168527,168769]
to
function_body [118700,119195]
at 2
------------
===
insert-node
---
expression_statement [168527,168769]
to
function_body [118700,119195]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [175486,175527]
    call_expression [175486,175526]
        identifier: _nonZeroAddress [175486,175501]
        call_argument [175502,175511]
            identifier: _treasury [175502,175511]
        call_argument [175513,175525]
            identifier: ZERO_ADDRESS [175513,175525]
to
function_body [175475,175572]
at 0

New cluster:
MOVE from function_body [175475,175572]
------------
===
move-tree
---
expression_statement [124134,124162]
    assignment_expression [124134,124161]
        identifier: royaltyTreasury [124134,124149]
        affectation_operator: = [124150,124151]
        identifier: _treasury [124152,124161]
to
function_body [175475,175572]
at 1

New cluster:
===
insert-node
---
expression_statement [177332,177366]
to
function_body [125547,125794]
at 0
------------
===
insert-node
---
expression_statement [177332,177366]
to
function_body [125547,125794]
at 0
===
insert-node
---
call_expression [177332,177365]
to
expression_statement [177332,177366]
at 0
===
insert-node
---
identifier: _nonZeroAddress [177332,177347]
to
call_expression [177332,177365]
at 0
===
insert-node
---
call_argument [177348,177350]
to
call_expression [177332,177365]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [177942,177976]
    call_expression [177942,177975]
        identifier: _nonZeroAddress [177942,177957]
        call_argument [177958,177960]
            identifier: to [177958,177960]
        call_argument [177962,177974]
            identifier: ZERO_ADDRESS [177962,177974]
to
function_body [125877,125989]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [178048,178087]
    assignment_expression [178048,178086]
        array_access [178048,178082]
            array_access [178048,178072]
                identifier: tShares [178048,178055]
                identifier: royaltyTreasury [178056,178071]
            identifier: currency [178073,178081]
        affectation_operator: = [178083,178084]
        number_literal: 0 [178085,178086]
to
function_body [125877,125989]
at 2

New cluster:
===
insert-node
---
if_statement [178766,179952]
to
function_body [126105,126634]
at 4
------------
===
insert-node
---
if_statement [178766,179952]
to
function_body [126105,126634]
at 4
===
insert-node
---
block_statement [178804,179118]
to
if_statement [178766,179952]
at 2
===
insert-node
---
call_expression [179829,179884]
to
expression_statement [179829,179885]
at 0
===
insert-node
---
identifier: ifWithdrawn [179618,179629]
to
if_statement [179614,179770]
at 1
===
insert-node
---
if: if [178766,178768]
to
if_statement [178766,179952]
at 0
===
insert-node
---
block_statement [179810,179941]
to
if_statement [179139,179941]
at 4
===
insert-node
---
if: if [179177,179179]
to
if_statement [179177,179789]
at 0
===
insert-node
---
if: if [179614,179616]
to
if_statement [179614,179770]
at 0
===
insert-node
---
if_statement [179139,179941]
to
block_statement [179124,179952]
at 0
===
insert-node
---
if_statement [179614,179770]
to
block_statement [179373,179789]
at 1
===
insert-node
---
expression_statement [179829,179885]
to
block_statement [179810,179941]
at 0
===
insert-node
---
else: else [179119,179123]
to
if_statement [178766,179952]
at 3
===
insert-node
---
if: if [179139,179141]
to
if_statement [179139,179941]
at 0
===
insert-node
---
if_statement [179177,179789]
to
block_statement [179158,179804]
at 0
===
insert-node
---
tuple_expression [179656,179675]
to
assignment_expression [179656,179769]
at 0
===
insert-node
---
expression_statement [179656,179770]
to
if_statement [179614,179770]
at 2
===
insert-node
---
block_statement [179158,179804]
to
if_statement [179139,179941]
at 2
===
insert-node
---
member_expression: _currency.safeTransferFrom [179829,179855]
to
call_expression [179829,179884]
at 0
===
insert-node
---
assignment_expression [179656,179769]
to
expression_statement [179656,179770]
at 0
===
insert-node
---
block_statement [179124,179952]
to
if_statement [178766,179952]
at 4
===
insert-node
---
else: else [179805,179809]
to
if_statement [179139,179941]
at 3
===
insert-node
---
identifier: isNativeToken [179143,179156]
to
if_statement [179139,179941]
at 1
===
insert-node
---
block_statement [179373,179789]
to
if_statement [179177,179789]
at 2

New cluster:
MOVE from function_body [127760,128767]
------------
===
move-tree
---
expression_statement [125558,125610]
    call_expression [125558,125609]
        identifier: require [125558,125565]
        call_argument [125566,125582]
            binary_expression [125566,125582]
                identifier: to [125566,125568]
                comparison_operator: != [125569,125571]
                type_cast_expression [125572,125582]
                    primitive_type: address [125572,125579]
                    call_argument [125580,125581]
                        number_literal: 0 [125580,125581]
        call_argument [125584,125608]
            call_expression [125584,125608]
                identifier: throwError [125584,125594]
                call_argument [125595,125607]
                    identifier: ZERO_ADDRESS [125595,125607]
to
function_body [127760,128767]
at 4

New cluster:
===
insert-node
---
emit_statement [182671,182702]
to
function_body [127760,128767]
at 9
------------
===
insert-node
---
emit_statement [182671,182702]
to
function_body [127760,128767]
at 9
===
insert-node
---
identifier: ListingRemoved [182676,182690]
to
emit_statement [182671,182702]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [185473,185499]
    variable_declaration [185473,185490]
        type_name: bool [185473,185477]
        identifier: isPrivileged [185478,185490]
    affectation_operator: = [185491,185492]
    boolean_literal: false [185493,185498]
to
function_body [185400,187843]
at 1

New cluster:
MOVE from function_body [185400,187843]
------------
===
move-tree
---
expression_statement [100403,100530]
    call_expression [100403,100529]
        identifier: require [100403,100410]
        call_argument [100429,100463]
            binary_expression [100429,100463]
                identifier: _buyer [100429,100435]
                comparison_operator: != [100436,100438]
                member_expression: targetListing.tokenOwner [100439,100463]
        call_argument [100482,100514]
            call_expression [100482,100514]
                identifier: throwError [100482,100492]
                call_argument [100493,100513]
                    identifier: OWNER_BUYER_CONFLICT [100493,100513]
to
function_body [185400,187843]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [187816,187836]
    return: return [187816,187822]
    identifier: isPrivileged [187823,187835]
to
function_body [185400,187843]
at 6

New cluster:
MOVE from function_body [188343,188413]
------------
===
move-tree
---
expression_statement [118153,118205]
    call_expression [118153,118204]
        struct_expression [118153,118202]
            member_expression: IWETH(nativeTokenWrapper).deposit [118153,118186]
            struct_field_assignment [118187,118201]
                identifier: value [118187,118192]
                :: : [118192,118193]
                identifier: _amount [118194,118201]
to
function_body [188343,188413]
at 0

New cluster:
MOVE from if_statement [11815,11938]
------------
===
move-tree
---
if: if [32420,32422]
to
if_statement [11815,11938]
at 0
===
move-tree
---
identifier: success [32424,32431]
to
if_statement [11815,11938]
at 1
===
move-tree
---
else: else [32478,32482]
to
if_statement [11815,11938]
at 3
===
move-tree
---
block_statement [32433,32477]
    return_statement [32448,32466]
        return: return [32448,32454]
        identifier: returndata [32455,32465]
to
if_statement [11815,11938]
at 2

New cluster:
===
insert-node
---
identifier: _initializing [19381,19394]
to
return_statement [36182,36235]
at 1
------------
===
insert-node
---
identifier: _initializing [19381,19394]
to
return_statement [36182,36235]
at 1

New cluster:
MOVE from if_statement [29894,29941]
------------
===
move-tree
---
binary_expression [1944,1950]
    identifier: a [1944,1945]
    comparison_operator: == [1946,1948]
    number_literal: 0 [1949,1950]
to
if_statement [29894,29941]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [29906,29941]
    return_statement [29921,29930]
        return: return [29921,29927]
        number_literal: 0 [29928,29929]
to
if_statement [29894,29941]
at 2

New cluster:
MOVE from block_statement [37047,37685]
------------
===
move-tree
---
variable_declaration_statement [46353,46393]
    variable_declaration [46353,46372]
        type_name: bytes [46353,46358]
        memory: memory [46359,46365]
        identifier: buffer [46366,46372]
    affectation_operator: = [46373,46374]
    call_expression [46375,46392]
        new_expression [46375,46384]
            new: new [46375,46378]
            type_name: bytes [46379,46384]
        call_argument [46385,46391]
            identifier: digits [46385,46391]
to
block_statement [37047,37685]
at 2
===
move-tree
---
while_statement [46403,46557]
    while: while [46403,46408]
    binary_expression [46410,46420]
        identifier: value [46410,46415]
        comparison_operator: != [46416,46418]
        number_literal: 0 [46419,46420]
    block_statement [46422,46557]
        expression_statement [46437,46449]
            augmented_assignment_expression [46437,46448]
                identifier: digits [46437,46443]
                affectation_operator: -= [46444,46446]
                number_literal: 1 [46447,46448]
        expression_statement [46463,46520]
            assignment_expression [46463,46519]
                array_access [46463,46477]
                    identifier: buffer [46463,46469]
                    identifier: digits [46470,46476]
                affectation_operator: = [46478,46479]
                type_cast_expression [46480,46519]
                    primitive_type: bytes1 [46480,46486]
                    call_argument [46487,46518]
                        type_cast_expression [46487,46518]
                            primitive_type: uint8 [46487,46492]
                            call_argument [46493,46517]
                                binary_expression [46493,46517]
                                    number_literal: 48 [46493,46495]
                                    arithmetic_operator: + [46496,46497]
                                    type_cast_expression [46498,46517]
                                        primitive_type: uint256 [46498,46505]
                                        call_argument [46506,46516]
                                            binary_expression [46506,46516]
                                                identifier: value [46506,46511]
                                                %: % [46512,46513]
                                                number_literal: 10 [46514,46516]
        expression_statement [46534,46546]
            augmented_assignment_expression [46534,46545]
                identifier: value [46534,46539]
                affectation_operator: /= [46540,46542]
                number_literal: 10 [46543,46545]
to
block_statement [37047,37685]
at 5
===
move-tree
---
return_statement [46567,46589]
    return: return [46567,46573]
    type_cast_expression [46574,46588]
        primitive_type: string [46574,46580]
        call_argument [46581,46587]
            identifier: buffer [46581,46587]
to
block_statement [37047,37685]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [37192,37204]
    variable_declaration [37192,37203]
        type_name: uint256 [37192,37199]
        identifier: ptr [37200,37203]
to
block_statement [37047,37685]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
assembly_statement [37266,37344]
    assembly: assembly [37266,37274]
    yul_assignment [37294,37329]
        yul_path [37294,37297]
            yul_identifier [37294,37297]
                identifier: ptr [37294,37297]
        :=: := [37298,37300]
        yul_function_call [37301,37329]
            yul_evm_builtin [37301,37304]
                add: add [37301,37304]
            yul_path [37305,37311]
                yul_identifier [37305,37311]
                    identifier: buffer [37305,37311]
            yul_function_call [37313,37328]
                yul_evm_builtin [37313,37316]
                    add: add [37313,37316]
                yul_decimal_number: 32 [37317,37319]
                yul_path [37321,37327]
                    yul_identifier [37321,37327]
                        identifier: length [37321,37327]
to
block_statement [37047,37685]
at 4

New cluster:
MOVE from block_statement [37887,37984]
------------
===
move-tree
---
return_statement [47005,47039]
    return: return [47005,47011]
    call_expression [47012,47038]
        identifier: toHexString [47012,47023]
        call_argument [47024,47029]
            identifier: value [47024,47029]
        call_argument [47031,47037]
            identifier: length [47031,47037]
to
block_statement [37887,37984]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [57754,57776]
    type_name: bytes32[] [57754,57763]
    memory: memory [57764,57770]
    identifier: store [57771,57776]
to
variable_declaration_statement [57754,57799]
at 0

New cluster:
MOVE from variable_declaration_statement [57754,57799]
------------
===
move-tree
---
call_expression [66515,66534]
    identifier: _values [66515,66522]
    call_argument [66523,66533]
        member_expression: set._inner [66523,66533]
to
variable_declaration_statement [57754,57799]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [108319,108331]
    variable_declaration [108319,108330]
        type_name: uint256 [108319,108326]
        identifier: ptr [108327,108330]
to
block_statement [108185,108812]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
assembly_statement [108393,108471]
    assembly: assembly [108393,108401]
    yul_assignment [108421,108456]
        yul_path [108421,108424]
            yul_identifier [108421,108424]
                identifier: ptr [108421,108424]
        :=: := [108425,108427]
        yul_function_call [108428,108456]
            yul_evm_builtin [108428,108431]
                add: add [108428,108431]
            yul_path [108432,108438]
                yul_identifier [108432,108438]
                    identifier: buffer [108432,108438]
            yul_function_call [108440,108455]
                yul_evm_builtin [108440,108443]
                    add: add [108440,108443]
                yul_decimal_number: 32 [108444,108446]
                yul_path [108448,108454]
                    yul_identifier [108448,108454]
                        identifier: length [108448,108454]
to
block_statement [108185,108812]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [108787,108801]
    return: return [108787,108793]
    identifier: buffer [108794,108800]
to
block_statement [108185,108812]
at 6

New cluster:
MOVE from for_statement [91466,92069]
------------
===
move-tree
---
block_statement [91604,91828]
    expression_statement [91702,91813]
        assignment_expression [91702,91812]
            identifier: computedHash [91702,91714]
            affectation_operator: = [91715,91716]
            call_expression [91717,91812]
                identifier: keccak256 [91717,91726]
                call_argument [91749,91793]
                    call_expression [91749,91793]
                        member_expression: abi.encodePacked [91749,91765]
                        call_argument [91766,91778]
                            identifier: computedHash [91766,91778]
                        call_argument [91780,91792]
                            identifier: proofElement [91780,91792]
to
for_statement [91466,92069]
at 4

New cluster:
MOVE from for_statement [113805,113923]
------------
===
move-tree
---
variable_declaration_statement [105413,105427]
    variable_declaration [105413,105422]
        type_name: uint256 [105413,105420]
        identifier: i [105421,105422]
    affectation_operator: = [105423,105424]
    number_literal: 0 [105425,105426]
to
for_statement [113805,113923]
at 1
===
move-tree
---
update_expression [105505,105508]
    identifier: i [105505,105506]
    increment_operator: ++ [105506,105508]
to
for_statement [113805,113923]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [113825,113842]
    binary_expression [113825,113841]
        identifier: i [113825,113826]
        comparison_operator: < [113827,113828]
        member_expression: proof.length [113829,113841]
to
for_statement [113805,113923]
at 2

New cluster:
MOVE from for_statement [117488,117860]
------------
===
move-tree
---
variable_declaration_statement [130821,130835]
    variable_declaration [130821,130830]
        type_name: uint256 [130821,130828]
        identifier: i [130829,130830]
    affectation_operator: = [130831,130832]
    number_literal: 0 [130833,130834]
to
for_statement [117488,117860]
at 1
===
move-tree
---
update_expression [130915,130918]
    identifier: i [130915,130916]
    increment_operator: ++ [130916,130918]
to
for_statement [117488,117860]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [117508,117524]
    binary_expression [117508,117523]
        identifier: i [117508,117509]
        comparison_operator: < [117510,117511]
        identifier: totalHashes [117512,117523]
to
for_statement [117488,117860]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [117530,117860]
    variable_declaration_statement [117545,117651]
        variable_declaration [117545,117554]
            type_name: bytes32 [117545,117552]
            identifier: a [117553,117554]
        affectation_operator: = [117555,117556]
        array_access [117557,117650]
            ternary_expression [117557,117639]
                binary_expression [117557,117576]
                    identifier: leafPos [117557,117564]
                    comparison_operator: < [117565,117566]
                    identifier: leavesLen [117567,117576]
                ?: ? [117594,117595]
                array_access [117596,117613]
                    identifier: leaves [117596,117602]
                    update_expression [117603,117612]
                        identifier: leafPos [117603,117610]
                        increment_operator: ++ [117610,117612]
                :: : [117631,117632]
                identifier: hashes [117633,117639]
            update_expression [117640,117649]
                identifier: hashPos [117640,117647]
                increment_operator: ++ [117647,117649]
    variable_declaration_statement [117665,117807]
        variable_declaration [117665,117674]
            type_name: bytes32 [117665,117672]
            identifier: b [117673,117674]
        affectation_operator: = [117675,117676]
        array_access [117677,117806]
            ternary_expression [117677,117794]
                array_access [117677,117690]
                    identifier: proofFlags [117677,117687]
                    identifier: i [117688,117689]
                ?: ? [117708,117709]
                array_access [117710,117769]
                    ternary_expression [117710,117758]
                        binary_expression [117710,117729]
                            identifier: leafPos [117710,117717]
                            comparison_operator: < [117718,117719]
                            identifier: leavesLen [117720,117729]
                        ?: ? [117730,117731]
                        array_access [117732,117749]
                            identifier: leaves [117732,117738]
                            update_expression [117739,117748]
                                identifier: leafPos [117739,117746]
                                increment_operator: ++ [117746,117748]
                        :: : [117750,117751]
                        identifier: hashes [117752,117758]
                    update_expression [117759,117768]
                        identifier: hashPos [117759,117766]
                        increment_operator: ++ [117766,117768]
                :: : [117787,117788]
                identifier: proof [117789,117794]
            update_expression [117795,117805]
                identifier: proofPos [117795,117803]
                increment_operator: ++ [117803,117805]
    expression_statement [117821,117849]
        assignment_expression [117821,117848]
            array_access [117821,117830]
                identifier: hashes [117821,117827]
                identifier: i [117828,117829]
            affectation_operator: = [117831,117832]
            call_expression [117833,117848]
                identifier: _hashPair [117833,117842]
                call_argument [117843,117844]
                    identifier: a [117843,117844]
                call_argument [117846,117847]
                    identifier: b [117846,117847]
to
for_statement [117488,117860]
at 4

New cluster:
MOVE from for_statement [119901,120273]
------------
===
move-tree
---
variable_declaration_statement [129584,129598]
    variable_declaration [129584,129593]
        type_name: uint256 [129584,129591]
        identifier: i [129592,129593]
    affectation_operator: = [129594,129595]
    number_literal: 0 [129596,129597]
to
for_statement [119901,120273]
at 1
===
move-tree
---
update_expression [129617,129620]
    identifier: i [129617,129618]
    increment_operator: ++ [129618,129620]
to
for_statement [119901,120273]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [119921,119937]
    binary_expression [119921,119936]
        identifier: i [119921,119922]
        comparison_operator: < [119923,119924]
        identifier: totalHashes [119925,119936]
to
for_statement [119901,120273]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [119943,120273]
    variable_declaration_statement [119958,120064]
        variable_declaration [119958,119967]
            type_name: bytes32 [119958,119965]
            identifier: a [119966,119967]
        affectation_operator: = [119968,119969]
        array_access [119970,120063]
            ternary_expression [119970,120052]
                binary_expression [119970,119989]
                    identifier: leafPos [119970,119977]
                    comparison_operator: < [119978,119979]
                    identifier: leavesLen [119980,119989]
                ?: ? [120007,120008]
                array_access [120009,120026]
                    identifier: leaves [120009,120015]
                    update_expression [120016,120025]
                        identifier: leafPos [120016,120023]
                        increment_operator: ++ [120023,120025]
                :: : [120044,120045]
                identifier: hashes [120046,120052]
            update_expression [120053,120062]
                identifier: hashPos [120053,120060]
                increment_operator: ++ [120060,120062]
    variable_declaration_statement [120078,120220]
        variable_declaration [120078,120087]
            type_name: bytes32 [120078,120085]
            identifier: b [120086,120087]
        affectation_operator: = [120088,120089]
        array_access [120090,120219]
            ternary_expression [120090,120207]
                array_access [120090,120103]
                    identifier: proofFlags [120090,120100]
                    identifier: i [120101,120102]
                ?: ? [120121,120122]
                array_access [120123,120182]
                    ternary_expression [120123,120171]
                        binary_expression [120123,120142]
                            identifier: leafPos [120123,120130]
                            comparison_operator: < [120131,120132]
                            identifier: leavesLen [120133,120142]
                        ?: ? [120143,120144]
                        array_access [120145,120162]
                            identifier: leaves [120145,120151]
                            update_expression [120152,120161]
                                identifier: leafPos [120152,120159]
                                increment_operator: ++ [120159,120161]
                        :: : [120163,120164]
                        identifier: hashes [120165,120171]
                    update_expression [120172,120181]
                        identifier: hashPos [120172,120179]
                        increment_operator: ++ [120179,120181]
                :: : [120200,120201]
                identifier: proof [120202,120207]
            update_expression [120208,120218]
                identifier: proofPos [120208,120216]
                increment_operator: ++ [120216,120218]
    expression_statement [120234,120262]
        assignment_expression [120234,120261]
            array_access [120234,120243]
                identifier: hashes [120234,120240]
                identifier: i [120241,120242]
            affectation_operator: = [120244,120245]
            call_expression [120246,120261]
                identifier: _hashPair [120246,120255]
                call_argument [120256,120257]
                    identifier: a [120256,120257]
                call_argument [120259,120260]
                    identifier: b [120259,120260]
to
for_statement [119901,120273]
at 4

New cluster:
MOVE from expression_statement [146876,146927]
------------
===
move-tree
---
call_expression [94216,94240]
    identifier: throwError [94216,94226]
    call_argument [94227,94239]
        identifier: ZERO_ADDRESS [94227,94239]
to
expression_statement [146876,146927]
at 0

New cluster:
MOVE from expression_statement [146937,146988]
------------
===
move-tree
---
call_expression [124098,124122]
    identifier: throwError [124098,124108]
    call_argument [124109,124121]
        identifier: ZERO_ADDRESS [124109,124121]
to
expression_statement [146937,146988]
at 0

New cluster:
MOVE from expression_statement [147908,147959]
------------
===
move-tree
---
call_expression [125584,125608]
    identifier: throwError [125584,125594]
    call_argument [125595,125607]
        identifier: ZERO_ADDRESS [125595,125607]
to
expression_statement [147908,147959]
at 0

New cluster:
===
insert-node
---
else: else [149325,149329]
to
if_statement [95608,95774]
at 3
------------
===
insert-node
---
else: else [149325,149329]
to
if_statement [95608,95774]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [149330,149428]
    if: if [149330,149332]
    binary_expression [149334,149368]
        identifier: listTokenType [149334,149347]
        comparison_operator: == [149348,149350]
        member_expression: TokenType.ERC1155 [149351,149368]
    block_statement [149370,149428]
        expression_statement [149385,149417]
            assignment_expression [149385,149416]
                identifier: tokenOwner [149385,149395]
                affectation_operator: = [149396,149397]
                member_expression: _params.tokenOwner [149398,149416]
to
if_statement [95608,95774]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [154033,154050]
    type_name: bool [154033,154037]
    identifier: isPrivileged [154038,154050]
to
variable_declaration_statement [154033,154260]
at 0

New cluster:
===
insert-node
---
ternary_expression [155192,155468]
to
variable_declaration_statement [104620,104739]
at 2
------------
===
insert-node
---
?: ? [155247,155248]
to
ternary_expression [155192,155468]
at 1
===
insert-node
---
ternary_expression [155192,155468]
to
variable_declaration_statement [104620,104739]
at 2
===
insert-node
---
:: : [155364,155365]
to
ternary_expression [155192,155468]
at 3

New cluster:
MOVE from for_statement [105390,105898]
------------
===
move-tree
---
update_expression [103034,103037]
    identifier: i [103034,103035]
    increment_operator: ++ [103035,103037]
to
for_statement [105390,105898]
at 3
===
move-tree
---
variable_declaration_statement [102942,102956]
    variable_declaration [102942,102951]
        type_name: uint256 [102942,102949]
        identifier: i [102950,102951]
    affectation_operator: = [102952,102953]
    number_literal: 0 [102954,102955]
to
for_statement [105390,105898]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [157432,157474]
    member_expression: listingData.tokenType [157432,157453]
    comparison_operator: == [157454,157456]
    member_expression: TokenType.ERC1155 [157457,157474]
to
if_statement [157428,158427]
at 1

New cluster:
===
insert-node
---
ternary_expression [161167,161452]
to
variable_declaration_statement [111923,112045]
at 2
------------
===
insert-node
---
?: ? [161225,161226]
to
ternary_expression [161167,161452]
at 1
===
insert-node
---
ternary_expression [161167,161452]
to
variable_declaration_statement [111923,112045]
at 2
===
insert-node
---
:: : [161345,161346]
to
ternary_expression [161167,161452]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [161955,162000]
    member_expression: _targetListing.tokenType [161955,161979]
    comparison_operator: == [161980,161982]
    member_expression: TokenType.ERC1155 [161983,162000]
to
if_statement [161951,162251]
at 1

New cluster:
===
insert-node
---
call_expression [163941,163971]
to
if_statement [114756,114961]
at 1
------------
===
insert-node
---
call_argument [163954,163970]
to
call_expression [163941,163971]
at 1
===
insert-node
---
identifier: _checkIfZero [163941,163953]
to
call_expression [163941,163971]
at 0
===
insert-node
---
call_expression [163941,163971]
to
if_statement [114756,114961]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
unary_expression [164535,164549]
    !: ! [164535,164536]
    identifier: _isDiscounted [164536,164549]
to
if_statement [164531,164773]
at 1

New cluster:
===
insert-node
---
call_expression [166818,166839]
to
if_statement [117537,117588]
at 1
------------
===
insert-node
---
call_expression [166818,166839]
to
if_statement [117537,117588]
at 1
===
insert-node
---
call_argument [166831,166838]
to
call_expression [166818,166839]
at 1
===
insert-node
---
identifier: _checkIfZero [166818,166830]
to
call_expression [166818,166839]
at 0

New cluster:
MOVE from expression_statement [168527,168769]
------------
===
move-tree
---
call_expression [118850,118995]
    member_expression: _from == address(this)             ? IERC20(_currency).transfer(_to, _amount)             : IERC20(_currency).transferFrom [118850,118974]
    call_argument [118975,118980]
        identifier: _from [118975,118980]
    call_argument [118982,118985]
        identifier: _to [118982,118985]
    call_argument [118987,118994]
        identifier: _amount [118987,118994]
to
expression_statement [168527,168769]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [178770,178802]
    identifier: royaltyTreasury [178770,178785]
    comparison_operator: == [178786,178788]
    type_cast_expression [178789,178802]
        primitive_type: address [178789,178796]
        call_argument [178797,178801]
            identifier: this [178797,178801]
to
if_statement [178766,179952]
at 1

New cluster:
MOVE from emit_statement [182671,182702]
------------
===
move-tree
---
call_argument [128466,128475]
    identifier: listingId [128466,128475]
to
emit_statement [182671,182702]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [183056,183066]
    variable_declaration [183056,183065]
        type_name: uint256 [183056,183063]
        identifier: i [183064,183065]
to
for_statement [129579,129873]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
update_expression [183085,183088]
    increment_operator: ++ [183085,183087]
    identifier: i [183087,183088]
to
for_statement [129579,129873]
at 3

New cluster:
===
insert-node
---
call_expression [184056,184082]
to
if_statement [130584,130759]
at 1
------------
===
insert-node
---
identifier: _checkIfZero [184056,184068]
to
call_expression [184056,184082]
at 0
===
insert-node
---
call_argument [184069,184081]
to
call_expression [184056,184082]
at 1
===
insert-node
---
call_expression [184056,184082]
to
if_statement [130584,130759]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [184307,184317]
    variable_declaration [184307,184316]
        type_name: uint256 [184307,184314]
        identifier: i [184315,184316]
to
for_statement [130802,131314]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
update_expression [184397,184400]
    increment_operator: ++ [184397,184399]
    identifier: i [184399,184400]
to
for_statement [130802,131314]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [185563,185583]
    member_expression: signature.length [185563,185579]
    comparison_operator: > [185580,185581]
    number_literal: 0 [185582,185583]
to
if_statement [185559,186146]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
block_statement [186259,186597]
    expression_statement [186274,186586]
        call_expression [186274,186585]
            identifier: require [186274,186281]
            call_argument [186300,186499]
                binary_expression [186300,186499]
                    member_expression: _currency == targetListing.currency &&                     _price >=                     targetListing.buyoutPrice [186300,186416]
                    arithmetic_operator: - [186417,186418]
                    parenthesized_expression [186444,186499]
                        binary_expression [186445,186498]
                            parenthesized_expression [186445,186488]
                                binary_expression [186446,186487]
                                    member_expression: targetListing.buyoutPrice [186446,186471]
                                    arithmetic_operator: * [186472,186473]
                                    identifier: primaryFeeBps [186474,186487]
                            arithmetic_operator: / [186489,186490]
                            identifier: MAX_BPS [186491,186498]
            call_argument [186518,186570]
                call_expression [186518,186570]
                    identifier: throwError [186518,186528]
                    call_argument [186529,186569]
                        identifier: CURRENCY_OR_PRICE_DOES_NOT_MATCH_LISTING [186529,186569]
to
if_statement [186241,186837]
at 2

New cluster:
MOVE from if_statement [186972,187806]
------------
===
move-tree
---
block_statement [100352,100884]
    expression_statement [100403,100530]
        call_expression [100403,100529]
            identifier: require [100403,100410]
            call_argument [100429,100463]
                binary_expression [100429,100463]
                    identifier: _buyer [100429,100435]
                    comparison_operator: != [100436,100438]
                    member_expression: targetListing.tokenOwner [100439,100463]
            call_argument [100482,100514]
                call_expression [100482,100514]
                    identifier: throwError [100482,100492]
                    call_argument [100493,100513]
                        identifier: OWNER_BUYER_CONFLICT [100493,100513]
    expression_statement [100617,100873]
        call_expression [100617,100872]
            identifier: require [100617,100624]
            call_argument [100643,100807]
                call_expression [100643,100807]
                    member_expression: targetListing.tokenOwner ==                     IERC721(targetListing.assetContract).ownerOf [100643,100736]
                    call_argument [100763,100784]
                        member_expression: targetListing.tokenId [100763,100784]
            call_argument [100826,100857]
                call_expression [100826,100857]
                    identifier: throwError [100826,100836]
                    call_argument [100837,100856]
                        identifier: INVALID_TOKEN_OWNER [100837,100856]
to
if_statement [186972,187806]
at 2
===
move-tree
---
binary_expression [100300,100350]
    member_expression: listings[_listingId].tokenType [100300,100330]
    comparison_operator: == [100331,100333]
    member_expression: TokenType.ERC721 [100334,100350]
to
if_statement [186972,187806]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
if_statement [187386,187806]
    if: if [187386,187388]
    binary_expression [187390,187434]
        member_expression: targetListing.tokenType [187390,187413]
        comparison_operator: == [187414,187416]
        member_expression: TokenType.ERC1155 [187417,187434]
    block_statement [187436,187806]
        expression_statement [187521,187795]
            call_expression [187521,187794]
                identifier: require [187521,187528]
                call_argument [187547,187729]
                    binary_expression [187547,187729]
                        call_expression [187547,187711]
                            member_expression: IERC1155(targetListing.assetContract).balanceOf [187547,187594]
                            call_argument [187617,187641]
                                member_expression: targetListing.tokenOwner [187617,187641]
                            call_argument [187664,187692]
                                member_expression: listings[_listingId].tokenId [187664,187692]
                        comparison_operator: >= [187712,187714]
                        identifier: _quantityToBuy [187715,187729]
                call_argument [187748,187779]
                    call_expression [187748,187779]
                        identifier: throwError [187748,187758]
                        call_argument [187759,187778]
                            identifier: INVALID_TOKEN_OWNER [187759,187778]
to
if_statement [186972,187806]
at 4

New cluster:
UPDATE from functionCall to functionCallWithValue
------------
===
update-node
---
identifier: functionCall [28850,28862]
replace functionCall by functionCallWithValue

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [7222,7223]
    number_literal: 0 [7222,7223]
to
call_expression [28850,28910]
at 3

New cluster:
UPDATE from verifyCallResult to verifyCallResultFromTarget
------------
===
update-node
---
identifier: verifyCallResult [31958,31974]
replace verifyCallResult by verifyCallResultFromTarget
===
update-node
---
identifier: verifyCallResult [30876,30892]
replace verifyCallResult by verifyCallResultFromTarget

New cluster:
MOVE from call_expression [30876,30927]
------------
===
move-tree
---
call_argument [31814,31820]
    identifier: target [31814,31820]
to
call_expression [30876,30927]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [10356,10362]
    identifier: target [10356,10362]
to
call_expression [31958,32009]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
return_statement [11309,11327]
    return: return [11309,11315]
    identifier: returndata [11316,11326]
to
block_statement [10990,11338]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
emit_statement [16376,16396]
    identifier: Initialized [16381,16392]
    call_argument [16393,16394]
        number_literal: 1 [16393,16394]
to
block_statement [35731,35779]
at 1

New cluster:
MOVE from variable_declaration_statement [37072,37122]
------------
===
move-tree
---
variable_declaration [46888,46902]
    type_name: uint256 [46888,46895]
    identifier: length [46896,46902]
to
variable_declaration_statement [37072,37122]
at 0

New cluster:
MOVE from call_argument [37111,37116]
------------
===
move-tree
---
identifier: value [46224,46229]
to
call_argument [37111,37116]
at 0
===
move-tree
---
affectation_operator: = [46222,46223]
to
variable_declaration_statement [37072,37122]
at 1

New cluster:
===
insert-node
---
boolean_literal: true [37365,37369]
to
while_statement [46403,46557]
at 1
------------
===
insert-node
---
boolean_literal: true [37365,37369]
to
while_statement [46403,46557]
at 1

New cluster:
MOVE from return_statement [46567,46589]
------------
===
move-tree
---
identifier: buffer [46581,46587]
to
return_statement [46567,46589]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [77453,77509]
    string_literal [77453,77509]
        string: "SafeERC20: approve from non-zero to non-zero allowance" [77453,77509]
to
call_expression [77354,77520]
at 2

New cluster:
MOVE from variable_declaration_statement [108210,108249]
------------
===
move-tree
---
variable_declaration [85155,85169]
    type_name: uint256 [85155,85162]
    identifier: length [85163,85169]
to
variable_declaration_statement [108210,108249]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [108227,108248]
    call_expression [108227,108244]
        member_expression: Math.log10 [108227,108237]
        call_argument [108238,108243]
            identifier: value [108238,108243]
    arithmetic_operator: + [108245,108246]
    number_literal: 1 [108247,108248]
to
variable_declaration_statement [108210,108249]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration [108263,108283]
    type_name: string [108263,108269]
    memory: memory [108270,108276]
    identifier: buffer [108277,108283]
to
variable_declaration_statement [108263,108305]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [138478,138492]
    string_literal [138478,138492]
        string: "ZERO_ADDRESS" [138478,138492]
to
call_expression [94173,94241]
at 2

New cluster:
===
insert-node
---
identifier: _nonZeroAddress [146876,146891]
to
call_expression [94216,94240]
at 0
------------
===
insert-node
---
identifier: _nonZeroAddress [146876,146891]
to
call_expression [94216,94240]
at 0

New cluster:
===
insert-node
---
call_argument [146892,146911]
to
call_expression [94216,94240]
at 1
------------
===
insert-node
---
call_argument [146892,146911]
to
call_expression [94216,94240]
at 1

New cluster:
UPDATE from throwError to _nonZeroAddress
------------
===
update-node
---
identifier: throwError [125584,125594]
replace throwError by _nonZeroAddress
===
update-node
---
identifier: throwError [124098,124108]
replace throwError by _nonZeroAddress

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [146953,146972]
    identifier: _collectionContract [146953,146972]
to
call_expression [124098,124122]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [147020,147079]
    binary_expression [147020,147079]
        binary_expression [147020,147051]
            identifier: _primaryMarketFeeBps [147020,147040]
            comparison_operator: <= [147041,147043]
            identifier: MAX_BPS [147044,147051]
        logical_operator: && [147052,147054]
        binary_expression [147055,147079]
            identifier: _marketFeeBps [147055,147068]
            comparison_operator: <= [147069,147071]
            identifier: MAX_BPS [147072,147079]
to
call_expression [146998,147134]
at 1

New cluster:
MOVE from call_expression [146998,147134]
------------
===
move-tree
---
call_argument [94216,94240]
    call_expression [94216,94240]
        identifier: throwError [94216,94226]
        call_argument [94227,94239]
            identifier: ZERO_ADDRESS [94227,94239]
to
call_expression [146998,147134]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [147924,147943]
    identifier: _collectionContract [147924,147943]
to
call_expression [125584,125608]
at 1

New cluster:
===
insert-node
---
call_argument [148694,148720]
to
call_expression [95038,95106]
at 1
------------
===
insert-node
---
call_argument [148694,148720]
to
call_expression [95038,95106]
at 1
===
insert-node
---
identifier: _checkIfZero [148694,148706]
to
call_expression [148694,148720]
at 0
===
insert-node
---
call_expression [148694,148720]
to
call_argument [148694,148720]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154085,154095]
    identifier: _listingId [154085,154095]
to
call_expression [154053,154259]
at 1

New cluster:
MOVE from call_expression [154053,154259]
------------
===
move-tree
---
call_argument [126206,126215]
    identifier: _currency [126206,126215]
to
call_expression [154053,154259]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154134,154140]
    identifier: _price [154134,154140]
to
call_expression [154053,154259]
at 3

New cluster:
MOVE from call_expression [154053,154259]
------------
===
move-tree
---
call_argument [110410,110416]
    identifier: _buyer [110410,110416]
to
call_expression [154053,154259]
at 4

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154176,154190]
    identifier: _quantityToBuy [154176,154190]
to
call_expression [154053,154259]
at 5

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154205,154224]
    identifier: _signatureTimestamp [154205,154224]
to
call_expression [154053,154259]
at 6

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154239,154248]
    identifier: signature [154239,154248]
to
call_expression [154053,154259]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [154533,154545]
    identifier: isPrivileged [154533,154545]
to
call_expression [101276,101470]
at 6

New cluster:
UPDATE from IERC721Custom to ICollection
------------
===
update-node
---
identifier: IERC721Custom [111053,111066]
replace IERC721Custom by ICollection
===
update-node
---
type_name: IERC721Custom [111014,111027]
replace IERC721Custom by ICollection
===
update-node
---
type_name: IERC721Custom [102024,102037]
replace IERC721Custom by ICollection
===
update-node
---
identifier: IERC721Custom [102063,102076]
replace IERC721Custom by ICollection

New cluster:
UPDATE from erc721ContractInstance to collectionContractInstance
------------
===
update-node
---
identifier: erc721ContractInstance [111028,111050]
replace erc721ContractInstance by collectionContractInstance
===
update-node
---
identifier: erc721ContractInstance [102038,102060]
replace erc721ContractInstance by collectionContractInstance

New cluster:
MOVE from ternary_expression [155192,155468]
------------
===
move-tree
---
binary_expression [101966,102007]
    member_expression: listingData.tokenType [101966,101987]
    comparison_operator: == [101988,101990]
    member_expression: TokenType.ERC721 [101991,102007]
to
ternary_expression [155192,155468]
at 0

New cluster:
MOVE from ternary_expression [155192,155468]
------------
===
move-tree
---
call_expression [102175,102269]
    member_expression: erc721ContractInstance.getNFTCollectionId [102175,102216]
    call_argument [102235,102254]
        member_expression: listingData.tokenId [102235,102254]
to
ternary_expression [155192,155468]
at 2

New cluster:
MOVE from ternary_expression [155192,155468]
------------
===
move-tree
---
call_expression [104643,104738]
    member_expression: erc1155ContractInstance.getNFTCollectionId [104643,104685]
    call_argument [104704,104723]
        member_expression: listingData.tokenId [104704,104723]
to
ternary_expression [155192,155468]
at 4

New cluster:
UPDATE from IERC721Custom.Collection to ICollection.Collection
------------
===
update-node
---
type_name: IERC721Custom.Collection [111282,111306]
replace IERC721Custom.Collection by ICollection.Collection
===
update-node
---
type_name: IERC721Custom.Collection [102286,102310]
replace IERC721Custom.Collection by ICollection.Collection

New cluster:
UPDATE from erc721ContractInstance                     .getCollectionData to collectionContractInstance                 .getCollectionData
------------
===
update-node
---
member_expression: erc721ContractInstance                     .getCollectionData [111348,111410]
replace erc721ContractInstance                     .getCollectionData by collectionContractInstance                 .getCollectionData
===
update-node
---
member_expression: erc721ContractInstance                     .getCollectionData [102352,102414]
replace erc721ContractInstance                     .getCollectionData by collectionContractInstance                 .getCollectionData

New cluster:
MOVE from call_expression [102352,102428]
------------
===
move-tree
---
call_argument [112192,112204]
    identifier: collectionId [112192,112204]
to
call_expression [102352,102428]
at 1

New cluster:
UPDATE from collectionData.allowedPurchaseLimit != -1 &&                 collectionData.allowedPurchaseLimit to collectionData.allowedPurchaseLimit != -1 &&             collectionData.allowedPurchaseLimit
------------
===
update-node
---
member_expression: collectionData.allowedPurchaseLimit != -1 &&                 collectionData.allowedPurchaseLimit [104938,105035]
replace collectionData.allowedPurchaseLimit != -1 &&                 collectionData.allowedPurchaseLimit by collectionData.allowedPurchaseLimit != -1 &&             collectionData.allowedPurchaseLimit

New cluster:
===
insert-node
---
increment_operator: ++ [156119,156121]
to
update_expression [103034,103037]
at 0
------------
===
insert-node
---
increment_operator: ++ [156119,156121]
to
update_expression [103034,103037]
at 0

New cluster:
UPDATE from require to isPrivileged
------------
===
update-node
---
identifier: require [107350,107357]
replace require by isPrivileged

New cluster:
MOVE from variable_declaration [159486,159503]
------------
===
move-tree
---
identifier: require [107350,107357]
to
variable_declaration [159486,159503]
at 1

New cluster:
UPDATE from _currency to validateBuyParams
------------
===
update-node
---
identifier: _currency [107372,107381]
replace _currency by validateBuyParams

New cluster:
MOVE from call_expression [159506,159711]
------------
===
move-tree
---
identifier: _currency [107372,107381]
to
call_expression [159506,159711]
at 0

New cluster:
MOVE from call_expression [159506,159711]
------------
===
move-tree
---
call_argument [107489,107518]
    identifier: INVALID_CURRENCY_FROM_LISTING [107489,107518]
to
call_expression [159506,159711]
at 2

New cluster:
MOVE from call_expression [159506,159711]
------------
===
move-tree
---
call_argument [103660,103665]
    identifier: buyer [103660,103665]
to
call_expression [159506,159711]
at 4

New cluster:
MOVE from call_argument [159628,159642]
------------
===
move-tree
---
identifier: throwError [107728,107738]
to
call_argument [159628,159642]
at 0
===
move-tree
---
call_argument [107739,107759]
    identifier: OWNER_BUYER_CONFLICT [107739,107759]
to
call_expression [159506,159711]
at 6

New cluster:
MOVE from call_expression [159506,159711]
------------
===
move-tree
---
call_argument [108083,108119]
    identifier: ASSET_INSUFFICIENT_ALLOWANCE_BALANCE [108083,108119]
to
call_expression [159506,159711]
at 7

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [159982,159994]
    identifier: isPrivileged [159982,159994]
to
call_expression [108536,108729]
at 6

New cluster:
UPDATE from _targetListing.listingId to listings[_targetListing.listingId].quantity
------------
===
update-node
---
member_expression: _targetListing.listingId [110560,110584]
replace _targetListing.listingId by listings[_targetListing.listingId].quantity

New cluster:
MOVE from assignment_expression [110551,110602]
------------
===
move-tree
---
member_expression: _targetListing.listingId [110560,110584]
to
assignment_expression [110551,110602]
at 0

New cluster:
===
insert-node
---
member_expression: _targetListing.quantity [160629,160652]
to
assignment_expression [110551,110602]
at 3
------------
===
insert-node
---
member_expression: _targetListing.quantity [160629,160652]
to
assignment_expression [110551,110602]
at 3

New cluster:
MOVE from ternary_expression [161167,161452]
------------
===
move-tree
---
binary_expression [110953,110997]
    member_expression: _targetListing.tokenType [110953,110977]
    comparison_operator: == [110978,110980]
    member_expression: TokenType.ERC721 [110981,110997]
to
ternary_expression [161167,161452]
at 0

New cluster:
MOVE from ternary_expression [161167,161452]
------------
===
move-tree
---
call_expression [111946,112044]
    member_expression: erc1155ContractInstance.getNFTCollectionId [111946,111988]
    call_argument [112007,112029]
        member_expression: _targetListing.tokenId [112007,112029]
to
ternary_expression [161167,161452]
at 2

New cluster:
MOVE from ternary_expression [161167,161452]
------------
===
move-tree
---
call_expression [111463,111523]
    member_expression: erc721ContractInstance.getFirstOwner [111463,111499]
    call_argument [111500,111522]
        member_expression: _targetListing.tokenId [111500,111522]
to
ternary_expression [161167,161452]
at 4

New cluster:
MOVE from block_statement [164551,164773]
------------
===
move-tree
---
if_statement [115597,115785]
    if: if [115597,115599]
    binary_expression [115601,115638]
        member_expression: _listing.saleType [115601,115618]
        comparison_operator: == [115619,115621]
        member_expression: SaleType.Primary [115622,115638]
    expression_statement [115653,115712]
        assignment_expression [115653,115711]
            identifier: marketCut [115653,115662]
            affectation_operator: = [115663,115664]
            binary_expression [115665,115711]
                parenthesized_expression [115665,115701]
                    binary_expression [115666,115700]
                        identifier: _totalPayoutAmount [115666,115684]
                        arithmetic_operator: * [115685,115686]
                        identifier: primaryFeeBps [115687,115700]
                arithmetic_operator: / [115702,115703]
                identifier: MAX_BPS [115704,115711]
    else: else [115722,115726]
    expression_statement [115727,115785]
        assignment_expression [115727,115784]
            identifier: marketCut [115727,115736]
            affectation_operator: = [115737,115738]
            binary_expression [115739,115784]
                parenthesized_expression [115739,115774]
                    binary_expression [115740,115773]
                        identifier: _totalPayoutAmount [115740,115758]
                        arithmetic_operator: * [115759,115760]
                        identifier: marketFeeBps [115761,115773]
                arithmetic_operator: / [115775,115776]
                identifier: MAX_BPS [115777,115784]
to
block_statement [164551,164773]
at 0

New cluster:
UPDATE from IERC20(_currency).balanceOf to IERC20Upgradeable(_currency).balanceOf
------------
===
update-node
---
member_expression: IERC20(_currency).balanceOf [118792,118819]
replace IERC20(_currency).balanceOf by IERC20Upgradeable(_currency).balanceOf
===
update-node
---
member_expression: IERC20(_currency).balanceOf [119025,119052]
replace IERC20(_currency).balanceOf by IERC20Upgradeable(_currency).balanceOf

New cluster:
UPDATE from _from == address(this)             ? IERC20(_currency).transfer(_to, _amount)             : IERC20(_currency).transferFrom to _from == address(this)             ? IERC20Upgradeable(_currency).safeTransfer(_to, _amount)             : IERC20Upgradeable(_currency).safeTransferFrom
------------
===
update-node
---
member_expression: _from == address(this)             ? IERC20(_currency).transfer(_to, _amount)             : IERC20(_currency).transferFrom [118850,118974]
replace _from == address(this)             ? IERC20(_currency).transfer(_to, _amount)             : IERC20(_currency).transferFrom by _from == address(this)             ? IERC20Upgradeable(_currency).safeTransfer(_to, _amount)             : IERC20Upgradeable(_currency).safeTransferFrom

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [177352,177364]
    identifier: ZERO_ADDRESS [177352,177364]
to
call_expression [177332,177365]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [178649,178657]
    identifier: currency [178649,178657]
to
call_expression [126183,126217]
at 1

New cluster:
MOVE from block_statement [178804,179118]
------------
===
move-tree
---
if_statement [126327,126511]
    if: if [126327,126329]
    identifier: isNativeToken [126331,126344]
    block_statement [126346,126430]
        expression_statement [126361,126419]
            assignment_expression [126361,126418]
                tuple_expression [126361,126380]
                    identifier: transferSuccess [126362,126377]
                affectation_operator: = [126381,126382]
                call_expression [126383,126418]
                    struct_expression [126383,126414]
                        member_expression: payable(to).call [126383,126399]
                        struct_field_assignment [126400,126413]
                            identifier: value [126400,126405]
                            :: : [126405,126406]
                            identifier: amount [126407,126413]
                    call_argument [126415,126417]
                        string_literal [126415,126417]
                            string: "" [126415,126417]
    else: else [126431,126435]
    block_statement [126436,126511]
        expression_statement [126451,126500]
            assignment_expression [126451,126499]
                identifier: transferSuccess [126451,126466]
                affectation_operator: = [126467,126468]
                call_expression [126469,126499]
                    member_expression: _currency.transfer [126469,126487]
                    call_argument [126488,126490]
                        identifier: to [126488,126490]
                    call_argument [126492,126498]
                        identifier: amount [126492,126498]
to
block_statement [178804,179118]
at 0

New cluster:
MOVE from call_expression [125558,125609]
------------
===
move-tree
---
call_argument [129276,129308]
    call_expression [129276,129308]
        identifier: throwError [129276,129286]
        call_argument [129287,129307]
            identifier: LISTING_ID_NOT_FOUND [129287,129307]
to
call_expression [125558,125609]
at 2

New cluster:
===
insert-node
---
call_expression [184125,184150]
to
if_statement [130644,130759]
at 1
------------
===
insert-node
---
call_argument [184138,184149]
to
call_expression [184125,184150]
at 1
===
insert-node
---
call_expression [184125,184150]
to
if_statement [130644,130759]
at 1
===
insert-node
---
identifier: _checkIfZero [184125,184137]
to
call_expression [184125,184150]
at 0

New cluster:
MOVE from block_statement [130930,131314]
------------
===
move-tree
---
expression_statement [131129,131173]
    assignment_expression [131129,131172]
        array_access [131129,131155]
            identifier: activeListings [131129,131143]
            identifier: validIndex [131144,131154]
        affectation_operator: = [131156,131157]
        identifier: currentListing [131158,131172]
to
block_statement [130930,131314]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [185600,185764]
    call_expression [185600,185763]
        identifier: require [185600,185607]
        call_argument [185626,185677]
            binary_expression [185626,185677]
                member_expression: block.timestamp [185626,185641]
                comparison_operator: <= [185642,185644]
                binary_expression [185645,185677]
                    identifier: _signatureTimestamp [185645,185664]
                    arithmetic_operator: + [185665,185666]
                    number_literal: 30 minutes [185667,185677]
        call_argument [185696,185748]
            call_expression [185696,185748]
                identifier: throwError [185696,185706]
                call_argument [185707,185747]
                    identifier: SIGNATURE_MUST_BE_USED_WITHIN_30_MINUTES [185707,185747]
to
block_statement [185585,186146]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [185778,185893]
    variable_declaration [185778,185821]
        type_name: Authenticator [185778,185791]
        identifier: authenticatorContractInstance [185792,185821]
    affectation_operator: = [185822,185823]
    call_expression [185824,185892]
        identifier: Authenticator [185824,185837]
        call_argument [185856,185877]
            identifier: _authenticatorAddress [185856,185877]
to
block_statement [185585,186146]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [11009,11031]
    member_expression: returndata.length [11009,11026]
    comparison_operator: == [11027,11029]
    number_literal: 0 [11030,11031]
to
if_statement [11005,11295]
at 1

New cluster:
===
insert-node
---
binary_expression [15958,16104]
to
call_argument [35402,35450]
at 0
------------
===
insert-node
---
number_literal: 1 [15992,15993]
to
binary_expression [15977,15993]
at 2
===
insert-node
---
comparison_operator: == [16099,16101]
to
binary_expression [16086,16103]
at 1
===
insert-node
---
parenthesized_expression [16015,16104]
to
binary_expression [15958,16104]
at 2
===
insert-node
---
binary_expression [15959,15993]
to
parenthesized_expression [15958,15994]
at 0
===
insert-node
---
binary_expression [16016,16103]
to
parenthesized_expression [16015,16104]
at 0
===
insert-node
---
number_literal: 1 [16102,16103]
to
binary_expression [16086,16103]
at 2
===
insert-node
---
parenthesized_expression [15958,15994]
to
binary_expression [15958,16104]
at 0
===
insert-node
---
logical_operator: && [15974,15976]
to
binary_expression [15959,15993]
at 1
===
insert-node
---
logical_operator: && [16062,16064]
to
binary_expression [16016,16103]
at 1
===
insert-node
---
binary_expression [15958,16104]
to
call_argument [35402,35450]
at 0
===
insert-node
---
binary_expression [16086,16103]
to
binary_expression [16016,16103]
at 2
===
insert-node
---
comparison_operator: < [15990,15991]
to
binary_expression [15977,15993]
at 1
===
insert-node
---
binary_expression [15977,15993]
to
binary_expression [15959,15993]
at 2
===
insert-node
---
logical_operator: || [15995,15997]
to
binary_expression [15958,16104]
at 1

New cluster:
UPDATE from 10 to 1
------------
===
update-node
---
number_literal: 10 [46329,46331]
replace 10 by 1

New cluster:
MOVE from binary_expression [37089,37121]
------------
===
move-tree
---
number_literal: 10 [46329,46331]
to
binary_expression [37089,37121]
at 2

New cluster:
UPDATE from bytes to string
------------
===
update-node
---
type_name: bytes [46353,46358]
replace bytes by string
===
update-node
---
type_name: bytes [46379,46384]
replace bytes by string

New cluster:
MOVE from call_expression [46375,46392]
------------
===
move-tree
---
call_argument [47031,47037]
    identifier: length [47031,47037]
to
call_expression [46375,46392]
at 1

New cluster:
===
insert-node
---
assembly_statement [37466,37561]
to
block_statement [46422,46557]
at 1
------------
===
insert-node
---
yul_path [37520,37525]
to
yul_function_call [37516,37530]
at 1
===
insert-node
---
yul_decimal_number: 10 [37527,37529]
to
yul_function_call [37516,37530]
at 2
===
insert-node
---
yul_function_call [37511,37541]
to
yul_function_call [37498,37542]
at 2
===
insert-node
---
yul_identifier [37506,37509]
to
yul_path [37506,37509]
at 0
===
insert-node
---
yul_function_call [37516,37530]
to
yul_function_call [37511,37541]
at 1
===
insert-node
---
assembly_statement [37466,37561]
to
block_statement [46422,46557]
at 1
===
insert-node
---
assembly: assembly [37466,37474]
to
assembly_statement [37466,37561]
at 0
===
insert-node
---
yul_identifier [37520,37525]
to
yul_path [37520,37525]
at 0
===
insert-node
---
yul_function_call [37498,37542]
to
assembly_statement [37466,37561]
at 1
===
insert-node
---
yul_path [37506,37509]
to
yul_function_call [37498,37542]
at 1

New cluster:
===
insert-node
---
if_statement [37609,37631]
to
block_statement [46422,46557]
at 4
------------
===
insert-node
---
if_statement [37609,37631]
to
block_statement [46422,46557]
at 4
===
insert-node
---
if: if [37609,37611]
to
if_statement [37609,37631]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [37938,37971]
    binary_expression [37938,37971]
        call_expression [37938,37967]
            member_expression: MathUpgradeable.log256 [37938,37960]
            call_argument [37961,37966]
                identifier: value [37961,37966]
        arithmetic_operator: + [37968,37969]
        number_literal: 1 [37970,37971]
to
call_expression [47012,47038]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
new_expression [108286,108296]
    new: new [108286,108289]
    type_name: string [108290,108296]
to
call_expression [108286,108304]
at 0

New cluster:
MOVE from call_expression [108286,108304]
------------
===
move-tree
---
call_argument [85298,85304]
    identifier: length [85298,85304]
to
call_expression [108286,108304]
at 1
===
move-tree
---
call_argument [85291,85296]
    identifier: value [85291,85296]
to
call_expression [109046,109088]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [108517,108523]
    update_expression [108517,108522]
        identifier: ptr [108517,108520]
        increment_operator: -- [108520,108522]
to
block_statement [108498,108773]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
assembly_statement [108593,108688]
    assembly: assembly [108593,108601]
    yul_function_call [108625,108669]
        yul_evm_builtin [108625,108632]
            mstore8: mstore8 [108625,108632]
        yul_path [108633,108636]
            yul_identifier [108633,108636]
                identifier: ptr [108633,108636]
        yul_function_call [108638,108668]
            yul_evm_builtin [108638,108642]
                byte: byte [108638,108642]
            yul_function_call [108643,108657]
                yul_evm_builtin [108643,108646]
                    mod: mod [108643,108646]
                yul_path [108647,108652]
                    yul_identifier [108647,108652]
                        identifier: value [108647,108652]
                yul_decimal_number: 10 [108654,108656]
            yul_path [108659,108667]
                yul_identifier [108659,108667]
                    identifier: _SYMBOLS [108659,108667]
to
block_statement [108498,108773]
at 1

New cluster:
MOVE from block_statement [108498,108773]
------------
===
move-tree
---
expression_statement [84801,84813]
    augmented_assignment_expression [84801,84812]
        identifier: value [84801,84806]
        affectation_operator: /= [84807,84809]
        number_literal: 10 [84810,84812]
to
block_statement [108498,108773]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [109065,109087]
    binary_expression [109065,109087]
        call_expression [109065,109083]
            member_expression: Math.log256 [109065,109076]
            call_argument [109077,109082]
                identifier: value [109077,109082]
        arithmetic_operator: + [109084,109085]
        number_literal: 1 [109086,109087]
to
call_expression [109046,109088]
at 2

New cluster:
MOVE from call_expression [112770,112803]
------------
===
move-tree
---
call_argument [103564,103569]
    identifier: proof [103564,103569]
to
call_expression [112770,112803]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [112798,112802]
    identifier: leaf [112798,112802]
to
call_expression [112770,112803]
at 2

New cluster:
UPDATE from throwError to _nativeTokenWrapper
------------
===
update-node
---
identifier: throwError [94216,94226]
replace throwError by _nativeTokenWrapper

New cluster:
MOVE from call_argument [146892,146911]
------------
===
move-tree
---
identifier: throwError [94216,94226]
to
call_argument [146892,146911]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [147094,147123]
    identifier: throwError [147094,147104]
    call_argument [147105,147122]
        identifier: BPS_EXCEEDS_10000 [147105,147122]
to
call_argument [94216,94240]
at 0

New cluster:
===
insert-node
---
identifier: collectionContract [155127,155145]
to
call_argument [102095,102120]
at 0
------------
===
insert-node
---
identifier: collectionContract [155127,155145]
to
call_argument [102095,102120]
at 0

New cluster:
UPDATE from erc1155ContractInstance.getNFTCollectionId to collectionContractInstance.getERC721CollectionId
------------
===
update-node
---
member_expression: erc1155ContractInstance.getNFTCollectionId [111946,111988]
replace erc1155ContractInstance.getNFTCollectionId by collectionContractInstance.getERC721CollectionId
===
update-node
---
member_expression: erc721ContractInstance.getNFTCollectionId [102175,102216]
replace erc721ContractInstance.getNFTCollectionId by collectionContractInstance.getERC721CollectionId

New cluster:
UPDATE from erc1155ContractInstance.getNFTCollectionId to collectionContractInstance.getERC1155CollectionId
------------
===
update-node
---
member_expression: erc1155ContractInstance.getNFTCollectionId [104643,104685]
replace erc1155ContractInstance.getNFTCollectionId by collectionContractInstance.getERC1155CollectionId
===
update-node
---
member_expression: erc721ContractInstance.getFirstOwner [111463,111499]
replace erc721ContractInstance.getFirstOwner by collectionContractInstance.getERC1155CollectionId

New cluster:
UPDATE from block.timestamp >                     collectionData.whitelistParams[i].startTime &&                     block.timestamp < collectionData.whitelistParams[i].endTime to block.timestamp > collectionData.whitelistParams[i].startTime &&                 block.timestamp < collectionData.whitelistParams[i].endTime
------------
===
update-node
---
member_expression: block.timestamp >                     collectionData.whitelistParams[i].startTime &&                     block.timestamp < collectionData.whitelistParams[i].endTime [105569,105735]
replace block.timestamp >                     collectionData.whitelistParams[i].startTime &&                     block.timestamp < collectionData.whitelistParams[i].endTime by block.timestamp > collectionData.whitelistParams[i].startTime &&                 block.timestamp < collectionData.whitelistParams[i].endTime

New cluster:
UPDATE from erc1155ContractInstance.getFirstOwner to INFTCustom(listingData.assetContract).getFirstOwner
------------
===
update-node
---
member_expression: erc1155ContractInstance.getFirstOwner [106280,106317]
replace erc1155ContractInstance.getFirstOwner by INFTCustom(listingData.assetContract).getFirstOwner

New cluster:
MOVE from if_statement [157491,158416]
------------
===
move-tree
---
binary_expression [103819,103917]
    call_expression [103819,103876]
        member_expression: erc721ContractInstance.getFirstOwner [103819,103855]
        call_argument [103856,103875]
            member_expression: listingData.tokenId [103856,103875]
    comparison_operator: == [103877,103879]
    member_expression: collectionData.owner [103897,103917]
to
if_statement [157491,158416]
at 1

New cluster:
UPDATE from _price to _listingId
------------
===
update-node
---
identifier: _price [107428,107434]
replace _price by _listingId

New cluster:
MOVE from call_argument [159538,159548]
------------
===
move-tree
---
identifier: _price [107428,107434]
to
call_argument [159538,159548]
at 0

New cluster:
UPDATE from INVALID_CURRENCY_FROM_LISTING to _currency
------------
===
update-node
---
identifier: INVALID_CURRENCY_FROM_LISTING [107489,107518]
replace INVALID_CURRENCY_FROM_LISTING by _currency

New cluster:
UPDATE from require to _price
------------
===
update-node
---
identifier: require [107650,107657]
replace require by _price

New cluster:
MOVE from call_argument [159587,159593]
------------
===
move-tree
---
identifier: require [107650,107657]
to
call_argument [159587,159593]
at 0

New cluster:
UPDATE from throwError to _quantityToBuy
------------
===
update-node
---
identifier: throwError [107728,107738]
replace throwError by _quantityToBuy

New cluster:
UPDATE from OWNER_BUYER_CONFLICT to _signatureTimestamp
------------
===
update-node
---
identifier: OWNER_BUYER_CONFLICT [107739,107759]
replace OWNER_BUYER_CONFLICT by _signatureTimestamp

New cluster:
UPDATE from ASSET_INSUFFICIENT_ALLOWANCE_BALANCE to signature
------------
===
update-node
---
identifier: ASSET_INSUFFICIENT_ALLOWANCE_BALANCE [108083,108119]
replace ASSET_INSUFFICIENT_ALLOWANCE_BALANCE by signature

New cluster:
===
insert-node
---
identifier: collectionContract [161102,161120]
to
call_argument [111085,111113]
at 0
------------
===
insert-node
---
identifier: collectionContract [161102,161120]
to
call_argument [111085,111113]
at 0

New cluster:
UPDATE from erc1155ContractInstance.getFirstOwner to INFTCustom(_targetListing.assetContract).getFirstOwner
------------
===
update-node
---
member_expression: erc1155ContractInstance.getFirstOwner [112244,112281]
replace erc1155ContractInstance.getFirstOwner by INFTCustom(_targetListing.assetContract).getFirstOwner

New cluster:
MOVE from call_argument [163954,163970]
------------
===
move-tree
---
identifier: _quantityToCheck [114760,114776]
to
call_argument [163954,163970]
at 0

New cluster:
MOVE from call_argument [166831,166838]
------------
===
move-tree
---
identifier: _amount [117541,117548]
to
call_argument [166831,166838]
at 0

New cluster:
MOVE from call_argument [119092,119134]
------------
===
move-tree
---
binary_expression [119103,119134]
    identifier: balAfter [119103,119111]
    comparison_operator: == [119112,119114]
    binary_expression [119115,119134]
        identifier: balBefore [119115,119124]
        arithmetic_operator: + [119125,119126]
        identifier: _amount [119127,119134]
to
call_argument [119092,119134]
at 0

New cluster:
MOVE from call_argument [177348,177350]
------------
===
move-tree
---
identifier: to [125566,125568]
to
call_argument [177348,177350]
at 0

New cluster:
MOVE from call_argument [184069,184081]
------------
===
move-tree
---
identifier: totalListing [130588,130600]
to
call_argument [184069,184081]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [188139,188161]
    identifier: throwError [188139,188149]
    call_argument [188150,188160]
        identifier: _errorCode [188150,188160]
to
call_argument [124098,124122]
at 0

New cluster:
MOVE from block_statement [11033,11295]
------------
===
move-tree
---
expression_statement [30688,30749]
    call_expression [30688,30748]
        identifier: require [30688,30695]
        call_argument [30696,30714]
            call_expression [30696,30714]
                identifier: isContract [30696,30706]
                call_argument [30707,30713]
                    identifier: target [30707,30713]
        call_argument [30716,30747]
            string_literal [30716,30747]
                string: "Address: call to non-contract" [30716,30747]
to
block_statement [11033,11295]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11367,11377]
    identifier: returndata [11367,11377]
to
call_expression [11359,11392]
at 1

New cluster:
MOVE from call_expression [11359,11392]
------------
===
move-tree
---
call_argument [5581,5593]
    identifier: errorMessage [5581,5593]
to
call_expression [11359,11392]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [11901,11911]
    identifier: returndata [11901,11911]
to
call_expression [11893,11926]
at 1

New cluster:
MOVE from call_expression [11893,11926]
------------
===
move-tree
---
call_argument [6318,6330]
    identifier: errorMessage [6318,6330]
to
call_expression [11893,11926]
at 2

New cluster:
===
insert-node
---
update_expression [37390,37395]
to
expression_statement [46437,46449]
at 0
------------
===
insert-node
---
update_expression [37390,37395]
to
expression_statement [46437,46449]
at 0
===
insert-node
---
increment_operator: -- [37393,37395]
to
update_expression [37390,37395]
at 1

New cluster:
MOVE from if_statement [37609,37631]
------------
===
move-tree
---
binary_expression [46795,46805]
    identifier: value [46795,46800]
    comparison_operator: == [46801,46803]
    number_literal: 0 [46804,46805]
to
if_statement [37609,37631]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
break_statement [37625,37631]
    break: break [37625,37630]
to
if_statement [37609,37631]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
parenthesized_expression [77392,77438]
    binary_expression [77393,77437]
        call_expression [77393,77432]
            member_expression: token.allowance [77393,77408]
            call_argument [77409,77422]
                type_cast_expression [77409,77422]
                    primitive_type: address [77409,77416]
                    call_argument [77417,77421]
                        identifier: this [77417,77421]
            call_argument [77424,77431]
                identifier: spender [77424,77431]
        comparison_operator: == [77433,77435]
        number_literal: 0 [77436,77437]
to
binary_expression [77376,77438]
at 2

New cluster:
MOVE from if_statement [108736,108758]
------------
===
move-tree
---
binary_expression [46150,46160]
    identifier: value [46150,46155]
    comparison_operator: == [46156,46158]
    number_literal: 0 [46159,46160]
to
if_statement [108736,108758]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
break_statement [108752,108758]
    break: break [108752,108757]
to
if_statement [108736,108758]
at 2

New cluster:
UPDATE from _nativeTokenWrapper to _signer
------------
===
update-node
---
identifier: _nativeTokenWrapper [94181,94200]
replace _nativeTokenWrapper by _signer

New cluster:
MOVE from call_expression [148694,148720]
------------
===
move-tree
---
call_argument [95046,95063]
    binary_expression [95046,95063]
        identifier: totalListing [95046,95058]
        comparison_operator: == [95059,95061]
        number_literal: 0 [95062,95063]
to
call_expression [148694,148720]
at 1

New cluster:
===
insert-node
---
identifier: _price [154466,154472]
to
binary_expression [101388,101430]
at 0
------------
===
insert-node
---
identifier: _price [154466,154472]
to
binary_expression [101388,101430]
at 0

New cluster:
UPDATE from == to !=
------------
===
update-node
---
comparison_operator: == [103877,103879]
replace == by !=

New cluster:
Unknown cluster type
------------
===
insert-tree
---
unary_expression [157654,157656]
    arithmetic_operator: - [157654,157655]
    number_literal: 1 [157655,157656]
to
binary_expression [103819,103917]
at 2

New cluster:
===
insert-node
---
identifier: _price [159915,159921]
to
binary_expression [108647,108689]
at 0
------------
===
insert-node
---
identifier: _price [159915,159921]
to
binary_expression [108647,108689]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [160738,160748]
    member_expression: msg.sender [160738,160748]
to
call_expression [110663,110858]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [160916,160929]
    identifier: _isDiscounted [160916,160929]
to
call_expression [110663,110858]
at 7

New cluster:
UPDATE from erc1155ContractInstance.updateCollectionAfterPrimarySale to collectionContractInstance.updateCollectionAfterPrimarySale
------------
===
update-node
---
member_expression: erc1155ContractInstance.updateCollectionAfterPrimarySale [112381,112437]
replace erc1155ContractInstance.updateCollectionAfterPrimarySale by collectionContractInstance.updateCollectionAfterPrimarySale

New cluster:
MOVE from call_expression [162017,162239]
------------
===
move-tree
---
call_argument [110688,110694]
    identifier: _buyer [110688,110694]
to
call_expression [162017,162239]
at 1

New cluster:
MOVE from call_expression [162017,162239]
------------
===
move-tree
---
call_argument [111228,111250]
    member_expression: _targetListing.tokenId [111228,111250]
to
call_expression [162017,162239]
at 2

New cluster:
MOVE from call_expression [162017,162239]
------------
===
move-tree
---
call_argument [112528,112537]
    identifier: _quantity [112528,112537]
to
call_expression [162017,162239]
at 3

New cluster:
UPDATE from value to _depositToIWETH
------------
===
update-node
---
identifier: value [119459,119464]
replace value by _depositToIWETH

New cluster:
MOVE from call_expression [119425,119474]
------------
===
move-tree
---
identifier: value [119459,119464]
to
call_expression [119425,119474]
at 0
===
move-tree
---
identifier: value [119466,119471]
to
call_argument [169318,169323]
at 0

New cluster:
===
insert-node
---
call_argument [169318,169323]
to
call_expression [119425,119474]
at 1
------------
===
insert-node
---
call_argument [169318,169323]
to
call_expression [119425,119474]
at 1

New cluster:
MOVE from block_statement [126346,126430]
------------
===
move-tree
---
expression_statement [126451,126500]
    assignment_expression [126451,126499]
        identifier: transferSuccess [126451,126466]
        affectation_operator: = [126467,126468]
        call_expression [126469,126499]
            member_expression: _currency.transfer [126469,126487]
            call_argument [126488,126490]
                identifier: to [126488,126490]
            call_argument [126492,126498]
                identifier: amount [126492,126498]
to
block_statement [126346,126430]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [179016,179051]
    call_expression [179016,179050]
        member_expression: _currency.safeTransfer [179016,179038]
        call_argument [179039,179041]
            identifier: to [179039,179041]
        call_argument [179043,179049]
            identifier: amount [179043,179049]
to
block_statement [126436,126511]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [179069,179092]
    assignment_expression [179069,179091]
        identifier: transferSuccess [179069,179084]
        affectation_operator: = [179085,179086]
        boolean_literal: true [179087,179091]
to
block_statement [126436,126511]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [179903,179926]
    assignment_expression [179903,179925]
        identifier: transferSuccess [179903,179918]
        affectation_operator: = [179919,179920]
        boolean_literal: true [179921,179925]
to
block_statement [179810,179941]
at 1

New cluster:
===
insert-node
---
member_expression: listing.assetContract [182475,182496]
to
binary_expression [125566,125582]
at 0
------------
===
insert-node
---
member_expression: listing.assetContract [182475,182496]
to
binary_expression [125566,125582]
at 0

New cluster:
MOVE from call_argument [184138,184149]
------------
===
move-tree
---
identifier: activeCount [130648,130659]
to
call_argument [184138,184149]
at 0

New cluster:
UPDATE from _treasury to _toCheck
------------
===
update-node
---
identifier: _treasury [124073,124082]
replace _treasury by _toCheck

New cluster:
UPDATE from buffer to ptr
------------
===
update-node
---
identifier: buffer [46463,46469]
replace buffer by ptr
===
update-node
---
identifier: digits [46437,46443]
replace digits by ptr

New cluster:
MOVE from update_expression [37390,37395]
------------
===
move-tree
---
identifier: digits [46437,46443]
to
update_expression [37390,37395]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_evm_builtin [37498,37505]
    mstore8: mstore8 [37498,37505]
to
yul_function_call [37498,37542]
at 0

New cluster:
MOVE from parenthesized_expression [77376,77388]
------------
===
move-tree
---
binary_expression [84417,84427]
    identifier: value [84417,84422]
    comparison_operator: == [84423,84425]
    number_literal: 0 [84426,84427]
to
parenthesized_expression [77376,77388]
at 0

New cluster:
UPDATE from keccak256 to _hashPair
------------
===
update-node
---
identifier: keccak256 [91717,91726]
replace keccak256 by _hashPair

New cluster:
MOVE from call_expression [91717,91812]
------------
===
move-tree
---
call_argument [92010,92022]
    identifier: computedHash [92010,92022]
to
call_expression [91717,91812]
at 1

New cluster:
MOVE from call_expression [113878,113911]
------------
===
move-tree
---
call_argument [91766,91778]
    identifier: computedHash [91766,91778]
to
call_expression [113878,113911]
at 1
===
move-tree
---
call_argument [91780,91792]
    identifier: proofElement [91780,91792]
to
call_expression [91717,91812]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [113902,113910]
    array_access [113902,113910]
        identifier: proof [113902,113907]
        identifier: i [113908,113909]
to
call_expression [113878,113911]
at 2

New cluster:
MOVE from call_argument [95046,95063]
------------
===
move-tree
---
identifier: totalListing [95046,95058]
to
call_argument [95046,95063]
at 0

New cluster:
UPDATE from erc721ContractInstance.getFirstOwner to IERC1155Custom(listingData.assetContract)                     .getPrimarySalePurchaseLimitPerToken
------------
===
update-node
---
member_expression: erc721ContractInstance.getFirstOwner [103819,103855]
replace erc721ContractInstance.getFirstOwner by IERC1155Custom(listingData.assetContract)                     .getPrimarySalePurchaseLimitPerToken

New cluster:
Unknown cluster type
------------
===
insert-tree
---
expression_statement [167439,167464]
    call_expression [167439,167463]
        identifier: _depositToIWETH [167439,167454]
        call_argument [167455,167462]
            identifier: _amount [167455,167462]
to
block_statement [117929,118220]
at 1

New cluster:
UPDATE from IERC20(_currency).balanceOf(_addrToCheck) >=                 _currencyAmountToCheckAgainst &&                 IERC20(_currency).allowance to IERC20Upgradeable(_currency).balanceOf(_addrToCheck) >=                 _currencyAmountToCheckAgainst &&                 IERC20Upgradeable(_currency).allowance
------------
===
update-node
---
member_expression: IERC20(_currency).balanceOf(_addrToCheck) >=                 _currencyAmountToCheckAgainst &&                 IERC20(_currency).allowance [124500,124639]
replace IERC20(_currency).balanceOf(_addrToCheck) >=                 _currencyAmountToCheckAgainst &&                 IERC20(_currency).allowance by IERC20Upgradeable(_currency).balanceOf(_addrToCheck) >=                 _currencyAmountToCheckAgainst &&                 IERC20Upgradeable(_currency).allowance

New cluster:
MOVE from expression_statement [126451,126500]
------------
===
move-tree
---
call_expression [126469,126499]
    member_expression: _currency.transfer [126469,126487]
    call_argument [126488,126490]
        identifier: to [126488,126490]
    call_argument [126492,126498]
        identifier: amount [126492,126498]
to
expression_statement [126451,126500]
at 0
===
move-tree
---
affectation_operator: = [126467,126468]
to
assignment_expression [179656,179769]
at 1
===
move-tree
---
identifier: transferSuccess [126451,126466]
to
tuple_expression [179656,179675]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
binary_expression [179203,179353]
    call_expression [179203,179343]
        member_expression: IWETH(nativeTokenWrapper).allowance [179203,179238]
        call_argument [179265,179280]
            identifier: royaltyTreasury [179265,179280]
        call_argument [179307,179320]
            type_cast_expression [179307,179320]
                primitive_type: address [179307,179314]
                call_argument [179315,179319]
                    identifier: this [179315,179319]
    comparison_operator: >= [179344,179346]
    identifier: amount [179347,179353]
to
if_statement [179177,179789]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [185977,186028]
    call_expression [185977,186028]
        member_expression: authenticatorContractInstance.getPrivilegedSigner [185977,186026]
to
call_expression [185922,186134]
at 1

New cluster:
MOVE from call_expression [185922,186134]
------------
===
move-tree
---
call_argument [122777,122783]
    identifier: _buyer [122777,122783]
to
call_expression [185922,186134]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [186072,186091]
    identifier: _signatureTimestamp [186072,186091]
to
call_expression [185922,186134]
at 3

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [186110,186119]
    identifier: signature [186110,186119]
to
call_expression [185922,186134]
at 4

New cluster:
UPDATE from _initializing to isTopLevelCall
------------
===
update-node
---
identifier: _initializing [35402,35415]
replace _initializing by isTopLevelCall

New cluster:
MOVE from binary_expression [15959,15993]
------------
===
move-tree
---
identifier: _initializing [35402,35415]
to
binary_expression [15959,15993]
at 0

New cluster:
MOVE from binary_expression [16016,16103]
------------
===
move-tree
---
unary_expression [36189,36234]
    !: ! [36189,36190]
    call_expression [36190,36234]
        member_expression: AddressUpgradeable.isContract [36190,36219]
        call_argument [36220,36233]
            type_cast_expression [36220,36233]
                primitive_type: address [36220,36227]
                call_argument [36228,36232]
                    identifier: this [36228,36232]
to
binary_expression [16016,16103]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_evm_builtin [37511,37515]
    byte: byte [37511,37515]
to
yul_function_call [37511,37541]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_path [37532,37540]
    yul_identifier [37532,37540]
        identifier: _SYMBOLS [37532,37540]
to
yul_function_call [37511,37541]
at 2

New cluster:
UPDATE from lastvalue to lastValue
------------
===
update-node
---
identifier: lastvalue [62048,62057]
replace lastvalue by lastValue
===
update-node
---
identifier: lastvalue [61882,61891]
replace lastvalue by lastValue
===
update-node
---
identifier: lastvalue [62146,62155]
replace lastvalue by lastValue

New cluster:
MOVE from call_argument [91780,91792]
------------
===
move-tree
---
array_access [91547,91555]
    identifier: proof [91547,91552]
    identifier: i [91553,91554]
to
call_argument [91780,91792]
at 0

New cluster:
MOVE from call_expression [103516,103690]
------------
===
move-tree
---
call_argument [106035,106040]
    identifier: proof [106035,106040]
to
call_expression [103516,103690]
at 1
===
move-tree
---
call_argument [106067,106077]
    identifier: merkleRoot [106067,106077]
to
call_expression [103516,103690]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [158272,158381]
    call_expression [158272,158381]
        identifier: throwError [158272,158282]
        call_argument [158309,158358]
            identifier: MAXIMUM_PURCHASE_QUANTITY_PER_TOKEN_LIMIT_REACHED [158309,158358]
to
call_expression [157691,158400]
at 2

New cluster:
===
insert-node
---
binary_expression [170824,171185]
to
call_argument [120529,120620]
at 0
------------
===
insert-node
---
parenthesized_expression [171040,171185]
to
binary_expression [170824,171185]
at 2
===
insert-node
---
parenthesized_expression [170824,171015]
to
binary_expression [170824,171185]
at 0
===
insert-node
---
call_expression [170825,171014]
to
parenthesized_expression [170824,171015]
at 0
===
insert-node
---
binary_expression [170824,171185]
to
call_argument [120529,120620]
at 0
===
insert-node
---
logical_operator: && [171016,171018]
to
binary_expression [170824,171185]
at 1
===
insert-node
---
member_expression: _tokenOwner == msg.sender ||                     IERC1155(_assetContract).isApprovedForAll [170825,170916]
to
call_expression [170825,171014]
at 0

New cluster:
MOVE from call_expression [122726,122882]
------------
===
move-tree
---
call_argument [111677,111687]
    member_expression: msg.sender [111677,111687]
to
call_expression [122726,122882]
at 1

New cluster:
UPDATE from _currency.transfer to IWETH(nativeTokenWrapper).withdraw
------------
===
update-node
---
member_expression: _currency.transfer [126469,126487]
replace _currency.transfer by IWETH(nativeTokenWrapper).withdraw

New cluster:
Unknown cluster type
------------
===
insert-tree
---
variable_declaration_statement [179396,179592]
    variable_declaration [179396,179412]
        type_name: bool [179396,179400]
        identifier: ifWithdrawn [179401,179412]
    affectation_operator: = [179413,179414]
    call_expression [179415,179591]
        member_expression: IWETH(nativeTokenWrapper).transferFrom [179415,179453]
        call_argument [179480,179495]
            identifier: royaltyTreasury [179480,179495]
        call_argument [179522,179535]
            type_cast_expression [179522,179535]
                primitive_type: address [179522,179529]
                call_argument [179530,179534]
                    identifier: this [179530,179534]
        call_argument [179562,179568]
            identifier: amount [179562,179568]
to
block_statement [179373,179789]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [179856,179871]
    identifier: royaltyTreasury [179856,179871]
to
call_expression [179829,179884]
at 1

New cluster:
MOVE from call_expression [179829,179884]
------------
===
move-tree
---
call_argument [126488,126490]
    identifier: to [126488,126490]
to
call_expression [179829,179884]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [179877,179883]
    identifier: amount [179877,179883]
to
call_expression [179829,179884]
at 3

New cluster:
UPDATE from _isConstructor to _initialized
------------
===
update-node
---
identifier: _isConstructor [35418,35432]
replace _isConstructor by _initialized

New cluster:
MOVE from binary_expression [15977,15993]
------------
===
move-tree
---
identifier: _isConstructor [35418,35432]
to
binary_expression [15977,15993]
at 0

New cluster:
MOVE from binary_expression [16086,16103]
------------
===
move-tree
---
identifier: _initialized [35438,35450]
to
binary_expression [16086,16103]
at 0

New cluster:
MOVE from yul_identifier [37506,37509]
------------
===
move-tree
---
identifier: buffer [46463,46469]
to
yul_identifier [37506,37509]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
yul_evm_builtin [37516,37519]
    mod: mod [37516,37519]
to
yul_function_call [37516,37530]
at 0

New cluster:
MOVE from call_expression [54089,54381]
------------
===
move-tree
---
call_argument [54215,54231]
    type_cast_expression [54215,54231]
        primitive_type: uint160 [54215,54222]
        call_argument [54223,54230]
            identifier: account [54223,54230]
to
call_expression [54089,54381]
at 2

New cluster:
MOVE from call_argument [54215,54231]
------------
===
move-tree
---
call_expression [54184,54236]
    member_expression: StringsUpgradeable.toHexString [54184,54214]
    call_argument [54215,54231]
        type_cast_expression [54215,54231]
            primitive_type: uint160 [54215,54222]
            call_argument [54223,54230]
                identifier: account [54223,54230]
    call_argument [54233,54235]
        number_literal: 20 [54233,54235]
to
call_argument [54215,54231]
at 0

New cluster:
Unknown cluster type
------------
===
insert-tree
---
type_cast_expression [157980,158249]
    primitive_type: uint256 [157980,157987]
    call_argument [158018,158222]
        call_expression [158018,158222]
            member_expression: IERC1155Custom(listingData.assetContract)                                 .getPrimarySalePurchaseLimitPerToken [158018,158129]
            call_argument [158168,158187]
                member_expression: listingData.tokenId [158168,158187]
to
binary_expression [157721,158249]
at 2

New cluster:
MOVE from parenthesized_expression [171040,171185]
------------
===
move-tree
---
binary_expression [120529,120620]
    call_expression [120529,120586]
        member_expression: IERC1155(_assetContract).balanceOf [120529,120563]
        call_argument [120564,120575]
            identifier: _tokenOwner [120564,120575]
        call_argument [120577,120585]
            identifier: _tokenId [120577,120585]
    comparison_operator: >= [120587,120589]
    identifier: _quantity [120611,120620]
to
parenthesized_expression [171040,171185]
at 0

New cluster:
MOVE from yul_identifier [37520,37525]
------------
===
move-tree
---
identifier: value [46506,46511]
to
yul_identifier [37520,37525]
at 0

New cluster:
MOVE from call_expression [54184,54236]
------------
===
move-tree
---
call_argument [54223,54230]
    identifier: account [54223,54230]
to
call_expression [54184,54236]
at 1

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [170943,170954]
    identifier: _tokenOwner [170943,170954]
to
call_expression [170825,171014]
at 1

New cluster:
MOVE from call_expression [170825,171014]
------------
===
move-tree
---
call_argument [104130,104140]
    member_expression: msg.sender [104130,104140]
to
call_expression [170825,171014]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_expression [179678,179769]
    struct_expression [179678,179709]
        member_expression: payable(to).call [179678,179694]
        struct_field_assignment [179695,179708]
            identifier: value [179695,179700]
            :: : [179700,179701]
            identifier: amount [179702,179708]
    call_argument [179740,179742]
        string_literal [179740,179742]
            string: "" [179740,179742]
to
assignment_expression [179656,179769]
at 2

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [156654,156664]
    member_expression: msg.sender [156654,156664]
to
call_expression [103643,103666]
at 1

New cluster:
UPDATE from erc1155ContractInstance.getPrimarySaleUserCount to collectionContractInstance.getPrimarySaleUserCount
------------
===
update-node
---
member_expression: erc1155ContractInstance.getPrimarySaleUserCount [106515,106562]
replace erc1155ContractInstance.getPrimarySaleUserCount by collectionContractInstance.getPrimarySaleUserCount

New cluster:
MOVE from binary_expression [157722,157950]
------------
===
move-tree
---
call_expression [106114,106137]
    member_expression: abi.encodePacked [106114,106130]
    call_argument [106131,106136]
        identifier: buyer [106131,106136]
to
binary_expression [157722,157950]
at 0

New cluster:
UPDATE from abi.encodePacked to IERC1155Custom(listingData.assetContract)                         .getPrimarySaleUserCountPerToken
------------
===
update-node
---
member_expression: abi.encodePacked [106114,106130]
replace abi.encodePacked by IERC1155Custom(listingData.assetContract)                         .getPrimarySaleUserCountPerToken

New cluster:
Unknown cluster type
------------
===
insert-tree
---
call_argument [157888,157907]
    member_expression: listingData.tokenId [157888,157907]
to
call_expression [106114,106137]
at 2

New cluster:
===
delete-node
---
expression_statement [31795,31863]
===
------------
===
delete-node
---
call_expression [31795,31862]
===
===
delete-node
---
identifier: require [31795,31802]
===
===
delete-node
---
expression_statement [31795,31863]
===
===
delete-node
---
call_expression [31803,31821]
===
===
delete-node
---
identifier: isContract [31803,31813]
===
===
delete-node
---
call_argument [31803,31821]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [31823,31861]
    string_literal [31823,31861]
        string: "Address: static call to non-contract" [31823,31861]

New cluster:
===
delete-node
---
if_statement [32420,32950]
===
------------
===
delete-node
---
block_statement [32483,32950]
===
===
delete-node
---
if_statement [32420,32950]
===

New cluster:
===
delete-node
---
ternary_expression [35402,35450]
===
------------
===
delete-node
---
ternary_expression [35402,35450]
===
===
delete-node
---
?: ? [35416,35417]
===
===
delete-node
---
:: : [35435,35436]
===
===
delete-node
---
!: ! [35437,35438]
===
===
delete-node
---
call_expression [35418,35434]
===
===
delete-node
---
unary_expression [35437,35450]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [35654,35674]
    assignment_expression [35654,35673]
        identifier: _initialized [35654,35666]
        affectation_operator: = [35667,35668]
        boolean_literal: true [35669,35673]

New cluster:
===
delete-node
---
library_declaration [610,7282]
===
------------
===
delete-node
---
identifier: tryDiv [2263,2269]
===
===
delete-node
---
unchecked: unchecked [5540,5549]
===
===
delete-node
---
identifier: add [3130,3133]
===
===
delete-node
---
function_definition [2254,2481]
===
===
delete-node
---
library_declaration [610,7282]
===
===
delete-node
---
function: function [2647,2655]
===
===
delete-node
---
identifier: require [6303,6310]
===
===
delete-node
---
identifier: sub [3511,3514]
===
===
delete-node
---
function_body [1671,2098]
===
===
delete-node
---
visibility: internal [2301,2309]
===
===
delete-node
---
function: function [3859,3867]
===
===
delete-node
---
identifier: div [6147,6150]
===
===
delete-node
---
visibility: internal [822,830]
===
===
delete-node
---
expression_statement [6303,6332]
===
===
delete-node
---
function: function [3502,3510]
===
===
delete-node
---
visibility: internal [3894,3902]
===
===
delete-node
---
function: function [5400,5408]
===
===
delete-node
---
function_definition [3121,3219]
===
===
delete-node
---
function: function [4823,4831]
===
===
delete-node
---
identifier: div [4267,4270]
===
===
delete-node
---
visibility: internal [6235,6243]
===
===
delete-node
---
identifier: trySub [1191,1197]
===
===
delete-node
---
function_definition [3502,3600]
===
===
delete-node
---
visibility: internal [3156,3164]
===
===
delete-node
---
function: function [2254,2262]
===
===
delete-node
---
function: function [4258,4266]
===
===
delete-node
---
identifier: mul [3868,3871]
===
===
delete-node
---
function_definition [4258,4356]
===
===
delete-node
---
identifier: mod [7049,7052]
===
===
delete-node
---
function_body [5529,5640]
===
===
delete-node
---
visibility: internal [4293,4301]
===
===
delete-node
---
block_statement [1682,2091]
===
===
delete-node
---
function_definition [7040,7279]
===
===
delete-node
---
function_definition [5400,5640]
===
===
delete-node
---
visibility: internal [1229,1237]
===
===
delete-node
---
call_expression [6303,6331]
===
===
delete-node
---
call_expression [5565,5594]
===
===
delete-node
---
function_definition [3859,3957]
===
===
delete-node
---
identifier: SafeMath [618,626]
===
===
delete-node
---
visibility: internal [3537,3545]
===
===
delete-node
---
library: library [610,617]
===
===
delete-node
---
block_statement [5540,5633]
===
===
delete-node
---
function_definition [4823,4921]
===
===
delete-node
---
function_definition [2647,2874]
===
===
delete-node
---
function: function [7040,7048]
===
===
delete-node
---
identifier: require [5565,5572]
===
===
delete-node
---
unchecked: unchecked [6278,6287]
===
===
delete-node
---
visibility: internal [4858,4866]
===
===
delete-node
---
contract_body [627,7282]
===
===
delete-node
---
expression_statement [5565,5595]
===
===
delete-node
---
function_body [6267,6377]
===
===
delete-node
---
visibility: internal [5497,5505]
===
===
delete-node
---
function_definition [775,1029]
===
===
delete-node
---
visibility: internal [2694,2702]
===
===
delete-node
---
identifier: sub [5409,5412]
===
===
delete-node
---
unchecked: unchecked [1682,1691]
===
===
delete-node
---
visibility: internal [1610,1618]
===
===
delete-node
---
identifier: tryMul [1572,1578]
===
===
delete-node
---
identifier: tryMod [2656,2662]
===
===
delete-node
---
visibility: internal [7137,7145]
===
===
delete-node
---
identifier: tryAdd [784,790]
===
===
delete-node
---
function: function [1563,1571]
===
===
delete-node
---
function_definition [6138,6377]
===
===
delete-node
---
identifier: mod [4832,4835]
===
===
delete-node
---
block_statement [6278,6370]
===
===
delete-node
---
function: function [775,783]
===
===
delete-node
---
function_definition [1563,2098]
===
===
delete-node
---
if_statement [1940,1969]
===
===
delete-node
---
if: if [1940,1942]
===
===
delete-node
---
function: function [1182,1190]
===
===
delete-node
---
function: function [6138,6146]
===
===
delete-node
---
function_definition [1182,1408]
===
===
delete-node
---
function: function [3121,3129]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [854,877]
    returns: returns [854,861]
    parameter [863,867]
        type_name: bool [863,867]
    parameter [869,876]
        type_name: uint256 [869,876]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [883,1029]
    block_statement [894,1022]
        unchecked: unchecked [894,903]
        variable_declaration_statement [919,937]
            variable_declaration [919,928]
                type_name: uint256 [919,926]
                identifier: c [927,928]
            affectation_operator: = [929,930]
            binary_expression [931,936]
                identifier: a [931,932]
                arithmetic_operator: + [933,934]
                identifier: b [935,936]
        if_statement [951,980]
            if: if [951,953]
            binary_expression [955,960]
                identifier: c [955,956]
                comparison_operator: < [957,958]
                identifier: a [959,960]
            return_statement [962,980]
                return: return [962,968]
                tuple_expression [969,979]
                    boolean_literal: false [970,975]
                    number_literal: 0 [977,978]
        return_statement [994,1011]
            return: return [994,1000]
            tuple_expression [1001,1010]
                boolean_literal: true [1002,1006]
                identifier: c [1008,1009]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [1261,1284]
    returns: returns [1261,1268]
    parameter [1270,1274]
        type_name: bool [1270,1274]
    parameter [1276,1283]
        type_name: uint256 [1276,1283]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [1290,1408]
    block_statement [1301,1401]
        unchecked: unchecked [1301,1310]
        if_statement [1326,1355]
            if: if [1326,1328]
            binary_expression [1330,1335]
                identifier: b [1330,1331]
                comparison_operator: > [1332,1333]
                identifier: a [1334,1335]
            return_statement [1337,1355]
                return: return [1337,1343]
                tuple_expression [1344,1354]
                    boolean_literal: false [1345,1350]
                    number_literal: 0 [1352,1353]
        return_statement [1369,1390]
            return: return [1369,1375]
            tuple_expression [1376,1389]
                boolean_literal: true [1377,1381]
                binary_expression [1383,1388]
                    identifier: a [1383,1384]
                    arithmetic_operator: - [1385,1386]
                    identifier: b [1387,1388]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [1642,1665]
    returns: returns [1642,1649]
    parameter [1651,1655]
        type_name: bool [1651,1655]
    parameter [1657,1664]
        type_name: uint256 [1657,1664]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [1952,1969]
    return: return [1952,1958]
    tuple_expression [1959,1968]
        boolean_literal: true [1960,1964]
        number_literal: 0 [1966,1967]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [1983,2001]
    variable_declaration [1983,1992]
        type_name: uint256 [1983,1990]
        identifier: c [1991,1992]
    affectation_operator: = [1993,1994]
    binary_expression [1995,2000]
        identifier: a [1995,1996]
        arithmetic_operator: * [1997,1998]
        identifier: b [1999,2000]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [2015,2049]
    if: if [2015,2017]
    binary_expression [2019,2029]
        binary_expression [2019,2024]
            identifier: c [2019,2020]
            arithmetic_operator: / [2021,2022]
            identifier: a [2023,2024]
        comparison_operator: != [2025,2027]
        identifier: b [2028,2029]
    return_statement [2031,2049]
        return: return [2031,2037]
        tuple_expression [2038,2048]
            boolean_literal: false [2039,2044]
            number_literal: 0 [2046,2047]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [2063,2080]
    return: return [2063,2069]
    tuple_expression [2070,2079]
        boolean_literal: true [2071,2075]
        identifier: c [2077,2078]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [2333,2356]
    returns: returns [2333,2340]
    parameter [2342,2346]
        type_name: bool [2342,2346]
    parameter [2348,2355]
        type_name: uint256 [2348,2355]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [2362,2481]
    block_statement [2373,2474]
        unchecked: unchecked [2373,2382]
        if_statement [2398,2428]
            if: if [2398,2400]
            binary_expression [2402,2408]
                identifier: b [2402,2403]
                comparison_operator: == [2404,2406]
                number_literal: 0 [2407,2408]
            return_statement [2410,2428]
                return: return [2410,2416]
                tuple_expression [2417,2427]
                    boolean_literal: false [2418,2423]
                    number_literal: 0 [2425,2426]
        return_statement [2442,2463]
            return: return [2442,2448]
            tuple_expression [2449,2462]
                boolean_literal: true [2450,2454]
                binary_expression [2456,2461]
                    identifier: a [2456,2457]
                    arithmetic_operator: / [2458,2459]
                    identifier: b [2460,2461]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [2726,2749]
    returns: returns [2726,2733]
    parameter [2735,2739]
        type_name: bool [2735,2739]
    parameter [2741,2748]
        type_name: uint256 [2741,2748]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [2755,2874]
    block_statement [2766,2867]
        unchecked: unchecked [2766,2775]
        if_statement [2791,2821]
            if: if [2791,2793]
            binary_expression [2795,2801]
                identifier: b [2795,2796]
                comparison_operator: == [2797,2799]
                number_literal: 0 [2800,2801]
            return_statement [2803,2821]
                return: return [2803,2809]
                tuple_expression [2810,2820]
                    boolean_literal: false [2811,2816]
                    number_literal: 0 [2818,2819]
        return_statement [2835,2856]
            return: return [2835,2841]
            tuple_expression [2842,2855]
                boolean_literal: true [2843,2847]
                binary_expression [2849,2854]
                    identifier: a [2849,2850]
                    %: % [2851,2852]
                    identifier: b [2853,2854]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [3188,3219]
    return_statement [3199,3212]
        return: return [3199,3205]
        binary_expression [3206,3211]
            identifier: a [3206,3207]
            arithmetic_operator: + [3208,3209]
            identifier: b [3210,3211]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [3569,3600]
    return_statement [3580,3593]
        return: return [3580,3586]
        binary_expression [3587,3592]
            identifier: a [3587,3588]
            arithmetic_operator: - [3589,3590]
            identifier: b [3591,3592]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [3926,3957]
    return_statement [3937,3950]
        return: return [3937,3943]
        binary_expression [3944,3949]
            identifier: a [3944,3945]
            arithmetic_operator: * [3946,3947]
            identifier: b [3948,3949]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [4282,4291]
    type_name: uint256 [4282,4289]
    identifier: b [4290,4291]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [4325,4356]
    return_statement [4336,4349]
        return: return [4336,4342]
        binary_expression [4343,4348]
            identifier: a [4343,4344]
            arithmetic_operator: / [4345,4346]
            identifier: b [4347,4348]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [4847,4856]
    type_name: uint256 [4847,4854]
    identifier: b [4855,4856]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [4890,4921]
    return_statement [4901,4914]
        return: return [4901,4907]
        binary_expression [4908,4913]
            identifier: a [4908,4909]
            %: % [4910,4911]
            identifier: b [4912,4913]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [5443,5452]
    type_name: uint256 [5443,5450]
    identifier: b [5451,5452]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [5573,5579]
    binary_expression [5573,5579]
        identifier: b [5573,5574]
        comparison_operator: <= [5575,5577]
        identifier: a [5578,5579]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [5609,5622]
    return: return [5609,5615]
    binary_expression [5616,5621]
        identifier: a [5616,5617]
        arithmetic_operator: - [5618,5619]
        identifier: b [5620,5621]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [6181,6190]
    type_name: uint256 [6181,6188]
    identifier: b [6189,6190]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [6311,6316]
    binary_expression [6311,6316]
        identifier: b [6311,6312]
        comparison_operator: > [6313,6314]
        number_literal: 0 [6315,6316]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [6346,6359]
    return: return [6346,6352]
    binary_expression [6353,6358]
        identifier: a [6353,6354]
        arithmetic_operator: / [6355,6356]
        identifier: b [6357,6358]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [7063,7072]
    type_name: uint256 [7063,7070]
    identifier: a [7071,7072]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [7083,7092]
    type_name: uint256 [7083,7090]
    identifier: b [7091,7092]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [7103,7129]
    type_name: string [7103,7109]
    memory: memory [7110,7116]
    identifier: errorMessage [7117,7129]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [7169,7279]
    block_statement [7180,7272]
        unchecked: unchecked [7180,7189]
        expression_statement [7205,7234]
            call_expression [7205,7233]
                identifier: require [7205,7212]
                call_argument [7213,7218]
                    binary_expression [7213,7218]
                        identifier: b [7213,7214]
                        comparison_operator: > [7215,7216]
                        number_literal: 0 [7217,7218]
                call_argument [7220,7232]
                    identifier: errorMessage [7220,7232]
        return_statement [7248,7261]
            return: return [7248,7254]
            binary_expression [7255,7260]
                identifier: a [7255,7256]
                %: % [7257,7258]
                identifier: b [7259,7260]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [7430,7453]
    pragma: pragma [7430,7436]
    solidity_pragma_token [7437,7452]
        solidity: solidity [7437,7445]
        solidity_version_comparison_operator [7445,7447]
            bitwise_operator:  ^ [7445,7447]
        solidity_version: 0.8.0 [7447,7452]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [8337,8360]
    pragma: pragma [8337,8343]
    solidity_pragma_token [8344,8359]
        solidity: solidity [8344,8352]
        solidity_version_comparison_operator [8352,8354]
            bitwise_operator:  ^ [8352,8354]
        solidity_version: 0.8.0 [8354,8359]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [46385,46391]
    identifier: digits [46385,46391]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [46410,46420]
    identifier: value [46410,46415]
    comparison_operator: != [46416,46418]
    number_literal: 0 [46419,46420]

New cluster:
===
delete-node
---
augmented_assignment_expression [46437,46448]
===
------------
===
delete-node
---
affectation_operator: -= [46444,46446]
===
===
delete-node
---
augmented_assignment_expression [46437,46448]
===
===
delete-node
---
number_literal: 1 [46447,46448]
===

New cluster:
===
delete-node
---
expression_statement [46463,46520]
===
------------
===
delete-node
---
primitive_type: bytes1 [46480,46486]
===
===
delete-node
---
array_access [46463,46477]
===
===
delete-node
---
expression_statement [46463,46520]
===
===
delete-node
---
call_argument [46493,46517]
===
===
delete-node
---
affectation_operator: = [46478,46479]
===
===
delete-node
---
call_argument [46487,46518]
===
===
delete-node
---
number_literal: 48 [46493,46495]
===
===
delete-node
---
binary_expression [46506,46516]
===
===
delete-node
---
type_cast_expression [46498,46517]
===
===
delete-node
---
assignment_expression [46463,46519]
===
===
delete-node
---
primitive_type: uint8 [46487,46492]
===
===
delete-node
---
call_argument [46506,46516]
===
===
delete-node
---
%: % [46512,46513]
===
===
delete-node
---
number_literal: 10 [46514,46516]
===
===
delete-node
---
type_cast_expression [46487,46518]
===
===
delete-node
---
arithmetic_operator: + [46496,46497]
===
===
delete-node
---
primitive_type: uint256 [46498,46505]
===
===
delete-node
---
binary_expression [46493,46517]
===
===
delete-node
---
identifier: digits [46470,46476]
===
===
delete-node
---
type_cast_expression [46480,46519]
===

New cluster:
===
delete-node
---
type_cast_expression [46574,46588]
===
------------
===
delete-node
---
type_cast_expression [46574,46588]
===
===
delete-node
---
primitive_type: string [46574,46580]
===
===
delete-node
---
call_argument [46581,46587]
===

New cluster:
===
delete-node
---
if_statement [46146,46199]
===
------------
===
delete-node
---
if: if [46146,46148]
===
===
delete-node
---
if_statement [46146,46199]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [46162,46199]
    return_statement [46177,46188]
        return: return [46177,46183]
        string_literal [46184,46187]
            string: "0" [46184,46187]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [46209,46221]
    type_name: uint256 [46209,46216]
    identifier: temp [46217,46221]

New cluster:
===
delete-node
---
variable_declaration_statement [46209,46230]
===
------------
===
delete-node
---
variable_declaration_statement [46209,46230]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [46240,46255]
    variable_declaration [46240,46254]
        type_name: uint256 [46240,46247]
        identifier: digits [46248,46254]

New cluster:
===
delete-node
---
while_statement [46265,46343]
===
------------
===
delete-node
---
block_statement [46283,46343]
===
===
delete-node
---
affectation_operator: /= [46326,46328]
===
===
delete-node
---
while_statement [46265,46343]
===
===
delete-node
---
identifier: temp [46321,46325]
===
===
delete-node
---
augmented_assignment_expression [46321,46331]
===
===
delete-node
---
while: while [46265,46270]
===
===
delete-node
---
expression_statement [46321,46332]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [46272,46281]
    identifier: temp [46272,46276]
    comparison_operator: != [46277,46279]
    number_literal: 0 [46280,46281]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [46298,46307]
    update_expression [46298,46306]
        identifier: digits [46298,46304]
        increment_operator: ++ [46304,46306]

New cluster:
===
delete-node
---
if_statement [46791,46847]
===
------------
===
delete-node
---
if: if [46791,46793]
===
===
delete-node
---
if_statement [46791,46847]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [46807,46847]
    return_statement [46822,46836]
        return: return [46822,46828]
        string_literal [46829,46835]
            string: "0x00" [46829,46835]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [46857,46878]
    variable_declaration [46857,46869]
        type_name: uint256 [46857,46864]
        identifier: temp [46865,46869]
    affectation_operator: = [46870,46871]
    identifier: value [46872,46877]

New cluster:
===
delete-node
---
variable_declaration_statement [46888,46907]
===
------------
===
delete-node
---
variable_declaration_statement [46888,46907]
===
===
delete-node
---
affectation_operator: = [46903,46904]
===
===
delete-node
---
number_literal: 0 [46905,46906]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
while_statement [46917,46995]
    while: while [46917,46922]
    binary_expression [46924,46933]
        identifier: temp [46924,46928]
        comparison_operator: != [46929,46931]
        number_literal: 0 [46932,46933]
    block_statement [46935,46995]
        expression_statement [46950,46959]
            update_expression [46950,46958]
                identifier: length [46950,46956]
                increment_operator: ++ [46956,46958]
        expression_statement [46973,46984]
            augmented_assignment_expression [46973,46983]
                identifier: temp [46973,46977]
                >>=: >>= [46978,46981]
                number_literal: 8 [46982,46983]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [54233,54235]
    number_literal: 20 [54233,54235]

New cluster:
===
delete-node
---
type_cast_expression [54215,54231]
===
------------
===
delete-node
---
type_cast_expression [54215,54231]
===
===
delete-node
---
primitive_type: uint160 [54215,54222]
===

New cluster:
===
delete-node
---
call_argument [54184,54236]
===
------------
===
delete-node
---
call_argument [54184,54236]
===

New cluster:
===
delete-node
---
return_statement [66508,66535]
===
------------
===
delete-node
---
return_statement [66508,66535]
===
===
delete-node
---
return: return [66508,66514]
===

New cluster:
===
delete-node
---
modifier_definition [38776,39233]
===
------------
===
delete-node
---
modifier_definition [38776,39233]
===

New cluster:
===
delete-node
---
identifier: proofElement [91780,91792]
===
------------
===
delete-node
---
identifier: proofElement [91780,91792]
===

New cluster:
===
delete-node
---
call_argument [91749,91793]
===
------------
===
delete-node
---
member_expression: abi.encodePacked [91749,91765]
===
===
delete-node
---
call_expression [91749,91793]
===
===
delete-node
---
call_argument [91749,91793]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [91524,91544]
    type_name: bytes32 [91524,91531]
    identifier: proofElement [91532,91544]

New cluster:
===
delete-node
---
block_statement [91509,92069]
===
------------
===
delete-node
---
if_statement [91570,92058]
===
===
delete-node
---
expression_statement [91932,92043]
===
===
delete-node
---
identifier: computedHash [91932,91944]
===
===
delete-node
---
call_argument [91979,92023]
===
===
delete-node
---
affectation_operator: = [91545,91546]
===
===
delete-node
---
if: if [91570,91572]
===
===
delete-node
---
else: else [91829,91833]
===
===
delete-node
---
block_statement [91834,92058]
===
===
delete-node
---
call_expression [91979,92023]
===
===
delete-node
---
assignment_expression [91932,92042]
===
===
delete-node
---
call_expression [91947,92042]
===
===
delete-node
---
variable_declaration_statement [91524,91556]
===
===
delete-node
---
affectation_operator: = [91945,91946]
===
===
delete-node
---
identifier: keccak256 [91947,91956]
===
===
delete-node
---
block_statement [91509,92069]
===
===
delete-node
---
member_expression: abi.encodePacked [91979,91995]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [91574,91602]
    identifier: computedHash [91574,91586]
    comparison_operator: <= [91587,91589]
    identifier: proofElement [91590,91602]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [91996,92008]
    identifier: proofElement [91996,92008]

New cluster:
===
delete-node
---
function_definition [81022,81138]
===
------------
===
delete-node
---
function: function [81022,81030]
===
===
delete-node
---
visibility: external [81069,81077]
===
===
delete-node
---
function_definition [81022,81138]
===
===
delete-node
---
identifier: maxQuantityToPurchaseLimit [81031,81057]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [81101,81137]
    returns: returns [81101,81108]
    parameter [81110,81136]
        type_name: uint256 [81110,81117]
        identifier: maxQuantityAllowed [81118,81136]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [81885,81980]
    function: function [81885,81893]
    identifier: getCollectionData [81894,81911]
    parameter [81912,81923]
        type_name: uint256 [81912,81919]
        identifier: _id [81920,81923]
    visibility: external [81934,81942]
    return_type_definition [81952,81979]
        returns: returns [81952,81959]
        parameter [81961,81978]
            type_name: Collection [81961,81971]
            memory: memory [81972,81978]

New cluster:
===
delete-node
---
function_definition [82161,82320]
===
------------
===
delete-node
---
identifier: updateCollectionAfterPrimarySale [82170,82202]
===
===
delete-node
---
visibility: external [82296,82304]
===
===
delete-node
---
function_definition [82161,82320]
===
===
delete-node
---
function: function [82161,82169]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [82239,82260]
    type_name: uint256 [82239,82246]
    identifier: _collectionId [82247,82260]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [82271,82288]
    type_name: uint256 [82271,82278]
    identifier: _quantity [82279,82288]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_definition [82328,82460]
    function: function [82328,82336]
    identifier: getPrimarySaleUserCount [82337,82360]
    parameter [82361,82376]
        type_name: address [82361,82368]
        identifier: account [82369,82376]
    parameter [82378,82399]
        type_name: uint256 [82378,82385]
        identifier: _collectionId [82386,82399]
    visibility: external [82410,82418]
    state_mutability [82428,82432]
        view: view [82428,82432]
    return_type_definition [82442,82459]
        returns: returns [82442,82449]
        parameter [82451,82458]
            type_name: uint256 [82451,82458]

New cluster:
===
delete-node
---
library_declaration [83952,85927]
===
------------
===
delete-node
---
visibility: private [83983,83990]
===
===
delete-node
---
if: if [84413,84415]
===
===
delete-node
---
function: function [84140,84148]
===
===
delete-node
---
function: function [84973,84981]
===
===
delete-node
---
identifier: toString [84149,84157]
===
===
delete-node
---
return_statement [85272,85306]
===
===
delete-node
---
visibility: internal [85009,85017]
===
===
delete-node
---
library_declaration [83952,85927]
===
===
delete-node
---
visibility: internal [84173,84181]
===
===
delete-node
---
function_definition [84973,85313]
===
===
delete-node
---
constant: constant [83991,83999]
===
===
delete-node
---
variable_declaration_statement [85155,85174]
===
===
delete-node
---
contract_body [83968,85927]
===
===
delete-node
---
return: return [85272,85278]
===
===
delete-node
---
identifier: _HEX_SYMBOLS [84000,84012]
===
===
delete-node
---
function_body [85047,85313]
===
===
delete-node
---
number_literal: 0 [85172,85173]
===
===
delete-node
---
identifier: toHexString [85279,85290]
===
===
delete-node
---
block_statement [84689,84824]
===
===
delete-node
---
affectation_operator: = [84013,84014]
===
===
delete-node
---
identifier: Strings [83960,83967]
===
===
delete-node
---
call_expression [85279,85305]
===
===
delete-node
---
function_body [84211,84863]
===
===
delete-node
---
library: library [83952,83959]
===
===
delete-node
---
state_variable_declaration [83975,84034]
===
===
delete-node
---
function_definition [84140,84863]
===
===
delete-node
---
if_statement [84413,84466]
===
===
delete-node
---
affectation_operator: = [85170,85171]
===
===
delete-node
---
while_statement [84670,84824]
===
===
delete-node
---
identifier: toHexString [84982,84993]
===
===
delete-node
---
while: while [84670,84675]
===
===
delete-node
---
type_name: bytes16 [83975,83982]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [84429,84466]
    return_statement [84444,84455]
        return: return [84444,84450]
        string_literal [84451,84454]
            string: "0" [84451,84454]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [84476,84497]
    variable_declaration [84476,84488]
        type_name: uint256 [84476,84483]
        identifier: temp [84484,84488]
    affectation_operator: = [84489,84490]
    identifier: value [84491,84496]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [84507,84522]
    variable_declaration [84507,84521]
        type_name: uint256 [84507,84514]
        identifier: digits [84515,84521]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
while_statement [84532,84610]
    while: while [84532,84537]
    binary_expression [84539,84548]
        identifier: temp [84539,84543]
        comparison_operator: != [84544,84546]
        number_literal: 0 [84547,84548]
    block_statement [84550,84610]
        expression_statement [84565,84574]
            update_expression [84565,84573]
                identifier: digits [84565,84571]
                increment_operator: ++ [84571,84573]
        expression_statement [84588,84599]
            augmented_assignment_expression [84588,84598]
                identifier: temp [84588,84592]
                affectation_operator: /= [84593,84595]
                number_literal: 10 [84596,84598]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [84620,84660]
    variable_declaration [84620,84639]
        type_name: bytes [84620,84625]
        memory: memory [84626,84632]
        identifier: buffer [84633,84639]
    affectation_operator: = [84640,84641]
    call_expression [84642,84659]
        new_expression [84642,84651]
            new: new [84642,84645]
            type_name: bytes [84646,84651]
        call_argument [84652,84658]
            identifier: digits [84652,84658]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [84677,84687]
    identifier: value [84677,84682]
    comparison_operator: != [84683,84685]
    number_literal: 0 [84686,84687]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [84704,84716]
    augmented_assignment_expression [84704,84715]
        identifier: digits [84704,84710]
        affectation_operator: -= [84711,84713]
        number_literal: 1 [84714,84715]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [84730,84787]
    assignment_expression [84730,84786]
        array_access [84730,84744]
            identifier: buffer [84730,84736]
            identifier: digits [84737,84743]
        affectation_operator: = [84745,84746]
        type_cast_expression [84747,84786]
            primitive_type: bytes1 [84747,84753]
            call_argument [84754,84785]
                type_cast_expression [84754,84785]
                    primitive_type: uint8 [84754,84759]
                    call_argument [84760,84784]
                        binary_expression [84760,84784]
                            number_literal: 48 [84760,84762]
                            arithmetic_operator: + [84763,84764]
                            type_cast_expression [84765,84784]
                                primitive_type: uint256 [84765,84772]
                                call_argument [84773,84783]
                                    binary_expression [84773,84783]
                                        identifier: value [84773,84778]
                                        %: % [84779,84780]
                                        number_literal: 10 [84781,84783]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_statement [84834,84856]
    return: return [84834,84840]
    type_cast_expression [84841,84855]
        primitive_type: string [84841,84847]
        call_argument [84848,84854]
            identifier: buffer [84848,84854]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [85058,85114]
    if: if [85058,85060]
    binary_expression [85062,85072]
        identifier: value [85062,85067]
        comparison_operator: == [85068,85070]
        number_literal: 0 [85071,85072]
    block_statement [85074,85114]
        return_statement [85089,85103]
            return: return [85089,85095]
            string_literal [85096,85102]
                string: "0x00" [85096,85102]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [85124,85145]
    variable_declaration [85124,85136]
        type_name: uint256 [85124,85131]
        identifier: temp [85132,85136]
    affectation_operator: = [85137,85138]
    identifier: value [85139,85144]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
while_statement [85184,85262]
    while: while [85184,85189]
    binary_expression [85191,85200]
        identifier: temp [85191,85195]
        comparison_operator: != [85196,85198]
        number_literal: 0 [85199,85200]
    block_statement [85202,85262]
        expression_statement [85217,85226]
            update_expression [85217,85225]
                identifier: length [85217,85223]
                increment_operator: ++ [85223,85225]
        expression_statement [85240,85251]
            augmented_assignment_expression [85240,85250]
                identifier: temp [85240,85244]
                >>=: >>= [85245,85248]
                number_literal: 8 [85249,85250]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [89979,90002]
    pragma: pragma [89979,89985]
    solidity_pragma_token [89986,90001]
        solidity: solidity [89986,89994]
        solidity_version_comparison_operator [89994,89996]
            bitwise_operator:  ^ [89994,89996]
        solidity_version: 0.8.0 [89996,90001]

New cluster:
===
delete-node
---
library_declaration [90380,92109]
===
------------
===
delete-node
---
library: library [90380,90387]
===
===
delete-node
---
library_declaration [90380,92109]
===
===
delete-node
---
identifier: MerkleProof [90388,90399]
===
===
delete-node
---
contract_body [90400,92109]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
pragma_directive [92155,92178]
    pragma: pragma [92155,92161]
    solidity_pragma_token [92162,92177]
        solidity: solidity [92162,92170]
        solidity_version_comparison_operator [92170,92172]
            bitwise_operator:  ^ [92170,92172]
        solidity_version: 0.8.2 [92172,92177]

New cluster:
===
delete-node
---
identifier: TokenTraxxMarketplace [92327,92348]
===
------------
===
delete-node
---
identifier: TokenTraxxMarketplace [92327,92348]
===

New cluster:
===
delete-node
---
is: is [92349,92351]
===
------------
===
delete-node
---
is: is [92349,92351]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
using_directive [92511,92538]
    using: using [92511,92516]
    type_alias [92517,92525]
        identifier: SafeMath [92517,92525]
    for: for [92526,92529]
    type_name: uint256 [92530,92537]

New cluster:
===
delete-node
---
modifier_definition [93768,93929]
===
------------
===
delete-node
---
modifier: modifier [93768,93776]
===
===
delete-node
---
modifier_definition [93768,93929]
===
===
delete-node
---
identifier: onlyAdmin [93777,93786]
===

New cluster:
===
delete-node
---
binary_expression [95046,95063]
===
------------
===
delete-node
---
binary_expression [95046,95063]
===
===
delete-node
---
number_literal: 0 [95062,95063]
===
===
delete-node
---
comparison_operator: == [95059,95061]
===

New cluster:
===
delete-node
---
affectation_operator: = [95505,95506]
===
------------
===
delete-node
---
affectation_operator: = [95505,95506]
===

New cluster:
===
delete-node
---
member_expression: _params.tokenOwner [95507,95525]
===
------------
===
delete-node
---
member_expression: _params.tokenOwner [95507,95525]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [96587,96692]
    if: if [96587,96589]
    call_expression [96591,96647]
        identifier: _isListedAlready [96591,96607]
        call_argument [96608,96629]
            member_expression: _params.assetContract [96608,96629]
        call_argument [96631,96646]
            member_expression: _params.tokenId [96631,96646]
    expression_statement [96662,96692]
        assignment_expression [96662,96691]
            identifier: saleType [96662,96670]
            affectation_operator: = [96671,96672]
            member_expression: SaleType.Secondary [96673,96691]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [96704,96821]
    call_expression [96704,96820]
        identifier: require [96704,96711]
        call_argument [96726,96754]
            binary_expression [96726,96754]
                identifier: saleType [96726,96734]
                comparison_operator: == [96735,96737]
                member_expression: SaleType.Primary [96738,96754]
        call_argument [96769,96809]
            call_expression [96769,96809]
                identifier: throwError [96769,96779]
                call_argument [96780,96808]
                    identifier: SECONDARY_SALE_NOT_SUPPORTED [96780,96808]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [98634,98756]
    call_expression [98634,98755]
        identifier: require [98634,98641]
        call_argument [98656,98687]
            binary_expression [98656,98687]
                member_expression: listing.tokenType [98656,98673]
                comparison_operator: == [98674,98676]
                identifier: _tokenType [98677,98687]
        call_argument [98702,98744]
            call_expression [98702,98744]
                identifier: throwError [98702,98712]
                call_argument [98713,98743]
                    identifier: CANT_MODIFY_LISTING_TOKEN_TYPE [98713,98743]

New cluster:
===
delete-node
---
member_expression: targetListing.buyoutPrice [101388,101413]
===
------------
===
delete-node
---
member_expression: targetListing.buyoutPrice [101388,101413]
===

New cluster:
===
delete-node
---
function_definition [99515,101478]
===
------------
===
delete-node
---
identifier: delegatedBuy [99524,99536]
===
===
delete-node
---
if_statement [100296,100884]
===
===
delete-node
---
function_definition [99515,101478]
===
===
delete-node
---
function: function [99515,99523]
===
===
delete-node
---
visibility: external [99718,99726]
===
===
delete-node
---
if: if [100296,100298]
===
===
delete-node
---
function_body [99757,101478]
===

New cluster:
===
delete-node
---
member_expression: listingData.assetContract [102095,102120]
===
------------
===
delete-node
---
member_expression: listingData.assetContract [102095,102120]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [102415,102427]
    identifier: collectionId [102415,102427]

New cluster:
===
delete-node
---
affectation_operator: = [102952,102953]
===
------------
===
delete-node
---
affectation_operator: = [102952,102953]
===

New cluster:
===
delete-node
---
number_literal: 0 [102954,102955]
===
------------
===
delete-node
---
number_literal: 0 [102954,102955]
===

New cluster:
===
delete-node
---
increment_operator: ++ [103035,103037]
===
------------
===
delete-node
---
increment_operator: ++ [103035,103037]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [103596,103606]
    identifier: merkleRoot [103596,103606]

New cluster:
===
delete-node
---
member_expression: collectionData.owner [103897,103917]
===
------------
===
delete-node
---
member_expression: collectionData.owner [103897,103917]
===

New cluster:
===
delete-node
---
if_statement [101962,106931]
===
------------
===
delete-node
---
member_expression: erc721ContractInstance.getPrimarySaleUserCount [104053,104099]
===
===
delete-node
---
else: else [104469,104473]
===
===
delete-node
---
identifier: keccak256 [106104,106113]
===
===
delete-node
---
arithmetic_operator: + [104211,104212]
===
===
delete-node
---
block_statement [104474,106931]
===
===
delete-node
---
if_statement [101962,106931]
===
===
delete-node
---
if: if [105914,105916]
===
===
delete-node
---
binary_expression [104053,104255]
===
===
delete-node
---
identifier: verifyWalletWhitelist [105987,106008]
===
===
delete-node
---
call_argument [106114,106137]
===
===
delete-node
---
if: if [103797,103799]
===
===
delete-node
---
if: if [101962,101964]
===
===
delete-node
---
block_statement [105938,106244]
===
===
delete-node
---
call_expression [106104,106138]
===
===
delete-node
---
if_statement [103797,104457]
===
===
delete-node
---
identifier: quantityToBuy [104242,104255]
===
===
delete-node
---
call_expression [104053,104210]
===
===
delete-node
---
block_statement [102009,104468]
===
===
delete-node
---
call_expression [105957,106228]
===
===
delete-node
---
if_statement [103952,104442]
===
===
delete-node
---
call_argument [106104,106138]
===
===
delete-node
---
expression_statement [104019,104423]
===
===
delete-node
---
if_statement [105914,106244]
===
===
delete-node
---
identifier: require [104019,104026]
===
===
delete-node
---
call_argument [104053,104329]
===
===
delete-node
---
affectation_operator: = [102173,102174]
===
===
delete-node
---
call_expression [105987,106161]
===
===
delete-node
---
variable_declaration_statement [102152,102270]
===
===
delete-node
---
block_statement [103996,104442]
===
===
delete-node
---
call_argument [105987,106161]
===
===
delete-node
---
binary_expression [104053,104329]
===
===
delete-node
---
expression_statement [105957,106229]
===
===
delete-node
---
if: if [103952,103954]
===
===
delete-node
---
for_statement [102919,103427]
===
===
delete-node
---
for: for [102919,102922]
===
===
delete-node
---
call_expression [104019,104422]
===
===
delete-node
---
identifier: require [105957,105964]
===
===
delete-node
---
comparison_operator: <= [104256,104258]
===
===
delete-node
---
block_statement [103933,104457]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [102152,102172]
    type_name: uint256 [102152,102159]
    identifier: collectionId [102160,102172]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
if_statement [102445,102861]
    if: if [102445,102447]
    binary_expression [102467,102568]
        member_expression: collectionData.allowedPurchaseLimit != -1 &&                 collectionData.allowedPurchaseLimit [102467,102564]
        comparison_operator: > [102565,102566]
        number_literal: 0 [102567,102568]
    block_statement [102584,102861]
        expression_statement [102603,102846]
            call_expression [102603,102845]
                identifier: require [102603,102610]
                call_argument [102633,102755]
                    binary_expression [102633,102755]
                        parenthesized_expression [102633,102682]
                            binary_expression [102634,102681]
                                member_expression: collectionData.primarySoldCount [102634,102665]
                                arithmetic_operator: + [102666,102667]
                                identifier: quantityToBuy [102668,102681]
                        comparison_operator: <= [102683,102685]
                        type_cast_expression [102711,102755]
                            primitive_type: uint256 [102711,102718]
                            call_argument [102719,102754]
                                member_expression: collectionData.allowedPurchaseLimit [102719,102754]
                call_argument [102778,102826]
                    call_expression [102778,102826]
                        identifier: throwError [102778,102788]
                        call_argument [102789,102825]
                            identifier: MAX_QUANTITY_ALLOWANCE_LIMIT_REACHED [102789,102825]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [102877,102903]
    variable_declaration [102877,102895]
        type_name: bytes32 [102877,102884]
        identifier: merkleRoot [102885,102895]
    affectation_operator: = [102896,102897]
    number_literal: 0x00 [102898,102902]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [102974,103016]
    member_expression: i < collectionData.whitelistParams.length [102974,103015]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [103053,103427]
    if_statement [103072,103412]
        if: if [103072,103074]
        member_expression: block.timestamp >                     collectionData.whitelistParams[i].startTime &&                     block.timestamp < collectionData.whitelistParams[i].endTime [103098,103264]
        block_statement [103284,103412]
            expression_statement [103307,103365]
                assignment_expression [103307,103364]
                    identifier: merkleRoot [103307,103317]
                    affectation_operator: = [103318,103319]
                    member_expression: collectionData.whitelistParams[i].merkleRoot [103320,103364]
            break_statement [103387,103393]
                break: break [103387,103392]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [103956,103994]
    member_expression: collectionData.userPurchaseLimit [103956,103988]
    comparison_operator: != [103989,103991]
    unary_expression [103992,103994]
        arithmetic_operator: - [103992,103993]
        number_literal: 1 [103993,103994]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [104171,104183]
    identifier: collectionId [104171,104183]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
type_cast_expression [104288,104329]
    primitive_type: uint256 [104288,104295]
    call_argument [104296,104328]
        member_expression: collectionData.userPurchaseLimit [104296,104328]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [104356,104399]
    call_expression [104356,104399]
        identifier: throwError [104356,104366]
        call_argument [104367,104398]
            identifier: EXCEEDED_PRIMARY_PURCHASE_LIMIT [104367,104398]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [104489,104604]
    variable_declaration [104489,104527]
        type_name: IERC1155Custom [104489,104503]
        identifier: erc1155ContractInstance [104504,104527]
    affectation_operator: = [104528,104529]
    call_expression [104530,104603]
        identifier: IERC1155Custom [104530,104544]
        call_argument [104563,104588]
            member_expression: listingData.assetContract [104563,104588]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [104755,104900]
    variable_declaration [104755,104819]
        type_name: IERC1155Custom.Collection [104755,104780]
        memory: memory [104798,104804]
        identifier: collectionData [104805,104819]
    affectation_operator: = [104820,104821]
    call_expression [104822,104899]
        member_expression: erc1155ContractInstance                     .getCollectionData [104822,104885]
        call_argument [104886,104898]
            identifier: collectionId [104886,104898]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [105918,105936]
    identifier: merkleRoot [105918,105928]
    comparison_operator: != [105929,105931]
    number_literal: 0x00 [105932,105936]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [106184,106209]
    string_literal [106184,106209]
        string: "Address not whitelisted" [106184,106209]

New cluster:
===
delete-node
---
expression_statement [107350,107531]
===
------------
===
delete-node
---
comparison_operator: == [107382,107384]
===
===
delete-node
---
binary_expression [107428,107463]
===
===
delete-node
---
call_expression [107478,107519]
===
===
delete-node
---
logical_operator: && [107408,107410]
===
===
delete-node
---
comparison_operator: == [107435,107437]
===
===
delete-node
---
expression_statement [107350,107531]
===
===
delete-node
---
binary_expression [107372,107463]
===
===
delete-node
---
binary_expression [107372,107407]
===
===
delete-node
---
member_expression: targetListing.buyoutPrice [107438,107463]
===
===
delete-node
---
call_expression [107350,107530]
===
===
delete-node
---
identifier: throwError [107478,107488]
===
===
delete-node
---
call_argument [107478,107519]
===
===
delete-node
---
member_expression: targetListing.currency [107385,107407]
===
===
delete-node
---
call_argument [107372,107463]
===

New cluster:
===
delete-node
---
if_statement [107543,108147]
===
------------
===
delete-node
---
if: if [107543,107545]
===
===
delete-node
---
call_argument [107728,107760]
===
===
delete-node
---
call_expression [107650,107775]
===
===
delete-node
---
expression_statement [107650,107776]
===
===
delete-node
---
call_expression [107863,108135]
===
===
delete-node
---
call_expression [107728,107760]
===
===
delete-node
---
call_argument [108072,108120]
===
===
delete-node
---
call_expression [108072,108120]
===
===
delete-node
---
block_statement [107599,108147]
===
===
delete-node
---
expression_statement [107863,108136]
===
===
delete-node
---
identifier: throwError [108072,108082]
===
===
delete-node
---
if_statement [107543,108147]
===
===
delete-node
---
identifier: require [107863,107870]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [107547,107597]
    member_expression: listings[_listingId].tokenType [107547,107577]
    comparison_operator: == [107578,107580]
    member_expression: TokenType.ERC721 [107581,107597]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [107676,107709]
    binary_expression [107676,107709]
        identifier: buyer [107676,107681]
        comparison_operator: != [107682,107684]
        member_expression: targetListing.tokenOwner [107685,107709]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [107889,108053]
    call_expression [107889,108053]
        member_expression: targetListing.tokenOwner ==                     IERC721(targetListing.assetContract).ownerOf [107889,107982]
        call_argument [108009,108030]
            member_expression: targetListing.tokenId [108009,108030]

New cluster:
===
delete-node
---
member_expression: targetListing.buyoutPrice [108647,108672]
===
------------
===
delete-node
---
member_expression: targetListing.buyoutPrice [108647,108672]
===

New cluster:
===
delete-node
---
array_access [110551,110585]
===
------------
===
delete-node
---
identifier: listings [110551,110559]
===
===
delete-node
---
array_access [110551,110585]
===

New cluster:
===
delete-node
---
identifier: _targetListing [110588,110602]
===
------------
===
delete-node
---
identifier: _targetListing [110588,110602]
===

New cluster:
===
delete-node
---
member_expression: _targetListing.assetContract [111085,111113]
===
------------
===
delete-node
---
member_expression: _targetListing.assetContract [111085,111113]
===

New cluster:
===
delete-node
---
if_statement [110949,112583]
===
------------
===
delete-node
---
if: if [110949,110951]
===
===
delete-node
---
block_statement [111774,112583]
===
===
delete-node
---
if_statement [110949,112583]
===
===
delete-node
---
comparison_operator: == [111524,111526]
===
===
delete-node
---
variable_declaration_statement [111145,111266]
===
===
delete-node
---
call_expression [112128,112205]
===
===
delete-node
---
member_expression: collectionData.owner [111544,111564]
===
===
delete-node
---
member_expression: erc1155ContractInstance                     .getCollectionData [112128,112191]
===
===
delete-node
---
member_expression: erc721ContractInstance.updateCollectionAfterPrimarySale [111599,111654]
===
===
delete-node
---
affectation_operator: = [111166,111167]
===
===
delete-node
---
block_statement [110999,111768]
===
===
delete-node
---
call_expression [111168,111265]
===
===
delete-node
---
call_expression [111599,111741]
===
===
delete-node
---
if: if [111441,111443]
===
===
delete-node
---
variable_declaration_statement [112061,112206]
===
===
delete-node
---
affectation_operator: = [112126,112127]
===
===
delete-node
---
binary_expression [111463,111564]
===
===
delete-node
---
if_statement [111441,111757]
===
===
delete-node
---
else: else [111769,111773]
===
===
delete-node
---
expression_statement [111599,111742]
===
===
delete-node
---
block_statement [111580,111757]
===
===
delete-node
---
member_expression: erc721ContractInstance.getNFTCollectionId [111168,111209]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [111145,111165]
    type_name: uint256 [111145,111152]
    identifier: collectionId [111153,111165]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [111710,111722]
    identifier: collectionId [111710,111722]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [111789,111907]
    variable_declaration [111789,111827]
        type_name: IERC1155Custom [111789,111803]
        identifier: erc1155ContractInstance [111804,111827]
    affectation_operator: = [111828,111829]
    call_expression [111830,111906]
        identifier: IERC1155Custom [111830,111844]
        call_argument [111863,111891]
            member_expression: _targetListing.assetContract [111863,111891]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [112061,112125]
    type_name: IERC1155Custom.Collection [112061,112086]
    memory: memory [112104,112110]
    identifier: collectionData [112111,112125]

New cluster:
===
delete-node
---
binary_expression [114760,114781]
===
------------
===
delete-node
---
comparison_operator: == [114777,114779]
===
===
delete-node
---
binary_expression [114760,114781]
===
===
delete-node
---
number_literal: 0 [114780,114781]
===

New cluster:
===
delete-node
---
function_definition [115094,115253]
===
------------
===
delete-node
---
function: function [115094,115102]
===
===
delete-node
---
identifier: getMarketCut [115103,115115]
===
===
delete-node
---
function_definition [115094,115253]
===
===
delete-node
---
visibility: external [115136,115144]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
function_body [115168,115253]
    return_statement [115179,115246]
        return: return [115179,115185]
        binary_expression [115186,115245]
            parenthesized_expression [115186,115235]
                binary_expression [115187,115234]
                    member_expression: listings[_listingId].buyoutPrice [115187,115219]
                    arithmetic_operator: * [115220,115221]
                    identifier: marketFeeBps [115222,115234]
            arithmetic_operator: / [115236,115237]
            identifier: MAX_BPS [115238,115245]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [116853,116896]
    assignment_expression [116853,116895]
        identifier: remainder [116853,116862]
        affectation_operator: = [116863,116864]
        binary_expression [116865,116895]
            identifier: _totalPayoutAmount [116865,116883]
            arithmetic_operator: - [116884,116885]
            identifier: marketCut [116886,116895]

New cluster:
===
delete-node
---
binary_expression [117541,117553]
===
------------
===
delete-node
---
binary_expression [117541,117553]
===
===
delete-node
---
comparison_operator: == [117549,117551]
===
===
delete-node
---
number_literal: 0 [117552,117553]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [118835,118847]
    type_name: bool [118835,118839]
    identifier: success [118840,118847]

New cluster:
===
delete-node
---
variable_declaration_statement [118835,118996]
===
------------
===
delete-node
---
variable_declaration_statement [118835,118996]
===
===
delete-node
---
affectation_operator: = [118848,118849]
===

New cluster:
===
delete-node
---
binary_expression [119092,119134]
===
------------
===
delete-node
---
logical_operator: && [119100,119102]
===
===
delete-node
---
binary_expression [119092,119134]
===
===
delete-node
---
identifier: success [119092,119099]
===

New cluster:
===
delete-node
---
struct_expression [119425,119472]
===
------------
===
delete-node
---
:: : [119464,119465]
===
===
delete-node
---
member_expression: IWETH(nativeTokenWrapper).deposit [119425,119458]
===
===
delete-node
---
struct_expression [119425,119472]
===
===
delete-node
---
struct_field_assignment [119459,119471]
===

New cluster:
===
delete-node
---
function_definition [123988,124169]
===
------------
===
delete-node
---
identifier: setRoyaltyTreasury [123997,124015]
===
===
delete-node
---
visibility: external [124035,124043]
===
===
delete-node
---
function_definition [123988,124169]
===
===
delete-node
---
function: function [123988,123996]
===

New cluster:
===
delete-node
---
call_argument [126198,126216]
===
------------
===
delete-node
---
call_argument [126198,126216]
===
===
delete-node
---
type_cast_expression [126198,126216]
===
===
delete-node
---
primitive_type: address [126198,126205]
===

New cluster:
===
delete-node
---
assignment_expression [126451,126499]
===
------------
===
delete-node
---
assignment_expression [126451,126499]
===

New cluster:
===
delete-node
---
call_argument [125584,125608]
===
------------
===
delete-node
---
call_argument [125584,125608]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration [128360,128382]
    type_name: uint256 [128360,128367]
    identifier: listedIdsIndex [128368,128382]

New cluster:
===
delete-node
---
variable_declaration_statement [128360,128487]
===
------------
===
delete-node
---
affectation_operator: = [128383,128384]
===
===
delete-node
---
identifier: _listingIdsIndex [128385,128401]
===
===
delete-node
---
variable_declaration_statement [128360,128487]
===
===
delete-node
---
call_expression [128385,128486]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [128416,128429]
    identifier: assetContract [128416,128429]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [128444,128451]
    identifier: tokenId [128444,128451]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
expression_statement [128497,128668]
    assignment_expression [128497,128667]
        array_access [128497,128551]
            array_access [128497,128535]
                array_access [128497,128526]
                    identifier: _tokenListings [128497,128511]
                    identifier: assetContract [128512,128525]
                identifier: tokenId [128527,128534]
            identifier: listedIdsIndex [128536,128550]
        affectation_operator: = [128552,128553]
        array_access [128554,128667]
            array_access [128554,128616]
                array_access [128554,128607]
                    identifier: _tokenListings [128554,128568]
                    identifier: assetContract [128583,128596]
                identifier: tokenId [128608,128615]
            binary_expression [128617,128666]
                member_expression: _tokenListings[assetContract][tokenId].length [128617,128662]
                arithmetic_operator: - [128663,128664]
                number_literal: 1 [128665,128666]

New cluster:
===
delete-node
---
function_definition [128775,129317]
===
------------
===
delete-node
---
identifier: _listingIdsIndex [128784,128800]
===
===
delete-node
---
function_definition [128775,129317]
===
===
delete-node
---
visibility: internal [128894,128902]
===
===
delete-node
---
expression_statement [129261,129310]
===
===
delete-node
---
virtual: virtual [128903,128910]
===
===
delete-node
---
function: function [128775,128783]
===
===
delete-node
---
call_expression [129261,129309]
===
===
delete-node
---
function_body [128935,129317]
===
===
delete-node
---
identifier: require [129261,129268]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [128811,128832]
    type_name: address [128811,128818]
    identifier: assetContract [128819,128832]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [128843,128858]
    type_name: uint256 [128843,128850]
    identifier: tokenId [128851,128858]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [128869,128886]
    type_name: uint256 [128869,128876]
    identifier: listingId [128877,128886]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [128911,128934]
    returns: returns [128911,128918]
    parameter [128920,128933]
        type_name: uint256 [128920,128927]
        identifier: index [128928,128933]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [128946,129009]
    variable_declaration [128946,128960]
        type_name: uint256 [128946,128953]
        identifier: length [128954,128960]
    affectation_operator: = [128961,128962]
    member_expression: _tokenListings[assetContract][tokenId].length [128963,129008]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
variable_declaration_statement [129019,129030]
    variable_declaration [129019,129029]
        type_name: bool [129019,129023]
        identifier: found [129024,129029]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
for_statement [129042,129251]
    for: for [129042,129045]
    expression_statement [129047,129057]
        assignment_expression [129047,129056]
            identifier: index [129047,129052]
            affectation_operator: = [129053,129054]
            number_literal: 0 [129055,129056]
    expression_statement [129058,129073]
        binary_expression [129058,129072]
            identifier: index [129058,129063]
            comparison_operator: < [129064,129065]
            identifier: length [129066,129072]
    update_expression [129074,129081]
        identifier: index [129074,129079]
        increment_operator: ++ [129079,129081]
    block_statement [129083,129251]
        if_statement [129098,129240]
            if: if [129098,129100]
            binary_expression [129102,129160]
                array_access [129102,129147]
                    array_access [129102,129140]
                        array_access [129102,129131]
                            identifier: _tokenListings [129102,129116]
                            identifier: assetContract [129117,129130]
                        identifier: tokenId [129132,129139]
                    identifier: index [129141,129146]
                comparison_operator: == [129148,129150]
                identifier: listingId [129151,129160]
            block_statement [129162,129240]
                expression_statement [129181,129194]
                    assignment_expression [129181,129193]
                        identifier: found [129181,129186]
                        affectation_operator: = [129187,129188]
                        boolean_literal: true [129189,129193]
                return_statement [129212,129225]
                    return: return [129212,129218]
                    identifier: index [129219,129224]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
call_argument [129269,129274]
    identifier: found [129269,129274]

New cluster:
===
delete-node
---
binary_expression [130588,130605]
===
------------
===
delete-node
---
binary_expression [130588,130605]
===
===
delete-node
---
comparison_operator: == [130601,130603]
===
===
delete-node
---
number_literal: 0 [130604,130605]
===

New cluster:
===
delete-node
---
binary_expression [130648,130664]
===
------------
===
delete-node
---
comparison_operator: == [130660,130662]
===
===
delete-node
---
binary_expression [130648,130664]
===
===
delete-node
---
number_literal: 0 [130663,130664]
===

New cluster:
===
delete-node
---
else: else [131220,131224]
===
------------
===
delete-node
---
else: else [131220,131224]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [131225,131303]
    expression_statement [131244,131288]
        assignment_expression [131244,131287]
            array_access [131244,131270]
                identifier: activeListings [131244,131258]
                identifier: validIndex [131259,131269]
            affectation_operator: = [131271,131272]
            identifier: currentListing [131273,131287]

New cluster:
===
delete-node
---
function_definition [131329,131624]
===
------------
===
delete-node
---
else: else [131573,131577]
===
===
delete-node
---
function: function [131329,131337]
===
===
delete-node
---
function_definition [131329,131624]
===
===
delete-node
---
function_body [131466,131624]
===
===
delete-node
---
if: if [131477,131479]
===
===
delete-node
---
visibility: internal [131405,131413]
===
===
delete-node
---
identifier: _isListedAlready [131338,131354]
===
===
delete-node
---
block_statement [131534,131572]
===
===
delete-node
---
if_statement [131477,131617]
===

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [131355,131377]
    type_name: address [131355,131362]
    identifier: _assetContract [131363,131377]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
parameter [131379,131394]
    type_name: uint256 [131379,131386]
    identifier: tokenId [131387,131394]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
return_type_definition [131437,131460]
    returns: returns [131437,131444]
    parameter [131446,131459]
        type_name: bool [131446,131450]
        identifier: isListed [131451,131459]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
binary_expression [131481,131532]
    member_expression: _tokenListings[_assetContract][tokenId].length [131481,131527]
    comparison_operator: >= [131528,131530]
    number_literal: 1 [131531,131532]

New cluster:
Unknown cluster type
------------
===
delete-tree
---
block_statement [131578,131617]
    return_statement [131593,131606]
        return: return [131593,131599]
        boolean_literal: false [131600,131605]

