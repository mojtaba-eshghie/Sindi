[
    {
        "The first predicate is stronger.": [
            ["x > (-1)", "x != (-10)"],
            ["x > -1", "x != -1"],
            ["x > 1", "x != 1"],
            ["a > b", "a >= b"], 
            ["a > 0", "a >= 0"],
            ["a > 0", "a != 0"],
            ["msg.sender == msg.origin && a >= b", "msg.sender == msg.origin"],
            ["msg.sender == msg.origin", "msg.sender == msg.origin || a < b"],
            ["a == 1", "a >= 1"],
            ["a > b * 2", "a > b * 1"],
            ["collateralValue >= debt * 1.5", "collateralValue >= debt / 1.6"],
            ["collateralValue >= debt * 2", "collateralValue >= debt * 1"], 
            ["a > b", "a >= b"],
            ["(a + b) > c", "(a + b) >= c"], 
            ["msg.value==_MINT_FEE ", "msg.value>=_MINT_FEE"],
            ["a > b * 2", "a > b * 1"], 
            ["ethBalances[_msgSender()]<=9e18", "ethBalances[_msgSender()]<=9e19"], 
            ["x - 1 < y", "x - 1 <= y"],
            ["x > y", "x != y"],
            ["x + 1 < y", "x + 1 <= y"]
        ],
        "The second predicate is stronger.": [
            ["a > b / 2", "a > b"],
            ["(a+1) > b / 2", "(a+1) > b"], 
            ["(a+4) > b / 2", "(a+1) > b"],
            ["msg.sender == msg.origin || a < b", "a < b"],
            ["a > 12", "a > 13"],
            ["a + 1 <= b", "a + 1 < b"],
            ["a > b * 1/2", "a > b * 1"], 
            ["coinMap[_coin].coinContract.balanceOf(msg.sender)>=_amount", "coinMap[_coin].coinContract.balanceOf(msg.sender)>=_amount*1e18"],
            ["x >= y", "x == y"],
            ["collateralValue >= debt * 1.5", "collateralValue >= debt * 1.6"], 
            ["a >= b", "a > b"],
            ["a <= b", "a < b"],
            ["(a + b) >= c", "(a + b) > c"],
            ["x > 0", "x == 1"],
            ["a + 1 <= b", "a + 1 < b"],
            ["stakingTokenBalances > stakingTokenBalances", "stakingTokenBalances != stakingTokenBalances"],
            ["x <= y", "x == y"]
        ], 
        "The predicates are equivalent.": [
            ["msg.sender == msg.origin", "msg.origin == msg.sender"],
            ["limiter[identity][sender]<(now-adminRate)", "limiter[identity][sender]+adminRate<now"],
            ["used[salt]==false", "!used[salt]"], 
            ["collateralValue >= debt * 1.5", "collateralValue >= debt * 1.5"],
            ["balanceOf(to)<=holdLimitAmount-amount", "balanceOf(to)+amount<=holdLimitAmount"], 
            ["(value<=60days) || (false)", "(value<=60days)||(false)"],
            ["isOwner()", "msg.sender == owner()"],
            ["isAdmin()", "msg.sender == admin"],
            ["now >= 0 && _msgSender() != address(0)", "block.timestamp >= 0 && msg.sender != address(0)"],
            ["SafeMath.add(a,b) > c", "(a + b) > c"],
            ["balances[user].add(amount) <= cap", "balances[user] + amount <= cap"],
            ["msg.value >= 1 ether", "msg.value >= 1000000000000000000"],
            ["fee == 10**18 wei", "fee == 1000000000000000000"],
            ["x == 1e18 wei", "x == 1000000000000000000"],
            ["to != 0x0000000000000000000000000000000000000000", "to != address(0)"],
            ["x == 0x80ac58cd", "x == type(IERC721).interfaceId"]
        ],
        "The predicates are not equivalent and neither is stronger.": [
            ["a > 0", "a < 0"],
            ["a > 0", "a != 1"],
            ["(a > b) && (a <= c)", "(a >= b) && (a < c)"],
            ["msg.sender != msg.origin", "a >= b"],
            ["ethBalances[_msgSender()]<=9e18", "tokens<=remainingTokens"],
            ["NS<(1days)", "NS<NE"],
            ["super.balanceOf(to)+amount<=holdLimitAmount", "balanceOf(to)+amount<=holdLimitAmount"],
            [" currentSupply+1<=MAX_SUPPLY", "currentSupply+boyzToUse.length<=MAX_SUPPLY"],
            ["x > y", "x == y"],
            ["x >= y", "x != y"],
            ["x < y", "x == y"],
            ["x <= y", "x != y"],
            ["x == y", "x != y"],
            ["x != y", "x == y"],
            ["a > b", "a < b"],
            ["a < b", "a > b"],
            ["a == b", "a != b"],
            ["a != b", "a == b"],
            ["msg.sender == msg.origin && a >= b", "msg.sender == msg.origin && a < b"],
            ["(a + b) == c", "(a + b) > c"], 
            ["(a + b) <= c", "(a + b) > c"],
            ["_getIdentifierWhitelist().isIdentifierSupported(_priceIdentifier)", "_getIdentifierWhitelist().isIdentifierSupported(smt)"],
            ["(_tTotalpercentBuy)/divisorBuy>=(_tTotal/5000)", "(percentBuy_decimals)/divisorBuy>=(_tTotal/10000)"],
            ["currentSupply+1<=MAX_SUPPLY", "currentSupply+boyzToUse.length<=MAX_SUPPLY"],
            ["super.balanceOf(to)+amount<=holdLimitAmount", "balanceOf(to)+amount<=holdLimitAmount"]
        ]
    }
]